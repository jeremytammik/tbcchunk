[
  {
    "original_filename": "1968_level_ifc_prop",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- TwentyTwo\n  TwentyTwo is creating forever free Autodesk® Add-Ins which help you done more with less time and effort ... Delivers as efficient, simplest as possible applications to handle tedious tasks and complex operations.\n  [NAVISWORKS ADD-INS AND API TUTORIALS](https://twentytwo.space/navisworks-add-ins-development)\n  [REVIT add-in DEVELOPMENT](https://twentytwo.space/revit-add-in-development/)\n  [TwentyTwo blog](https://twentytwo.space/)\n\n- Forge and IFC by Eason Kang\n  https://twitter.com/AutodeskForge/status/1567800161983676416?s=20&t=qIK9wsdnKoIEA7_oVygclw\n  \n- [Q] Can Revit API add custom properties in an IFC file opened in Revit? Can Revit export this IFC with those new properties?\n  [A] Do you know if DGN supports changing or adding properties? Is it viable using Revit API?\n  Eason Kang\n  For adding custom props to IFC, there is no direct way with Revit. We need to the below to achieve that:\n  Open the IFC model with Revit’s OpenIFC (API: Application.OpenIFCDocument) to convert IFC to RVT\n  Add customer props by share parameters and give values (sample code from Jeremy)\n  Define custom Property Sets for IFC (here is a tutorial video from 3rd-party or check this AKN page)\n  Specify the custom Property Sets in IFC export setup (See userDefinedPSets in Revit IFC repo to know how to construct IFCExportOptions for API)\n  Export the modified RVT to IFC (API: Document.Export)\n  custom Property Sets in IFC export setup.png\n  Demo-Added custom prop `FM ID` in IFC.png\n  Imported IFC in Navisworks.png\n  Content of my user define property set.png\n  In Forge Viewer\n  Screen Shot 2022-07-14 at 10.49.50 AM.png \n  ifc_custom_property_1_export_setup.png\n  ifc_custom_property_2_added_fm_id.png\n  ifc_custom_property_3_nw_import.png\n  ifc_custom_property_4_content.png\n  ifc_custom_property_5_forge.png\n  Hey @Eason Kang thank you for the nice explanation on adding\n \n- https://thebuildingcoder.typepad.com/blog/2011/01/family-instance-missing-level-property.html#comment-5925189938\n  xikes\n  For those who are still stuck with this problem even when using the correct overload:\n    public FamilyInstance NewFamilyInstance(\n      XYZ location,\n      FamilySymbol symbol,\n      Element host,\n      StructuralType structuralType\n    )\n  It is essential to pass in the function parameter host as a Level and not as an Element.\n  Add a quick cast like (Level)MyHostElement and it should do the trick and the Level parameter is created properly and is not read-only.\n  Keep in mind, this will screw up the offset values, but you can adjust those afterwards.\n\n- set level id of existing element\n  $ tbcsh_search.py level\n  https://forums.autodesk.com/t5/revit-api-forum/levelid-is-null/m-p/11392692\n  https://forums.autodesk.com/t5/revit-api-forum/change-level-on-line-based-family/m-p/10307454\n  [Q] I'm placing a new face-based family instance into my Revit model with the help of the NewFamilyInstance method taking (Face, XYZ, XYZ, FamilySymbol).\n  This works fine, except the instance does not have its level set to that of the host; it's set to -1 in the API and just left blank in the UI.\n  I tried setting the level like such usng the placed instance `LevelId` property and also tried setting its `BuiltInParameter` `FAMILY_LEVEL_PARAM`.\n  Both throw an error saying the parameter is read-only.\n  [A] On some elements, the element level can only be set during the creation of the element. For that, I would assume that you need to use a different [overload of the `NewFamilyInstance` method](https://www.revitapidocs.com/2017/0c0d640b-7810-55e4-3c5e-cd295dede87b.htm). Please refer to this explanation by The Building Coder and a few recent discussions of related topics in the Revit API discussion forum:\n  - [Change level of existing element](https://thebuildingcoder.typepad.com/blog/2020/06/creating-material-texture-and-retaining-pixels.html#4)\n  - [LevelId is null](https://forums.autodesk.com/t5/revit-api-forum/levelid-is-null/m-p/11392692)\n  - [Change level on line based family](https://forums.autodesk.com/t5/revit-api-forum/change-level-on-line-based-family/m-p/10307454)\n\n twitter:\n\nTips on IFC custom properties in APS, Forge and Revit and how to control the level of BIM elements, existing and new, in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon https://autode.sk/ifcproperties\n\nTips on handling IFC and recent discussions on controlling the level of BIM elements\n&ndash; TwentyTwo add-ins and tutorials\n&ndash; IFC tips for APS and Forge\n&ndash; IFC custom properties in Revit\n&ndash; Set level id of existing element\n&ndash; Set level in NewFamilyInstance...\n\nlinkedin:\n\nTips on IFC custom properties in APS, Forge and Revit and how to control the level of BIM elements, existing and new, in the #RevitAPI\n\nhttps://autode.sk/ifcproperties\n\n- TwentyTwo add-ins and tutorials\n- IFC tips for APS and Forge\n- IFC custom properties in Revit\n- Set level id of existing element\n- Set level in NewFamilyInstance...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\" height=\"\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n<pre class=\"code\">\n</pre>\n\n-->"
  },
  {
    "original_filename": "1968_level_ifc_prop",
    "header_text": "Element Level and IFC Properties",
    "local_header_href": "#element-level-and-ifc-properties",
    "chunk_text": "### Element Level and IFC Properties\n\nToday, we mention another publisher of Revit API tutorials and add-ins, some tips on handling IFC, and recent discussions on controlling the level of BIM elements:\n\n- [TwentyTwo add-ins and tutorials](#2)\n- [IFC tips for APS and Forge](#3)\n- [IFC custom properties in Revit](#4)\n- [Set level id of existing element](#5)\n- [Set level in NewFamilyInstance](#6)"
  },
  {
    "original_filename": "1968_level_ifc_prop",
    "header_text": "TwentyTwo Add-Ins and Tutorials",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> TwentyTwo Add-Ins and Tutorials\n\nAccording to its own mission statement, \n[TwentyTwo](https://twentytwo.space) is creating forever free Autodesk add-ins that help you do more with less time and effort,\ndelivering efficient applications, as simple as possible, to handle tedious tasks and complex operations.\nBesides the [TwentyTwo blog](https://twentytwo.space),\nthey also share add-ins and API tutorials for both \n[Navisworks](https://twentytwo.space/navisworks-add-ins-development) and\n[Revit](https://twentytwo.space/revit-add-in-development).\n\nMany thanks to [Min Naung](https://twentytwo.space/author/mgjean) for putting together and sharing this material!"
  },
  {
    "original_filename": "1968_level_ifc_prop",
    "header_text": "IFC Tips for APS and Forge",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> IFC Tips for APS and Forge\n\nWondering about your options when translating IFC model formats using the Autodesk Platform Services (APS), previously known as Forge?\nDeveloper advocate Eason [@yiskang](https://twitter.com/yiskang) Kang put together\na comprehensive list of [FAQ and Tips for IFC translation of Model Derivative API](https://forge.autodesk.com/blog/faq-and-tips-ifc-translation-model-derivative-api) that\nmight help, including and not limited to:\n\n- Overview of different available IFC conversion methods\n- Georeferencing in IFC\n- Troubleshooting locally\n- Testing with Navisworks\n- Testing with Revit\n- 3rd-party IFC viewers\n- Show All Presentations"
  },
  {
    "original_filename": "1968_level_ifc_prop",
    "header_text": "IFC Custom Properties in Revit",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> IFC Custom Properties in Revit\n\nEason also recently addressed another important IFC related question:\n\n**Question:** Can the Revit API be used to add custom properties in an IFC file opened in Revit?\nCan Revit export this IFC with those new properties?\n\n**Answer:** There is no direct way in Revit to add custom properties to IFC.\nHowever, it can be achieved indirectly through the following steps:\n\n- Open the IFC model with Revit’s OpenIFC\n(API: [Application.OpenIFCDocument](https://www.revitapidocs.com/2023/bb14933b-a758-2b34-b160-686a28cc48cb.htm)) to\nconvert IFC to RVT\n- Add customer properties by adding shared parameters and specifying values for them\n([sample code](https://github.com/jeremytammik/FireRatingCloud/blob/master/FireRatingCloud/Cmd_1_CreateAndBindSharedParameter.cs) from\nThe Building Coder)\n- Define custom Property Sets for IFC (here is a [tutorial video from 3rd-party](https://youtu.be/SswHKtcM3mI) or\ncheck this [AKN page](https://knowledge.autodesk.com/search-result/caas/simplecontent/content/export-custom-bim-standards-and-property-sets-to-ifc.html))\n- Specify the custom Property Sets in IFC export setup\n(See [userDefinedPSets in Revit IFC repo](https://github.com/Autodesk/revit-ifc/blob/df1485b9accd598c2912a055af205ee1b03648c7/Source/IFCExporterUIOverride/IFCExportConfiguration.cs#L425) to\nknow how to construct IFCExportOptions for API)\n- Export the modified RVT to IFC\n(API: [Document.Export](https://www.revitapidocs.com/2023/7efa4eb3-8d94-b8e7-f608-3dbae751331d.htm))\n\n<center>\n<img src=\"img/ifc_custom_property_1_export_setup.png\" alt=\"Custom property sets in IFC export setup\" title=\"Custom property sets in IFC export setup\" width=\"600\" height=\"\"/> <!-- 872 x 556 -->\n<p style=\"font-size: 80%; font-style:italic\">Custom property sets in IFC export setup</p>\n\n<img src=\"img/ifc_custom_property_2_added_fm_id.png\" alt=\"Demo-added custom prop `FM ID` in IFC\" title=\"Demo-added custom prop `FM ID` in IFC\" width=\"600\" height=\"\"/> <!-- 2032 x 1167 -->\n<p style=\"font-size: 80%; font-style:italic\">Demo-added custom prop `FM ID` in IFC</p>\n\n<img src=\"img/ifc_custom_property_3_nw_import.png\" alt=\"Imported IFC in Navisworks\" title=\"Imported IFC in Navisworks\" width=\"600\" height=\"\"/> <!-- 1920 x 1055 -->\n<p style=\"font-size: 80%; font-style:italic\">Imported IFC in Navisworks</p>\n\n<img src=\"img/ifc_custom_property_4_content.png\" alt=\"Content of user defined property set\" title=\"Content of user defined property set\" width=\"600\" height=\"\"/> <!-- 1429 x 725 -->\n<p style=\"font-size: 80%; font-style:italic\">Content of user defined property set</p>\n\n<img src=\"img/ifc_custom_property_5_forge.png\" alt=\"Forge Viewer\" title=\"Forge Viewer\" width=\"600\" height=\"\"/> <!-- 1583 x 982 -->\n<p style=\"font-size: 80%; font-style:italic\">Forge Viewer</p>\n</center>\n\nMany thanks to Eason for the useful explanation!"
  },
  {
    "original_filename": "1968_level_ifc_prop",
    "header_text": "Set Level Id of Existing Element",
    "local_header_href": "#5",
    "chunk_text": "####<a name=\"5\"></a> Set Level Id of Existing Element\n\nReturning to pure desktop Revit API topics, several discussions recently in\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) circled\naround setting the level of an existing element, e.g.:\n\n<!--\n\n[`LevelId` is null](https://forums.autodesk.com/t5/revit-api-forum/levelid-is-null/m-p/11392692) and\nhow to [change level on line based family](https://forums.autodesk.com/t5/revit-api-forum/change-level-on-line-based-family/m-p/10307454).\n\n$ tbcsh_search.py level\n\n0079 0107 0301 0333 0340 0346 0383 0464 0525 0716 0830 0840 0860 0903 0904 0938 1093 1107 1158 1246 1311 1406 1429 1529 1537 1551 1728 1732 1737 1828 1850 1917\n\n- [Walls and Doors on Two Levels](http://thebuildingcoder.typepad.com/blog/2009/01/walls-and-doors-on-two-levels.html)\n- [Create Room on Level in Phase](http://thebuildingcoder.typepad.com/blog/2009/03/create-room-on-level-in-phase.html)\n- [Detail Curve on Level](http://thebuildingcoder.typepad.com/blog/2010/02/detail-curve-on-level.html)\n- [Collector Benchmark](http://thebuildingcoder.typepad.com/blog/2010/04/collector-benchmark.html)\n- [Element Level Events](http://thebuildingcoder.typepad.com/blog/2010/04/element-level-events.html)\n- [Retrieve Stairs on Level](http://thebuildingcoder.typepad.com/blog/2010/04/retrieve-stairs-on-level.html)\n- [Parameter Filter](http://thebuildingcoder.typepad.com/blog/2010/06/parameter-filter.html)\n- [Level Filter Benchmark](http://thebuildingcoder.typepad.com/blog/2010/10/level-filter-benchmark.html)\n- [Family Instance Missing Level Property](http://thebuildingcoder.typepad.com/blog/2011/01/family-instance-missing-level-property.html)\n- [Level Generator ADN Plugin of the Month](http://thebuildingcoder.typepad.com/blog/2012/02/level-generator-adn-plugin-of-the-month.html)\n- [Mobile Device Room Location](http://thebuildingcoder.typepad.com/blog/2012/09/mobile-device-room-location.html)\n- [UIView, Windows Coordinates, ReferenceIntersector and My Own Tooltip](http://thebuildingcoder.typepad.com/blog/2012/10/uiview-windows-coordinates-referenceintersector-and-my-own-tooltip.html)\n- [Building Performance Analysis and Face Tessellation](http://thebuildingcoder.typepad.com/blog/2012/11/building-performance-analysis-and-face-tessellation.html)\n- [What's New in the Revit 2012 API](http://thebuildingcoder.typepad.com/blog/2013/02/whats-new-in-the-revit-2012-api.html)\n- [What's New in the Revit 2013 API](http://thebuildingcoder.typepad.com/blog/2013/03/whats-new-in-the-revit-2013-api.html)\n- [What's New in the Revit 2014 API](http://thebuildingcoder.typepad.com/blog/2013/04/whats-new-in-the-revit-2014-api.html)\n- [Final Rolling Offset Using Pipe.Create](http://thebuildingcoder.typepad.com/blog/2014/01/final-rolling-offset-using-pipecreate.html)\n- [Different Revit API Aspects and Features](http://thebuildingcoder.typepad.com/blog/2014/02/different-revit-api-aspects-and-features.html)\n- [Views Displaying Given Element, SVG and NoSQL](http://thebuildingcoder.typepad.com/blog/2014/05/views-displaying-given-element-svg-and-nosql.html)\n- [WebGL Goes Mobile and Sorted Level Retrieval](http://thebuildingcoder.typepad.com/blog/2014/11/webgl-goes-mobile-and-sorted-level-retrieval.html)\n- [What's New in the Revit 2016 API](http://thebuildingcoder.typepad.com/blog/2015/04/whats-new-in-the-revit-2016-api.html)\n- [IFC Import Levels and MEP Element Shapes](http://thebuildingcoder.typepad.com/blog/2016/02/ifc-import-levels-and-mep-element-shapes.html)\n- [Reference Stable Representation Magic Voodoo](http://thebuildingcoder.typepad.com/blog/2016/04/stable-reference-string-magic-voodoo.html)\n- [RevitLookup with Reflection Cleanup](http://thebuildingcoder.typepad.com/blog/2017/02/revitlookup-with-reflection-cleanup.html)\n- [Events, UV Coordinates and Rooms on Level](http://thebuildingcoder.typepad.com/blog/2017/03/events-uv-coordinates-and-rooms-on-level.html)\n- [What's New in the Revit 2018 API](http://thebuildingcoder.typepad.com/blog/2017/04/whats-new-in-the-revit-2018-api.html)\n- [Assigning a Level to an Element Missing It](https://thebuildingcoder.typepad.com/blog/2019/03/assigning-a-level-to-an-element-missing-it.html)\n- [Forge Picture, Debugging, Snooping Appearances](https://thebuildingcoder.typepad.com/blog/2019/03/-architecture-edit-and-continue-snooping-appearance-assets.html)\n- [Set Floor Level and Use IPC for Disentanglement](https://thebuildingcoder.typepad.com/blog/2019/04/set-floor-level-and-use-ipc-for-disentanglement.html)\n- [Panel Schedule Slots and Changing Room Level](https://thebuildingcoder.typepad.com/blog/2020/03/panel-schedule-slots-and-change-room-level.html)\n- [Creating Material Texture and Retaining Pixels](https://thebuildingcoder.typepad.com/blog/2020/06/creating-material-texture-and-retaining-pixels.html)\n- [View Sheet from View and Select All on Level](https://thebuildingcoder.typepad.com/blog/2021/09/view-sheet-from-view-and-select-all-on-level.html)\n\n-->\n\n**Question:** I'm placing a new face-based family instance into my Revit model with the help of the NewFamilyInstance method taking (Face, XYZ, XYZ, FamilySymbol).\nThis works fine, except the instance does not have its level set to that of the host; it's set to -1 in the API and just left blank in the UI.\nI tried setting the level like such using the placed instance `LevelId` property and also tried setting its `BuiltInParameter` `FAMILY_LEVEL_PARAM`.\nBoth throw an error saying the parameter is read-only.\n\n**Answer:** On some elements, the element level can only be set during the creation of the element.\nFor that, I would assume that you need to use a different [overload of the `NewFamilyInstance` method](https://www.revitapidocs.com/2017/0c0d640b-7810-55e4-3c5e-cd295dede87b.htm).\nPlease refer to this explanation by The Building Coder and a few recent discussions of related topics in the Revit API discussion forum:\n\n- [Change level of existing element](https://thebuildingcoder.typepad.com/blog/2020/06/creating-material-texture-and-retaining-pixels.html#4)\n- [LevelId is null](https://forums.autodesk.com/t5/revit-api-forum/levelid-is-null/m-p/11392692)\n- [Change level on line based family](https://forums.autodesk.com/t5/revit-api-forum/change-level-on-line-based-family/m-p/10307454)\n\nAnother potentially helpful suggestion came up on the blog:"
  },
  {
    "original_filename": "1968_level_ifc_prop",
    "header_text": "Set Level in NewFamilyInstance",
    "local_header_href": "#6",
    "chunk_text": "####<a name=\"6\"></a> Set Level in NewFamilyInstance\n\nXikes shared a valuable observation in\ntheir [comment](https://thebuildingcoder.typepad.com/blog/2011/01/family-instance-missing-level-property.html#comment-5925189938)\non [family instance missing `Level` property](https://thebuildingcoder.typepad.com/blog/2011/01/family-instance-missing-level-property.html):\n\nFor those who are still stuck with this problem even when using the correct overload:\n\n<pre class=\"code\">\n  public FamilyInstance NewFamilyInstance(\n    XYZ location,\n    FamilySymbol symbol,\n    Element host, \n    StructuralType structuralType )\n</pre>\n\nIt is essential to pass in the function parameter `host` as a `Level` and not as an `Element`.\nAdd a quick cast like `(Level) myHostElement`.\nIt should do the trick.\nThe `Level` parameter is created properly and is not read-only.\nKeep in mind that this will screw up the offset values, but you can adjust those afterwards.\n\nIt would be very helpful if other developers could confirm this observation.\nThank you."
  }
]