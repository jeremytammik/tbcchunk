[
  {
    "original_filename": "0669_journal_addin",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0669_journal_addin",
    "header_text": "Loading an Add-in With a Journal File",
    "local_header_href": "#loading-an-add-in-with-a-journal-file",
    "chunk_text": "<h3>Loading an Add-in With a Journal File</h3><p>I touched upon journal files a couple of times in the past, for example to \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/07/journal-file-replay.html\">\nload an external application</a> and \n\nautomatically perform an action in the DocumentOpened event handler, or to \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/07/ifc-import-and-conversion-journal-script.html\">\nimplement a script automating IFC import</a>.\n\n<p>The Revit SDK also includes the Journaling sample which demonstrates how an add-in can define what information goes into the journal file while it is being recorded, and how to use that data to repeat the add-in's external command functionality during replay.\n\n<p>However, several people had problems getting the Journaling sample to run in Revit 2012.\nThis is due to changes in the add-in loading behaviour introduced in the recent releases of Revit in connection with the shift from INI files to the add-in manifest.\n\n<p>Here is the quick summary of the solution, which is utterly simple but pretty hard to discover on your own:\n\n<p>To run this sample, make sure that the journal file, the add-in manifest (.addin) and the add-in assembly (.dll) are all in the same folder, otherwise it definitely will not work. \nThis is by design, to reduce the impact during regression testing: in this way, only the required add-ins in the journal folder will be registered and loaded by Revit.\n\n<p>This ties in very well with my current tendency to copy all add-in assemblies into the Revit add-in folder, where the add-in manifests have to be placed in order for Revit to find them.\nAs I mentioned discussing the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/product-and-add-in-wizard-updates.html#3\">\nadd-in wizard updates</a>,\n\nthis has the significant advantage of obviating the need to specify the full assembly path in the add-in manifest.\n\n</p></p></p></p></p></p>"
  }
]