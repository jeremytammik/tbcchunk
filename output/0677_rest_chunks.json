[
  {
    "original_filename": "0677_rest",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0677_rest",
    "header_text": "Revit Server REST API",
    "local_header_href": "#revit-server-rest-api",
    "chunk_text": "<h3>Revit Server REST API</h3><p>I am currently in Paris giving a Revit API training, last thing before taking off for Autodesk University end of next week.\nMeanwhile, one little item which just dropped into my mailbox is the call to vote on the AUGI wish list:\n\n<h4>AUGI Wish List</h4>\n<p>AUGI, the \n\n<a href=\"http://www.augi.com\">\nAutodesk User Group International</a>, \n\nneeds you to choose your top ten wish list items to help define the final Top Ten to be presented to Autodesk during the AUGI Annual Meeting. You can only vote on products you use, defined in your membership profile. The vote concerns the following products: AutoCAD, AutoCAD Civil 3D, Inventor, Revit Architecture, Revit MEP, and Revit Structure. AUGI needs you to vote on the wish lists for those six. If you use any of them, please log into your AUGI account to see the lists and then visit <a href=\"http://www.augi.com/wishlist\">www.augi.com/wishlist</a> to vote. Voting will close on 01:00:00 a.m. GMT, Tuesday November 29, 2011.\n\n\n<a name=\"2\"></a>\n<h4>Revit Server REST API</h4>\n<p>Another interesting item is the following article by my colleague Adam Nagy, an introduction to an important Revit 2012 API feature that I have not mentioned here at all yet, the Revit Server REST API:\n\n<p>Autodesk Revit Server is an application that allows Revit users to use worksharing features over the wide area network (WAN). \nTypically, we place one central server over WAN and multiple local servers over local area network (LAN) which connect to the central server. \nWith such an environment, multiple Revit users can work together more seamlessly on a single Revit model beyond the geographical boundaries. \nRevit Server is a part of Revit install since the 2012 versions of Revit software products. \nYou can find the full documentation about Revit Server on WikiHelp.\n\n<p>Revit Server provides a public API based on \n\n<a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer\">\nREST</a> or \n\n<a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer\">\nREpresentational State Transfer</a>. \n\nYou can use the API for server administration tasks, such as querying information about a server, a specific folder, history and thumbnail of a specific model. You can also manage data on a server, such as locking/unlocking the server, and copying/renaming/deleting a folder and a model.\n\n<h4>REST</h4>\n<p>Since the Revit Server API is REST based, it is a good idea to familiarize yourself with the REST concept first. \nREST is a style of software architecture for distributed hypermedia systems such as the World Wide Web.  \nIf you are not familiar with REST, you can find a good introduction to it in this\n\n<a href=\"http://www.infoq.com/articles/rest-introduction\">\nBrief Introduction to REST</a>.\n\n<h4>Getting Started with Revit Server REST API</h4>\n<p>You can find the detailed full documentation about the Revit Server REST API under the Revit SDK folder:\n\n<ul>\n<li>[SDK folder]\\Revit Server SDK\\Revit Server REST API Reference.pdf\n</li></ul>\n<p>In order to call a Revit Server REST API function, you need to create an HTTP request. You can do that in various ways in .NET, e.g. by creating a System.Net.Webrequest:\n\n<pre class=\"code\">\nWebRequest request =\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc\" );\n</host></pre>\n<p>You simply have to specify the URI address that the request is targeting. \nThen you can specify the type of request (GET, PUT, POST, etc).\n\n<pre class=\"code\">\n  request.Method = \"GET\";\n</pre>\n<p>As the API reference points it out, you also need to provide information in the request header.  \nYou can add the necessary name-value pairs to the it like this:\n\n<pre class=\"code\">\n  request.Headers.Add( \"User-Name\", \"Adam\" );\n</pre>\n<p>You also have to add a command string that will specify what information you are requesting. You need to append it to the service URI separated by a slash character '/':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/serverProperties\" );\n</host></pre>\n<p>If you need to get information from a specific folder or file, you also need to specify the path to it with each folder-subfolder separated by a vertical bar character '|'. \nThe root folder is represented by '|':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/|Folder|SubFolder|File/history\");\n</host></pre>\n<p>Depending on the actual request, the result will be different. But each time, it is organized using the\n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\njson</a> or \n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\nJavaScript Object Notation</a> or format. \n\nYou can convert the json data to xml format in .NET and then read it using XmlDictionaryReader:\n\n<pre class=\"code\">\n  XmlDictionaryReader jsonReader =\n    JsonReaderWriterFactory.CreateJsonReader(\n      request.GetResponse().GetResponseStream(), \n      quotas );\n</pre>\n<p>A complete sample project using this technology can be found on the ADN site under\n\n<a href=\"http://adn.autodesk.com/adn/servlet/item?siteID=4814862&amp;id=16739482&amp;linkID=4901650\">\nRevit Server 2012 REST API Samples and Documents</a>.\n\nIt is a getting started sample demonstrating the usage of the Revit Server REST API to connect to a Revit Server and query its content:</p>\n<center>\n<img alt=\"Revit Server Viewer sample project\" src=\"img/rest_viewer_sample.png\"/>\n</center>\n<p>Here is a \n\n<a href=\"zip/revitserverviewer.zip\">copy for non-ADN-members</a>.\n\nADN members are allowed to access it as well  :-)\n\n<p>I hope you'll have fun with this new technology.\n\n<p>Many thanks to Adam for this overview and sample code!\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0677_rest",
    "header_text": "AUGI Wish List",
    "local_header_href": "#augi-wish-list",
    "chunk_text": "<h4>AUGI Wish List</h4><p>AUGI, the \n\n<a href=\"http://www.augi.com\">\nAutodesk User Group International</a>, \n\nneeds you to choose your top ten wish list items to help define the final Top Ten to be presented to Autodesk during the AUGI Annual Meeting. You can only vote on products you use, defined in your membership profile. The vote concerns the following products: AutoCAD, AutoCAD Civil 3D, Inventor, Revit Architecture, Revit MEP, and Revit Structure. AUGI needs you to vote on the wish lists for those six. If you use any of them, please log into your AUGI account to see the lists and then visit <a href=\"http://www.augi.com/wishlist\">www.augi.com/wishlist</a> to vote. Voting will close on 01:00:00 a.m. GMT, Tuesday November 29, 2011.\n\n\n<a name=\"2\"></a>\n<h4>Revit Server REST API</h4>\n<p>Another interesting item is the following article by my colleague Adam Nagy, an introduction to an important Revit 2012 API feature that I have not mentioned here at all yet, the Revit Server REST API:\n\n<p>Autodesk Revit Server is an application that allows Revit users to use worksharing features over the wide area network (WAN). \nTypically, we place one central server over WAN and multiple local servers over local area network (LAN) which connect to the central server. \nWith such an environment, multiple Revit users can work together more seamlessly on a single Revit model beyond the geographical boundaries. \nRevit Server is a part of Revit install since the 2012 versions of Revit software products. \nYou can find the full documentation about Revit Server on WikiHelp.\n\n<p>Revit Server provides a public API based on \n\n<a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer\">\nREST</a> or \n\n<a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer\">\nREpresentational State Transfer</a>. \n\nYou can use the API for server administration tasks, such as querying information about a server, a specific folder, history and thumbnail of a specific model. You can also manage data on a server, such as locking/unlocking the server, and copying/renaming/deleting a folder and a model.\n\n<h4>REST</h4>\n<p>Since the Revit Server API is REST based, it is a good idea to familiarize yourself with the REST concept first. \nREST is a style of software architecture for distributed hypermedia systems such as the World Wide Web.  \nIf you are not familiar with REST, you can find a good introduction to it in this\n\n<a href=\"http://www.infoq.com/articles/rest-introduction\">\nBrief Introduction to REST</a>.\n\n<h4>Getting Started with Revit Server REST API</h4>\n<p>You can find the detailed full documentation about the Revit Server REST API under the Revit SDK folder:\n\n<ul>\n<li>[SDK folder]\\Revit Server SDK\\Revit Server REST API Reference.pdf\n</li></ul>\n<p>In order to call a Revit Server REST API function, you need to create an HTTP request. You can do that in various ways in .NET, e.g. by creating a System.Net.Webrequest:\n\n<pre class=\"code\">\nWebRequest request =\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc\" );\n</host></pre>\n<p>You simply have to specify the URI address that the request is targeting. \nThen you can specify the type of request (GET, PUT, POST, etc).\n\n<pre class=\"code\">\n  request.Method = \"GET\";\n</pre>\n<p>As the API reference points it out, you also need to provide information in the request header.  \nYou can add the necessary name-value pairs to the it like this:\n\n<pre class=\"code\">\n  request.Headers.Add( \"User-Name\", \"Adam\" );\n</pre>\n<p>You also have to add a command string that will specify what information you are requesting. You need to append it to the service URI separated by a slash character '/':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/serverProperties\" );\n</host></pre>\n<p>If you need to get information from a specific folder or file, you also need to specify the path to it with each folder-subfolder separated by a vertical bar character '|'. \nThe root folder is represented by '|':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/|Folder|SubFolder|File/history\");\n</host></pre>\n<p>Depending on the actual request, the result will be different. But each time, it is organized using the\n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\njson</a> or \n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\nJavaScript Object Notation</a> or format. \n\nYou can convert the json data to xml format in .NET and then read it using XmlDictionaryReader:\n\n<pre class=\"code\">\n  XmlDictionaryReader jsonReader =\n    JsonReaderWriterFactory.CreateJsonReader(\n      request.GetResponse().GetResponseStream(), \n      quotas );\n</pre>\n<p>A complete sample project using this technology can be found on the ADN site under\n\n<a href=\"http://adn.autodesk.com/adn/servlet/item?siteID=4814862&amp;id=16739482&amp;linkID=4901650\">\nRevit Server 2012 REST API Samples and Documents</a>.\n\nIt is a getting started sample demonstrating the usage of the Revit Server REST API to connect to a Revit Server and query its content:</p>\n<center>\n<img alt=\"Revit Server Viewer sample project\" src=\"img/rest_viewer_sample.png\"/>\n</center>\n<p>Here is a \n\n<a href=\"zip/revitserverviewer.zip\">copy for non-ADN-members</a>.\n\nADN members are allowed to access it as well  :-)\n\n<p>I hope you'll have fun with this new technology.\n\n<p>Many thanks to Adam for this overview and sample code!\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0677_rest",
    "header_text": "Revit Server REST API",
    "local_header_href": "#revit-server-rest-api",
    "chunk_text": "<h4>Revit Server REST API</h4><p>Another interesting item is the following article by my colleague Adam Nagy, an introduction to an important Revit 2012 API feature that I have not mentioned here at all yet, the Revit Server REST API:\n\n<p>Autodesk Revit Server is an application that allows Revit users to use worksharing features over the wide area network (WAN). \nTypically, we place one central server over WAN and multiple local servers over local area network (LAN) which connect to the central server. \nWith such an environment, multiple Revit users can work together more seamlessly on a single Revit model beyond the geographical boundaries. \nRevit Server is a part of Revit install since the 2012 versions of Revit software products. \nYou can find the full documentation about Revit Server on WikiHelp.\n\n<p>Revit Server provides a public API based on \n\n<a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer\">\nREST</a> or \n\n<a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer\">\nREpresentational State Transfer</a>. \n\nYou can use the API for server administration tasks, such as querying information about a server, a specific folder, history and thumbnail of a specific model. You can also manage data on a server, such as locking/unlocking the server, and copying/renaming/deleting a folder and a model.\n\n<h4>REST</h4>\n<p>Since the Revit Server API is REST based, it is a good idea to familiarize yourself with the REST concept first. \nREST is a style of software architecture for distributed hypermedia systems such as the World Wide Web.  \nIf you are not familiar with REST, you can find a good introduction to it in this\n\n<a href=\"http://www.infoq.com/articles/rest-introduction\">\nBrief Introduction to REST</a>.\n\n<h4>Getting Started with Revit Server REST API</h4>\n<p>You can find the detailed full documentation about the Revit Server REST API under the Revit SDK folder:\n\n<ul>\n<li>[SDK folder]\\Revit Server SDK\\Revit Server REST API Reference.pdf\n</li></ul>\n<p>In order to call a Revit Server REST API function, you need to create an HTTP request. You can do that in various ways in .NET, e.g. by creating a System.Net.Webrequest:\n\n<pre class=\"code\">\nWebRequest request =\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc\" );\n</host></pre>\n<p>You simply have to specify the URI address that the request is targeting. \nThen you can specify the type of request (GET, PUT, POST, etc).\n\n<pre class=\"code\">\n  request.Method = \"GET\";\n</pre>\n<p>As the API reference points it out, you also need to provide information in the request header.  \nYou can add the necessary name-value pairs to the it like this:\n\n<pre class=\"code\">\n  request.Headers.Add( \"User-Name\", \"Adam\" );\n</pre>\n<p>You also have to add a command string that will specify what information you are requesting. You need to append it to the service URI separated by a slash character '/':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/serverProperties\" );\n</host></pre>\n<p>If you need to get information from a specific folder or file, you also need to specify the path to it with each folder-subfolder separated by a vertical bar character '|'. \nThe root folder is represented by '|':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/|Folder|SubFolder|File/history\");\n</host></pre>\n<p>Depending on the actual request, the result will be different. But each time, it is organized using the\n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\njson</a> or \n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\nJavaScript Object Notation</a> or format. \n\nYou can convert the json data to xml format in .NET and then read it using XmlDictionaryReader:\n\n<pre class=\"code\">\n  XmlDictionaryReader jsonReader =\n    JsonReaderWriterFactory.CreateJsonReader(\n      request.GetResponse().GetResponseStream(), \n      quotas );\n</pre>\n<p>A complete sample project using this technology can be found on the ADN site under\n\n<a href=\"http://adn.autodesk.com/adn/servlet/item?siteID=4814862&amp;id=16739482&amp;linkID=4901650\">\nRevit Server 2012 REST API Samples and Documents</a>.\n\nIt is a getting started sample demonstrating the usage of the Revit Server REST API to connect to a Revit Server and query its content:</p>\n<center>\n<img alt=\"Revit Server Viewer sample project\" src=\"img/rest_viewer_sample.png\"/>\n</center>\n<p>Here is a \n\n<a href=\"zip/revitserverviewer.zip\">copy for non-ADN-members</a>.\n\nADN members are allowed to access it as well  :-)\n\n<p>I hope you'll have fun with this new technology.\n\n<p>Many thanks to Adam for this overview and sample code!\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0677_rest",
    "header_text": "REST",
    "local_header_href": "#rest",
    "chunk_text": "<h4>REST</h4><p>Since the Revit Server API is REST based, it is a good idea to familiarize yourself with the REST concept first. \nREST is a style of software architecture for distributed hypermedia systems such as the World Wide Web.  \nIf you are not familiar with REST, you can find a good introduction to it in this\n\n<a href=\"http://www.infoq.com/articles/rest-introduction\">\nBrief Introduction to REST</a>.\n\n<h4>Getting Started with Revit Server REST API</h4>\n<p>You can find the detailed full documentation about the Revit Server REST API under the Revit SDK folder:\n\n<ul>\n<li>[SDK folder]\\Revit Server SDK\\Revit Server REST API Reference.pdf\n</li></ul>\n<p>In order to call a Revit Server REST API function, you need to create an HTTP request. You can do that in various ways in .NET, e.g. by creating a System.Net.Webrequest:\n\n<pre class=\"code\">\nWebRequest request =\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc\" );\n</host></pre>\n<p>You simply have to specify the URI address that the request is targeting. \nThen you can specify the type of request (GET, PUT, POST, etc).\n\n<pre class=\"code\">\n  request.Method = \"GET\";\n</pre>\n<p>As the API reference points it out, you also need to provide information in the request header.  \nYou can add the necessary name-value pairs to the it like this:\n\n<pre class=\"code\">\n  request.Headers.Add( \"User-Name\", \"Adam\" );\n</pre>\n<p>You also have to add a command string that will specify what information you are requesting. You need to append it to the service URI separated by a slash character '/':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/serverProperties\" );\n</host></pre>\n<p>If you need to get information from a specific folder or file, you also need to specify the path to it with each folder-subfolder separated by a vertical bar character '|'. \nThe root folder is represented by '|':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/|Folder|SubFolder|File/history\");\n</host></pre>\n<p>Depending on the actual request, the result will be different. But each time, it is organized using the\n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\njson</a> or \n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\nJavaScript Object Notation</a> or format. \n\nYou can convert the json data to xml format in .NET and then read it using XmlDictionaryReader:\n\n<pre class=\"code\">\n  XmlDictionaryReader jsonReader =\n    JsonReaderWriterFactory.CreateJsonReader(\n      request.GetResponse().GetResponseStream(), \n      quotas );\n</pre>\n<p>A complete sample project using this technology can be found on the ADN site under\n\n<a href=\"http://adn.autodesk.com/adn/servlet/item?siteID=4814862&amp;id=16739482&amp;linkID=4901650\">\nRevit Server 2012 REST API Samples and Documents</a>.\n\nIt is a getting started sample demonstrating the usage of the Revit Server REST API to connect to a Revit Server and query its content:</p>\n<center>\n<img alt=\"Revit Server Viewer sample project\" src=\"img/rest_viewer_sample.png\"/>\n</center>\n<p>Here is a \n\n<a href=\"zip/revitserverviewer.zip\">copy for non-ADN-members</a>.\n\nADN members are allowed to access it as well  :-)\n\n<p>I hope you'll have fun with this new technology.\n\n<p>Many thanks to Adam for this overview and sample code!\n</p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0677_rest",
    "header_text": "Getting Started with Revit Server REST API",
    "local_header_href": "#getting-started-with-revit-server-rest-api",
    "chunk_text": "<h4>Getting Started with Revit Server REST API</h4><p>You can find the detailed full documentation about the Revit Server REST API under the Revit SDK folder:\n\n<ul>\n<li>[SDK folder]\\Revit Server SDK\\Revit Server REST API Reference.pdf\n</li></ul>\n<p>In order to call a Revit Server REST API function, you need to create an HTTP request. You can do that in various ways in .NET, e.g. by creating a System.Net.Webrequest:\n\n<pre class=\"code\">\nWebRequest request =\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc\" );\n</host></pre>\n<p>You simply have to specify the URI address that the request is targeting. \nThen you can specify the type of request (GET, PUT, POST, etc).\n\n<pre class=\"code\">\n  request.Method = \"GET\";\n</pre>\n<p>As the API reference points it out, you also need to provide information in the request header.  \nYou can add the necessary name-value pairs to the it like this:\n\n<pre class=\"code\">\n  request.Headers.Add( \"User-Name\", \"Adam\" );\n</pre>\n<p>You also have to add a command string that will specify what information you are requesting. You need to append it to the service URI separated by a slash character '/':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/serverProperties\" );\n</host></pre>\n<p>If you need to get information from a specific folder or file, you also need to specify the path to it with each folder-subfolder separated by a vertical bar character '|'. \nThe root folder is represented by '|':\n\n<pre class=\"code\">\n  WebRequest.Create(\n    \"http://<host>/RevitServerAdminRESTService\"\n    + \"/AdminRESTService.svc/|Folder|SubFolder|File/history\");\n</host></pre>\n<p>Depending on the actual request, the result will be different. But each time, it is organized using the\n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\njson</a> or \n\n<a href=\"http://en.wikipedia.org/wiki/JSON\">\nJavaScript Object Notation</a> or format. \n\nYou can convert the json data to xml format in .NET and then read it using XmlDictionaryReader:\n\n<pre class=\"code\">\n  XmlDictionaryReader jsonReader =\n    JsonReaderWriterFactory.CreateJsonReader(\n      request.GetResponse().GetResponseStream(), \n      quotas );\n</pre>\n<p>A complete sample project using this technology can be found on the ADN site under\n\n<a href=\"http://adn.autodesk.com/adn/servlet/item?siteID=4814862&amp;id=16739482&amp;linkID=4901650\">\nRevit Server 2012 REST API Samples and Documents</a>.\n\nIt is a getting started sample demonstrating the usage of the Revit Server REST API to connect to a Revit Server and query its content:</p>\n<center>\n<img alt=\"Revit Server Viewer sample project\" src=\"img/rest_viewer_sample.png\"/>\n</center>\n<p>Here is a \n\n<a href=\"zip/revitserverviewer.zip\">copy for non-ADN-members</a>.\n\nADN members are allowed to access it as well  :-)\n\n<p>I hope you'll have fun with this new technology.\n\n<p>Many thanks to Adam for this overview and sample code!\n</p></p></p></p></p></p></p></p></p></p>"
  }
]