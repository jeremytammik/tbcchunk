[
  {
    "original_filename": "1620_create_swept_blend",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<!--\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\nCreating a swept blend DirectShape in C++ in #RevitAPI @AutodeskRevit #bim #dynamobim @AutodeskForge #ForgeDevCon http://bit.ly/sweptblenddirectshape\n\nQuestion: I am trying to create a swept blend geometry and assign it to a <code>DirectShape</code> element.\nThe initial code threw an exception when calling the <code>GeometryCreationUtilities</code> <code>CreateSweptBlendGeometry</code> method. \nHow can I fix this?\nAnswer: The path parameters assume that they should be normalized or that the curve has a range of parameterization from 0 to 1...\n\n--->"
  },
  {
    "original_filename": "1620_create_swept_blend",
    "header_text": "Create Swept Blend DirectShape in C++",
    "local_header_href": "#create-swept-blend-directshape-in-c",
    "chunk_text": "### Create Swept Blend DirectShape in C++\n\nThis solution is shared by my colleague Ryuji Ogasawara:\n\n**Question:** I am trying to create a swept blend geometry and assign it to a `DirectShape` element.\n\nThe initial code threw an exception when calling the `GeometryCreationUtilities` `CreateSweptBlendGeometry` method, saying:\n\n> Plane of profile loop is not perpendicular to the sweep path at the specified attachment point.\n\nThe Revit SDK sample GeometryCreation_BooleanOperation does not include any example code for `CreateSweptBlendGeometry`.\n \nHow can I fix this exception?\n \n**Answer:** The path parameters assume that they should be normalized or that the curve has a range of parameterization from 0 to 1.\n\nTo use the unnormalized bounds for the curve, you should probably add these calls:\n\n<pre class=\"code\">\n&nbsp;&nbsp;pathParams-&gt;Add(pathCurve-&gt;GetEndParameter(0));\n&nbsp;&nbsp;pathParams-&gt;Add(pathCurve-&gt;GetEndParameter(1));\n</pre>\n\nHere is the working code in .NET C++ CLR:\n\n<pre class=\"code\">\n&nbsp;&nbsp;Autodesk::Revit::DB::<span style=\"color:#2b91af;\">Element</span>^&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;DirectShapeCreator::CreateDirectShape(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Autodesk::Revit::DB::<span style=\"color:#2b91af;\">Document</span>^&nbsp;<span style=\"color:gray;\">document</span>)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;Autodesk::Revit::DB::<span style=\"color:#2b91af;\">Category</span>^&nbsp;directShapeCategory&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:gray;\">document</span>-&gt;Settings-&gt;Categories-&gt;Item[\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Autodesk::Revit::DB::<span style=\"color:#2b91af;\">BuiltInCategory</span>::<span style=\"color:darkslategray;\">OST_GenericModel</span>];\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>&nbsp;(directShapeCategory&nbsp;==&nbsp;<span style=\"color:blue;\">nullptr</span>)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:blue;\">nullptr</span>;\n \n&nbsp;&nbsp;&nbsp;&nbsp;Autodesk::Revit::DB::<span style=\"color:#2b91af;\">DirectShape</span>^&nbsp;directShape&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;Autodesk::Revit::DB::<span style=\"color:#2b91af;\">DirectShape</span>::CreateElement(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">document</span>,&nbsp;directShapeCategory-&gt;Id);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>&nbsp;(directShape&nbsp;!=&nbsp;<span style=\"color:blue;\">nullptr</span>)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;Create&nbsp;a&nbsp;path&nbsp;curve</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;XYZ^&gt;^&nbsp;controlPoints&nbsp;=&nbsp;<span style=\"color:blue;\">gcnew</span>&nbsp;List&lt;XYZ^&gt;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controlPoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(0,&nbsp;0,&nbsp;0));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controlPoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(0,&nbsp;0,&nbsp;10));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controlPoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(0,&nbsp;10,&nbsp;10));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controlPoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(0,&nbsp;10,&nbsp;20));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;<span style=\"color:blue;\">double</span>&gt;^&nbsp;weights&nbsp;=&nbsp;<span style=\"color:blue;\">gcnew</span>&nbsp;List&lt;<span style=\"color:blue;\">double</span>&gt;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weights-&gt;Add(1.0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weights-&gt;Add(1.0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weights-&gt;Add(1.0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weights-&gt;Add(1.0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Curve^&nbsp;pathCurve&nbsp;=&nbsp;NurbSpline::CreateCurve(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controlPoints,&nbsp;weights);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;Create&nbsp;a&nbsp;bottom&nbsp;profile</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;XYZ^&gt;^&nbsp;bottomProfilePoints&nbsp;=&nbsp;<span style=\"color:blue;\">gcnew</span>&nbsp;List&lt;XYZ^&gt;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfilePoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(5,&nbsp;5,&nbsp;0));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfilePoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(-5,&nbsp;5,&nbsp;0));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfilePoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(-5,&nbsp;-5,&nbsp;0));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfilePoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(5,&nbsp;-5,&nbsp;0));\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CurveLoop^&nbsp;bottomProfile&nbsp;=&nbsp;<span style=\"color:blue;\">gcnew</span>&nbsp;CurveLoop;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfile-&gt;Append(Line::CreateBound(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfilePoints[0],&nbsp;bottomProfilePoints[1]));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfile-&gt;Append(Line::CreateBound(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfilePoints[1],&nbsp;bottomProfilePoints[2]));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfile-&gt;Append(Line::CreateBound(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfilePoints[2],&nbsp;bottomProfilePoints[3]));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfile-&gt;Append(Line::CreateBound(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottomProfilePoints[3],&nbsp;bottomProfilePoints[0]));\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;Create&nbsp;a&nbsp;top&nbsp;profile</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;XYZ^&gt;^&nbsp;topProfilePoints&nbsp;=&nbsp;<span style=\"color:blue;\">gcnew</span>&nbsp;List&lt;XYZ^&gt;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfilePoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(2,&nbsp;10&nbsp;+&nbsp;2,&nbsp;20));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfilePoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(-2,&nbsp;10&nbsp;+&nbsp;2,&nbsp;20));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfilePoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(-2,&nbsp;10&nbsp;-&nbsp;2,&nbsp;20));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfilePoints-&gt;Add(<span style=\"color:blue;\">gcnew</span>&nbsp;XYZ(2,&nbsp;10&nbsp;-&nbsp;2,&nbsp;20));\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CurveLoop^&nbsp;topProfile&nbsp;=&nbsp;<span style=\"color:blue;\">gcnew</span>&nbsp;CurveLoop;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfile-&gt;Append(Line::CreateBound(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfilePoints[0],&nbsp;topProfilePoints[1]));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfile-&gt;Append(Line::CreateBound(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfilePoints[1],&nbsp;topProfilePoints[2]));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfile-&gt;Append(Line::CreateBound(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfilePoints[2],&nbsp;topProfilePoints[3]));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfile-&gt;Append(Line::CreateBound(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;topProfilePoints[3],&nbsp;topProfilePoints[0]));\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;CurveLoop^&gt;^&nbsp;profiles&nbsp;=&nbsp;<span style=\"color:blue;\">gcnew</span>&nbsp;List&lt;CurveLoop^&gt;;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;Add&nbsp;above&nbsp;profiles</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;profiles-&gt;Add(bottomProfile);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;profiles-&gt;Add(topProfile);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;which&nbsp;value&nbsp;to&nbsp;be&nbsp;set&nbsp;exactly?&nbsp;He&nbsp;tried&nbsp;0&nbsp;and&nbsp;1.</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;<span style=\"color:blue;\">double</span>&gt;^&nbsp;pathParams&nbsp;=&nbsp;<span style=\"color:blue;\">gcnew</span>&nbsp;List&lt;<span style=\"color:blue;\">double</span>&gt;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathParams-&gt;Add(pathCurve-&gt;GetEndParameter(0));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathParams-&gt;Add(pathCurve-&gt;GetEndParameter(1));\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;Create&nbsp;a&nbsp;swept&nbsp;blend&nbsp;geometry.</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Solid^&nbsp;solid&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;GeometryCreationUtilities::CreateSweptBlendGeometry(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathCurve,&nbsp;pathParams,&nbsp;profiles,&nbsp;<span style=\"color:blue;\">nullptr</span>);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;GeometryObject^&gt;^&nbsp;gs&nbsp;=&nbsp;<span style=\"color:blue;\">gcnew</span>&nbsp;List&lt;GeometryObject^&gt;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gs-&gt;Add(solid);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directShape-&gt;AppendShape(gs);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;directShape;\n&nbsp;&nbsp;}\n</pre>\n\nThe final result looks like this:\n\n<center>\n<img src=\"img/create_swept_blend.jpg\" alt=\"Swept blend DirectShape\" width=\"600\"/>\n</center>"
  }
]