[
  {
    "original_filename": "0446_filter_view_phase",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0446_filter_view_phase",
    "header_text": "Filter for View and Phase",
    "local_header_href": "#filter-for-view-and-phase",
    "chunk_text": "<h3>Filter for View and Phase</h3><p>Here is yet another entry in our endlessly growing collection of filtering examples, highlighting yet another hitherto unexplored aspect, combining a view filter with a parameter filter for a specific phase.\n\n<p><strong>Question:</strong> I need to retrieve all elements in a specific view that have same phase, created but not demolished.\nHow can I achieve that, please? \n\n<p><strong>Answer:</strong> To get all elements in a specified view, you can use the overload of the FilteredElementCollector constructor taking a view element id as a second argument.\nQuoting the Revit API help file RevitAPI.chm, it 'constructs a new FilteredElementCollector that will search and filter the visible elements in a view'.\n\n<p>Since 'Phase Created' is a parameter, you can then use the ElementParameterFilter class to filter out elements having the specific phase.\nCombining the two filters will provide your target element set. \n\n<p>Here is some sample code demonstrating this:\n\n<pre class=\"code\">\n[<span class=\"teal\">TransactionAttribute</span>( <span class=\"teal\">TransactionMode</span>.Manual )]\n[<span class=\"teal\">RegenerationAttribute</span>( <span class=\"teal\">RegenerationOption</span>.Manual )]\n<span class=\"blue\">public</span> <span class=\"blue\">class</span> <span class=\"teal\">RevitCommand</span> : <span class=\"teal\">IExternalCommand</span>\n{\n  <span class=\"blue\">public</span> <span class=\"teal\">Result</span> Execute( \n    <span class=\"teal\">ExternalCommandData</span> commandData, \n    <span class=\"blue\">ref</span> <span class=\"blue\">string</span> messages, \n    <span class=\"teal\">ElementSet</span> elements )\n  {\n    <span class=\"teal\">UIApplication</span> app = commandData.Application;\n    <span class=\"teal\">Document</span> doc = app.ActiveUIDocument.Document;\n \n    <span class=\"teal\">Transaction</span> trans = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc, <span class=\"maroon\">\"Test\"</span> );\n    trans.Start();\n \n    <span class=\"green\">// use the view filter</span>\n \n    <span class=\"teal\">FilteredElementCollector</span> collector \n      = <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( \n        doc, doc.ActiveView.Id );\n \n    <span class=\"green\">// use the parameter filter.</span>\n    <span class=\"green\">// get the phase id \"New construction\"                                        </span>\n \n    <span class=\"teal\">ElementId</span> idPhase = GetPhaseId( \n      <span class=\"maroon\">\"New Construction\"</span>, doc );\n \n    <span class=\"teal\">ParameterValueProvider</span> provider \n      = <span class=\"blue\">new</span> <span class=\"teal\">ParameterValueProvider</span>( \n        <span class=\"blue\">new</span> <span class=\"teal\">ElementId</span>( ( <span class=\"blue\">int</span> ) \n          <span class=\"teal\">BuiltInParameter</span>.PHASE_CREATED ) );\n \n    <span class=\"teal\">FilterNumericRuleEvaluator</span> evaluator \n      = <span class=\"blue\">new</span> <span class=\"teal\">FilterNumericEquals</span>();\n \n    <span class=\"teal\">FilterElementIdRule</span> rule \n      = <span class=\"blue\">new</span> <span class=\"teal\">FilterElementIdRule</span>( \n        provider, evaluator, idPhase );\n \n    <span class=\"teal\">ElementParameterFilter</span> parafilter \n      = <span class=\"blue\">new</span> <span class=\"teal\">ElementParameterFilter</span>( rule );\n \n    collector.WherePasses( parafilter );\n \n    <span class=\"teal\">TaskDialog</span>.Show( <span class=\"maroon\">\"Element Count\"</span>, \n      <span class=\"maroon\">\"There are \"</span> + collector.Count().ToString() \n      + <span class=\"maroon\">\" elements in the current view created\"</span>\n      + <span class=\"maroon\">\" with phase New Construction\"</span> );\n \n    trans.Commit();\n \n    <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Succeeded;\n  }\n \n  <span class=\"blue\">public</span> <span class=\"teal\">ElementId</span> GetPhaseId( \n    <span class=\"blue\">string</span> phaseName, \n    <span class=\"teal\">Document</span> doc )\n  {\n    <span class=\"teal\">ElementId</span> id = <span class=\"blue\">null</span>;\n \n    <span class=\"teal\">FilteredElementCollector</span> collector \n      = <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc );\n \n    collector.OfClass( <span class=\"blue\">typeof</span>( <span class=\"teal\">Phase</span> ) );\n \n    <span class=\"blue\">var</span> phases = <span class=\"blue\">from</span> <span class=\"teal\">Phase</span> phase <span class=\"blue\">in</span> collector\n                 <span class=\"blue\">where</span> phase.Name.Equals( phaseName )\n                 <span class=\"blue\">select</span> phase;\n \n    id = phases.First().Id;\n \n    <span class=\"blue\">return</span> id;\n  }\n}\n</pre>\n</p></p></p></p></p>"
  }
]