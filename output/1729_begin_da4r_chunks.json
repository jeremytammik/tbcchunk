[
  {
    "original_filename": "1729_begin_da4r",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\ntwitter:\n\nBefore getting started with Forge Design Automation for the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/planforDA4R\n\nSeveral people have recently asked how to get started with Forge Design Automation for Revit or DA4R.\nI will not get into any nitty-gritty details, since they are well covered by the Forge Design Automation API documentation, which includes DA4R tutorials and samples.\nHere are examples of two conversations on planning first steps for DA4R solutions\n&ndash; Structural analysis with DA4R\n&ndash; Implementing a DA4R RVT round trip...\n\nlinkedin:\n\nBefore getting started with Forge Design Automation for the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/planforDA4R\n\nSeveral people have recently asked how to get started with Forge Design Automation for Revit or DA4R.\n\nI will not get into any nitty-gritty details, since they are well covered by the Forge Design Automation API documentation, which includes DA4R tutorials and samples.\n\nHere are examples of two conversations on planning first steps for DA4R solutions\n\n- Structural analysis with DA4R\n- Implementing a DA4R RVT round trip...\n\nof [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2019.0.145.4).\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) recently\n\n-->"
  },
  {
    "original_filename": "1729_begin_da4r",
    "header_text": "Before Getting Started with Design Automation",
    "local_header_href": "#before-getting-started-with-design-automation",
    "chunk_text": "### Before Getting Started with Design Automation\n\nSeveral people have recently asked how to get started\nwith [Forge](https://forge.autodesk.com)\n[Design Automation for Revit or DA4R](https://thebuildingcoder.typepad.com/blog/2018/11/forge-design-automation-for-revit-at-au-and-in-public.html).\n\nI will not get into any nitty-gritty details, since they are well covered by\nthe [Forge Design Automation API documentation](https://forge.autodesk.com/api/design-automation-cover-page).\n\nThe official documentation is for the released version 2, which only supports DWG.\n[Version 3](https://forge.autodesk.com/en/docs/design-automation/v3/developers_guide/overview) covers\nRVT as well and\nincludes [DA4R tutorials and samples](https://forge.autodesk.com/en/docs/design-automation/v3/tutorials/revit-samples).\n\nIn case you are interested in the approach I took myself to prepare an existing Revit add-in for DA4R, check out\nthe [IfcSpaceZoneBoundaries add-in](https://github.com/jeremytammik/IfcSpaceZoneBoundaries) and\nthe detailed information pointed out there.\n\nHere are examples of two conversations on planning first steps for DA4R solutions:\n\n- [Structural analysis with DA4R](#2) \n- [Implementing a DA4R RVT round trip](#3)\n\n<center>\n<img src=\"img/roomedit3dv3_running_2.png\" alt=\"Moving a wall in the Forge viewer\" width=\"771\">\n</center>"
  },
  {
    "original_filename": "1729_begin_da4r",
    "header_text": "<a name=\"2\"></a> Structural Analysis with DA4R",
    "local_header_href": "#a-name2a-structural-analysis-with-da4r",
    "chunk_text": "#### <a name=\"2\"></a> Structural Analysis with DA4R\n\n**Question:** I would like to extract the analytical structural model out of a Revit BIM via the Revit API.\n\nThat would include structural elements, e.g., steel beams (easy?), structural concrete elements (more complex?), connections types between elements, loads, degrees of freedom etc.\n\nMy goal is to connect my existing structural analysis application with the BIM.\n\n**Answer:** This aspect of the BIM is handled by the Revit\nAPI [`AnalyticalModel` class](https://apidocs.co/apps/revit/2019/b4466cf0-0fa0-1f67-d442-fdf0fb073fc9.htm).\n\nThe Revit SDK includes lots of Revit Structure specific material, e.g., some structure-specific information in the *Revit Structure* subfolder and a bunch of samples in the *Structural Analysis SDK*, including\nthe [structural extensions, REX and results builder](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.54).\n\nMany discussions on Revit Structure specific issues are listed\nin [The Building Coder `rst` tag](https://thebuildingcoder.typepad.com/blog/rst).\n\n**Response:** Thank you very much for this.\n\nI already have a product running on Revit that translates and connects the structural data to other products, specifically for analysis and optimization.  My query is aimed at large buildings that are modelled in the cloud.  In that case, the engineer would like to keep analysis data with the model (locally or in the cloud, but not mixed).  Hence the question whether we can extract the same information in Forge, i.e., keeping the analytical data in the cloud.  Once this has been processed, it can be read back into the Revit model (once again, all happening in the cloud).\n\n**Answer:** Yes, you can extract the same data in the cloud from the RVT model using the Forge Design Automation for Revit API.\n\nThis analytical data will not be available in the Forge Viewer, since it has to be stripped from that to make it more performant and more generic, independent of the seed CAD model (RVT, DWG, etc.) and domain (architectural, structural, mechanical, etc.).\n\nThe data you extract can be stored locally or in the cloud in any format and/or database you like.\n\nIt can be integrated back into the Revit RVT model again, both on the desktop, using the Revit API, and in the cloud, using the Forge Design Automation for Revit API.\n\nMy favourite minimal roundtrip RVT data extraction, cloud storage, and reintegration sample is [FireRatingCloud](https://github.com/jeremytammik/FireRatingCloud)."
  },
  {
    "original_filename": "1729_begin_da4r",
    "header_text": "<a name=\"3\"></a> Implementing a DA4R RVT Round Trip",
    "local_header_href": "#a-name3a-implementing-a-da4r-rvt-round-trip",
    "chunk_text": "#### <a name=\"3\"></a> Implementing a DA4R RVT Round Trip\n\n**Question:** I am working on a proof of concept for a Forge app providing functionality similar to\nthe [RvtMetaProp roundtrip properties](http://thebuildingcoder.typepad.com/blog/2017/09/use-forge-or-spreadsheet-to-create-shared-parameters.html) and\nother implementations roundtripping data between a RVT BIM and cloud or Forge, cf. \nthe [sample overview connecting desktop BIM and cloud](http://thebuildingcoder.typepad.com/blog/2017/10/rational-bim-programming-at-au-darmstadt.html#5).\n\nThis time, however, I would like to use Forge Design Automation for Revit to implement the transforms and the RVT BIM updating step.\n\nQuite simple idea: enable the user to move walls in the Forge model via the Forge viewer.\n\nMy app stores the translations and Revit unique ids for each modified element, sends data to DA4R, updates the RVT BIM and hence the Forge model in the viewer.\n\nThe hard part for me is that I never used the Revit API before.\n\nCould you point me to resources that will help me implement that part, please?\n\nDo you see any technical difficulty in updating wall positions in DA4R based on input parameters?\n\nHopefully not :)\n\n**Answer:** That sounds utterly cool and perfectly feasible.\n\nThe most important point for you as a programmer is: the Revit API is 100% event driven.\n\nFirst, take a look at \nthe [getting started material](https://thebuildingcoder.typepad.com/blog/about-the-author.html#2).\n\nThen you can check out my\nnew [IfcSpaceZoneBoundaries add-in](https://github.com/jeremytammik/IfcSpaceZoneBoundaries).\n\nIts functionality is very simple, extracting some room and zone data from an RVT BIM and exporting that to CSV.\n\nIt implements it:\n\n- Initially as an external command, for manual testing,\n- Then in the `ApplicationInitialised` event, for local automated testing, and\n- Finally, in the `DesignAutomationReadyEvent`, for real DA4R deployment:\n\nThe repository documentation includes links to the blog posts discussing the process in more detail.\n\nGood luck and have fun!\n\n**Response:** Thanks for quick reply.\n\nI already uploaded a demo plugin to DA4R following the Forge tutorials and ran an activity on my document.\n\nWould you have a snippet that shows how to get the element from its unique id and apply a transform to it?\n\nOr at least point me to the exact APIs and objects I need to get that done quickly?\n\nI am planning to learn the Revit API but struggling with time for that proof of concept, so it would help if I could fast forward to get the transforms done in my plugin.\n\nI will get back to the basics in more details later :)\n\n**Answer:** Sure:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;uid&nbsp;=&nbsp;<span style=\"color:blue;\">null</span>;&nbsp;<span style=\"color:green;\">//&nbsp;UniqueId</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">double</span>&nbsp;distance&nbsp;=&nbsp;12.34;\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">XYZ</span>&nbsp;tx&nbsp;=&nbsp;distance&nbsp;*&nbsp;<span style=\"color:#2b91af;\">XYZ</span>.BasisX;\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;e&nbsp;=&nbsp;doc.GetElement(&nbsp;uid&nbsp;);\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementTransformUtils</span>.MoveElement(&nbsp;doc,&nbsp;e.Id,&nbsp;tx&nbsp;);\n</pre>\n\nAs I mentioned above, my favourite minimal roundtrip RVT data extraction, cloud storage, and reintegration sample\nis [FireRatingCloud](https://github.com/jeremytammik/FireRatingCloud).\n\n**Response:** Thanks for the help so far.\n\nI could fake my way through Revit API.\n\nMy app is almost working, so I'm able to send transforms to DA4R from the Forge viewer.\n\nHowever, depending on which elements are being moved, some constraints are being applied and prevent the transforms, cf. this message saying \"Can't keep elements joined\"...\n\n<center>\n<img src=\"img/cannot_keep_elements_joined.png\" alt=\"Cannot keep elements joined\" width=\"459\">\n</center>\n\nIs there a way to delete the constraints or unjoin the element I am moving in DA4R?\n\nLater: I found a way to get joined elements and tried to unjoin them.\n\nTo my great despair the error message still shows up ... any suggestions?\n\n**Answer:** The easiest may be to implement a warning swallower like I did for the stairs example:\n\n- [Swallowing StairsAutomation warnings](http://thebuildingcoder.typepad.com/blog/2018/09/swallowing-stairsautomation-warnings.html)\n- [Auto-run an add-in for Design Automation](http://thebuildingcoder.typepad.com/blog/2018/09/auto-run-an-add-in-for-design-automation.html)\n\n**Response:** This is what I ended up doing.\n\nMy wall editor round-trip with DA4R is working now :-)"
  }
]