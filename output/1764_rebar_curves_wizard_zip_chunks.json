[
  {
    "original_filename": "1764_rebar_curves_wizard_zip",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- Revit Public Roadmap – July 2019\n  https://blogs.autodesk.com/revit/2019/07/21/revit-public-roadmap-july-2019/\n\n- rebar curves\n  Cannot get rebar centerline curve using GetCenterlineCurves()\n  https://forums.autodesk.com/t5/revit-api-forum/cannot-get-rebar-centerline-curve-using-getcenterlinecurves/m-p/8910986\n\n- visual studio revit add-in wizard includes a built-in zip utility\n  merged [pull request #9](https://github.com/jeremytammik/VisualStudioRevitAddinWizard/pull/9) by\n  Brandon [@ProjectBarks](https://github.com/ProjectBarks) Barker\n  providing visual studio version support and an integrated zip utility\n  https://github.com/jeremytammik/VisualStudioRevitAddinWizard/releases/tag/2020.0.0.1\n\n- 15565451 [试用 SectionView创建俯视图。-- Try SectionView to create a top view.]\n  top view can be created using detail view\n\n- DA4R display RFA instance:\n  [Q] I came across an AU class recording where the customer with WS Atkins & Partners demoed their Revit IO apps. One thing he showed was to extract Revit families using Revit IO and display the families on the web using Derivative service and viewer. However, I don’t believe Derivative service supports RFA file type. Do you know how they managed to show Revit families 3d model on the web?\n  da4r_rfa_instance.png\n  [A] The workaround is to place a family instance in an empty project and have it translated.\n  So the source files are actually RVT not RFA.\n\n- https://stackoverflow.com/questions/56984043/path-gettemppath-method-returns-usertemppath-with-guid-in-the-end-when-using-r\n  i ran into the very same issue myself as well.\n  That's probably due to Revit defining its own %TMP/TEMP% Environment Variable. – haim770 yesterday\n  As per this forum link, Revit 2020 alters the value returned as per what you are seeing.\n  https://forums.autodesk.com/t5/revit-api-forum/revit-2020-temp-path-changes-every-session/td-p/8759058\n  Since Revit 2020 the requested temp path contains an additional guid at the end of the path, which changes after every restart of Revit(ie. C:\\Users\\USERNAME\\AppData\\Local\\Temp\\84ae8c0d-197b-4b44-b8d3-8823fabbba4f). It seems like Revit changes the temp path for the scope of the application.\n  i chose the easy solution, \"C:/tmp\".\n  other reliable solutions include:\n  Searching for \"Temp\" and dropping the GUID sub-folder\n  Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + @\"\\AppData\\Local\\Temp\\\"\n  Path.Combine(System.Environment.GetEnvironmentVariable(\"LOCALAPPDATA\"), \"Temp\")\n\n- math trick, chinese multiplication or japanese mathematics using lines\n  [Multiply Numbers By Drawing Lines](https://youtu.be/bbKjXKV9QNA)\n  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/bbKjXKV9QNA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\ntwitter:\n\n@AutodeskRevit roadmap, rebar curves, built-in add-in wizard zip utility, top view direction section views, family instances in Forge viewer and more in the #RevitAPI @AutodeskForge  #bim #DynamoBim #ForgeDevCon http://bit.ly/rebarcurves\n\nTopics for this week\n&ndash; Revit public roadmap July 2019\n&ndash; Rebar curves\n&ndash; Built-in zip utility for add-in wizard\n&ndash; Only detail section views can be used for top view direction\n&ndash; Displaying an RFA family instance in DA4R\n&ndash; Revit 2020 alters the TEMP file system variable\n&ndash; Lattice multiplication...\n\nlinkedin:\n\nRevit roadmap, rebar curves, built-in add-in wizard zip utility, top view direction section views, family instances in Forge viewer and more in the #RevitAPI\n\nhttp://bit.ly/rebarcurves\n\nTopics for this week:\n\n- Revit public roadmap July 2019\n- Rebar curves\n- Built-in zip utility for add-in wizard\n- Only detail section views can be used for top view direction\n- Displaying an RFA family instance in DA4R\n- Revit 2020 alters the TEMP file system variable\n- Lattice multiplication...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n-->"
  },
  {
    "original_filename": "1764_rebar_curves_wizard_zip",
    "header_text": "Roadmap, Rebar Curves, Wizard Zip and More",
    "local_header_href": "#roadmap-rebar-curves-wizard-zip-and-more",
    "chunk_text": "### Roadmap, Rebar Curves, Wizard Zip and More\n\nI returned from my vacation and Buddhist retreat in France, on the Atlantic coast and in the countryside around Bordeaux.\n\nI am going off on vacation again next week, though, in the French Jura, so this is just a short break in between vacations  :-)\n\nHere are my topics for this week:\n\n- [Revit public roadmap &ndash; July 2019](#2)\n- [Rebar curves](#3)\n- [Built-in zip utility for add-in wizard](#4)\n- [Only detail section views can be used for top view direction](#5)\n- [Displaying an RFA family instance in DA4R](#6)\n- [Revit 2020 alters the TEMP file system variable](#7)\n- [Lattice multiplication](#8)"
  },
  {
    "original_filename": "1764_rebar_curves_wizard_zip",
    "header_text": "Revit Public Roadmap &ndash; July 2019",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Revit Public Roadmap &ndash; July 2019\n\nSasha Crotty and The Factory published\nan [update to the *Revit Public Roadmap &ndash; July 2019*](https://blogs.autodesk.com/revit/2019/07/21/revit-public-roadmap-july-2019).\n\nI urge you to check it out to see where Revit is headed.\n\nIf you wish to get involved, submit your own ideas and requests, please do so in\nthe [Revit Idea Station](http://www.autodesk.com/RevitIdeas)."
  },
  {
    "original_filename": "1764_rebar_curves_wizard_zip",
    "header_text": "Rebar Curves",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Rebar Curves\n\nI recently implemented\na new [external command `CmdRebarCurves`](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdRebarCurves.cs)\nin [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples).\n\nIt was originally intended to be used to simplify and minimise models for Forge processing.\n\nHowever, it seems that may no longer be required, since\nMichael [@micbeale](https://twitter.com/micbeale) [@wallabyway](https://github.com/wallabyway) Beale lists\nsome alternative options as well:\n\n>    - Avoid Revit solids due to 'triangle explosion', i.e., too many triangles in SVF, making downstream processing extremely problematic and expensive.\n>    - Jeremy looked into using the Revit API, prototyping a Revit API plugin solution to be piped through DA4R to extract the Revit primitive information about the rebar centre lines that can avoid the triangle explosion problem.\n>    - We are now investigating a new 'rebar-lines' solution that includes enough meta-data information to avoid needing Jeremy's add-in.\n\n> The latter is the winning solution, since it avoids the triangle explosion, because rebar-lines use low bytes compared to the heavily tessellated rebar-solids, and we can create 'unit-mesh' cylinder primitives during Forge processing, thus outputting highly optimised rebar solids in a future  updated Forge Viewer.\n\nTherefore, I see no need to enhance the current `CmdRebarCurves` implementation at this point.\n\nI still hope that it will remain useful in its current state for answering questions such as the following one from\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [getting rebar centreline curves using `GetCenterlineCurves`](https://forums.autodesk.com/t5/revit-api-forum/cannot-get-rebar-centerline-curve-using-getcenterlinecurves/m-p/8910986):\n\n**Question:** I am using the Revit 2019 API and I want to get the centre line curve of the first and the last rebars in a rebar set.\nI tried using the following method:\n\n<pre>\n  Rebar.GetCenterlineCurves(\n    bool adjustForSelfIntersection,\n    bool suppressHooks,\n    bool suppressBendRadius,\n    MultiplanarOption multiplanarOption,\n    int barPositionIndex);\n</pre>\n\nHowever, it seems that the parameter `barPositionIndex` has no effect at all.\n\nNo matter what valid position index of the rebar set I input, the curve list I receive is the curves of the first bar &ndash; the same as the result of calling `RebarShapeDriveAccessor.ComputeDrivingCurve`.\n\nHow is this possible? Is there anything I missed in the document?\n\nP.S. I found another way to achieve what I want by translating the first rebar curves along the direction of rebar set.\n\n**Answer:** Congratulations on solving the problem as described in your post scriptum.\n\nTake a look at the\nnew [external command `CmdRebarCurves`](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdRebarCurves.cs)\nin [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples).\n\nIt seems to be using the very same approach you describe.\n\nManuel Solís López of [SOFiSTiK AG](https://www.sofistik.com) explains:\n\n`Rebar.GetCenterlineCurves(... , i )` will return the curves of the Rebar at the i-th position.\n\nHowever, You must distinguish three different cases, depending on the `DistributionType`:\n\n- `Uniform` &ndash; The rebar curves will be equal at all valid positions.\n- `VaryingLength` &ndash; According to the rebar constraints, the rebar curves may vary along the distribution path. For example, a set of straight rebar in a triangular slab.\n- `IsRebarFreeForm()` == `true` &ndash; The Rebar curves of FreeFormRebar at each position will be defined by the given constraints, but also by the specific RebarUpdateServer to which the Rebar is subscribed, for instance using SurfaceDistribution or AlignedDistribution.\n\nThe Rebar curves at each i-th position could vary or not, but in case of non-FreeFormRebar (Rebar.IsRebarFreeForm() == false), you would have to apply the corresponding Transformation in order to obtain the actual location in 3D Space:\n\n<pre>\n  Rebar.GetShapeDrivenAccessor()\n    .GetBarPositionTransform(i);\n</pre>\n\nMany thanks to Manuel for his helpful explanation!"
  },
  {
    "original_filename": "1764_rebar_curves_wizard_zip",
    "header_text": "Built-In Zip Utility for Add-In Wizard",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> Built-In Zip Utility for Add-In Wizard\n\nThe [Visual Studio Revit add-in wizards](https://thebuildingcoder.typepad.com/blog/about-the-author.html#5.20) provide\nVisual Studio templates for generating C# and VB .NET Revit add-ins.\nThey enable the instantaneous automatic generation, installation and debugging of a new Revit add-in skeleton with one single click.\n\nThe current version of the wizards now includes a built-in zip utility.\n\nIt was added by Brandon [@ProjectBarks](https://github.com/ProjectBarks) Barker\nin his [pull request #9 providing Visual Studio version support and an integrated zip utility](https://github.com/jeremytammik/VisualStudioRevitAddinWizard/pull/9).\n\nThe most up-to-date version today\nis [VisualStudioRevitAddinWizard release 2020.0.0.1](https://github.com/jeremytammik/VisualStudioRevitAddinWizard/releases/tag/2020.0.0.1).\n\nMany thanks to Brandon for this useful contribution!"
  },
  {
    "original_filename": "1764_rebar_curves_wizard_zip",
    "header_text": "Only Detail Section Views can be Used for Top View Direction",
    "local_header_href": "#5",
    "chunk_text": "####<a name=\"5\"></a> Only Detail Section Views can be Used for Top View Direction\n\nIn another case, an add-in developer wishes to create a section view with a top view direction:\n\n- 15565451 *试用 SectionView创建俯视图。&ndash; try `SectionView` to create a top view*\n\n**Question:** When passing the `BoundingBoxXYZ` parameter, what is the requirement for the corresponding base(i) vector?\nWhat is the specific logic?\n\nI tried it myself, and it seems that the logic of `BoundingBoxXYZ` is different when generating an inside view and generating a top view.\n\nDo any special rules apply when using the `ViewSection` creation methods to generate a top view, i.e., view direction equal to (0,0,-1)?\n\n**Answer:** Looking at the Revit API documentation, the `ViewSection` class covers sections, details, elevations, and callouts, all in their reference and non-reference variations. Its creation methods can be used to specify the view direction:\n\n- CreateCallout Creates a new callout view.\n- CreateDetail Returns a new detail ViewSection.\n- CreateReferenceCallout Creates a new reference callout.\n- CreateReferenceSection Creates a new reference section.\n- CreateSection Returns a new section ViewSection.\n\nIn the last of these,\n[CreateSection](https://www.revitapidocs.com/2020/d6228f68-3643-8aaf-72bb-f9a0b4125886.htm),\nthe notes explain:\n\n> Create a section whose view volume corresponds geometrically with the specified sectionBox.\nThe view direction of the resulting section will be sectionBox.Transform.BasisZ and the up direction will be sectionBox.Transform.BasisY.\nThe right-hand direction will be computed so that (right, up, view direction) form a left handed coordinate system.\nThe resulting view will be cropped, and far clipping will be active.\nThe crop region will correspond to the projections of BoundingBoxXYZ.Min and BoundingBoxXYZ.Max onto the view's cut plane.\nThe far clip distance will be equal to the difference of the z-coordinates of BoundingBoxXYZ.Min and BoundingBoxXYZ.Max.\nThe new section ViewSection will receive a unique view name.\n\nThe development team clarifies:\n\nFor most section views, the UI does not allow this, and therefore the API does not do so either.\n\nSections created in elevation views must be vertical.\n\nFor instance, `ViewSection.CreateSection` restricts the view direction to be horizontal, i.e., the view plane to be vertical.\n\nHowever, `ViewSection.CreateDetail` has no restrictions on the view direction and can therefore be used to create a section view parallel to a plan view.\n\nSo, you should be able to use a detail view to achieve what you require."
  },
  {
    "original_filename": "1764_rebar_curves_wizard_zip",
    "header_text": "Displaying an RFA Family Instance in DA4R",
    "local_header_href": "#6",
    "chunk_text": "####<a name=\"6\"></a> Displaying an RFA Family Instance in DA4R\n\n[Forge Design Automation for Revit or DA4R](https://thebuildingcoder.typepad.com/blog/about-the-author.html#5.55) supports RVT file processing, but not RFA.\n\nThis begs the question:\n\n**Question:** I came across an AU class recording showing a customer with WS Atkins & Partners demoing their Revit IO apps.\n\nOne thing it showed was extracting Revit families using Revit IO and displaying them on the web using the Forge derivative service and viewer.\n\n<center>\n<img src=\"img/da4r_rfa_instance.png\" alt=\"Family instance in the Forge viewer\" width=\"660\">\n</center>\n\nHowever, I don’t believe the derivative service supports the RFA file type.\n\nDo you know how they managed to show 3D models of Revit families on the web?\n\n**Answer:** The workaround is to place a family instance in an empty project and have it translated.\n\nSo, the source files are actually RVT, not RFA."
  },
  {
    "original_filename": "1764_rebar_curves_wizard_zip",
    "header_text": "Revit 2020 Alters the TEMP File System Variable",
    "local_header_href": "#7",
    "chunk_text": "####<a name=\"7\"></a> Revit 2020 Alters the TEMP File System Variable\n\nMany add-in make use of the Windows `TEMP` system variable to define a path for outputting a temporary file.\n\nRevit 2020 apparently alters the value of that variable, affecting the add-in behaviour as well.\n\nI ran into this issue myself, prompting me to discover the StackOverflow discussion\non [`Path.GetTempPath` method returning `UserTempPath` with GUID added in Revit 2020](https://stackoverflow.com/questions/56984043/path-gettemppath-method-returns-usertemppath-with-guid-in-the-end-when-using-r).\n\nThe answers there explain:\n\n- Since Revit 2020, the requested temp path contains an additional GUID at the end of the path that changes after every restart of Revit, i.e.,  *C:\\Users\\USERNAME\\AppData\\Local\\Temp\\84ae8c0d-197b-4b44-b8d3-8823fabbba4f*.\n- That's probably due to Revit defining its own %TMP/TEMP% environment variable\n- [Revit 2020 temp path changes every session](https://forums.autodesk.com/t5/revit-api-forum/revit-2020-temp-path-changes-every-session/td-p/8759058)\n\nApparently, Revit changes the temp path for the scope of the application.\n\nI chose the easy solution in my add-in, using a constant `\"C:/tmp\"` instead.\n\nOther possible solutions include:\n\n- Searching for \"Temp\" and dropping the GUID sub-folder\n- Using\n    <pre>\n      Environment.GetFolderPath(\n        Environment.SpecialFolder.ApplicationData )\n          + @\"\\AppData\\Local\\Temp\\\"\n    </pre>\n- Using\n    <pre>\n      Path.Combine(\n        System.Environment.GetEnvironmentVariable(\n          \"LOCALAPPDATA\" ),\n            \"Temp\")\n    </pre>"
  },
  {
    "original_filename": "1764_rebar_curves_wizard_zip",
    "header_text": "Lattice Multiplication",
    "local_header_href": "#8",
    "chunk_text": "####<a name=\"8\"></a> Lattice Multiplication\n\nLet us round this off with an interesting little mathematical non-Revit-API observation:\n\nI ran across several neat demonstrations of an ancient and well-known multiplication method previously unknown to me,\n[lattice multiplication](https://en.wikipedia.org/wiki/Lattice_multiplication), e.g. this\nthree-minute video on [multiplying numbers by drawing lines](https://youtu.be/bbKjXKV9QNA):\n\n<center>\n  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/bbKjXKV9QNA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</center>"
  }
]