[
  {
    "original_filename": "0890_change_workset",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0890_change_workset",
    "header_text": "Change Element Workset",
    "local_header_href": "#change-element-workset",
    "chunk_text": "<h3>Change Element Workset</h3><p>We discussed\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/11/read-only-workset-api.html\">\nreading the workset of an element</a>,\n\neither using the built-in parameter ELEM_PARTITION_PARAM or, more easily, the dedicated document GetWorksetId method.\n\n<p>This is actually another example of the possibility to choose your data access method by using either a dedicated property or a parameter, as we recently explored to achieve\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/01/changing-viewport-type.html\">\nchanging the viewport type</a>.\n\n<p>Although the Revit API provides a dedicated property to read an element workset, it does not do so for changing it, which begs the question:\n\n\n<p><strong>Question:</strong> The Element.WorksetId property is read-only.\n\n<p>I would like to change an element's workset to other one, though.\n\n<p>Is this possible?\n\n\n<p><strong>Answer:</strong> You can change the element's workset via the built-in parameter ELEM_PARTITION_PARAM.\n\n<p>Here is a code snippet to show how to retrieve all workset ids and set each one to a given element in turn:\n\n<pre class=\"code\">\n  <span class=\"teal\">Reference</span> r = uidoc.Selection.PickObject( <span class=\"teal\">ObjectType</span>.Element );\n  <span class=\"teal\">Element</span> e = doc.GetElement( r.ElementId );\n \n  <span class=\"blue\">if</span>( e == <span class=\"blue\">null</span> )\n    <span class=\"blue\">return</span>;\n \n  <span class=\"teal\">WorksetId</span> wid = e.WorksetId;\n \n  <span class=\"teal\">TaskDialog</span>.Show( <span class=\"maroon\">\"Workset id\"</span>, wid.ToString() );\n \n  <span class=\"teal\">Parameter</span> wsparam = e.get_Parameter(\n    <span class=\"teal\">BuiltInParameter</span>.ELEM_PARTITION_PARAM );\n \n  <span class=\"blue\">if</span>( wsparam == <span class=\"blue\">null</span> )\n    <span class=\"blue\">return</span>;\n \n  <span class=\"green\">// Find all user worksets </span>\n \n  <span class=\"teal\">FilteredWorksetCollector</span> worksets\n    = <span class=\"blue\">new</span> <span class=\"teal\">FilteredWorksetCollector</span>( doc )\n      .OfKind( <span class=\"teal\">WorksetKind</span>.UserWorkset );\n \n  <span class=\"blue\">using</span>( <span class=\"teal\">Transaction</span> tx = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc ) )\n  {\n    tx.Start( <span class=\"maroon\">\"Change workset id\"</span> );\n \n    <span class=\"blue\">foreach</span>( <span class=\"teal\">Workset</span> ws <span class=\"blue\">in</span> worksets )\n    {\n      wsparam.Set( ws.Id.IntegerValue );\n    }\n \n    tx.Commit();\n  }\n  wid = e.WorksetId;\n \n  <span class=\"teal\">TaskDialog</span>.Show( <span class=\"maroon\">\"worksetid\"</span>, wid.ToString() );\n</pre>\n<p>Many thanks to Phil Xia for this hint!</p>\n</p></p></p></p></p></p></p></p>"
  }
]