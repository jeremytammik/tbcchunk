[
  {
    "original_filename": "1608_create_mass_floor",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<!--\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n13663566 [APIによるマス床の生成方法 -- How to generate mass floor using API]\n\nCreating face wall and mass floor via #RevitAPI @AutodeskRevit #bim #dynamobim @AutodeskForge #ForgeDevCon http://bit.ly/facewallmassfloor thanks to @harrymattison \n\nI went on my first ski tour this season...\nlots of interesting issues in\nthe Revit API discussion forum... \na Japanese case on programmatically generating a mass floor, enabling us to mention yet another hitherto unmentioned Revit API usility class, <code>MassInstanceUtils</code>...\nPlease tell me if a method exists to generate a mass floor using the API...\n\n--->"
  },
  {
    "original_filename": "1608_create_mass_floor",
    "header_text": "Creating Face Wall and Mass Floor",
    "local_header_href": "#creating-face-wall-and-mass-floor",
    "chunk_text": "### Creating Face Wall and Mass Floor\n\nI went on my first ski tour this season, on and around\nthe [Hochgescheid, in the Black Forest](https://en.wikipedia.org/wiki/List_of_mountains_and_hills_of_the_Black_Forest),\nfor a change:\n\n<center>\n<img src=\"img/020_michael_jeremy_1000x404.jpg\" alt=\"Hochgescheid\" width=\"500\"/>\n</center>\n\nOn the Revit API side of things, besides lots of interesting issues in\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160),\na Japanese ADN case came up on programmatically generating a mass floor, enabling us to mention yet another hitherto unmentioned Revit API usility class, `MassInstanceUtils`:\n\n**Question:** マス床をAPIで生成する方法があれば教えてください。 &ndash; Please tell me if a method exists to generate a mass floor using the API.\n\n**Answer:** First of all, here is the description\non [creating a floor from a mass floor in the user interface](http://help.autodesk.com/view/RVT/2018/ENU/?guid=GUID-03EABD3A-4736-4762-97F8-F473FEE18162).\n\nPlease be aware that the Revit API does not support the creation of in-place mass elements.\n\nAs suggested by\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [creating components in mode 'Model In-Place'](https://forums.autodesk.com/t5/revit-api-forum/creation-components-in-mode-model-in-place/m-p/3822639),\nthe alternative is to create a [direct shape](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.50) instead.\nUnfortunately, you will still not end up with a mass.\n\nHowever, if you have already created a mass element by some other means, you can use it to generate face walls and mass floors programmatically.\n\nThis really old thread asking the same question\non [creating mass floors and or scope boxes](https://forums.autodesk.com/t5/revit-api-forum/creating-mass-floors-and-or-scope-boxes/m-p/2388509) still\nremains open today.\nI'll add this answer to that as soon as I complete publishing it on The Building Coder.\n\nNowadays, the answer to this question is provided by\nthe [MassInstanceUtils.AddMassLevelDataToMassInstance](http://www.revitapidocs.com/2018.1/fe3b251b-2677-094d-7e72-77fea0f49f24.htm) method.\n\nIt generates floors defined by levels based on a given mass geometry.\n\nIts use is demonstrated and very clearly explained\nby Harry Mattison of [Boost your BIM](https://boostyourbim.wordpress.com) in his post\non [automating the Building Maker workflow](https://boostyourbim.wordpress.com/2014/02/11/automating-the-building-maker-workflow).\n\nIt uses the `FaceWall` `Create` and `MassInstanceUtils` `AddMassLevelDataToMassInstance` methods to generate walls and floors based on a selected mass element's geometry, faces and levels.\n\nHe demonstrates the add-in running live in his three-and-a-half-minute video\non [Face Wall and Mass Floor creation with the Revit API](https://youtu.be/nHWen2_lN6U):\n\n<center>\n<iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/nHWen2_lN6U\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen></iframe>\n</center>\n\nThe API calls are driven by Harry's C# .NET Revit API macro `CreateFaceWallsAndMassFloors`.\n\nHere is the code copied from Harry's post and added\nto [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples)\nin [lines 414-473 of CmdFaceWall.cs](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdFaceWall.cs#L414-L473):\n\n<pre class=\"code\">\n<span style=\"color:blue;\">#region</span>&nbsp;CreateFaceWallsAndMassFloors\n<span style=\"color:green;\">//&nbsp;By&nbsp;Harry&nbsp;Mattison,&nbsp;Boost&nbsp;Your&nbsp;BIM,</span>\n<span style=\"color:green;\">//&nbsp;Automating&nbsp;the&nbsp;Building&nbsp;Maker&nbsp;workflow</span>\n<span style=\"color:green;\">//&nbsp;https://boostyourbim.wordpress.com/2014/02/11/automating-the-building-maker-workflow/</span>\n<span style=\"color:green;\">//&nbsp;Face&nbsp;Wall&nbsp;and&nbsp;Mass&nbsp;Floor&nbsp;creation&nbsp;with&nbsp;the&nbsp;Revit&nbsp;API</span>\n<span style=\"color:green;\">//&nbsp;https://youtu.be/nHWen2_lN6U</span>\n \n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Create&nbsp;face&nbsp;walls&nbsp;and&nbsp;mass&nbsp;floors&nbsp;on&nbsp;and&nbsp;in&nbsp;selected&nbsp;mass&nbsp;element</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;CreateFaceWallsAndMassFloors(&nbsp;<span style=\"color:#2b91af;\">UIDocument</span>&nbsp;uidoc&nbsp;)\n{\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;uidoc.Document;\n \n&nbsp;&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;fi&nbsp;=&nbsp;doc.GetElement(\n&nbsp;&nbsp;&nbsp;&nbsp;uidoc.Selection.PickObject(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ObjectType</span>.Element&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">as</span>&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>;\n \n&nbsp;&nbsp;<span style=\"color:#2b91af;\">WallType</span>&nbsp;wType&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">WallType</span>&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;.Cast&lt;<span style=\"color:#2b91af;\">WallType</span>&gt;().FirstOrDefault(&nbsp;q\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;q.Name&nbsp;==&nbsp;<span style=\"color:#a31515;\">&quot;Generic&nbsp;-&nbsp;6\\&quot;&nbsp;Masonry&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Options</span>&nbsp;opt&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Options</span>();\n&nbsp;&nbsp;opt.ComputeReferences&nbsp;=&nbsp;<span style=\"color:blue;\">true</span>;\n \n&nbsp;&nbsp;<span style=\"color:blue;\">using</span>(&nbsp;<span style=\"color:#2b91af;\">Transaction</span>&nbsp;t&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Transaction</span>(&nbsp;doc&nbsp;)&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;t.Start(&nbsp;<span style=\"color:#a31515;\">&quot;Create&nbsp;Face&nbsp;Walls&nbsp;&amp;&nbsp;Mass&nbsp;Floors&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;<span style=\"color:#2b91af;\">Solid</span>&nbsp;solid&nbsp;<span style=\"color:blue;\">in</span>&nbsp;fi.get_Geometry(&nbsp;opt&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Where(&nbsp;q&nbsp;=&gt;&nbsp;q&nbsp;<span style=\"color:blue;\">is</span>&nbsp;<span style=\"color:#2b91af;\">Solid</span>&nbsp;).Cast&lt;<span style=\"color:#2b91af;\">Solid</span>&gt;()&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;<span style=\"color:#2b91af;\">Face</span>&nbsp;f&nbsp;<span style=\"color:blue;\">in</span>&nbsp;solid.Faces&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;<span style=\"color:#2b91af;\">FaceWall</span>.IsValidFaceReferenceForFaceWall(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc,&nbsp;f.Reference&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">FaceWall</span>.Create(&nbsp;doc,&nbsp;wType.Id,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">WallLocationLine</span>.CoreExterior,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.Reference&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;levels\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">Level</span>&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;<span style=\"color:#2b91af;\">Level</span>&nbsp;level&nbsp;<span style=\"color:blue;\">in</span>&nbsp;levels&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">MassInstanceUtils</span>.AddMassLevelDataToMassInstance(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc,&nbsp;fi.Id,&nbsp;level.Id&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;t.Commit();\n&nbsp;&nbsp;}\n}\n<span style=\"color:blue;\">#endregion</span>&nbsp;<span style=\"color:green;\">//&nbsp;CreateFaceWallsAndMassFloors</span>\n</pre>\n\nMany thanks to Harry for documenting and implementing this!"
  }
]