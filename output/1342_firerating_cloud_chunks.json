[
  {
    "original_filename": "1342_firerating_cloud",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equicenter=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<style type=\"text/css\">p.en { font-style: italic; }</style>\n<script src=\"google-code-prettify/run_prettify.js\"></script>\n<!-- <script src=\"http://thebuildingcoder.typepad.com/google-code-prettify/run_prettify.js\"></script> -->\n</head>"
  },
  {
    "original_filename": "1342_firerating_cloud",
    "header_text": "Grevit, FireRating in the Cloud Demo, Deployment, Vacation",
    "local_header_href": "#grevit-firerating-in-the-cloud-demo-deployment-vacation",
    "chunk_text": "<h3>Grevit, FireRating in the Cloud Demo, Deployment, Vacation</h3><p>I have been extremely busy the past few days implementing my\n<a href=\"https://github.com/jeremytammik/FireRatingCloud\">\nFireRating in the Cloud</a> sample,\na migration of the standard Revit SDK FireRating sample to a cloud-based multi-project implementation â€“ reflected in this week's GitHub contributions:</p><center>\n<img alt=\"GitHub contributions\" src=\"img/2015-07_github_contribution.png\" width=\"292\"/>\n</center><p>Also, I heard from Max Thumfart about his very interesting Grevit project:</p><ul>\n<li><a href=\"#2\">FireRating in the cloud demo and deployment</a></li>\n<li><a href=\"#3\">Grevit</a></li>\n<li><a href=\"#4\">Vacation time soon</a></li>\n</ul><a name=\"2\"></a>"
  },
  {
    "original_filename": "1342_firerating_cloud",
    "header_text": "FireRating in the Cloud Demo and Deployment",
    "local_header_href": "#firerating-in-the-cloud-demo-and-deployment",
    "chunk_text": "<h4>FireRating in the Cloud Demo and Deployment</h4><p>I'm just about done with my FireRating in the Cloud project.</p><p>I published a\n<a href=\"http://the3dwebcoder.typepad.com/blog/2015/07/fireratingcloud-round-trip-and-on-mongolab.html#4\">demo run log</a> yesterday\nshowing the details of the four workflow steps:</p><ul>\n<li>Create and bind a shared parameter</li>\n<li>Export door instance fire rating data from Revit</li>\n<li>Modify the values externally</li>\n<li>Import updates back into the BIM</li>\n</ul><p>This is followed by an\n<a href=\"http://the3dwebcoder.typepad.com/blog/2015/07/fireratingcloud-round-trip-and-on-mongolab.html#5\">82-second video</a>\nshowing the addition of a few more doors and the full round trip data flow live:</p><center>\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"338\" src=\"https://www.youtube.com/embed/noy9da61weY\" width=\"450\"></iframe>\n</center><p>After completing that initial running both the mongo database and the node.js web server locally, I continued to implement and test the real live\n<a href=\"http://the3dwebcoder.typepad.com/blog/2015/07/fireratingcloud-fully-deployed-on-heroku-and-mongolab.html\">\nfully deployed cloud version of FireRatingCloud</a> with\nthe node.js web server hosted on\n<a href=\"http://www.herokuapp.com\">Heroku</a> and the database on\n<a href=\"https://mongolab.com\">mongolab.com</a>.</p><p>The\n<a href=\"https://github.com/jeremytammik/firerating\">fireratingdb node.js mongo database web server</a> and\n<a href=\"https://github.com/jeremytammik/FireRatingCloud\">FireRatingCloud Revit add-in</a> GitHub\nrepositories provide an overview of the complete project analysis, exploration and implementation.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1342_firerating_cloud",
    "header_text": "Grevit",
    "local_header_href": "#grevit",
    "chunk_text": "<h4>Grevit</h4><p>Everybody is excited about Grexit... I find Grevit far more interesting!</p><p>Max Thumfart, Senior Engineer at <a href=\"http://www.thorntontomasetti.com\">Thornton Tomasetti</a> in the UK, kindly pointed me to\n<a href=\"http://grevit.net\">Grevit</a>, a\n<a href=\"http://www.rhino3d.com\">Rhino</a> +\n<a href=\"http://www.grasshopper3d.com\">Grasshopper</a> app\nthat enables you to assemble a BIM in Grasshopper, send it to Revit or AutoCAD Architecture, and dynamically update existing models with geometry changes:</p><ul>\n<li><a href=\"http://www.food4rhino.com/project/grevit\">Grasshopper project</a></li>\n<li><a href=\"http://grevit.net\">Full documentation</a></li>\n</ul><center>\n<img alt=\"Grevit\" src=\"img/grevit.png\" width=\"464\"/>\n</center><p>Grevit is now open source and lives in its own <a href=\"https://github.com/moethu/Grevit\">Grevit GitHub repository</a>.</p><p>It currently drives Revit 2015 with support for Revit 2016 coming soon, and is used by numerous architects, engineers and Revit consultants to transfer geometry to Revit,\nincluding Arup, Henn, LAVA, Pilbrow &amp; Partners, GehryTech, Pattern Architects, SOM, A3D in Spain, etc.</p><p>Max also started to blog about Revit API interoperability on the\n<a href=\"https://grevit.wordpress.com\">Grevit blog</a>, e.g., on how to\n<a href=\"https://grevit.wordpress.com/2015/07/03/boost-c-library-in-c-revit-api\">\nwrite a C++ wrapper for the Boost library for use in C#</a> and thus within the Revit API.\nAs an example, he picks the use of the <a href=\"http://www.boost.org/doc/libs/1_54_0/libs/polygon/doc/voronoi_main.htm\">\nBoost Voronoi diagram implementation</a> to\ndrive a BIM and create Model Lines showing optimal separation of Revit walls, columns and slabs.</p><p>Congratulations to Max on these super cool projects, and many thanks for pointing them out!</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "1342_firerating_cloud",
    "header_text": "Vacation Time Soon",
    "local_header_href": "#vacation-time-soon",
    "chunk_text": "<h4>Vacation Time Soon</h4><p>That's it from me for this week.</p><p>That's almost it from me for quite a while, actually.</p><p>I'll be going on holiday quite a lot in the next couple of weeks.</p><p>I will say bye-bye properly before I leave for good sometime next week, though.</p>"
  }
]