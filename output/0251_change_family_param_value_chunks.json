[
  {
    "original_filename": "0251_change_family_param_value",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0251_change_family_param_value",
    "header_text": "Change Family Parameter Value",
    "local_header_href": "#change-family-parameter-value",
    "chunk_text": "<h3>Change Family Parameter Value</h3><p>Here is another issue dealing with family parameters, after the notes on how to \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/11/family-parameter-value.html\">\nread the values of family parameters</a> and\n\nlooking at the family parameter values via the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/11/extract-part-atoms.html\">\npart atom export</a>.\n\n<p><strong>Question:</strong> I'm using the AutoParameter SDK example to add parameters to my families. \nIt was customized so that only specific parameters from the shared parameters file are added to the families (i.e. we have a large shared parameters file, and we only want certain ones added to these families) using a switch statement along with the parameter names to find. \nWhen we add a parameter with a checkbox, it's automatically checked. \nWe need to go back after it was added and uncheck it. \nI went through a number of SDK examples but haven't found one that helps. \nCan you send me a snippet that shows how to do this? \nI am using C#.\n\n<p><strong>Answer:</strong> Do the parameters you have added in the family appear checked in the user interface of the project after being loaded into the document environment? \nIn that case, I assume that the parameters you have added have a Boolean data type and an initial value of True. \nIf so, the check mark should be removed if you set their initial value to False. \n\nFor instance, in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/10/revit-family-creation-api-labs.html\">\nRFA family labs</a>, \n\nthe addParameter method adds two real-values parameters:\n\n<pre class=\"code\">\n<span class=\"blue\">void</span> addParameters()\n{\n  <span class=\"teal\">FamilyManager</span> mgr = _rvtDoc.FamilyManager;\n \n  <span class=\"green\">// API parameter group for Dimension is PG_GEOMETRY:</span>\n  <span class=\"green\">//</span>\n  <span class=\"teal\">FamilyParameter</span> paramTw = mgr.AddParameter( \n    <span class=\"maroon\">\"Tw\"</span>, <span class=\"teal\">BuiltInParameterGroup</span>.PG_GEOMETRY, \n    <span class=\"teal\">ParameterType</span>.Length, <span class=\"blue\">false</span> );\n \n  <span class=\"teal\">FamilyParameter</span> paramTd = mgr.AddParameter( \n    <span class=\"maroon\">\"Td\"</span>, <span class=\"teal\">BuiltInParameterGroup</span>.PG_GEOMETRY, \n    <span class=\"teal\">ParameterType</span>.Length, <span class=\"blue\">false</span> );\n \n  <span class=\"green\">// set initial values:</span>\n  <span class=\"green\">//</span>\n  <span class=\"blue\">double</span> tw = mmToFeet( 150.0 );\n  <span class=\"blue\">double</span> td = mmToFeet( 150.0 );\n  mgr.Set( paramTw, tw );\n  mgr.Set( paramTd, td );\n}\n</pre>\n<p>In your case, you might be able to use something like:\n\n<pre class=\"code\">\n  <span class=\"teal\">FamilyParameter</span> paramDan = mgr.AddParameter(\n    <span class=\"maroon\">\"Dan\"</span>, <span class=\"teal\">BuiltInParameterGroup</span>.PG_TEXT, \n    <span class=\"teal\">ParameterType</span>.YesNo, <span class=\"blue\">true</span> );\n \n  mgr.Set( paramDan, 0 );\n</pre>\n<p><strong>Response:</strong> Thanks! that's exactly what I needed.\n</p></p></p></p></p>"
  }
]