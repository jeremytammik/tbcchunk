[
  {
    "original_filename": "0884_progress_bar",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0884_progress_bar",
    "header_text": "Implement Progress Bar and Abort Lengthy Process",
    "local_header_href": "#implement-progress-bar-and-abort-lengthy-process",
    "chunk_text": "<h3>Implement Progress Bar and Abort Lengthy Process</h3><p>The time has come to talk of many things: of shoes and ships, and sealing-wax, of cabbages and kings\n[<a href=\"http://www.jabberwocky.com/carroll/walrus.html\">^</a>]...\nor no, let's continue sticking to the Revit API for now, more or less;\ntoday's topics are:\n\n<ul>\n<li>A <a href=\"#2\">walk in the snow</a> and a crystal covered baby tree</li>\n<li>Implementation of a Revit add-in <a href=\"#3\">progress bar</a></li>\n<li><a href=\"#4\">Aborting a lengthy process</a> from the progress bar</li>\n<li>Harry's <a href=\"#5\">image generation video competition</a></li>\n</ul>\n<a name=\"2\"></a>\n<h4>A Walk in the Snow</h4>\n<p>I went for a walk in snow and fog on a local hill and appreciated this wind-driven ice crystal covered baby tree that:</p>\n<center>\n<img alt=\"Wind-driven ice crystal covered baby tree\" src=\"file:///j/photo/jeremy/2013/2013-01-15_belchen/32_crystal_covered_twigs_cropped.png\"/>\n</center>\n<p>I thought I would like to share that with you.\nSorry that it is so dark, but that's the way it was.</p>\n<a name=\"3\"></a>\n<h4>Implementing a Revit Add-in Progress Bar</h4>\n<p>I chatted with Harry Mattison on various topics during the winter break.\nOne of them was the implementation of a Revit add-in progress bar:</p>\n<p><strong>Question:</strong> I am trying to make a simple progress dialog based on your post on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/revit-window-handle-and-modeless-dialogues.html\">modeless dialogues</a>.\n\nIt seems to work well basically but has a few problems:\n\n<ol>\n<li>The first time I run the command, the progress dialog flashes briefly on the screen and then disappears.\n<li>The text label does not display properly.\n<li>Sometimes the entire progress dialogue content turns white and the title bar says 'Not Responding'.\n</li></li></li></ol>\n<p>Could you help me figure out if my approach is flawed or if it just needs some small adjustments?\n\n\n<p><strong>Answer:</strong> Thank you, but no thank you...  :-)\n\n<p>Instead, I propose that you look at my existing modeless progress bar implementation in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-adn-mep-sample-adnrme-for-revit-mep-2013.html\">\nADN Revit MEP sample add-in</a>,\n\nwhich has worked flawlessly for years now.\n\n\n<p><strong>Response:</strong> Your progress bar is great!\nI wish I had found it earlier.\n\n\n<a name=\"4\"></a>\n<h4>Aborting a Lengthy Process</h4>\n<p>Here's hopefully one last question about the progress bar:\n\n<p>How can the user cancel the operation from the progress bar?</p>\n<p><strong>Answer:</strong> You could implement some standard .NET stuff on the progress bar; maybe simply add a cancel button to it, and an event handler for that.\n\n<p><strong>Response:</strong> After spending some time thinking about events and the like, I realized the progress bar cancel solution is almost trivial.\n\n<p>An idle event wouldn't work in my case, because Revit was never going idle.\nIt was too busy doing hard work of exporting images for my <a href=\"http://boostyourbim.wordpress.com/products\">Image-O-Matic</a> application.\nInstead, all I needed to do is add the Abort button to the progress dialog, and put this little bit of code in the progress bar class:\n\n<pre class=\"code\">\n  <span class=\"blue\">private</span> <span class=\"blue\">void</span> btnAbort_Click(\n    <span class=\"blue\">object</span> sender,\n    <span class=\"teal\">EventArgs</span> e )\n  {\n    btnAbort.Text = <span class=\"maroon\">\"Aborting...\"</span>;\n    abortFlag = <span class=\"blue\">true</span>;\n  }\n \n  <span class=\"blue\">public</span> <span class=\"blue\">bool</span> getAbortFlag()\n  {\n    <span class=\"blue\">return</span> abortFlag;\n  }\n</pre>\n<p>Then, inside my foreach loops, I just need to check the status of the flag:\n\n<pre class=\"code\">\n  <span class=\"blue\">foreach</span>( <span class=\"blue\">string</span> phaseName <span class=\"blue\">in</span> phaseList )\n  {\n    <span class=\"blue\">if</span>( progressForm.getAbortFlag() )\n      <span class=\"blue\">break</span>;\n \n    <span class=\"green\">// . . .</span>\n  }\n</pre>\n<p>Many thanks to Harry for the fruitful discussion and helpful hint!</p>\n<a name=\"5\"></a>\n<h4>Image Generation Video Competition</h4>\n<p>Yet another item from Harry, this time a rather shameless plug, but I guess he earned it  :-)</p>\n<p>Harry announced a\n\n<a href=\"http://boostyourbim.wordpress.com/2013/01/16/win-a-free-custom-built-revit-api-app-for-using-image-o-matic\">\ncompetition</a> in\n\nwhich you can win a free, custom-built Revit API add-in according to your own specifications for downloading his\n\n<!--\n\nhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aenhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\nhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\n\n-->\n<a href=\"http://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\">\nImage-O-Matic</a> application,\n\ngenerating a video with it, and uploading that to YouTube.\n\n<p>Have fun, and good luck to you!\n</p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0884_progress_bar",
    "header_text": "A Walk in the Snow",
    "local_header_href": "#a-walk-in-the-snow",
    "chunk_text": "<h4>A Walk in the Snow</h4><p>I went for a walk in snow and fog on a local hill and appreciated this wind-driven ice crystal covered baby tree that:</p><center>\n<img alt=\"Wind-driven ice crystal covered baby tree\" src=\"file:///j/photo/jeremy/2013/2013-01-15_belchen/32_crystal_covered_twigs_cropped.png\"/>\n</center><p>I thought I would like to share that with you.\nSorry that it is so dark, but that's the way it was.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "0884_progress_bar",
    "header_text": "Implementing a Revit Add-in Progress Bar",
    "local_header_href": "#implementing-a-revit-add-in-progress-bar",
    "chunk_text": "<h4>Implementing a Revit Add-in Progress Bar</h4><p>I chatted with Harry Mattison on various topics during the winter break.\nOne of them was the implementation of a Revit add-in progress bar:</p><p><strong>Question:</strong> I am trying to make a simple progress dialog based on your post on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/revit-window-handle-and-modeless-dialogues.html\">modeless dialogues</a>.\n\nIt seems to work well basically but has a few problems:\n\n<ol>\n<li>The first time I run the command, the progress dialog flashes briefly on the screen and then disappears.\n<li>The text label does not display properly.\n<li>Sometimes the entire progress dialogue content turns white and the title bar says 'Not Responding'.\n</li></li></li></ol>\n<p>Could you help me figure out if my approach is flawed or if it just needs some small adjustments?\n\n\n<p><strong>Answer:</strong> Thank you, but no thank you...  :-)\n\n<p>Instead, I propose that you look at my existing modeless progress bar implementation in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-adn-mep-sample-adnrme-for-revit-mep-2013.html\">\nADN Revit MEP sample add-in</a>,\n\nwhich has worked flawlessly for years now.\n\n\n<p><strong>Response:</strong> Your progress bar is great!\nI wish I had found it earlier.\n\n\n<a name=\"4\"></a>\n<h4>Aborting a Lengthy Process</h4>\n<p>Here's hopefully one last question about the progress bar:\n\n<p>How can the user cancel the operation from the progress bar?</p>\n<p><strong>Answer:</strong> You could implement some standard .NET stuff on the progress bar; maybe simply add a cancel button to it, and an event handler for that.\n\n<p><strong>Response:</strong> After spending some time thinking about events and the like, I realized the progress bar cancel solution is almost trivial.\n\n<p>An idle event wouldn't work in my case, because Revit was never going idle.\nIt was too busy doing hard work of exporting images for my <a href=\"http://boostyourbim.wordpress.com/products\">Image-O-Matic</a> application.\nInstead, all I needed to do is add the Abort button to the progress dialog, and put this little bit of code in the progress bar class:\n\n<pre class=\"code\">\n  <span class=\"blue\">private</span> <span class=\"blue\">void</span> btnAbort_Click(\n    <span class=\"blue\">object</span> sender,\n    <span class=\"teal\">EventArgs</span> e )\n  {\n    btnAbort.Text = <span class=\"maroon\">\"Aborting...\"</span>;\n    abortFlag = <span class=\"blue\">true</span>;\n  }\n \n  <span class=\"blue\">public</span> <span class=\"blue\">bool</span> getAbortFlag()\n  {\n    <span class=\"blue\">return</span> abortFlag;\n  }\n</pre>\n<p>Then, inside my foreach loops, I just need to check the status of the flag:\n\n<pre class=\"code\">\n  <span class=\"blue\">foreach</span>( <span class=\"blue\">string</span> phaseName <span class=\"blue\">in</span> phaseList )\n  {\n    <span class=\"blue\">if</span>( progressForm.getAbortFlag() )\n      <span class=\"blue\">break</span>;\n \n    <span class=\"green\">// . . .</span>\n  }\n</pre>\n<p>Many thanks to Harry for the fruitful discussion and helpful hint!</p>\n<a name=\"5\"></a>\n<h4>Image Generation Video Competition</h4>\n<p>Yet another item from Harry, this time a rather shameless plug, but I guess he earned it  :-)</p>\n<p>Harry announced a\n\n<a href=\"http://boostyourbim.wordpress.com/2013/01/16/win-a-free-custom-built-revit-api-app-for-using-image-o-matic\">\ncompetition</a> in\n\nwhich you can win a free, custom-built Revit API add-in according to your own specifications for downloading his\n\n<!--\n\nhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aenhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\nhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\n\n-->\n<a href=\"http://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\">\nImage-O-Matic</a> application,\n\ngenerating a video with it, and uploading that to YouTube.\n\n<p>Have fun, and good luck to you!\n</p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0884_progress_bar",
    "header_text": "Aborting a Lengthy Process",
    "local_header_href": "#aborting-a-lengthy-process",
    "chunk_text": "<h4>Aborting a Lengthy Process</h4><p>Here's hopefully one last question about the progress bar:\n\n<p>How can the user cancel the operation from the progress bar?</p>\n<p><strong>Answer:</strong> You could implement some standard .NET stuff on the progress bar; maybe simply add a cancel button to it, and an event handler for that.\n\n<p><strong>Response:</strong> After spending some time thinking about events and the like, I realized the progress bar cancel solution is almost trivial.\n\n<p>An idle event wouldn't work in my case, because Revit was never going idle.\nIt was too busy doing hard work of exporting images for my <a href=\"http://boostyourbim.wordpress.com/products\">Image-O-Matic</a> application.\nInstead, all I needed to do is add the Abort button to the progress dialog, and put this little bit of code in the progress bar class:\n\n<pre class=\"code\">\n  <span class=\"blue\">private</span> <span class=\"blue\">void</span> btnAbort_Click(\n    <span class=\"blue\">object</span> sender,\n    <span class=\"teal\">EventArgs</span> e )\n  {\n    btnAbort.Text = <span class=\"maroon\">\"Aborting...\"</span>;\n    abortFlag = <span class=\"blue\">true</span>;\n  }\n \n  <span class=\"blue\">public</span> <span class=\"blue\">bool</span> getAbortFlag()\n  {\n    <span class=\"blue\">return</span> abortFlag;\n  }\n</pre>\n<p>Then, inside my foreach loops, I just need to check the status of the flag:\n\n<pre class=\"code\">\n  <span class=\"blue\">foreach</span>( <span class=\"blue\">string</span> phaseName <span class=\"blue\">in</span> phaseList )\n  {\n    <span class=\"blue\">if</span>( progressForm.getAbortFlag() )\n      <span class=\"blue\">break</span>;\n \n    <span class=\"green\">// . . .</span>\n  }\n</pre>\n<p>Many thanks to Harry for the fruitful discussion and helpful hint!</p>\n<a name=\"5\"></a>\n<h4>Image Generation Video Competition</h4>\n<p>Yet another item from Harry, this time a rather shameless plug, but I guess he earned it  :-)</p>\n<p>Harry announced a\n\n<a href=\"http://boostyourbim.wordpress.com/2013/01/16/win-a-free-custom-built-revit-api-app-for-using-image-o-matic\">\ncompetition</a> in\n\nwhich you can win a free, custom-built Revit API add-in according to your own specifications for downloading his\n\n<!--\n\nhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aenhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\nhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\n\n-->\n<a href=\"http://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\">\nImage-O-Matic</a> application,\n\ngenerating a video with it, and uploading that to YouTube.\n\n<p>Have fun, and good luck to you!\n</p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0884_progress_bar",
    "header_text": "Image Generation Video Competition",
    "local_header_href": "#image-generation-video-competition",
    "chunk_text": "<h4>Image Generation Video Competition</h4><p>Yet another item from Harry, this time a rather shameless plug, but I guess he earned it  :-)</p><p>Harry announced a\n\n<a href=\"http://boostyourbim.wordpress.com/2013/01/16/win-a-free-custom-built-revit-api-app-for-using-image-o-matic\">\ncompetition</a> in\n\nwhich you can win a free, custom-built Revit API add-in according to your own specifications for downloading his\n\n<!--\n\nhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aenhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\nhttp://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\n\n-->\n<a href=\"http://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3aimage-o-matic%3aen\">\nImage-O-Matic</a> application,\n\ngenerating a video with it, and uploading that to YouTube.\n\n<p>Have fun, and good luck to you!\n</p></p>"
  }
]