[
  {
    "original_filename": "1571_void_inst_cut_floor",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<!--\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\nFindInserts finds void instances cutting floor #RevitAPI @AutodeskRevit #bim #dynamobim @AutodeskForge #ForgeDevCon http://bit.ly/FindInserts\n\nHere is another brilliant and super succinct solution provided by Fair59, answering the Revit API discussion forum thread on how to get cutting void instances in the floor using the <code>HostObject</code> <code>FindInserts</code> method &ndash; Question: I have a floor on which a family instance is inserted on the face of the floor (the instance host is also the floor). I checked in the family the \"Cut with Void When Loaded\" parameter, so that the void is created in the floor. Now, I want to retrieve all the instances that create voids in the floor...\n\n-->"
  },
  {
    "original_filename": "1571_void_inst_cut_floor",
    "header_text": "FindInserts Determines Void Instances Cutting Floor",
    "local_header_href": "#findinserts-determines-void-instances-cutting-floor",
    "chunk_text": "### FindInserts Determines Void Instances Cutting Floor\n\nIs it hot enough for you?\n\nIt sure is for this guy:\n\n<center>\n<img src=\"img/221_melted_candle_400.jpg\" alt=\"Melted candle\" width=\"400\">\n</center>\n\nTime for some rest and recuperation, meseems...\n\nBefore that, let me share another brilliant and super succinct solution provided by Fair59, answering\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread on how\nto [get cutting void instances in the floor](https://forums.autodesk.com/t5/revit-api-forum/get-cutting-void-instances-in-the-floor/m-p/7170237) using \nthe [`HostObject`](http://www.revitapidocs.com/2017/56a32e0b-df65-a6ba-40bd-8f50a1f31dcd.htm)\n[`FindInserts`](http://www.revitapidocs.com/2017/58990230-38cb-3af7-fd25-96ed3215a43d.htm) method:\n\n**Question:** I have a floor on which a family instance is inserted on the face of the floor (the instance host is also the floor).\n\nI checked in the family the \"Cut with Void When Loaded\" parameter, so that the void is created in the floor.\n\nNow, I want to retrieve all the instances that create voids in the floor.\n\nI did some research, and found the discussion\nof [Boolean operations and `InstanceVoidCutUtils`](http://thebuildingcoder.typepad.com/blog/2011/06/boolean-operations-and-instancevoidcututils.html).\n\nBut when I use the `InstanceVoidCutUtils` `GetCuttingVoidInstances` method, it returns an empty list.\n \nI also looked\nat the [`ElementIntersectsSolidFilter` problem and solution](http://thebuildingcoder.typepad.com/blog/2015/07/intersect-solid-filter-avf-and-directshape-for-debugging.html#2) and\ntried `ElementIntersectsElementFilter` and `ElementIntersectsSolidFilter`.\n\nThose filters do not return the expected result for me to deduce the voids in the floor either; in fact, they say that no elements intersect.\n \nFirst case &ndash; area = 607.558m2 and Volume = 243.023m3:\n \n<center>\n<img src=\"img/void_inst_cut_floor_1.png\" alt=\"Void instances cutting floor\" width=\"1386\">\n</center>\n\nSecond case &ndash; area = 607.558m2 and Volume = 243.023m3:\n\n<center>\n<img src=\"img/void_inst_cut_floor_2.png\" alt=\"Void instances cutting floor\" width=\"1379\">\n</center>\n\n`Family` parameter \"Cut with Voids When Loaded\":\n \n<center>\n<img src=\"img/void_inst_cut_floor_3.png\" alt=\"Void instances cutting floor\" width=\"1285\">\n</center>\n\n`FamilyInstance` cutting host:\n\n<center>\n<img src=\"img/void_inst_cut_floor_4.png\" alt=\"Void instances cutting floor\" width=\"1293\">\n</center>\n\nHere is the code I use:\n\n<pre class=\"code\">\n  <span style=\"color:#2b91af;\">Solid</span>&nbsp;solid&nbsp;=&nbsp;floor.get_Geometry(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Options</span>()&nbsp;)\n  &nbsp;&nbsp;.OfType&lt;<span style=\"color:#2b91af;\">Solid</span>&gt;()\n  &nbsp;&nbsp;.Where&lt;<span style=\"color:#2b91af;\">Solid</span>&gt;(&nbsp;s&nbsp;=&gt;&nbsp;(<span style=\"color:blue;\">null</span>&nbsp;!=&nbsp;s)&nbsp;&amp;&amp;&nbsp;(!s.Edges.IsEmpty)&nbsp;)\n  &nbsp;&nbsp;.FirstOrDefault();\n   \n  <span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;intersectingInstances&nbsp;\n  &nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsSolidFilter</span>(&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid&nbsp;)&nbsp;);\n   \n  <span style=\"color:blue;\">int</span>&nbsp;n1&nbsp;=&nbsp;intersectingInstances.Count&lt;<span style=\"color:#2b91af;\">Element</span>&gt;();\n   \n  intersectingInstances&nbsp;\n  &nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsElementFilter</span>(&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floor&nbsp;)&nbsp;);\n   \n  <span style=\"color:blue;\">int</span>&nbsp;n&nbsp;=&nbsp;intersectingInstances.Count&lt;<span style=\"color:#2b91af;\">Element</span>&gt;();\n</pre>\n\nHere, both `n` and `n1` are equal to 0.\n \n**Answer:** Try using \nthe [`HostObject`](http://www.revitapidocs.com/2017/56a32e0b-df65-a6ba-40bd-8f50a1f31dcd.htm)\n[`FindInserts`](http://www.revitapidocs.com/2017/58990230-38cb-3af7-fd25-96ed3215a43d.htm) method instead:\n\n<pre class=\"code\">\n  <span style=\"color:#2b91af;\">HostObject</span>&nbsp;floor;\n  <span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:#2b91af;\">ElementId</span>&gt;&nbsp;intersectingInstanceIds&nbsp;\n  &nbsp;&nbsp;=&nbsp;floor.FindInserts(&nbsp;<span style=\"color:blue;\">false</span>,&nbsp;<span style=\"color:blue;\">false</span>,&nbsp;<span style=\"color:blue;\">false</span>,&nbsp;<span style=\"color:blue;\">true</span>&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.ToList();\n</pre>\n\n**Response:** I have done some tests and here are my results:\n\n<center>\n<img src=\"img/void_inst_cut_floor_6.png\" alt=\"Void instances cutting floor\" width=\"1405\">\n</center>\n\nSituation:\n\n- `Fl_1` is hosted by Level 3 and intersects the floor.\n- `Fl_2` is hosted by the floor and intersects it.\n\nResults:\n\n1. Do not cut geometry:\n    - `InstanceVoidCutUtils.GetCuttingVoidInstances(floor)` returns `void`\n    - `floor.FindInserts(false,false,false,true)` returns `Fl_2`\n2. Cut geometry:\n    - `InstanceVoidCutUtils.GetCuttingVoidInstances(floor)` returns `Fl_1`\n    - `floor.FindInserts(false,false,false,true)` returns both `Fl_1` and `Fl_2`\n\nIn summary, `FindInserts` returns `FI_1` even if its host (Level 3) is not the floor.\n\nIt's good.\n\nI think we can say that the problem is solved.\n \nThank you FAIR59 ;)"
  }
]