[
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n</head>"
  },
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Creating a Sloped Floor",
    "local_header_href": "#creating-a-sloped-floor",
    "chunk_text": "<h3>Creating a Sloped Floor</h3><p>Today, let's look at an interesting and overdue topic raised by the query on\n\n<a href=\"http://forums.autodesk.com/t5/Revit-API/Can-t-create-sloped-floors/m-p/4895322\">\ncreating a sloped floor</a> in\n\nthe Revit API discussion forum, addressed with help from Jaap van der Weide and Joe Ye.</p><a name=\"0\"></a>"
  },
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Revit 2015 is Coming Soon",
    "local_header_href": "#revit-2015-is-coming-soon",
    "chunk_text": "<h4>Revit 2015 is Coming Soon</h4><p>The\n\n<a href=\"http://inthefold.autodesk.com/in_the_fold/2014/03/autodesk-unveils-2015-suites-for-building-and-civil-infrastructure-industries.html\">\nAutodesk 2015 software portfolio</a> for\n\nthe building and civil infrastructure industries has now been officially announced.</p><p>Here is a direct link to the\n\n<a href=\"http://inthefold.autodesk.com/files/building-design-suite-2015-backgrounder.pdf\">\nAutodesk Building Design Suite 2015 backgrounder</a> providing\n\na full rundown of the Autodesk Building Design Suite 2015 enhancements.<p>\n<p>I am really looking forward to all the exciting good new stuff coming along, especially in the Revit API!</p>\n<a name=\"1\"></a>\n<h4>Creating a Sloped Floor</h4>\n<p><strong>Question:</strong> Is it possible to programmatically create a sloped floor?</p>\n<p><strong>Answer:</strong> The answer grew and grew...\nHere is an overview:</p>\n<ul>\n<li><a href=\"#2\">Creating a sloped floor through the user interface</a></li>\n<li><a href=\"#3\">Modifying floor slope programmatically – or not</a></li>\n<li><a href=\"#4\">Creating a sloped floor programmatically: NewFloor</a></li>\n<li><a href=\"#5\">Creating a sloped floor programmatically: NewSlab</a></li>\n<li><a href=\"#6\">Download</a></li>\n</ul>\n<a name=\"2\"></a>\n<h4>Creating a Sloped Floor through the User Interface</h4>\n<p>As always, before diving into the Revit API possibilities, it is worthwhile looking at the functionality provided by the user interface.</p>\n<p>A sloped floor can be created in three different ways in the UI:</p>\n<ol>\n<li>Slab shape editor</li>\n<li>Slope arrow</li>\n<li>Slope defining boundary edges</li>\n</ol>\n<p>You are presumably asking about creating a floor with a uniform slope.</p>\n<p>You can achieve that by editing the sketch of the floor and making one of the lines 'slope defining'.</p>\n<p>This generates a floor with a single slope and with the correct thickness.</p>\n<p>Another way, providing more control over the direction of the slope, is to sketch a 'slope arrow'.</p>\n<p>Yet another method is the 'shape edit' command that allows you to create facets in the floor, each with their own slope.</p>\n<p>Note that these three methods are mutually exclusive.</p>\n<p>Here are snapshots of each of these three pieces of functionality:</p>\n<p>1. Shape editor tool:</p>\n<center>\n<img alt=\"Make a boundary slope defining\" src=\"img/sloped_floor_shape_edit.png\" width=\"400\"/>\n</center>\n<p>2. Using a slope arrow:</p>\n<center>\n<img alt=\"Use a slope arrow\" src=\"img/sloped_floor_slope_arrow.png\" width=\"400\"/>\n</center>\n<p>3. Making a boundary edge slope defining:</p>\n<center>\n<img alt=\"Shape edit tool\" src=\"img/sloped_floor_slope_defining_edge.png\" width=\"450\"/>\n</center>\n<p>Looking at the code provided in the\n\n<a href=\"http://forums.autodesk.com/t5/Revit-API/Can-t-create-sloped-floors/m-p/4895322\">\noriginal query</a>,\n\nI suspect that one problem is that the lines are not in a horizontal plane.</p>\n<p>No matter how you slope the floor, the fundamental sketch of its boundary is always based on a level, and hence horizontal.</p>\n<a name=\"3\"></a>\n<h4>Modifying Floor Slope Programmatically – or Not</h4>\n<p>The shape edit functionality is programmatically accessible through the SlabShapeEditor class.\nAn instance of that class is provided by the property with the same name on the Floor and RoofBase classes.\nThe SDK sample SlabShapeEditing shows an example of using it.</p>\n<p>Unfortunately, the other slope editing methods seem not to be accessible to programmatically modify the slope of an existing floor, because the built-in parameter CURVE_IS_SLOPE_DEFINING is read-only.</p>\n<p>Slope defining edges can be used successfully to define the shape of a footprint roof, via the FootPrintRoof.SlopeAngle property.\nIt takes an edge and an angle as arguments, and sets a slope for the specified edge.</p>\n<p>We set a 'slope defining' property on the roof of the simple little house created by the command Lab2_0_CreateLittleHouse of the ADN Revit API training material\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/10/revit-2013-api-developer-guide-pdf.html#3\">\nXtra labs</a>,\n\nmentioned occasionally in the past:</p>\n<ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/04/manual-regeneration-mode-danger.html\">Manual regeneration option danger</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/08/slope-is-slope-not-radians.html\">Slope is slope, not radians</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/08/validate-roof-type-and-view-obj-on-android.html#3\">Validate roof type</a></li>\n</ul>\n<p>Here is an external command testing this for a floor slab.\nIt attempts to change the floor slope using the built-in parameters CURVE_IS_SLOPE_DEFINING and ROOF_SLOPE.\nNo cigar, I'm afraid:</p>\n<pre class=\"code\">\n  <span class=\"teal\">UIApplication</span> uiapp = revit.Application;\n  <span class=\"teal\">UIDocument</span> uidoc = uiapp.ActiveUIDocument;\n  <span class=\"teal\">Document</span> doc = uidoc.Document;\n  <span class=\"teal\">Selection</span> sel = uidoc.Selection;\n \n  <span class=\"teal\">Reference</span> ref1 = sel.PickObject(\n    <span class=\"teal\">ObjectType</span>.Element, <span class=\"maroon\">\"Please pick a floor.\"</span> );\n \n  <span class=\"teal\">Floor</span> f = doc.GetElement( ref1 ) <span class=\"blue\">as</span> <span class=\"teal\">Floor</span>;\n \n  <span class=\"blue\">if</span>( f == <span class=\"blue\">null</span> )\n    <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Failed;\n \n  <span class=\"green\">// Retrieve floor edge model line elements.</span>\n \n  <span class=\"teal\">ICollection</span>&lt;<span class=\"teal\">ElementId</span>&gt; deleted_ids;\n \n  <span class=\"blue\">using</span>( <span class=\"teal\">Transaction</span> tx = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc ) )\n  {\n    tx.Start( <span class=\"maroon\">\"Temporarily Delete Floor\"</span> );\n \n    deleted_ids = doc.Delete( f.Id );\n \n    tx.RollBack();\n  }\n \n  <span class=\"green\">// Grab the first floor edge model line.</span>\n \n  <span class=\"teal\">ModelLine</span> ml = <span class=\"blue\">null</span>;\n \n  <span class=\"blue\">foreach</span>( <span class=\"teal\">ElementId</span> id <span class=\"blue\">in</span> deleted_ids )\n  {\n    ml = doc.GetElement( id ) <span class=\"blue\">as</span> <span class=\"teal\">ModelLine</span>;\n \n    <span class=\"blue\">if</span>( <span class=\"blue\">null</span> != ml )\n    {\n      <span class=\"blue\">break</span>;\n    }\n  }\n \n  <span class=\"blue\">if</span>( <span class=\"blue\">null</span> != ml )\n  {\n    <span class=\"blue\">using</span>( <span class=\"teal\">Transaction</span> tx = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc ) )\n    {\n      tx.Start( <span class=\"maroon\">\"Change Slope Angle\"</span> );\n \n      <span class=\"green\">// This parameter is read only. Therefore,</span>\n      <span class=\"green\">// the change does not work and we cannot </span>\n      <span class=\"green\">// change the floor slope angle after the </span>\n      <span class=\"green\">// floor is created.</span>\n \n      ml.get_Parameter(\n        <span class=\"teal\">BuiltInParameter</span>.CURVE_IS_SLOPE_DEFINING )\n          .Set( 1 );\n \n      ml.get_Parameter(\n        <span class=\"teal\">BuiltInParameter</span>.ROOF_SLOPE )\n          .Set( 1.2 );\n \n      tx.Commit();\n    }\n  }\n  <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Succeeded;\n</pre>\n<a name=\"4\"></a>\n<h4>Creating a Sloped Floor Programmatically: NewFloor</h4>\n<p>Looking at the API slab creation functionality, we have two methods at our disposal, NewFloor and\n\n<a href=\"#5\">NewSlab</a>.</p>\n<p>The NewFloor methods provides three overloads taking the following lists of arguments:</p>\n<ul>\n<li>CurveArray, Boolean: Creates a floor within the project with the given horizontal profile using the default floor style.</li>\n<li>CurveArray, FloorType, Level, Boolean: Creates a floor within the project with the given horizontal profile and floor style on the specified level.</li>\n<li>CurveArray, FloorType, Level, Boolean, XYZ: Creates a floor within the project with the given horizontal profile and floor style on the specified level with the specified normal vector.</li>\n</ul>\n<p>The third overload includes a normal vector.\nOptimistically, one might hope that it would enable the creation of a sloped floor.\nUnfortunately, that is not the case.\nIt is not used to specify a slope vector, but to define the which side of the floor is considered upper and lower.\nIt can only take one of the two values (0,0,1) or (0,0,-1).</p>\n<p>A sample using the NewFloor method to create a normal horizontal floor is provided in the discussion forum thread on\n\n<a href=\"http://forums.autodesk.com/t5/Revit-API/Can-t-create-face/m-p/4416823#M4593\">\ncan't create face</a>.</p>\n<a name=\"5\"></a>\n<h4>Creating a Sloped Floor Programmatically: NewSlab</h4>\n<p>The NewSlab method provides only one overload taking the following arguments:</p>\n<ul>\n<li>CurveArray profile</li>\n<li>Level level</li>\n<li>Line slopedArrow</li>\n<li>double slope</li>\n<li>bool isStructural</li>\n</ul>\n<p>A uniformly sloped slab can be created programmatically by setting the slope argument to the NewSlab method, as mentioned in the discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/creating-a-nonrectangular-slab.html\">\ncreating a non-rectangular slab</a>.</p>\n<p>Here is the entire code of an external command Execute method showing an example of creating a sloped floor using the NewSlab method:</p>\n<pre class=\"code\">\n  <span class=\"teal\">UIApplication</span> uiapp = revit.Application;\n  <span class=\"teal\">UIDocument</span> uidoc = uiapp.ActiveUIDocument;\n  <span class=\"teal\">Document</span> doc = uidoc.Document;\n \n  <span class=\"blue\">using</span>( <span class=\"teal\">Transaction</span> tx = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc ) )\n  {\n    tx.Start( <span class=\"maroon\">\"Create Sloped Slab\"</span> );\n \n    <span class=\"blue\">double</span> width = 19.685039400;\n    <span class=\"blue\">double</span> length = 59.055118200;\n    <span class=\"blue\">double</span> height = 9.84251968503937;\n \n    <span class=\"teal\">XYZ</span>[] pts = <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>[] {\n      <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>( 0.0, 0.0, height ),\n      <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>( width, 0.0, height ),\n      <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>( width, length, height ),\n      <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>( 0, length, height )\n    };\n \n    <span class=\"teal\">CurveArray</span> profile\n      = uiapp.Application.Create.NewCurveArray();\n \n    <span class=\"teal\">Line</span> line = <span class=\"blue\">null</span>;\n \n    <span class=\"blue\">int</span> n = pts.GetLength( 0 );\n \n    <span class=\"teal\">XYZ</span> q = pts[n - 1];\n \n    <span class=\"blue\">foreach</span>( <span class=\"teal\">XYZ</span> p <span class=\"blue\">in</span> pts )\n    {\n      line = <span class=\"teal\">Line</span>.CreateBound( q, p );\n      profile.Append( line );\n      q = p;\n    }\n \n    <span class=\"teal\">Level</span> level\n      = <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc )\n        .OfClass( <span class=\"blue\">typeof</span>( <span class=\"teal\">Level</span> ) )\n        .Where&lt;<span class=\"teal\">Element</span>&gt;(\n          e =&gt; e.Name.Equals( <span class=\"maroon\">\"CreateSlopedSlab\"</span> ) )\n          .FirstOrDefault&lt;<span class=\"teal\">Element</span>&gt;() <span class=\"blue\">as</span> <span class=\"teal\">Level</span>;\n \n    <span class=\"blue\">if</span>( <span class=\"blue\">null</span> == level )\n    {\n      level = doc.Create.NewLevel( height );\n      level.Name = <span class=\"maroon\">\"Sloped Slab\"</span>;\n    }\n \n    <span class=\"teal\">Floor</span> floor = doc.Create.NewSlab(\n      profile, level, line, 0.5, <span class=\"blue\">true</span> );\n \n    tx.Commit();\n  }\n  <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Succeeded;\n</pre>\n<p>This command creates the following slab with a slope of 0.5.\nNote that in this context,\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/08/slope-is-slope-not-radians.html\">\nslope really does mean slope</a>,\n\nnot angle.</p>\n<p>The generated slab is located on its own new level named \"Sloped Slab\".\nNote the nice and succinct filtered element collector query used to check whether it already exists, aided and abetted by a LINQ Where clause.\nIf not found, it is created.</p>\n<p>Due to the arrangement of the levels, after executing the command in a new empty default architectural model, the slab is not visible on Level 1.\nIt is partially visible and partially cut off in Level 2:</p>\n<center>\n<img alt=\"Sloped floor cut off on Level 2\" src=\"img/create_sloped_floor_level_2.png\" width=\"203\"/>\n</center>\n<p>It is displayed completely in the Site view:</p>\n<center>\n<img alt=\"Sloped floor site view\" src=\"img/create_sloped_floor_site.png\" width=\"231\"/>\n</center>\n<p>The elevation view shows the different levels and the slab slope of 0.5:</p>\n<center>\n<img alt=\"Sloped floor slope in elevation view\" src=\"img/create_sloped_floor_elev.png\" width=\"374\"/>\n</center>\n<p>As you see, just like the man said: the floor definition profile is horizontal, and the slope is applied to that afterwards.</p>\n<a name=\"6\"></a>\n<h4>Download</h4>\n<p>In the end, I implemented a new external command CmdCreateSlopedSlab in The Building Coder samples to host this sample code.</p>\n<p>You can grab it from\n\n<a href=\"https://github.com/jeremytammik/the_building_coder_samples\">\nThe Building Coder samples GitHub repository</a>.\n\n<p>The version discussed above is\n\n<a href=\"https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2014.0.108.0\">\nrelease 2014.0.108.0</a>.</p>\n<a name=\"7\"></a>\n<h4>Good Answers</h4>\n<p>Before wrapping up for the week, let me share this neat joke I just received from my brother Marcus, about a student who obtained 0% on an exam:</p>\n<p>Why not 100%?</p>\n<p>Q1. In which battle did Napoleon die?\n<br/>– A. In his last battle.</p>\n<p>Q2. Where was the Declaration of Independence signed?\n<br/>– A. At the bottom of the  page.</p>\n<p>Q3. River Ravi flows in which state?\n<br/>– A. Liquid.</p>\n<p>Q4. What is the main reason for divorce?\n<br/>– A. Marriage.</p>\n<p>Q5. What is the main reason for failure?\n<br/>– A. Exams.</p>\n<p>Q6. What can you never eat for breakfast?\n<br/>– A. Lunch &amp; dinner.</p>\n<p>Q7. What looks like half an apple?\n<br/>– A. The other half.</p>\n<p>Q8. If you throw a red stone into the blue sea what it will become?\n<br/>– A. It will become wet.</p>\n<p>Q9. How can a man go eight days without sleeping ?\n<br/>– A. He can sleep at night.</p>\n<p>Q10. How can you lift an elephant with one hand?\n<br/>– A. You will never find an elephant that has only one hand...</p>\n<p>Q11. If you had three apples and four oranges in one hand and four apples and three oranges in the other, what would you have?\n<br/>– A. Very large hands.</p>\n<p>Q12. If it took eight men ten hours to build a  wall, how long would it take four men to build it?\n<br/>– A. No time at all, the wall is already  built.</p>\n<p>Q13. How can you drop a raw egg onto a concrete floor without cracking it?\n<br/>– A. Any way you like, because concrete floors are very hard to crack.</p>\n</p></p></p>"
  },
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Creating a Sloped Floor",
    "local_header_href": "#creating-a-sloped-floor",
    "chunk_text": "<h4>Creating a Sloped Floor</h4><p><strong>Question:</strong> Is it possible to programmatically create a sloped floor?</p><p><strong>Answer:</strong> The answer grew and grew...\nHere is an overview:</p><ul>\n<li><a href=\"#2\">Creating a sloped floor through the user interface</a></li>\n<li><a href=\"#3\">Modifying floor slope programmatically – or not</a></li>\n<li><a href=\"#4\">Creating a sloped floor programmatically: NewFloor</a></li>\n<li><a href=\"#5\">Creating a sloped floor programmatically: NewSlab</a></li>\n<li><a href=\"#6\">Download</a></li>\n</ul><a name=\"2\"></a>"
  },
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Creating a Sloped Floor through the User Interface",
    "local_header_href": "#creating-a-sloped-floor-through-the-user-interface",
    "chunk_text": "<h4>Creating a Sloped Floor through the User Interface</h4><p>As always, before diving into the Revit API possibilities, it is worthwhile looking at the functionality provided by the user interface.</p><p>A sloped floor can be created in three different ways in the UI:</p><ol>\n<li>Slab shape editor</li>\n<li>Slope arrow</li>\n<li>Slope defining boundary edges</li>\n</ol><p>You are presumably asking about creating a floor with a uniform slope.</p><p>You can achieve that by editing the sketch of the floor and making one of the lines 'slope defining'.</p><p>This generates a floor with a single slope and with the correct thickness.</p><p>Another way, providing more control over the direction of the slope, is to sketch a 'slope arrow'.</p><p>Yet another method is the 'shape edit' command that allows you to create facets in the floor, each with their own slope.</p><p>Note that these three methods are mutually exclusive.</p><p>Here are snapshots of each of these three pieces of functionality:</p><p>1. Shape editor tool:</p><center>\n<img alt=\"Make a boundary slope defining\" src=\"img/sloped_floor_shape_edit.png\" width=\"400\"/>\n</center><p>2. Using a slope arrow:</p><center>\n<img alt=\"Use a slope arrow\" src=\"img/sloped_floor_slope_arrow.png\" width=\"400\"/>\n</center><p>3. Making a boundary edge slope defining:</p><center>\n<img alt=\"Shape edit tool\" src=\"img/sloped_floor_slope_defining_edge.png\" width=\"450\"/>\n</center><p>Looking at the code provided in the\n\n<a href=\"http://forums.autodesk.com/t5/Revit-API/Can-t-create-sloped-floors/m-p/4895322\">\noriginal query</a>,\n\nI suspect that one problem is that the lines are not in a horizontal plane.</p><p>No matter how you slope the floor, the fundamental sketch of its boundary is always based on a level, and hence horizontal.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Modifying Floor Slope Programmatically – or Not",
    "local_header_href": "#modifying-floor-slope-programmatically-or-not",
    "chunk_text": "<h4>Modifying Floor Slope Programmatically – or Not</h4><p>The shape edit functionality is programmatically accessible through the SlabShapeEditor class.\nAn instance of that class is provided by the property with the same name on the Floor and RoofBase classes.\nThe SDK sample SlabShapeEditing shows an example of using it.</p><p>Unfortunately, the other slope editing methods seem not to be accessible to programmatically modify the slope of an existing floor, because the built-in parameter CURVE_IS_SLOPE_DEFINING is read-only.</p><p>Slope defining edges can be used successfully to define the shape of a footprint roof, via the FootPrintRoof.SlopeAngle property.\nIt takes an edge and an angle as arguments, and sets a slope for the specified edge.</p><p>We set a 'slope defining' property on the roof of the simple little house created by the command Lab2_0_CreateLittleHouse of the ADN Revit API training material\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/10/revit-2013-api-developer-guide-pdf.html#3\">\nXtra labs</a>,\n\nmentioned occasionally in the past:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/04/manual-regeneration-mode-danger.html\">Manual regeneration option danger</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/08/slope-is-slope-not-radians.html\">Slope is slope, not radians</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/08/validate-roof-type-and-view-obj-on-android.html#3\">Validate roof type</a></li>\n</ul><p>Here is an external command testing this for a floor slab.\nIt attempts to change the floor slope using the built-in parameters CURVE_IS_SLOPE_DEFINING and ROOF_SLOPE.\nNo cigar, I'm afraid:</p><pre class=\"code\">\n  <span class=\"teal\">UIApplication</span> uiapp = revit.Application;\n  <span class=\"teal\">UIDocument</span> uidoc = uiapp.ActiveUIDocument;\n  <span class=\"teal\">Document</span> doc = uidoc.Document;\n  <span class=\"teal\">Selection</span> sel = uidoc.Selection;\n \n  <span class=\"teal\">Reference</span> ref1 = sel.PickObject(\n    <span class=\"teal\">ObjectType</span>.Element, <span class=\"maroon\">\"Please pick a floor.\"</span> );\n \n  <span class=\"teal\">Floor</span> f = doc.GetElement( ref1 ) <span class=\"blue\">as</span> <span class=\"teal\">Floor</span>;\n \n  <span class=\"blue\">if</span>( f == <span class=\"blue\">null</span> )\n    <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Failed;\n \n  <span class=\"green\">// Retrieve floor edge model line elements.</span>\n \n  <span class=\"teal\">ICollection</span>&lt;<span class=\"teal\">ElementId</span>&gt; deleted_ids;\n \n  <span class=\"blue\">using</span>( <span class=\"teal\">Transaction</span> tx = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc ) )\n  {\n    tx.Start( <span class=\"maroon\">\"Temporarily Delete Floor\"</span> );\n \n    deleted_ids = doc.Delete( f.Id );\n \n    tx.RollBack();\n  }\n \n  <span class=\"green\">// Grab the first floor edge model line.</span>\n \n  <span class=\"teal\">ModelLine</span> ml = <span class=\"blue\">null</span>;\n \n  <span class=\"blue\">foreach</span>( <span class=\"teal\">ElementId</span> id <span class=\"blue\">in</span> deleted_ids )\n  {\n    ml = doc.GetElement( id ) <span class=\"blue\">as</span> <span class=\"teal\">ModelLine</span>;\n \n    <span class=\"blue\">if</span>( <span class=\"blue\">null</span> != ml )\n    {\n      <span class=\"blue\">break</span>;\n    }\n  }\n \n  <span class=\"blue\">if</span>( <span class=\"blue\">null</span> != ml )\n  {\n    <span class=\"blue\">using</span>( <span class=\"teal\">Transaction</span> tx = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc ) )\n    {\n      tx.Start( <span class=\"maroon\">\"Change Slope Angle\"</span> );\n \n      <span class=\"green\">// This parameter is read only. Therefore,</span>\n      <span class=\"green\">// the change does not work and we cannot </span>\n      <span class=\"green\">// change the floor slope angle after the </span>\n      <span class=\"green\">// floor is created.</span>\n \n      ml.get_Parameter(\n        <span class=\"teal\">BuiltInParameter</span>.CURVE_IS_SLOPE_DEFINING )\n          .Set( 1 );\n \n      ml.get_Parameter(\n        <span class=\"teal\">BuiltInParameter</span>.ROOF_SLOPE )\n          .Set( 1.2 );\n \n      tx.Commit();\n    }\n  }\n  <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Succeeded;\n</pre><a name=\"4\"></a>"
  },
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Creating a Sloped Floor Programmatically: NewFloor",
    "local_header_href": "#creating-a-sloped-floor-programmatically-newfloor",
    "chunk_text": "<h4>Creating a Sloped Floor Programmatically: NewFloor</h4><p>Looking at the API slab creation functionality, we have two methods at our disposal, NewFloor and\n\n<a href=\"#5\">NewSlab</a>.</p><p>The NewFloor methods provides three overloads taking the following lists of arguments:</p><ul>\n<li>CurveArray, Boolean: Creates a floor within the project with the given horizontal profile using the default floor style.</li>\n<li>CurveArray, FloorType, Level, Boolean: Creates a floor within the project with the given horizontal profile and floor style on the specified level.</li>\n<li>CurveArray, FloorType, Level, Boolean, XYZ: Creates a floor within the project with the given horizontal profile and floor style on the specified level with the specified normal vector.</li>\n</ul><p>The third overload includes a normal vector.\nOptimistically, one might hope that it would enable the creation of a sloped floor.\nUnfortunately, that is not the case.\nIt is not used to specify a slope vector, but to define the which side of the floor is considered upper and lower.\nIt can only take one of the two values (0,0,1) or (0,0,-1).</p><p>A sample using the NewFloor method to create a normal horizontal floor is provided in the discussion forum thread on\n\n<a href=\"http://forums.autodesk.com/t5/Revit-API/Can-t-create-face/m-p/4416823#M4593\">\ncan't create face</a>.</p><a name=\"5\"></a>"
  },
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Creating a Sloped Floor Programmatically: NewSlab",
    "local_header_href": "#creating-a-sloped-floor-programmatically-newslab",
    "chunk_text": "<h4>Creating a Sloped Floor Programmatically: NewSlab</h4><p>The NewSlab method provides only one overload taking the following arguments:</p><ul>\n<li>CurveArray profile</li>\n<li>Level level</li>\n<li>Line slopedArrow</li>\n<li>double slope</li>\n<li>bool isStructural</li>\n</ul><p>A uniformly sloped slab can be created programmatically by setting the slope argument to the NewSlab method, as mentioned in the discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/creating-a-nonrectangular-slab.html\">\ncreating a non-rectangular slab</a>.</p><p>Here is the entire code of an external command Execute method showing an example of creating a sloped floor using the NewSlab method:</p><pre class=\"code\">\n  <span class=\"teal\">UIApplication</span> uiapp = revit.Application;\n  <span class=\"teal\">UIDocument</span> uidoc = uiapp.ActiveUIDocument;\n  <span class=\"teal\">Document</span> doc = uidoc.Document;\n \n  <span class=\"blue\">using</span>( <span class=\"teal\">Transaction</span> tx = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc ) )\n  {\n    tx.Start( <span class=\"maroon\">\"Create Sloped Slab\"</span> );\n \n    <span class=\"blue\">double</span> width = 19.685039400;\n    <span class=\"blue\">double</span> length = 59.055118200;\n    <span class=\"blue\">double</span> height = 9.84251968503937;\n \n    <span class=\"teal\">XYZ</span>[] pts = <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>[] {\n      <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>( 0.0, 0.0, height ),\n      <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>( width, 0.0, height ),\n      <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>( width, length, height ),\n      <span class=\"blue\">new</span> <span class=\"teal\">XYZ</span>( 0, length, height )\n    };\n \n    <span class=\"teal\">CurveArray</span> profile\n      = uiapp.Application.Create.NewCurveArray();\n \n    <span class=\"teal\">Line</span> line = <span class=\"blue\">null</span>;\n \n    <span class=\"blue\">int</span> n = pts.GetLength( 0 );\n \n    <span class=\"teal\">XYZ</span> q = pts[n - 1];\n \n    <span class=\"blue\">foreach</span>( <span class=\"teal\">XYZ</span> p <span class=\"blue\">in</span> pts )\n    {\n      line = <span class=\"teal\">Line</span>.CreateBound( q, p );\n      profile.Append( line );\n      q = p;\n    }\n \n    <span class=\"teal\">Level</span> level\n      = <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc )\n        .OfClass( <span class=\"blue\">typeof</span>( <span class=\"teal\">Level</span> ) )\n        .Where&lt;<span class=\"teal\">Element</span>&gt;(\n          e =&gt; e.Name.Equals( <span class=\"maroon\">\"CreateSlopedSlab\"</span> ) )\n          .FirstOrDefault&lt;<span class=\"teal\">Element</span>&gt;() <span class=\"blue\">as</span> <span class=\"teal\">Level</span>;\n \n    <span class=\"blue\">if</span>( <span class=\"blue\">null</span> == level )\n    {\n      level = doc.Create.NewLevel( height );\n      level.Name = <span class=\"maroon\">\"Sloped Slab\"</span>;\n    }\n \n    <span class=\"teal\">Floor</span> floor = doc.Create.NewSlab(\n      profile, level, line, 0.5, <span class=\"blue\">true</span> );\n \n    tx.Commit();\n  }\n  <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Succeeded;\n</pre><p>This command creates the following slab with a slope of 0.5.\nNote that in this context,\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/08/slope-is-slope-not-radians.html\">\nslope really does mean slope</a>,\n\nnot angle.</p><p>The generated slab is located on its own new level named \"Sloped Slab\".\nNote the nice and succinct filtered element collector query used to check whether it already exists, aided and abetted by a LINQ Where clause.\nIf not found, it is created.</p><p>Due to the arrangement of the levels, after executing the command in a new empty default architectural model, the slab is not visible on Level 1.\nIt is partially visible and partially cut off in Level 2:</p><center>\n<img alt=\"Sloped floor cut off on Level 2\" src=\"img/create_sloped_floor_level_2.png\" width=\"203\"/>\n</center><p>It is displayed completely in the Site view:</p><center>\n<img alt=\"Sloped floor site view\" src=\"img/create_sloped_floor_site.png\" width=\"231\"/>\n</center><p>The elevation view shows the different levels and the slab slope of 0.5:</p><center>\n<img alt=\"Sloped floor slope in elevation view\" src=\"img/create_sloped_floor_elev.png\" width=\"374\"/>\n</center><p>As you see, just like the man said: the floor definition profile is horizontal, and the slope is applied to that afterwards.</p><a name=\"6\"></a>"
  },
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Download",
    "local_header_href": "#download",
    "chunk_text": "<h4>Download</h4><p>In the end, I implemented a new external command CmdCreateSlopedSlab in The Building Coder samples to host this sample code.</p><p>You can grab it from\n\n<a href=\"https://github.com/jeremytammik/the_building_coder_samples\">\nThe Building Coder samples GitHub repository</a>.\n\n<p>The version discussed above is\n\n<a href=\"https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2014.0.108.0\">\nrelease 2014.0.108.0</a>.</p>\n<a name=\"7\"></a>\n<h4>Good Answers</h4>\n<p>Before wrapping up for the week, let me share this neat joke I just received from my brother Marcus, about a student who obtained 0% on an exam:</p>\n<p>Why not 100%?</p>\n<p>Q1. In which battle did Napoleon die?\n<br/>– A. In his last battle.</p>\n<p>Q2. Where was the Declaration of Independence signed?\n<br/>– A. At the bottom of the  page.</p>\n<p>Q3. River Ravi flows in which state?\n<br/>– A. Liquid.</p>\n<p>Q4. What is the main reason for divorce?\n<br/>– A. Marriage.</p>\n<p>Q5. What is the main reason for failure?\n<br/>– A. Exams.</p>\n<p>Q6. What can you never eat for breakfast?\n<br/>– A. Lunch &amp; dinner.</p>\n<p>Q7. What looks like half an apple?\n<br/>– A. The other half.</p>\n<p>Q8. If you throw a red stone into the blue sea what it will become?\n<br/>– A. It will become wet.</p>\n<p>Q9. How can a man go eight days without sleeping ?\n<br/>– A. He can sleep at night.</p>\n<p>Q10. How can you lift an elephant with one hand?\n<br/>– A. You will never find an elephant that has only one hand...</p>\n<p>Q11. If you had three apples and four oranges in one hand and four apples and three oranges in the other, what would you have?\n<br/>– A. Very large hands.</p>\n<p>Q12. If it took eight men ten hours to build a  wall, how long would it take four men to build it?\n<br/>– A. No time at all, the wall is already  built.</p>\n<p>Q13. How can you drop a raw egg onto a concrete floor without cracking it?\n<br/>– A. Any way you like, because concrete floors are very hard to crack.</p>\n</p>"
  },
  {
    "original_filename": "1121_create_sloped_floor",
    "header_text": "Good Answers",
    "local_header_href": "#good-answers",
    "chunk_text": "<h4>Good Answers</h4><p>Before wrapping up for the week, let me share this neat joke I just received from my brother Marcus, about a student who obtained 0% on an exam:</p><p>Why not 100%?</p><p>Q1. In which battle did Napoleon die?\n<br/>– A. In his last battle.</p><p>Q2. Where was the Declaration of Independence signed?\n<br/>– A. At the bottom of the  page.</p><p>Q3. River Ravi flows in which state?\n<br/>– A. Liquid.</p><p>Q4. What is the main reason for divorce?\n<br/>– A. Marriage.</p><p>Q5. What is the main reason for failure?\n<br/>– A. Exams.</p><p>Q6. What can you never eat for breakfast?\n<br/>– A. Lunch &amp; dinner.</p><p>Q7. What looks like half an apple?\n<br/>– A. The other half.</p><p>Q8. If you throw a red stone into the blue sea what it will become?\n<br/>– A. It will become wet.</p><p>Q9. How can a man go eight days without sleeping ?\n<br/>– A. He can sleep at night.</p><p>Q10. How can you lift an elephant with one hand?\n<br/>– A. You will never find an elephant that has only one hand...</p><p>Q11. If you had three apples and four oranges in one hand and four apples and three oranges in the other, what would you have?\n<br/>– A. Very large hands.</p><p>Q12. If it took eight men ten hours to build a  wall, how long would it take four men to build it?\n<br/>– A. No time at all, the wall is already  built.</p><p>Q13. How can you drop a raw egg onto a concrete floor without cracking it?\n<br/>– A. Any way you like, because concrete floors are very hard to crack.</p>"
  }
]