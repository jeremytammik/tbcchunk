[
  {
    "original_filename": "1054_mep_calculation",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n</head>"
  },
  {
    "original_filename": "1054_mep_calculation",
    "header_text": "User MEP Calculation Sample on GitHub",
    "local_header_href": "#user-mep-calculation-sample-on-github",
    "chunk_text": "<h3>User MEP Calculation Sample on GitHub</h3><p>I published the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/user-mep-calculation-sample.html\">\nuser MEP calculation sample</a> a\n\ncouple of months ago as an example of making use of the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-revit-2013-mep-api-and-external-services.html#3\">\nexternal services framework</a> to\n\nredefine the algorithms used for internal calculations in Revit.\n\n<p>Nmulder is happily making use of this to redefine pipe pressure loss calculations, but running into a\n\n<!-- small problem that he describes in the Autodesk Revit API discussion thread on -->\n<a href=\"http://forums.autodesk.com/t5/Revit-API/Generic-add-in-error-on-HTML-generation/td-p/4601525\">\ngeneric add-in error on HTML generation</a> that\n\nI hoped to be able to sort out:</p>\n<p><strong>Question:</strong> I have been playing around with the Revit API recently in order to provide alternative pipe pressure loss calculations for some of our users.\nMuch thanks to the code provided by\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/user-mep-calculation-sample.html\">\nJeremy Tammik</a> or\n\nthis never would have been possible for me.\nI have made the necessary code changes for our calculation needs which is working.</p>\n<p>My problem is really more of an annoyance.\nWe cannot export a pipe pressure loss report to HTML.\nIt reports this error:</p>\n<center>\n<img alt=\"XSLT not found error\" src=\"img/user_mep_calc_xslt_error.png\" width=\"400\"/>\n</center>\n<p>It is complaining that the required .xslt file it is looking for is not at the specified location but it is:</p>\n<center>\n<img alt=\"Add-in location\" src=\"img/user_mep_calc_addin_location.png\" width=\"400\"/>\n</center>\n<p>I have done what debugging and code checking I know how to do but can't fix it.</p>\n<p>We can export to .csv just fine.\nI just don't like a fully working piece of code.</p>\n<p>Thanks!</p>\n<p><strong>Answer:</strong> You don't like fully working code?</p>\n<p>Sounds like M$ and windoze to me...  :-)</p>\n<p>Anyway, since this is an important piece of base functionality, I took your question as an opportunity to re-examine the code and publish it on GitHub in order to simplify future enhancements.</p>\n<p>It now lives in the\n\n<a href=\"https://github.com/jeremytammik/UserMepCalculation\">UserMepCalculation GitHub repository</a>.</p>\n<p>I immediately created\n\n<a href=\"https://github.com/jeremytammik/UserMepCalculation/releases/tag/1.0.0.0\">\nrelease 1.0.0.0</a> to\n\nreflect the version published as a static archive file in the original\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/user-mep-calculation-sample.html\">\nuser MEP calculation sample</a>,\n\nthen bumped the version to\n\n<a href=\"https://github.com/jeremytammik/UserMepCalculation/releases/tag/2014.0.0.0\">\nrelease 2014.0.0.0</a> while\n\nexploring your XSLT path issue.</p>\n<p>The following code in the HtmlStreamWriter constructor generates the XSLT file path:</p>\n<pre class=\"code\">\n  xmlFileName = System.IO.<span class=\"teal\">Path</span>.GetDirectoryName(\n    <span class=\"teal\">PressureLossReportHelper</span>.instance.Doc\n      .Application.RecordingJournalFilename );\n \n  <span class=\"blue\">if</span>( xmlFileName != <span class=\"blue\">null</span> &amp;&amp; xmlFileName.Length &gt; 0 )\n    xmlFileName = xmlFileName\n      + <span class=\"maroon\">\"\\\\UserPressureLossReport\"</span>\n      + <span class=\"teal\">DateTime</span>.Now.Millisecond.ToString() + <span class=\"maroon\">\".xml\"</span>;\n \n  <span class=\"blue\">string</span> strPath = <span class=\"blue\">typeof</span>(\n    UserPressureLossReport.<span class=\"teal\">WholeReportSettingsDlg</span> )\n      .Assembly.Location;\n \n  xsltFileName = <span class=\"teal\">Path</span>.Combine(\n    <span class=\"teal\">Path</span>.GetDirectoryName( <span class=\"teal\">Path</span>.GetDirectoryName(\n      strPath ) ),\n    <span class=\"maroon\">\"output\"</span>, <span class=\"maroon\">\"UserPressureLossReport.xslt\"</span> );\n \n  xmlWriter = <span class=\"teal\">XmlWriter</span>.Create( xmlFileName );\n</pre>\n<p>On my system, the resulting file path ends up being\n\n<cose>\"C:/a/vs/UserMepCalculation/output/UserPressureLossReport.xslt\"</cose>.</p>\n<p>Accordingly, I created a subfolder named 'output' in my UserMepCalculation root directory and copied the original PressureLossReport.xslt file included with Revit in the AddIns/MEP\nCalculation directory to that location.</p>\n<p>The following lines of code in the SaveDataToHTML.save method check the existence of this file:</p>\n<pre class=\"code\">\n  <span class=\"green\">// Check if the xslt file exists</span>\n \n  <span class=\"blue\">if</span> (!<span class=\"teal\">File</span>.Exists(writer.XsltFileName))\n  {\n    <span class=\"blue\">string</span> subMsg = <span class=\"teal\">ReportResource</span>.xsltFileSubMsg\n      .Replace(<span class=\"maroon\">\"%FULLPATH%\"</span>, writer.XsltFileName );\n \n    <span class=\"teal\">UIHelperFunctions</span>.postWarning(\n      <span class=\"teal\">ReportResource</span>.htmlGenerateTitle,\n      <span class=\"teal\">ReportResource</span>.xsltFileMsg, subMsg );\n \n    <span class=\"blue\">return</span> <span class=\"blue\">false</span>;\n  }\n</pre>\n<p>For a moment, it appeared to me as if I could reproduce your problem, since I saw the following error message:</p>\n<center>\n<img alt=\"My own XSLT renaming error\" src=\"img/user_mep_calc_xslt_error_jt.png\" width=\"366\"/>\n</center>\n<p>Alas, that problem was simply due to the fact that I forgot to rename the file properly:</p>\n<pre>\n  C:\\a\\vs\\UserMepCalculation\\output &gt;\n    ren PressureLossReport.xslt UserPressureLossReport.xslt\n</pre>\n<p>After renaming, everything worked as expected.</p>\n<p>The full path of the missing XSLT file is not shown in your error message above.\nDid you use the debugger to explore where exactly it really is looking?</p>\n<p>You show the location of your XSLT file in the Revit add-ins folder.\nDid you change the code <b>not</b> to look for it in an 'output' subdirectory?</p>\n<p>I would agree that the code is somewhat inscrutable, and beg your pardon for that.</p>\n<p>It was extracted from internal structures and still carries some excess baggage.</p>\n<p>I removed as much of that as I could during my original cleanup.</p>\n<p>The end result of this is that I cannot reproduce your issue or provide any help in resolving it, beyond asking you to look at the places mentioned above in the debugger and simplify them or adapt them better to your needs to resolve this issue.</p>\n<p>One thing I would suggest trying out is to simply skip this error message once by using the 'set next statement' option in the debugger, and see whether the output is correctly produced anyway.\nThe error statement might be erroneous in itself, you know.</p>\n<p>In any case, please feel free to fork or branch the\n\n<a href=\"https://github.com/jeremytammik/UserMepCalculation\">UserMepCalculation GitHub repository</a> to\n\nadd any enhancements you would like to share, and I will hopefully be able to merge them into the main stream.</p>\n<p>Thank you!</p>\n</p>"
  }
]