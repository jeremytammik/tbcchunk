[
  {
    "original_filename": "0559_column_xsec_rotation",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0559_column_xsec_rotation",
    "header_text": "Slanted Column Cross Section Rotation",
    "local_header_href": "#slanted-column-cross-section-rotation",
    "chunk_text": "<h3>Slanted Column Cross Section Rotation</h3><p>Here is a question that will be of most interest to people working with Revit Structure, on the different definitions of the cross section coordinate system of vertical versus slanted columns, with several people chipping in to answer it from various perspectives.\n\n<p>The solution is illuminating and highlights one significant difference between objects whose Location property is a LocationCurve versus a LocationPoint.\n\n<p><strong>Question:</strong> Is there any rule or documentation on the definition of the cross section coordinate system orientation for structural beams and columns?\n\n<p>I am trying to export these elements from Revit Structure and using the right hand rule, but it seems to be sometimes producing the Y and sometimes the Z axis in the exported data.\n\n<p>On closer examination, I found that the problem is due to a difference between vertical and slanted columns in the definition of the cross section coordinate system; it is rotated by 90 degrees from one to the other.\n\n<p>Is this behaviour by design?\n\n<p><strong>Answer (Miroslav Schonauer):</strong> Without even looking into what the Revit convention is, this is a typical \"problem\" (not a bug, but by-design) in all structural modelling/analysis software. \n\n<p>The issue is that the \"rotation angle\"  (or sometimes called \"orientation angle\") has to be measured from some reference, i.e. default vector position. For non-vertical elements (i.e. broadly speaking \"beams\"), this \"up-vector\" is typically the global Z-axis projected to the plane perpendicular to the element curve-axis. However, for vertical elements (i.e. \"columns\"), global Z-axis is parallel with the curve-axis, hence the typical default \"up vector\" for them is assumed to be global Y-axis.  \n\n<p>So, it is inevitable that the element would typically appear to \"jump-rotate\" when its position is changed from vertical to non-vertical. Of course, when this is done by just e.g. slightly adjusting the top end of previously vertical column, it all seems strange, but is mathematically unavoidable.\n\n<p>BTW, some packages tried to solve this by measuring the section orientation by directly stored full \"orientation vector\" rather than assuming default position + stored scalar value of angle. Then this orientation vector is projected to the element-axis perpendicular plane in order to place the section. But this is typically harder to manipulate and understand in the user interface. One can also change end-points so that the element axis becomes parallel with the orientation vector, so then its back to square one of the originating problem with element section \"jumping\" again ;-)\n\n<p>There may be some additional Revit-specific issues that I am not aware of, but I'm 99% sure this is the root of the \"problem\". Whoever has looked at a number of APIs dealing with these kinds of issues will have encountered this topic several times.\n\n<p><strong>Answer (Aleksey Moiseyev):</strong> To the best of my knowledge, a column's Z direction is always along the direction of the column (as opposed to beams and braces). \n\n<p>However, the base direction for measuring the rotation angle is not based on element's local coordinates - it is, indeed, measured as described above, so a small slant may cause the profile to rotate. \n\n<p><strong>Answer (Sasha Varsanofieva):</strong> Yes, Miro is correct on description of why rotation adjusts when the column becomes non-vertical. In non-vertical slanted columns, rotation is measured from the \"up vector\".\n\n<p>However, Revit actually has 3 states: Vertical Column, Vertical Slanted Column (Vertical, but 'column style' parameter set to slanted), and Slanted (Non-Vertical). If I understand the original issue correctly, the problem being reported is actually the transition between Vertical and Vertical Slanted, in which case both versions of the column are vertical. These two states do have different calculation of the transformation from the family coordinates to the columnÂ’s local coordinate system, but I don't expect the column to rotate when switching from one to the other. \n\n<p>More precisely, the calculations to establish the local coordinate system are different for vertical and vertical slanted columns. However, I have just tested this in Revit, and columns do not rotate when switched from vertical to slanted and vice versa. That leads me to suspect that this is an API only issue about reporting local coordinate systems of columns.\n\n<p><strong>Answer (Joe Ye):</strong> After some deeper exploration, I found that there is indeed a significant difference between the cross section rotation handling of vertical and slanted columns.\n\n<p>A vertical column has a LocationPoint value in its Location property, and the LocationPoint data includes its rotation information:</p>\n<center>\n<img alt=\"Vertical column LocationPoint\" src=\"img/column_coord_sys_1.png\" width=\"800\"/>\n</center>\n<p>This rotation information is not displayed in the column properties:</p>\n<center>\n<img alt=\"Vertical column properties lack rotation information\" src=\"img/column_coord_sys_2.png\" width=\"800\"/>\n</center>\n<p>The slanted column Location property, on the other hand, contains a LocationCurve instead of a LocationPoint.\nThe LocationCurve class does not have any provision for managing any rotation data:</p>\n<center>\n<img alt=\"Slanted column LocationCurve\" src=\"img/column_coord_sys_3.png\" width=\"800\"/>\n</center>\n<p>This does not mean that the slanted column rotation angle is missing, though.\nInstead, it stores its rotation information in an additional parameter named 'Cross-Section Rotation':</p>\n<center>\n<img alt=\"Slanted column cross section rotation parameter\" src=\"img/column_coord_sys_4.png\" width=\"800\"/>\n</center>\n<p>It is also interesting to create two vertical columns, change one of them to slanted, and compare their properties.\nThe appearance of the slanted one does not change.\nHere are the slanted column properties:\n<img alt=\"Slanted column properties\" src=\"img/column_coord_sys_5.png\"/>\n\n<p>Here are the vertical column properties:</p>\n<center>\n<img alt=\"Vertical column properties\" src=\"img/column_coord_sys_6.png\"/>\n</center>\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  }
]