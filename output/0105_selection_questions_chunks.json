[
  {
    "original_filename": "0105_selection_questions",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<style>\n.blue { color: blue; }\n.teal { color: teal; }\n.maroon { color: maroon; }\n.green { color: green; }\n.gray { color: gray; }\n</style>"
  },
  {
    "original_filename": "0105_selection_questions",
    "header_text": "Selection Questions",
    "local_header_href": "#selection-questions",
    "chunk_text": "<h3>Selection Questions</h3><p>A whole bunch of questions on selection of elements and points came in during the last day or two. \nHere are a few of them:</p><ul>\n<!-- 1248008 [External command waits on user selecting point on drawing] -->\n<li>How can I force the user to select an element when my external command begins?\n<a href=\"#1248008\">Answer...</a></li>\n<!-- 1248007 [Mimick user clicking on 'Room' in Basics toolbar from within the API] -->\n<li>How can I invoke an existing Revit command when my external command begins?\n<a href=\"#1248007\">Answer...</a></li>\n<!-- 1247912 [Modeless Dialogues and Driving Revit from outside] -->\n<li>In the discussion of the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/revit-window-handle-and-modeless-dialogues.html\">\nRevit window handle and modeless dialogues</a>\n\nyou list selected elements in a modeless dialogue box. \nCould the reverse operation be implemented, displaying the selected elements in a list box with check marks next to each, and unselecting them in the Revit user interface if the user removes the check mark?\n<a href=\"#1247912\">Answer...</a></li>\n<!-- 1248047 [Get coordinates of mouse click in drawing] -->\n<li>I'd like to be able to click at a point on a drawing and get its coordinates.\nIs this possible without actually selecting an existing element?\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/10/picking-a-point.html\">\nAnswer...</a></li>\n<!-- 1248049 [PickOne Selection Order] -->\n<li>I call PickOne repeatedly, asking the user to pick elements on the screen. \nHowever, when I iterate the selection set, the order is different. \nHow can I retain the selection order when repeatedly calling PickOne?\n<a href=\"#1248049\">Answer...</a></li>\n</ul>"
  },
  {
    "original_filename": "0105_selection_questions",
    "header_text": "Selecting an element",
    "local_header_href": "#selecting-an-element",
    "chunk_text": "<h4><a name=\"1248008\">Selecting an element</a></h4><a href=\"http://thebuildingcoder.typepad.com/blog/2008/12/pickone.html\">\nthis post</a><a href=\"http://thebuildingcoder.typepad.com/blog/2009/01/verona-revit-api-training.html\">\npick a specific element type</a><a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/revit-window-handle-and-modeless-dialogues.html\">\npresenting the current contents of the selection set in a modeless dialogue</a>"
  },
  {
    "original_filename": "0105_selection_questions",
    "header_text": "Invoking a Revit command",
    "local_header_href": "#invoking-a-revit-command",
    "chunk_text": "<h4><a name=\"1248007\">Invoking a Revit command</a></h4><p>Unfortunately the Revit API does not yet provide access for an external command to invoke any other existing Revit commands.\nEven though the official API does not provide this access to the command, you might be able to use the Revit journaling mechanism or the Win32 API to simulate user input to provide this functionality.\nPlease note that both of these approaches are completely unsupported and must be researched, tested and maintained by you completely at your own risk.\n\n<p>The basics of the API access to the journaling mechanism are demonstrated by the Revit SDK Journaling sample.\n\n<p>Using the Win32 API, you can simply send Windows messages simulating user input to either select the corresponding Revit menu entry.\nFor example, to invoke the Room command, you could simulate selecting the Revit menu entry Drafting &gt; Room or typing in the keyboard shortcut RM. \nThis is discussed in the post on \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/12/driving-revit-from-outside.html\">\ndriving Revit from outside</a>.\n\nAn alternative method to using Win32 API calls directly yourself to simulate user input is also available:\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/01/autohotkey.html\">\nAutoHotKey</a>.\n\nIf you do decide to use the Win32 API, you may also be interested in the discussion on the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/revit-window-handle-and-modeless-dialogues.html\">\nRevit window handle and modeless dialogues</a>.\n\n\n\n<h4><a name=\"1247912\">Deselecting elements through a checkmark in a modeless dialogue</a></h4>\n<p>Yes, that is perfectly possible. In the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/revit-window-handle-and-modeless-dialogues.html\">\nmodeless dialogue</a>\n\nwe presented, the selected elements are simply listed in a text label. \nThey could also be displayed in a list box instead, with a check mark for each selected item.\nIn that case, you could implement code to unselect the element in the Revit user interface by unchecking its corresponding check box in the modeless dialogue.</p>\n<p>This is possible because the Document Selection property is a Selection object which has a property Elements, which is a SelElementSet instance, which provides methods named Erase and Remove. This class is derived from ElementSet and Erase is inherited from that class. I am not sure how Erase affects the current selection in the Revit UI; you might like to test that. \nAnyway, according to the help file, Remove will \"remove the specified from the selected element set, just like de-select it from the UI\". \nAlthough the formulation is rather strange, I would say that calling the method with a given selected element will unselect it in the document selection set and in the Revit user interface. \nI am not sure whether Erase will have exactly the same effect as Remove. \nI might try it out as soon as I have some time.</p>\n<h4><a name=\"1248047\">Picking a Point</a></h4>\n<p>This issue and the meagre workarounds I can think of were already discussed in the post on \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/10/picking-a-point.html\">\npicking a point</a>.</p>\n<h4><a name=\"1248049\">Retaining the element selection order</a></h4>\n<p>The reason that there is no inherent order in the Document Selection collection is that its Elements constitute a set and as such are unordered.\nIf you wish to keep track of the original selection order, you would have to do so yourself. You could achieve this by iterating over the entire selection set after each call to PickOne and determining which new element has been added by the last call. You could then keep track of the elements added in an own ordered list, in parallel with the unordered set maintained by Revit.</p>\n</p></p></p>"
  },
  {
    "original_filename": "0105_selection_questions",
    "header_text": "Deselecting elements through a checkmark in a modeless dialogue",
    "local_header_href": "#deselecting-elements-through-a-checkmark-in-a-modeless-dialogue",
    "chunk_text": "<h4><a name=\"1247912\">Deselecting elements through a checkmark in a modeless dialogue</a></h4><p>Yes, that is perfectly possible. In the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/revit-window-handle-and-modeless-dialogues.html\">\nmodeless dialogue</a>\n\nwe presented, the selected elements are simply listed in a text label. \nThey could also be displayed in a list box instead, with a check mark for each selected item.\nIn that case, you could implement code to unselect the element in the Revit user interface by unchecking its corresponding check box in the modeless dialogue.</p><p>This is possible because the Document Selection property is a Selection object which has a property Elements, which is a SelElementSet instance, which provides methods named Erase and Remove. This class is derived from ElementSet and Erase is inherited from that class. I am not sure how Erase affects the current selection in the Revit UI; you might like to test that. \nAnyway, according to the help file, Remove will \"remove the specified from the selected element set, just like de-select it from the UI\". \nAlthough the formulation is rather strange, I would say that calling the method with a given selected element will unselect it in the document selection set and in the Revit user interface. \nI am not sure whether Erase will have exactly the same effect as Remove. \nI might try it out as soon as I have some time.</p>"
  },
  {
    "original_filename": "0105_selection_questions",
    "header_text": "Picking a Point",
    "local_header_href": "#picking-a-point",
    "chunk_text": "<h4><a name=\"1248047\">Picking a Point</a></h4><p>This issue and the meagre workarounds I can think of were already discussed in the post on \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/10/picking-a-point.html\">\npicking a point</a>.</p>"
  },
  {
    "original_filename": "0105_selection_questions",
    "header_text": "Retaining the element selection order",
    "local_header_href": "#retaining-the-element-selection-order",
    "chunk_text": "<h4><a name=\"1248049\">Retaining the element selection order</a></h4><p>The reason that there is no inherent order in the Document Selection collection is that its Elements constitute a set and as such are unordered.\nIf you wish to keep track of the original selection order, you would have to do so yourself. You could achieve this by iterating over the entire selection set after each call to PickOne and determining which new element has been added by the last call. You could then keep track of the elements added in an own ordered list, in parallel with the unordered set maintained by Revit.</p>"
  }
]