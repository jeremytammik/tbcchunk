[
  {
    "original_filename": "1794_init_bim360",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</head>\n\n<!---\n\n- zen 3238 [Initiate BIM360 Docs collaboration programmatically]\n  https://stackoverflow.com/questions/53892870/initiate-bim360-docs-collaboration-programmatically\n\n- [BIM360 Docs: Setting up external references between files (Upload Linked Files)]\n  https://forge.autodesk.com/blog/bim360-docs-setting-external-references-between-files-upload-linked-files\n  BY EASON KANG\n\n- On Putting the ‘I’ Into Revit, BIM | 01: Getting Rid of ‘Text’\n  https://www.augi.com/articles/detail/on-putting-the-i-into-revit-bim-01-getting-rid-of-text\n  by Jay B Zallan\n  > Why do we want No Text? One reason is that if the information is not embedded into a corresponding object (as long as one exists, lol) it is not BIM. That is called drafting and has no place in Revit or BIM. It is and would be like putting hay into the gas tank of a Ferrari... a little tinge of “well, we’ve always done it that way and it always worked fine fueling the horses” ...need I speculate as to how that Ferrari is doing?\n\n- free for developers\n  https://free-for.dev\n  [GitHub](https://github.com/ripienaar/free-for-dev)\n  A list of SaaS, PaaS and IaaS offerings that have free tiers of interest to devops and infradev\n  Developers and Open Source authors now have a massive amount of services offering free tiers, but it can be hard to find them all in order to make informed decisions.\n  This is a list of software (SaaS, PaaS, IaaS, etc.) and other offerings that have free tiers for developers.\n\n- 10 Tips to Avoid Leaving Tracks Around the Internet\n  https://www.nytimes.com/2019/10/04/smarter-living/10-tips-internet-privacy-crowdwise.html\n  [TunnelBear](https://www.tunnelbear.com) encrypts your internet connection to keep your online activity private on any network &ndash; a more secure way to browse the web\n\n- Quantum Computers Explained – Limits of Human Technology\n  https://youtu.be/JhHMJCUmq28\n  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/JhHMJCUmq28\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n- Quote of the Week: “Today, most software exists, not to solve a problem, but to interface with other software.” — Ian Angell\n\n  \n\n\ntwitter:\n\nProgrammatically initiating BIM360 collaboration and linking in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/init_bim360\n\nToday, we look at a couple of BIM360 and cloud related issues\n&ndash; Programmatically initiating BIM360 collaboration\n&ndash; Setting up external references in BIM360 Docs\n&ndash; Jay Zallan the text terminator\n&ndash; Free for developers\n&ndash; Tracks on the Internet\n&ndash; Quantum computers explained...\n\nlinkedin:\n\nProgrammatically initiating BIM360 collaboration and linking in the #RevitAPI \n\nhttp://bit.ly/init_bim360\n\nToday, we look at a couple of BIM360 and cloud related issues:\n\n- Programmatically initiating BIM360 collaboration\n- Setting up external references in BIM360 Docs\n- Jay Zallan the text terminator\n- Free for developers\n- Tracks on the Internet\n- Quantum computers explained...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<p style=\"font-size: 80%; font-style:italic\"></p>\n\n-->"
  },
  {
    "original_filename": "1794_init_bim360",
    "header_text": "Initiating BIM360 Collaboration and Linking",
    "local_header_href": "#initiating-bim360-collaboration-and-linking",
    "chunk_text": "### Initiating BIM360 Collaboration and Linking\n\nToday, we look at a couple of BIM360 and cloud related issues:\n\n- [Programmatically initiating BIM360 collaboration](#2)\n- [Setting up external references in BIM360 Docs](#3)\n- [Jay Zallan, the text terminator](#4)\n- [Free for developers](#5)\n- [Tracks on the Internet](#6)\n- [Quantum computers explained](#7)\n\nAdditional motivation is provided by this quote of the day:\n\n<center>\n<i>\n<p>Today, most software exists, not to solve a problem, but to interface with other software.</p>\n<p style=\"text-align: right; font-style: italic\">Ian Angell</p>\n</i>\n</center>\n\nEspecially applicable to Forge, BIM360, Design Automation for Revit, and all the other cloud-based workflows evolving today.\n\nPeople no longer need to buy amplifiers or players of any kind, or lay any wires at all &ndash; modern loudpeakers can be driven straight from the Internet, grab the music tracks to play from there, communicate via WLAN or Bluetooth, and be controlled through a smartphone app.\n\nImagine streamlining and automating building construction and maintenance in a similar fashion.\n\nSignificant parts of these tasks are still hands-on, of course; however, an inordinate amount of effort is wasted by inefficient and outdated management processes driving (or failing to) those hands-on parts of the job."
  },
  {
    "original_filename": "1794_init_bim360",
    "header_text": "Programmatically Initiating BIM360 Collaboration",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Programmatically Initiating BIM360 Collaboration\n\n**Question:** In order to upgrade to the current version of Revit, we have to migrate our files from BIM360 Teams to BIM360 Docs.\nSince we have hundreds of documents, I am looking to automate this process as much as possible. \n\nThe Forge API allows me to download all Revit files from BIM360 Teams.\nI am also able to upgrade them all to Revit 2019, using either the Revit API or a third party app such\nas [this bulk file upgrader](https://apps.autodesk.com/RVT/fr/Detail/Index?id=9014092593843843383). \n\nUsing the Forge BIM360 API, I am able to create new projects programmatically, and upload the files and folders from the Team Drive.\nThe step that I am having difficulty accomplishing in an automated fashion is to initiate collaboration for the upgraded Revit 2019 files.\nIs there a way that this can be accomplished with either the Revit API or the Forge API?\nOr is there another way that allows me to automatically accomplish the migration between these two Autodesk Cloud Collaboration solutions? \n\nI came across [this tutorial on publishing models](https://forge.autodesk.com/en/docs/data/v2/tutorials/publish-model) that\nsuggests that one needs to manually initiate collaboration for each Revit file through the Revit UI.\nI hope to find an alternative solution to this suggestion. \n\n**Answer:**\n\nThis issue sounds similar to the one raised in the Revit API discussion forum and escalated to\nthe ADN case 14906646 [old topic brought back &ndash; changing link paths to cloud paths](https://forums.autodesk.com/t5/revit-api-forum/old-topic-brought-back-changing-link-paths-to-cloud-paths/m-p/8476438).\n\nThe development team are discussing this issue (ticketed as REVIT-140793) and suggested a possible workaround:\n\nRevit 2019.2 and future releases include support for the \"Single user workflow\"; that is the non-workshared cloud model.\nAt the same time, they expose the API to initiate the non-workshared cloud model and convert the non-workshared cloud model to a workshared cloud model (C4R). \n\nSo, I think you can use the single user APIs to workaround the cases you mentioned as follows:\n\n- Save the downloaded files and non-workshared files (local files).\n- Initiate non-workshared cloud model through the API call to `Document.SaveAsCloudModel`.\n- Convert it to a C4R model via the API `Document.EnableCloudWorksharing`.\n\nMy colleague Eason Kang, 康益昇, now confirmed that you can indeed use these steps to achieve your goal.\n\nHere is his report, including the solution to a credentials issue on the way:\n\n**Question:** I would like to save a local RVT to my BIM360 account &ndash; with Design Collaboration service activated &ndash; using the Revit 2020 API, but Revit always throws an exception saying that I do not have the required access rights.\nI have a valid C4R license and able to open C4R models from the folder id I passed to the API with the Revit UI.\nWhat is missing? \n \nThis is the code snippet:\n\n<pre class=\"code\">\n  doc.SaveAsCloudModel(\n    \"urn:adsk.wipprod:fs.folder:co.8rtX03jDQXKnssA1FfrEXw\",\n    doc.Title);\n</pre>\n\nIt throws an exception:\n\n- Autodesk.Revit.Exceptions.RevitServerUnauthorizedException: You do not have cloud model entitlement to access this resource in cloud\n\n**Answer:** You need to have the 'Cloud Models for Revit' entitlement set up in `manage.autodesk.com`.\n\n**Response:** Thank you for clarifying.\nI confused the 'Cloud Models for Revit' with the C4R, and I didn't have the 'Cloud Models for Revit' entitlement set up in my manage.autodesk.com.\n\n**Answer:** 'Cloud Models for Revit' is a new service provided since Revit 2019.2.\nIt is part of the Revit and Revit LT subscription. \n \nBtw, the major difference to the C4R models is that only one user at a time can work on the model created by this method.\n\n**Response:** Great!\n\nI set up my Revit subscription as required, followed the steps shared above by Jeremy and confirmed that it works!\n\nHere is my test code implementing this:\n\n<pre class=\"code\">\n<span style=\"color:blue;\">using</span>&nbsp;System;\n<span style=\"color:blue;\">using</span>&nbsp;System.Collections.Generic;\n<span style=\"color:blue;\">using</span>&nbsp;System.Linq;\n<span style=\"color:blue;\">using</span>&nbsp;System.Text;\n<span style=\"color:blue;\">using</span>&nbsp;System.Threading.Tasks;\n \n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.ApplicationServices;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.Attributes;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.DB;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.UI;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.UI.Selection;\n \n<span style=\"color:blue;\">namespace</span>&nbsp;adsk.c4r\n{\n&nbsp;&nbsp;[<span style=\"color:#2b91af;\">Transaction</span>(&nbsp;<span style=\"color:#2b91af;\">TransactionMode</span>.Manual&nbsp;)]\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">Command</span>&nbsp;:&nbsp;<span style=\"color:#2b91af;\">IExternalCommand</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>&nbsp;Execute(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ExternalCommandData</span>&nbsp;commandData,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">ref</span>&nbsp;<span style=\"color:blue;\">string</span>&nbsp;message,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementSet</span>&nbsp;elements&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">UIApplication</span>&nbsp;uiapp&nbsp;=&nbsp;commandData.Application;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">UIDocument</span>&nbsp;uidoc&nbsp;=&nbsp;uiapp.ActiveUIDocument;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Application</span>&nbsp;app&nbsp;=&nbsp;uiapp.Application;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;template&nbsp;=&nbsp;app.DefaultProjectTemplate;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;filename&nbsp;=&nbsp;<span style=\"color:maroon;\">@&quot;D:\\DevZone\\ADN\\t5021\\revit_api_c4r_test_6.rvt&quot;</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;name&nbsp;=&nbsp;System.IO.<span style=\"color:#2b91af;\">Path</span>.GetFileName(&nbsp;filename&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;app.NewProjectDocument(&nbsp;template&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.SaveAs(&nbsp;filename&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">try</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.SaveAsCloudModel(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;urn:adsk.wipprod:fs.folder:co.aCd1tMmrTxucmJcmtYTLBQ&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">var</span>&nbsp;cloudPath&nbsp;=&nbsp;doc.GetCloudModelPath();\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;doc.CanEnableCloudWorksharing()&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.EnableCloudWorksharing();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;Revit&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>.Format(&nbsp;<span style=\"color:#a31515;\">&quot;{0}&nbsp;is&nbsp;a&nbsp;C4R&nbsp;model&nbsp;now&quot;</span>,&nbsp;name&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Close();\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uiapp.OpenAndActivateDocument(&nbsp;cloudPath,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">OpenOptions</span>(),&nbsp;<span style=\"color:blue;\">false</span>&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">catch</span>(&nbsp;<span style=\"color:#2b91af;\">Exception</span>&nbsp;ex&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.Diagnostics.<span style=\"color:#2b91af;\">Trace</span>.WriteLine(&nbsp;ex.Message&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>.Cancelled;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>.Succeeded;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n}\n</pre>\n\nMany thanks to Eason for confirming this procedure!"
  },
  {
    "original_filename": "1794_init_bim360",
    "header_text": "Setting up External References in BIM360 Docs",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Setting up External References in BIM360 Docs\n\nEason published another blog post on a related topic,\non [BIM360 Docs: Setting up external references between files (Upload Linked Files)](https://forge.autodesk.com/blog/bim360-docs-setting-external-references-between-files-upload-linked-files).\n\n> The Forge Model Derivative API provides the ability to translate composite models (i.e., multiple models linked by xRefs or external links) into a single Forge Viewer model (the SVF) by uploading a ZIP file containing the host model and its links and passing both `rootFilename` and `compressedUrn` parameters to the `POST` job request payload.\n\n> What If we want to achieve the same goal on BIM360 Docs?\nHow can that be achieved?\nBIM360 Docs currently doesn't support the ZIP file format translation.\n\n> Fortunately, the BIM360 Docs Web UI provides a function called \"Upload Linked Files\". The Forge API support a similar functionality.\n\n> So, let's see how magic it is!\n\n> ...\n\nFor the full story, please refer to [Eason's clear explanation on the blog](https://forge.autodesk.com/blog/bim360-docs-setting-external-references-between-files-upload-linked-files).\n\n<center>\n<img src=\"img/bim360_docs_xrefs.jpg\" alt=\"BIM360 Docs linking\" width=\"800\"> <!--2466-->\n</center>"
  },
  {
    "original_filename": "1794_init_bim360",
    "header_text": "Jay Zallan, the Text Terminator",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> Jay Zallan, the Text Terminator\n\nLooking at something related to the end user aspects of BIM for a change, instead of just focussing at the Revit API, I read an informative, provocative and amusing recommendation by Jay B Zallan\n[On Putting the ‘I’ Into Revit, BIM | 01: getting rid of text](https://www.augi.com/articles/detail/on-putting-the-i-into-revit-bim-01-getting-rid-of-text):\n\n> Why do we want <u>No Text</u>?\nOne reason is that if the information is not embedded into a corresponding object (as long as one exists, lol), it is not BIM.\nThat is called drafting and has no place in Revit or BIM.\nIt is and would be like putting hay into the gas tank of a Ferrari...\na little tinge of \"well, we’ve always done it that way and it always worked fine fuelling the horses\"\n...need I speculate as to how that Ferrari is doing?"
  },
  {
    "original_filename": "1794_init_bim360",
    "header_text": "Free for Developers",
    "local_header_href": "#5",
    "chunk_text": "####<a name=\"5\"></a> Free for Developers\n\nBack to programming, especially cloud based, an inspiring resource lists a huge number of other resources:\n\n[Free for developers](https://free-for.dev) &ndash;\n[on GitHub](https://github.com/ripienaar/free-for-dev) &ndash;\nprovides an extensive list of SaaS, PaaS and IaaS offerings that have free tiers of interest to devops and infradev.\n\n> Developers and open source authors now have a massive amount of services offering free tiers, but it can be hard to find them all in order to make informed decisions."
  },
  {
    "original_filename": "1794_init_bim360",
    "header_text": "Tracks on the Internet",
    "local_header_href": "#6",
    "chunk_text": "####<a name=\"6\"></a> Tracks on the Internet\n\nOne important aspect as many move to ever more cloud usage and presence is the issue of data collection and tracking.\n\nOn this topic, I found\nthe [10 tips to avoid leaving tracks around the Internet](https://www.nytimes.com/2019/10/04/smarter-living/10-tips-internet-privacy-crowdwise.html) an\ninteresting read, \nand the [TunnelBear](https://www.tunnelbear.com) VPN looks like a useful option; it encrypts your Internet connection to keep your online activity private on any network, providing a slightly more secure way to browse the web."
  },
  {
    "original_filename": "1794_init_bim360",
    "header_text": "Quantum Computers Explained",
    "local_header_href": "#7",
    "chunk_text": "####<a name=\"7\"></a> Quantum Computers Explained\n\nOne final item that caught my eye in the past few days is this seven-minute presentation \non [quantum computers explained and limits of human technology](https://youtu.be/JhHMJCUmq28)\nby [Kurzgesagt &ndash; in a nutshell](https://www.youtube.com/channel/UCsXVk37bltHxD1rDPwtNM8Q):\n\n<center>\n<iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/JhHMJCUmq28\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</center>\n\nHave fun pondering your own desktop API and cloud-based solutions and have a wonderful week of fruitful, creative programming!"
  }
]