[
  {
    "original_filename": "1770_dynztcs_wrapper",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- Wrapper required to pass an element from Revit to Dynamo\n  Trying to retrieve the DimensionType of a Dimension\n  https://forums.autodesk.com/t5/revit-api-forum/trying-to-retrieve-the-dimensiontype-of-a-dimension/m-p/8968599\n  Alexandra Nelson\n  Frank Aarssen\n  [Q] I'm trying to build a ZeroTouchNode with C# in Visual Studio that's input is a Dimension element and it's output is the DimensionType of that Dimension element. It seemed simple, but I'm having trouble returning the DimensionType element. Instead, the node is returning \"Autodesk.Revit.DB.DimensionType\". How do I retrieve the actual element? My code is included below. Thanks in advance for the help! \n  When I try to return the id, it returned the id of the dimension type, but not the dimension type element. Also, when I tried to return the element using the \"Get Element\" method and changed the return type to \"Element\" (as seen below) rather than \"ElementType\" as I had previously, it still gives me the same output.\n  [A] You can not directly return a Revit class. You need to \"wrap\" into a Dynamo wrapper class.\n  see [Become a Dynamo Zero Touch C# Node Developer in 75 Minutes](https://forum.dynamobim.com/t/become-a-dynamo-zero-touch-c-node-developer-in-75-minutes/28007)\n  and download the handout.\n  [R] Thank you for your help and for sharing the link with me. I worked through the concepts in that handout and got it working.\n  Here's the working script :\n    using Autodesk.Revit.DB;\n    using RevitServices.Persistence;\n    using Revit.Elements;\n    namespace theWorks\n    {\n      public class Dimensions\n      {\n        private Dimensions() { }\n        public static Revit.Elements.Element GetDimType(Revit.Elements.Element dimension)\n        {\n          Document doc = DocumentManager.Instance.CurrentDBDocument;\n          Autodesk.Revit.DB.Element UnwrappedElement = dimension.InternalElement;\n          ElementId id = UnwrappedElement.GetTypeId();\n          ElementType dimType = doc.GetElement(id) as ElementType;\n          return dimType.ToDSType(false);\n        }\n      }\n    }  \n\n- load .net assembly from memory stream\n  [Assembly.Load Method](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.load?view=netframework-4.8) Loads an assembly.\n  [overload taking a Byte array arguyent](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.load?view=netframework-4.8#System_Reflection_Assembly_Load_System_Byte___) Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly. The assembly is loaded into the application domain of the caller.\n  [Q] I am interested in how the revit addin manager manages (:wink:) to reload addins on the fly - in Dynamo we have the notion of packages which are similar to addins (a set of dlls or dynamo code we might need to load) - for dynamo code, reloading or unloading it can be done, but for .net dlls - my understanding is that in net framework (prior to the release of .net core 3) you cannot unload an assembly once loaded - how does the addin manager do this? Whos the owner and is the code in the revit repo? (edited)\n  [A] i am not privy to the add-in manager source code, so i can only guess. you can load .NET code either from a DLL file on disk or from a stream in memory, cf. https://stackoverflow.com/questions/40384619/how-to-load-assembly-from-stream-in-net-core. the add-in manager reads the DLL file on disk, converts it to a memory stream, and uses that to load the .NET code into the .NET environment. therefore, .NET never gets to see or touch (or lock) the DLL file.\n\n- [How to Become a Successful Freelancer poscast]\n  https://www.freecodecamp.org/news/how-to-become-a-successful-freelancer-podcast/\n  (90 minute listen)\n  How to become a successful freelancer: a podcast interview with Kyle Prinsloo.\n  Kyle dropped out of school and worked as a jewelry salesman before teaching himself to code.\n  His freelance business grew, and he now runs a profitable software development consultancy in South Africa.\n\ntwitter:\n\nSuccessful freelancing, loading an assembly from a memory stream to prevent DLL locking, and wrapping an element for Dynamo zero-touch node in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/zerotouchnodewrappeer\n\nHere are some topics that came up last week\n&ndash; Dynamo Zero Touch Node Revit element wrapper\n&ndash; Loading a .NET assembly from a memory stream\n&ndash; How to become a successful freelancer\n&ndash; Talking about memory streams, I hiked up Rio Chillar in Nerja, Andalusia...\n\nlinkedin:\n\nSuccessful freelancing, loading an assembly from a memory stream to prevent DLL locking, and wrapping an element for Dynamo zero-touch node in the #RevitAPI \n\nhttp://bit.ly/zerotouchnodewrappeer\n\nHere are some topics that came up last week:\n\n- Dynamo Zero Touch Node Revit element wrapper\n- Loading a .NET assembly from a memory stream\n- How to become a successful freelancer\n\nTalking about memory streams, I hiked up Rio Chillar in Nerja, Andalusia...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<p style=\"font-size: 80%; font-style:italic\"></p>\n\nDynamo Zero Touch CS#Node Element Wrapper\n\n-->"
  },
  {
    "original_filename": "1770_dynztcs_wrapper",
    "header_text": "Zero Touch Node Wrapper and Load from Stream",
    "local_header_href": "#zero-touch-node-wrapper-and-load-from-stream",
    "chunk_text": "### Zero Touch Node Wrapper and Load from Stream\n\nLet's start this week with these topics that came up in the last one:\n\n- [Dynamo Zero Touch Node Revit element wrapper](#2)\n- [Loading a .NET assembly from a memory stream](#3)\n- [How to become a successful freelancer](#4)\n\nTalking about memory streams, I hiked up Rio Chillar in Nerja, Andalusia:\n\n<center>\n<img src=\"img/rio_chillar.jpg\" alt=\"Rio Chillar\" width=\"400\">\n<p style=\"font-size: 80%; font-style:italic\">Natural stream &ndash; Rio Chillar</p>\n</center>"
  },
  {
    "original_filename": "1770_dynztcs_wrapper",
    "header_text": "Dynamo Zero Touch Node Revit Element Wrapper",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Dynamo Zero Touch Node Revit Element Wrapper\n\nYet another solution suggested by\nFrank [@Fair59](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/2083518) Aarssen\nhelped Alexandra Nelson share the solution to implement a wrapper for passing back a Revit element to Dynamo from a C# Zero-Touch node, in the thread \non [retrieving the `DimensionType` of a `Dimension`](https://forums.autodesk.com/t5/revit-api-forum/trying-to-retrieve-the-dimensiontype-of-a-dimension/m-p/8968599):\n\n**Question:** I'm trying to build a ZeroTouchNode with C# in Visual Studio whose input is a `Dimension` element and outputs its `DimensionType`. It seemed simple, but I'm having trouble returning the `DimensionType` element. Instead, the node is returning \"Autodesk.Revit.DB.DimensionType\". How do I retrieve the actual element? \n\nWhen I try to return the element id, the id of the dimension type appears, but not the dimension type element.\n\nWhen I tried to return the Revit element itself using the `GetElement` method and changed the return type to `Element` rather than `ElementType`, it still gives me the same output.\n\n**Answer:** You cannot directly return a Revit class. You need to wrap it in a Dynamo wrapper class.\n\nPlease see how to [become a Dynamo Zero Touch C# Node developer in 75 minutes](https://forum.dynamobim.com/t/become-a-dynamo-zero-touch-c-node-developer-in-75-minutes/28007)\nand download the handout.\n\n**Answer:** Thank you for your help and for sharing the link with me. I worked through the concepts in that handout and got it working.\n\nHere's the working script:\n\n<pre class=\"code\">\n  using Autodesk.Revit.DB;\n  using RevitServices.Persistence;\n  using Revit.Elements;\n  \n  namespace theWorks\n  {\n    public class Dimensions\n    {\n      private Dimensions() { }\n      \n      public static Revit.Elements.Element GetDimType(\n        Revit.Elements.Element dimension )\n      {\n        Document doc = DocumentManager.Instance\n          .CurrentDBDocument;\n          \n        Autodesk.Revit.DB.Element UnwrappedElement\n          = dimension.InternalElement;\n          \n        ElementId id = UnwrappedElement.GetTypeId();\n        \n        ElementType dimType = doc.GetElement(id)\n          as ElementType;\n          \n        return dimType.ToDSType(false);\n      }\n    }\n  }  \n</pre>\n\nMany thanks for Alexandra and Frank for clarifying this!"
  },
  {
    "original_filename": "1770_dynztcs_wrapper",
    "header_text": "Loading a .NET Assembly from a Memory Stream",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Loading a .NET Assembly from a Memory Stream\n\nA little note on how the add-in manager avoids locking the DLLs it loads:\n\n**Question:** I am interested in how the Revit add-in manager manages (:wink:) to reload addins on the fly &ndash; in Dynamo, we have the notion of packages, which are similar to add-ins (a set of DLLs or Dynamo code we might need to load)  &ndash; reloading or unloading can be done for Dynamo code, but for .NET DLLs &ndash; my understanding is that in the NET framework (prior to the release of .NET core 3) you cannot unload an assembly once loaded &ndash; how does the addin manager do this?\n\n**Answer:** You can load .NET code either from a DLL file on disk or from a stream in memory.\n\nThe [Assembly.Load method](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.load?view=netframework-4.8) Loads an assembly.\n\nIt also provides\nan [overload taking a `Byte` array argument](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.load?view=netframework-4.8#System_Reflection_Assembly_Load_System_Byte___). That loads the assembly from a memory stream instead.\nCf. also [how to load assembly from stream](https://stackoverflow.com/questions/40384619/how-to-load-assembly-from-stream-in-net-core).\n\nThe add-in manager reads the DLL file from disk, converts it to a memory stream, and uses that to load the .NET code into the .NET environment. Therefore, .NET never gets to see or touch (or lock) the DLL file.\n\nThis approach has also been used to implement frameworks\nenabling [debug and continue functionality for Revit add-ins](https://thebuildingcoder.typepad.com/blog/about-the-author.html#5.49)."
  },
  {
    "original_filename": "1770_dynztcs_wrapper",
    "header_text": "How to Become a Successful Freelancer",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> How to Become a Successful Freelancer\n\nLet\\s close with this 90-minute [freeCodeCamp](https://www.freecodecamp.org) interview\non [how to become a successful freelancer](https://www.freecodecamp.org/news/how-to-become-a-successful-freelancer-podcast):\n\n> Kyle dropped out of school and worked as a jewellery salesman before teaching himself to code.\n\n> His freelance business grew, and he now runs a profitable software development consultancy..."
  }
]