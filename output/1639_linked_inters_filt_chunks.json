[
  {
    "original_filename": "1639_linked_inters_filt",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<!--\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- 14040989 [Revit API: intersecting model elements]\n  using filtered element intersection in a linked file\n\n- https://forums.autodesk.com/t5/revit-api-forum/linked-file-element-intersection-solid-geometry/m-p/7900208\n\nUsing  #RevitAPI intersection filter with linked file in @AutodeskRevit #bim #dynamobim @AutodeskForge #ForgeDevCon http://bit.ly/linked_inters_filt\n\nWe recently discussed filtering for intersecting elements.\nHere is a closely related issue with an additional twist\n&ndash; Determining elements intersecting mass in a linked file\n&ndash; Coding suggestions and transformations\n&ndash; Solution by applying transformations...\n\n--->"
  },
  {
    "original_filename": "1639_linked_inters_filt",
    "header_text": "Using Intersection Filter with Linked File",
    "local_header_href": "#using-intersection-filter-with-linked-file",
    "chunk_text": "### Using Intersection Filter with Linked File\n\nWe recently \ndiscussed [filtering for intersecting elements](http://thebuildingcoder.typepad.com/blog/2018/03/create-2d-arc-and-filter-for-intersecting-elements.html).\n\nHere is a closely related issue with an additional twist that I discussed\nwith Gustav Blom, structural engineer at [Rambøll](http://www.ramboll.no) in Norway:\n\n- [Determining elements intersecting mass in a linked file](#2) \n- [Coding suggestions and transformations](#3) \n- [Solution by applying transformations](#4) \n\n<center>\n<img src=\"img/ramboell1.png\" alt=\"Rambøll\" width=\"238\"/>\n</center>\n\n\n####<a name=\"2\"></a>Determining Elements Intersecting Mass in a Linked File\n\n**Question:** I am implementing an add-in that determines all model elements inside a mass in a linked file *MassModel.rvt*.\n\nI have used a filtered element collector with an `ElementIntersectsSolidFilter` using the solid representation of the mass as argument.\n\nHere is my main filtering code:\n\n<pre class=\"code\">\n<span style=\"color:blue;\">Public</span>&nbsp;<span style=\"color:blue;\">Sub</span>&nbsp;Run()\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;oWrite1&nbsp;<span style=\"color:blue;\">As</span>&nbsp;IO.<span style=\"color:#2b91af;\">StreamWriter</span>\n \n&nbsp;&nbsp;oWrite1&nbsp;=&nbsp;IO.<span style=\"color:#2b91af;\">File</span>.CreateText(<span style=\"color:#a31515;\">&quot;C:/&nbsp;.&nbsp;.&nbsp;.&nbsp;/ObjectLocation.txt&quot;</span>)\n \n&nbsp;&nbsp;<span style=\"color:green;\">&#39;&nbsp;Collect&nbsp;linked&nbsp;files</span>\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;linkedfilefilter&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">ElementCategoryFilter</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ElementCategoryFilter</span>(<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_RvtLinks)\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;linkedfilecollector&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(m_doc)&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(linkedfilefilter)&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WhereElementIsNotElementType\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;options&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Options</span>&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">Options</span>()\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;tx&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Transaction</span>&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">Transaction</span>(m_doc)\n&nbsp;&nbsp;tx.Start(<span style=\"color:#a31515;\">&quot;Object&nbsp;Locate&quot;</span>)\n \n&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;linkedfilecollector.Count&nbsp;&gt;&nbsp;0&nbsp;<span style=\"color:blue;\">Then</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;linkedfile&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">RevitLinkInstance</span>&nbsp;<span style=\"color:blue;\">In</span>&nbsp;linkedfilecollector\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;linkedfile.GetLinkDocument.Title.Equals(<span style=\"color:#a31515;\">&quot;MassModel.rvt&quot;</span>)&nbsp;<span style=\"color:blue;\">Then</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Try</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">&#39;&nbsp;Find&nbsp;all&nbsp;elements&nbsp;with&nbsp;OBJ-LOCATION-RDK&nbsp;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">&#39;&nbsp;Parameter&nbsp;And&nbsp;erase&nbsp;previous&nbsp;values</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;collector&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(m_doc)&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WhereElementIsNotElementType&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WhereElementIsViewIndependent\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;el&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;<span style=\"color:blue;\">In</span>&nbsp;collector\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;el.Category&nbsp;<span style=\"color:blue;\">IsNot</span>&nbsp;<span style=\"color:blue;\">Nothing</span>&nbsp;<span style=\"color:blue;\">And</span>&nbsp;el.Parameters.Size&nbsp;&gt;&nbsp;0&nbsp;<span style=\"color:blue;\">Then</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;ElementParameters&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">ParameterSet</span>&nbsp;=&nbsp;el.Parameters\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;elparam&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Parameter</span>&nbsp;<span style=\"color:blue;\">In</span>&nbsp;ElementParameters\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;elparam.Definition.Name&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;OBJ-LOCATION-RDK&quot;</span>&nbsp;<span style=\"color:blue;\">Then</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elparam.Set(<span style=\"color:#a31515;\">&quot;&quot;</span>)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oWrite1.WriteLine(el.Category.Name)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Next</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Next</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;linkedmassCatFilter&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">ElementCategoryFilter</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ElementCategoryFilter</span>(<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_Mass)\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;massCollector&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(linkedfile.GetLinkDocument)&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WhereElementIsNotElementType()&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(linkedmassCatFilter)\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;populatedcounter&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">Integer</span>&nbsp;=&nbsp;0\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;mass&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;<span style=\"color:blue;\">In</span>&nbsp;massCollector\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;solSet&nbsp;<span style=\"color:blue;\">As</span>&nbsp;Generic.<span style=\"color:#2b91af;\">IEnumerable</span>(<span style=\"color:blue;\">Of</span>&nbsp;<span style=\"color:#2b91af;\">Solid</span>)&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;mass.Geometry(options).OfType(<span style=\"color:blue;\">Of</span>&nbsp;<span style=\"color:#2b91af;\">Solid</span>)()\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;potSol&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Solid</span>&nbsp;<span style=\"color:blue;\">In</span>&nbsp;solSet\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;(potSol&nbsp;<span style=\"color:blue;\">IsNot</span>&nbsp;<span style=\"color:blue;\">Nothing</span>&nbsp;<span style=\"color:blue;\">And</span>&nbsp;<span style=\"color:blue;\">Not</span>&nbsp;potSol.Edges.IsEmpty)&nbsp;<span style=\"color:blue;\">Then</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;elementintersectsolidfilter&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsSolidFilter</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsSolidFilter</span>(potSol)\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;intersectingelems&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(m_doc)&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(elementintersectsolidfilter)\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oWrite1.WriteLine(<span style=\"color:#a31515;\">&quot;intersecting&nbsp;elems:&nbsp;&quot;</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;intersectingelems.Count.ToString)\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;intersectingelem&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;<span style=\"color:blue;\">In</span>&nbsp;intersectingelems\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;ElementParameters&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">ParameterSet</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;intersectingelem.Parameters\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;param&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Parameter</span>&nbsp;<span style=\"color:blue;\">In</span>&nbsp;ElementParameters\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;param.Definition.Name&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;OBJ-LOCATION-RDK&quot;</span>&nbsp;<span style=\"color:blue;\">Then</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;<span style=\"color:blue;\">Not</span>&nbsp;param.AsString&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;&quot;</span>&nbsp;<span style=\"color:blue;\">Then</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.Set(param.AsString&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;+&quot;</span>&nbsp;+&nbsp;mass.Name)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Else</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param.Set(mass.Name)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;populatedcounter&nbsp;+=&nbsp;1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Next</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Next</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Next</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Next</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox(<span style=\"color:#a31515;\">&quot;Populated&nbsp;parameter&nbsp;OBJ-LOCATION-RDK&nbsp;for&nbsp;&quot;</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;populatedcounter.ToString&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;&nbsp;model&nbsp;elements&quot;</span>)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Exit</span>&nbsp;<span style=\"color:blue;\">For</span>\n \n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Catch</span>&nbsp;ex&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Exception</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">Try</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Else</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox(<span style=\"color:#a31515;\">&quot;No&nbsp;linked&nbsp;file&nbsp;by&nbsp;name&nbsp;of&nbsp;MassModel.rvt&nbsp;found&quot;</span>)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Next</span>\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Else</span>\n&nbsp;&nbsp;&nbsp;&nbsp;MsgBox(<span style=\"color:#a31515;\">&quot;No&nbsp;linked&nbsp;files&nbsp;in&nbsp;project.&nbsp;&quot;</span>&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;Please&nbsp;link&nbsp;a&nbsp;file&nbsp;named&nbsp;MassModel.rvt&nbsp;into&nbsp;project&quot;</span>)\n&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n \n&nbsp;&nbsp;tx.Commit()\n \n&nbsp;&nbsp;oWrite1.Close()\n<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">Sub</span>\n</pre>\n\nThe strange thing is this: it only returns the elements that have been offset or disjoined from their work plane.\n\nIs there a simpler way to achieve what I am trying to do, like the `geometry.DoesIntersect` node in Dynamo? \n\n\n####<a name=\"3\"></a>Coding Suggestions and Transformations\n\n**Answer:** I'll begin with a comment or two on your sample code:\n\nFirst, it is cleaner and safer and easier to encapsulate transactions in a `using` clause:\n[using `using` automagically disposes and rolls back](http://thebuildingcoder.typepad.com/blog/2012/04/using-using-automagically-disposes-and-rolls-back.html).\nRefer to The Building Coder topic group for more\non [handling transactions and transaction groups](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.53).\n\nSecondly, you can access a parameter on an element directly by name.\n\nIt is better to use a display name independent method when possible, but it works well if you can guarantee that the given parameter name is unique on that element.\n\nThen you can thus replace the following lines of code:\n\n<pre class=\"code\">\n  Dim ElementParameters As ParameterSet = el.Parameters\n  For Each elparam As Parameter In ElementParameters\n    If elparam.Definition.Name = \"OBJ-LOCATION-RDK\" Then\n      elparam.Set(\"\")\n      oWrite1.WriteLine(el.Category.Name)\n    End If\n  Next\n</pre>\n\nThey can be replaced by something like:\n\n<pre class=\"code\">\n  IList<Parameter> plist = e.GetParameters(\"OBJ-LOCATION-RDK\")\n  Parameter elparam = plist[0]\n  elparam.Set(\"\")\n</pre>\n\nThat would be faster, more efficient, easier to read and understand.\n\nIt has nothing to do with your question, though, does it?\n\nLooking closer at your specific question:\n\nI was under the impression that all Dynamo code is public domain and open source, so you can explore the implementation of the `DoesIntersect` node yourself.\n\nHave you checked out that possibility?\n\nThe mass element lives in `linkedfile.GetLinkDocument`, and so do the solids `potSol` that you extract from it. Is that correct?\n\nThe intersecting elements that you are searching for live in the project document `m_doc`, correct?\n\nWhat is the transformation from the linked document into the project document?\n\nHave you taken account of that?\n\nIt is interesting to hear that the intersection works in some cases, but not in others: 'elements offset or disjoined from their work plane'.\n\nMaybe that is affecting their transformation in some way.\n\nI recently discussed [filtering for intersecting elements](http://thebuildingcoder.typepad.com/blog/2018/03/create-2d-arc-and-filter-for-intersecting-elements.html) in\ngeneral.\n\nAnother, even more relevant discussion\nconcerns [linked file element intersection solid geometry](https://forums.autodesk.com/t5/revit-api-forum/linked-file-element-intersection-solid-geometry/m-p/7861611).\nThere, I make the following suggestion:\n\nYou have two solids, `A` in your main project `P` and `B` in your linked project `Q`.\n\n- Determine the transformation `T` from the linked document `Q` coordinates to `P`'s.\n- Open the linked project `Q` and retrieve the solid `Sb` of `B`.\n- Transform it to `P`'s coordinate space: `T * Sb`.\n- Retrieve the solid `Sa` of `A`.\n- Calculate the intersection of `T*Sb` with `Sa`.\n \nNow you can use an element intersection filter based on the intersection result like in the discussion mentioned before.\n\nThe transformation of `Sb` can be obtained using\nthe [SolidUtils.CreateTransformed method](http://www.revitapidocs.com/2018.1/22592761-f39c-4f53-d33b-6c21a4fa9d2d.htm).\n\nPlease check that out as well.\n\n\n####<a name=\"4\"></a>Solution by Applying Transformations\n\n**Response:** You are correct; I had not considered the transformation of the linked mass elements, and it was only by dumb luck that every time I offset or disjoined a model element it would intersect with the default position of the linked masses.\n\nOnce the transform was added to the code it worked just as expected.\n\nYou are welcome to share this on your blog.\n\nHere is the relevant code:\n\n<pre class=\"code\">\n  <span style=\"color:green;\">&#39;&nbsp;Determine&nbsp;transform&nbsp;of&nbsp;linked&nbsp;file&nbsp;in&nbsp;main&nbsp;project</span>\n  \n  <span style=\"color:blue;\">Dim</span>&nbsp;transform&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Transform</span>&nbsp;=&nbsp;linkedfile.GetTotalTransform\n   \n  <span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;mass&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;<span style=\"color:blue;\">In</span>&nbsp;massCollector\n   \n  &nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;massSolids&nbsp;<span style=\"color:blue;\">As</span>&nbsp;Generic.<span style=\"color:#2b91af;\">IEnumerable</span>(<span style=\"color:blue;\">Of</span>&nbsp;<span style=\"color:#2b91af;\">Solid</span>)&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;mass.Geometry(options).OfType(<span style=\"color:blue;\">Of</span>&nbsp;<span style=\"color:#2b91af;\">Solid</span>)()\n   \n  &nbsp;&nbsp;<span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;massSolid&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Solid</span>&nbsp;<span style=\"color:blue;\">In</span>&nbsp;massSolids\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;(massSolid&nbsp;<span style=\"color:blue;\">IsNot</span>&nbsp;<span style=\"color:blue;\">Nothing</span>&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">And</span>&nbsp;<span style=\"color:blue;\">Not</span>&nbsp;massSolid.Edges.IsEmpty)&nbsp;<span style=\"color:blue;\">Then</span>\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">&#39;&nbsp;Apply&nbsp;transform&nbsp;to&nbsp;mass</span>\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;transformedSolid&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Solid</span>&nbsp;=&nbsp;<span style=\"color:#2b91af;\">SolidUtils</span>&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.CreateTransformed(massSolid,&nbsp;transform)\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;elementIntersectsSolidFilter&nbsp;<span style=\"color:blue;\">As</span>&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsSolidFilter</span>&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsSolidFilter</span>(transformedSolid)\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;intersectingElems&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(m_doc)&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WhereElementIsNotElementType&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WhereElementIsViewIndependent&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(elementIntersectsSolidFilter)\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">For</span>&nbsp;<span style=\"color:blue;\">Each</span>&nbsp;intersectingElem&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">In</span>&nbsp;intersectingElems\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;elParams&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">IList</span>(<span style=\"color:blue;\">Of</span>&nbsp;<span style=\"color:#2b91af;\">Parameter</span>)&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;intersectingElem.GetParameters(\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;Mass&nbsp;Intersections&quot;</span>)\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;elParams.Count&nbsp;&gt;&nbsp;0&nbsp;<span style=\"color:blue;\">Then</span>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;elParam&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Parameter</span>&nbsp;=&nbsp;elParams(0)\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">If</span>&nbsp;elParam.AsString&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;&quot;</span>&nbsp;<span style=\"color:blue;\">Then</span>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elParam.Set(mass.Name)\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;populatedCounter&nbsp;+=&nbsp;1\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Else</span>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elParam.Set(elParam.AsString&nbsp;_\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;+&quot;</span>&nbsp;+&nbsp;mass.Name)\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Next</span>\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">If</span>\n  &nbsp;&nbsp;<span style=\"color:blue;\">Next</span>\n  <span style=\"color:blue;\">Next</span>\n</pre>\n\nApart from cleaning it up a bit, the only changes made from the original case are in the lines beneath the comments.\n\n<center>\n<img src=\"img/ramboell2.png\" alt=\"Rambøll\" width=\"364\"/>\n</center>\n\nMany thanks to Gustav for raising this interesting issue and sharing his solution!"
  }
]