[
  {
    "original_filename": "1045_roomeditorapp",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1045_roomeditorapp",
    "header_text": "RoomEditorApp for Revit 2014 on GitHub",
    "local_header_href": "#roomeditorapp-for-revit-2014-on-github",
    "chunk_text": "<h3>RoomEditorApp for Revit 2014 on GitHub</h3><p>I discussed my Revit add-in for my cloud-based, real-time, round-trip, 2D Revit model editing application on any mobile device in depth last spring, with the last update on its\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/my-cloud-based-2d-editor-implementation-status.html\">\nimplementation status</a> published\n\nback in May.</p><p>Even at that time, since I was mainly concentrating on the exciting cloud aspects of the application, I had added quite a bit of functionality to the Revit add-in that I never got around to documenting, such as</p><ul>\n<li>External application</li>\n<li>Automatic immediate BIM update from cloud database</li>\n<li>Subscription toggle button</li>\n</ul><p>The various aspects that I did already discuss are listed in The Building Coder\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/desktop\">\nDesktop</a> category.\n\n<p>By popular demand, I also provided an emergency stop-gap update of the source code for the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/sydney-revit-api-training-and-vacation.html#9\">\nlatest Revit 2013 version</a> during the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/sydney-revit-api-training-and-vacation.html\">\nSydney Revit API training</a> in July.\n\n<p>I now really have to get going with the preparation of my AU presentations, and one of the unavoidable steps is migrating this application to Revit 2014, which is what I discuss here and now.</p>\n<a name=\"3\"></a>\n<h4>Clone and Compile DreamSeat</h4>\n<p>One of the prerequisites for interacting with the cloud database is obviously uploading and querying of its data.</p>\n<p>I use CouchDB as the cloud database and the\n\n<a href=\"https://github.com/vdaron/DreamSeat\">\nDreamSeat .NET library</a> to\n\naccess it from my C# Revit add-in.</p>\n<p>To create the library for my add-in to reference, I cloned the DreamSeat GitHub repository to my local system:</p>\n<pre>\n  git clone https://github.com/vdaron/DreamSeat\n</pre>\n<p>Since it was last built using a newer version of Visual Studio, I had to edit the two first lines in the DreamSeat.sln solution file to be able to use Visual Studio 2010 instead.\nI simply changed them to read:</p>\n<pre>\nMicrosoft Visual Studio Solution File, Format Version 11.00\n# Visual Studio 2010\n</pre>\n<p>No other changes required, the library compiled, and I can add a reference to it to my Revit add-in project.</p>\n<a name=\"4\"></a>\n<h4>RoomEditorApp Migration from Revit 2013 to Revit 2014</h4>\n<p>I created a new Visual Studio solution for a new Revit add-in named RoomEditorApp and copied the code from my old Revit 2013 GetLoops add-in into it.</p>\n<p>After the flat migration, the compilation completes and just reports\n\n<a href=\"zip/room_editor_app_migr_2014_1.txt\">\n16 obsolete API usage warnings</a>,\n\nwhich seems pretty good.</p>\n<p>I posted the flat migrated version to the\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp\">\nGitHub RoomEditorApp repository</a> and\n\ncreated an initial version\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp/releases/tag/2013.0.0.9\">\n2013.0.0.9</a> to\n\nprovide a starting point from which to track my changes.</p>\n<p>I easily fixed all the warnings, as described in numerous previous discussions, and published version\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp/releases/tag/2014.0.0.10\">\n2014.0.0.10</a> compiling\n\nwith zero errors and warnings.</p>\n<p>Oops, I also need to change my namespace from GetLoops to RoomEditorApp.\nThis became obvious as soon as I attempted to load the external application in Revit, since it complained about the missing RoomEditorApp.App specified in the add-in manifest, which was still named GetLoops.App.\nThe namespace is correctly specified in\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp/releases/tag/2014.0.0.11\">\nversion 2014.0.0.11</a>.</p>\n<p>Oops again; it next complained on loading into Revit about lacking the embedded icon resources.\nLuckily, my external application includes assertions that ensure that the required resources are actually found, so I noticed what the problem was.\nHere is finally\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp/releases/tag/2014.0.0.12\">\nversion 2014.0.0.12</a> with\n\nicons added and displaying the user interface successfully in Revit 2014:</p>\n<center>\n<img alt=\"Room editor add-in user interface in Revit 2014\" src=\"img/roomedit_2014_ext_app_icons.png\" width=\"300\"/>\n</center>\n<a name=\"5\"></a>\n<h4>Installing CouchDB</h4>\n<p>For testing purposes, I prefer a local installation of my database in addition to the cloud-based one.</p>\n<p>That obviously also requires a local installation of the CouchDB database system itself as well.</p>\n<p>To create that, simply go to\n\n<a href=\"http://couchdb.apache.org\">\nApache CouchDB</a>,\n\nclick on 'download', install, and restart the computer.</p>\n<p>I install it as a service and later go into the computer management and set the service to be started manually instead of automatically, so it is only available when actually needed.</p>\n<a name=\"6\"></a>\n<h4>Replicate the Database</h4>\n<p>Since I already have my cloud-based application up and running on the\n\n<a href=\"http://www.iriscouch.com\">\nIris Couch</a> cloud\n\nCouchDB server from my last experiments, I can simply replicate that.</p>\n<p>The database base URL is\n\n<a href=\"http://jt.iriscouch.com/roomedit\">\njt.iriscouch.com/roomedit</a>,\n\nwhereas the entry point to access and test it is its main application file index.html at\n\n<a href=\"http://jt.iriscouch.com/roomedit/_design/roomedit/index.html\">\njt.iriscouch.com/roomedit/_design/roomedit/index.html</a>.\n\n<p>I can replicate it using the CouchDB Futon interface on my local machine installation, replicating to a new local database named 'roomedit' from the cloud-based database instance:</p>\n<center>\n<img alt=\"Replicate database\" src=\"img/roomedit_2014_replicate_to_local.png\" width=\"600\"/>\n</center>\n<a name=\"7\"></a>\n<h4>Conclusion</h4>\n<p>I am up and running now in Windows 7 and Revit 2014, as opposed to my rather obsolete previous installation based on Windows XP and Revit 2013.</p>\n<p>I still have a lot of undocumented features that I would love to discuss here in the Revit side of things.</p>\n<p>As said, I need to prepare my AU presentation and handout on this topic.</p>\n<p>Whereas the Tech Summit presentation that I worked on in the spring focused heavily on the cloud aspects, the AU presentation will be significantly longer and cover both the cloud database and the Revit add-in features.</p>\n<p>Therefore, I can document the missing bits and pieces in the coming weeks as I get my AU material ready, with the deadline for handing in the material on November 15 looming on the horizon.</p>\n</p></p></p>"
  },
  {
    "original_filename": "1045_roomeditorapp",
    "header_text": "Clone and Compile DreamSeat",
    "local_header_href": "#clone-and-compile-dreamseat",
    "chunk_text": "<h4>Clone and Compile DreamSeat</h4><p>One of the prerequisites for interacting with the cloud database is obviously uploading and querying of its data.</p><p>I use CouchDB as the cloud database and the\n\n<a href=\"https://github.com/vdaron/DreamSeat\">\nDreamSeat .NET library</a> to\n\naccess it from my C# Revit add-in.</p><p>To create the library for my add-in to reference, I cloned the DreamSeat GitHub repository to my local system:</p><pre>\n  git clone https://github.com/vdaron/DreamSeat\n</pre><p>Since it was last built using a newer version of Visual Studio, I had to edit the two first lines in the DreamSeat.sln solution file to be able to use Visual Studio 2010 instead.\nI simply changed them to read:</p><pre>\nMicrosoft Visual Studio Solution File, Format Version 11.00\n# Visual Studio 2010\n</pre><p>No other changes required, the library compiled, and I can add a reference to it to my Revit add-in project.</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "1045_roomeditorapp",
    "header_text": "RoomEditorApp Migration from Revit 2013 to Revit 2014",
    "local_header_href": "#roomeditorapp-migration-from-revit-2013-to-revit-2014",
    "chunk_text": "<h4>RoomEditorApp Migration from Revit 2013 to Revit 2014</h4><p>I created a new Visual Studio solution for a new Revit add-in named RoomEditorApp and copied the code from my old Revit 2013 GetLoops add-in into it.</p><p>After the flat migration, the compilation completes and just reports\n\n<a href=\"zip/room_editor_app_migr_2014_1.txt\">\n16 obsolete API usage warnings</a>,\n\nwhich seems pretty good.</p><p>I posted the flat migrated version to the\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp\">\nGitHub RoomEditorApp repository</a> and\n\ncreated an initial version\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp/releases/tag/2013.0.0.9\">\n2013.0.0.9</a> to\n\nprovide a starting point from which to track my changes.</p><p>I easily fixed all the warnings, as described in numerous previous discussions, and published version\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp/releases/tag/2014.0.0.10\">\n2014.0.0.10</a> compiling\n\nwith zero errors and warnings.</p><p>Oops, I also need to change my namespace from GetLoops to RoomEditorApp.\nThis became obvious as soon as I attempted to load the external application in Revit, since it complained about the missing RoomEditorApp.App specified in the add-in manifest, which was still named GetLoops.App.\nThe namespace is correctly specified in\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp/releases/tag/2014.0.0.11\">\nversion 2014.0.0.11</a>.</p><p>Oops again; it next complained on loading into Revit about lacking the embedded icon resources.\nLuckily, my external application includes assertions that ensure that the required resources are actually found, so I noticed what the problem was.\nHere is finally\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp/releases/tag/2014.0.0.12\">\nversion 2014.0.0.12</a> with\n\nicons added and displaying the user interface successfully in Revit 2014:</p><center>\n<img alt=\"Room editor add-in user interface in Revit 2014\" src=\"img/roomedit_2014_ext_app_icons.png\" width=\"300\"/>\n</center><a name=\"5\"></a>"
  },
  {
    "original_filename": "1045_roomeditorapp",
    "header_text": "Installing CouchDB",
    "local_header_href": "#installing-couchdb",
    "chunk_text": "<h4>Installing CouchDB</h4><p>For testing purposes, I prefer a local installation of my database in addition to the cloud-based one.</p><p>That obviously also requires a local installation of the CouchDB database system itself as well.</p><p>To create that, simply go to\n\n<a href=\"http://couchdb.apache.org\">\nApache CouchDB</a>,\n\nclick on 'download', install, and restart the computer.</p><p>I install it as a service and later go into the computer management and set the service to be started manually instead of automatically, so it is only available when actually needed.</p><a name=\"6\"></a>"
  },
  {
    "original_filename": "1045_roomeditorapp",
    "header_text": "Replicate the Database",
    "local_header_href": "#replicate-the-database",
    "chunk_text": "<h4>Replicate the Database</h4><p>Since I already have my cloud-based application up and running on the\n\n<a href=\"http://www.iriscouch.com\">\nIris Couch</a> cloud\n\nCouchDB server from my last experiments, I can simply replicate that.</p><p>The database base URL is\n\n<a href=\"http://jt.iriscouch.com/roomedit\">\njt.iriscouch.com/roomedit</a>,\n\nwhereas the entry point to access and test it is its main application file index.html at\n\n<a href=\"http://jt.iriscouch.com/roomedit/_design/roomedit/index.html\">\njt.iriscouch.com/roomedit/_design/roomedit/index.html</a>.\n\n<p>I can replicate it using the CouchDB Futon interface on my local machine installation, replicating to a new local database named 'roomedit' from the cloud-based database instance:</p>\n<center>\n<img alt=\"Replicate database\" src=\"img/roomedit_2014_replicate_to_local.png\" width=\"600\"/>\n</center>\n<a name=\"7\"></a>\n<h4>Conclusion</h4>\n<p>I am up and running now in Windows 7 and Revit 2014, as opposed to my rather obsolete previous installation based on Windows XP and Revit 2013.</p>\n<p>I still have a lot of undocumented features that I would love to discuss here in the Revit side of things.</p>\n<p>As said, I need to prepare my AU presentation and handout on this topic.</p>\n<p>Whereas the Tech Summit presentation that I worked on in the spring focused heavily on the cloud aspects, the AU presentation will be significantly longer and cover both the cloud database and the Revit add-in features.</p>\n<p>Therefore, I can document the missing bits and pieces in the coming weeks as I get my AU material ready, with the deadline for handing in the material on November 15 looming on the horizon.</p>\n</p>"
  },
  {
    "original_filename": "1045_roomeditorapp",
    "header_text": "Conclusion",
    "local_header_href": "#conclusion",
    "chunk_text": "<h4>Conclusion</h4><p>I am up and running now in Windows 7 and Revit 2014, as opposed to my rather obsolete previous installation based on Windows XP and Revit 2013.</p><p>I still have a lot of undocumented features that I would love to discuss here in the Revit side of things.</p><p>As said, I need to prepare my AU presentation and handout on this topic.</p><p>Whereas the Tech Summit presentation that I worked on in the spring focused heavily on the cloud aspects, the AU presentation will be significantly longer and cover both the cloud database and the Revit add-in features.</p><p>Therefore, I can document the missing bits and pieces in the coming weeks as I get my AU material ready, with the deadline for handing in the material on November 15 looming on the horizon.</p>"
  }
]