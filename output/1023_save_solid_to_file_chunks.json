[
  {
    "original_filename": "1023_save_solid_to_file",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1023_save_solid_to_file",
    "header_text": "How to Save a Solid to a File",
    "local_header_href": "#how-to-save-a-solid-to-a-file",
    "chunk_text": "<h3>How to Save a Solid to a File</h3><p>As I announced, I am\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/09/appstore-advice-and-zooming-in-a-preview-control.html#5\">\ncurrently on vacation</a>.</p><p>Still, I don't want to leave you or The Building Coder completely abandoned for too long, so here is a quick question recently answered by my colleague\n\n<a href=\"http://adndevblog.typepad.com/technology_perspective/akira-kudo.html\">\nAkira Kudo</a>:\n\n\n<p><strong>Question:</strong> How can I save a solid to a file, please?</p>\n<p>I searched for an applicable API call, but without success.</p>\n<p>I am not trying to save a Revit element, or I could use the existing Export methods.</p>\n<p>My object is an Autodesk.Revit.DB.Solid instance generated by the Autodesk.Revit.DB.BooleanOperationsUtils class.</p>\n<p><strong>Answer:</strong> You could use the following workaround:\n\n<ul>\n<li>Create a new family with the given solid. </li>\n<li>Export a 3D view of the family to a SAT file.</li>\n<!-- using the method Export(string, string, ICollection&lt;ElementId&gt;, SATExportOptions) -->\n</ul>\n<p>Here are pointers to different Revit SDK samples demonstrating all the various steps:</p>\n<p>To create family document, you can call the Application.NewFamilyDocument Method.</p>\n<pre>\nFreeFormElement/CS/FreeFormElementUtils.cs(66):\n\n  Document familyDoc = app.NewFamilyDocument(\n    familyTemplate);\n</pre>\n<p>To create a component in the family from the given solid, you can call the FreeFormElement.Create method.</p>\n<pre>\nFreeFormElement/CS/FreeFormElementUtils.cs(113):\n\n  RevitFreeFormElement element = Autodesk.Revit.DB\n    .FreeFormElement.Create(familyDoc, block);\n</pre>\n<p>To create a 3D view, you can call the View3D.CreateIsometric method:</p>\n<pre>\nGeometryAPI/SlaveSymbolGeometry/CS/SlaveSymbolGeometry.cs(82):\n\n  View3D instanceView = View3D.CreateIsometric(\n    RevitDoc, View3DId);\n</pre>\n<p>Finally, you can use the Document.Export method to export a collection of views to a SAT file:</p>\n<pre>\nImportExport/CS/Export/ExportSATData.cs(164):\n\n  exported = m_activeDoc.Export(m_exportFolder,\n    m_exportFileName, viewIds, satExportOptions);\n</pre>\n<p>Revit can only export specified views, not an individual solid.\nIf the freeform element generated from the solid is the only element in the family, exporting the family 3D view has the same effect.</p>\n<p>I hope you find this useful, and also enjoy this use of the Revit SDK samples to explore the application of the API methods in a fitting context for a specified real-world task.</p>\n<p>Many thanks to Akira for providing this solution and illustrating this powerful approach.</p>\n<p>And now, I return to my vacation pleasures...  :-)</p>\n</p></p>"
  }
]