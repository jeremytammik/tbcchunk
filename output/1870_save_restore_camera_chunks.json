[
  {
    "original_filename": "1870_save_restore_camera",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- restore 3D view camera orientation\n  https://thebuildingcoder.typepad.com/blog/2020/04/revit-camera-fov-forge-partner-talks-and-jobs.html#comment-5106250525\n\n- Ehsan [@eirannejad](https://github.com/eirannejad) Iran-Nejad's [Revit cheatsheets](https://github.com/eirannejad/revit-cheatsheets)\n  eirannejad_cheatsheet_keynote_file.png\n  > Here is all the Revit cheat sheets I made in the past years to make life easier working with Revit. Want to add yours as well?!\n  https://twitter.com/eirannejad/status/1313890807368228864\n\ntwitter:\n\nRevit cheat sheets, saving and restoring 3D view camera settings in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/3dviewcamera\n\nValerii Nozdrenkov shares a powerful solution to save and restore the complete 3D view camera settings and Ehsan Iran-Nejad publishes his set of Revit cheat sheets\n&ndash; Serialising 3D view camera settings\n&ndash; Revit cheat sheets...\n\nlinkedin:\n\n\nRevit cheat sheets, saving and restoring 3D view camera settings in the #RevitAPI \n\nhttp://bit.ly/3dviewcamera\n\nValerii Nozdrenkov shares a powerful solution to save and restore the complete 3D view camera settings and Ehsan Iran-Nejad publishes his set of Revit cheat sheets:\n\n- Serialising 3D view camera settings\n- Revit cheat sheets...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n-->"
  },
  {
    "original_filename": "1870_save_restore_camera",
    "header_text": "Save and Restore 3D View Camera Settings",
    "local_header_href": "#save-and-restore-3d-view-camera-settings",
    "chunk_text": "### Save and Restore 3D View Camera Settings\n\nToday, Valerii Nozdrenkov shares a powerful solution to save and restore the complete 3D view camera settings, and Ehsan Iran-Nejad publishes his set of Revit cheat sheets:\n\n- [Serialising 3D view camera settings](#2)\n- [Revit cheat sheets](#3)"
  },
  {
    "original_filename": "1870_save_restore_camera",
    "header_text": "Serialising 3D View Camera Settings",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Serialising 3D View Camera Settings\n\nValerii Nozdrenkov shared a powerful solution for serialising the 3D view camera settings\n[in](https://thebuildingcoder.typepad.com/blog/2020/04/revit-camera-fov-forge-partner-talks-and-jobs.html#comment-4929308181)\n[a](https://thebuildingcoder.typepad.com/blog/2020/04/revit-camera-fov-forge-partner-talks-and-jobs.html#comment-5106250525)\n[series](https://thebuildingcoder.typepad.com/blog/2020/04/revit-camera-fov-forge-partner-talks-and-jobs.html#comment-5107042312)\n[of](https://thebuildingcoder.typepad.com/blog/2020/04/revit-camera-fov-forge-partner-talks-and-jobs.html#comment-5107053457)\n[comments](https://thebuildingcoder.typepad.com/blog/2020/04/revit-camera-fov-forge-partner-talks-and-jobs.html#comment-5107690269), \nnicely complementing previous explorations on:\n\n- [Setting up your `ViewOrientation3D`](http://thebuildingcoder.typepad.com/blog/2013/04/setting-up-your-vieworientation3d.html)\n- [Exporting image and setting a default 3D view orientation](http://thebuildingcoder.typepad.com/blog/2013/08/setting-a-default-3d-view-orientation.html)\n- [Mapping Forge viewer camera settings back to Revit](https://thebuildingcoder.typepad.com/blog/2019/06/revit-camera-settings-project-plasma-da4r-and-ai.html#2)\n\n**Question:** I have a question about `View3D` camera settings.\nI want to serialize view 3D camera orientation.\nIt works fine if a projection mode is perspective.\nWhen I zoom in or out, the method `GetOrientation` gives correct values for perspective camera (the position of the camera is changed), but in orthographic projection mode, `GetOrientation` always returns the same value regardless of zoom in/out (position of the camera is changed), so I can't recreate saved camera orientation in orthographic mode. There must be another transformation to apply, but I don't know where to take it from.\n\nCurrently, I need to change position manually in order to apply changes made by zooming in or out.\n\nI found, there is a method `GetZoomCorners` of class `UIView`; this is a bounding box.\nIts values change after zooming in/out, but how can I move the `EyePosition` accordingly?\n\nAny suggestions?\n\n**Answer:** I investigated the problem of saving and restoring the current Revit View 3D.\nFor a perspective projection mode, it was very simple: just save camera parameters and then restore them.\nBut for orthographic projection mode, I found that the camera parameters are not changed after zooming or panning the model; compare the following two figures.\n\nBefore:\n\n<center>\n<img src=\"img/vn_3d_camera_orientation_1_before.png\" alt=\"Camera parameters before zooming and panning\" title=\"Camera parameters before zooming and panning\" width=\"600\"/> <!-- 1468 -->\n<p style=\"font-size: 80%; font-style:italic\">Camera parameters before zooming and panning</p>\n</center>\n\nAfter:\n\n<center>\n<img src=\"img/vn_3d_camera_orientation_2_after.png\" alt=\"Camera parameters after zooming and panning\" title=\"Camera parameters after zooming and panning\" width=\"600\"/> <!-- 1478 -->\n<p style=\"font-size: 80%; font-style:italic\">Camera parameters after zooming and panning</p>\n</center>\n\nAfter desperate Googling, I found the solution of this task in GitHub, in the \n[RevitView.cs module](https://github.com/teocomi/BCFier/blob/master/Bcfier.Revit/Data/RevitView.cs) of\nthe [BCFier project](https://github.com/teocomi/BCFier)\nby [@mgrzelak](https://github.com/mgrzelak).\n\nThe idea is:\n\nSaving:\n\n1. Get corners of the active UI view Corner1 {x1,y1,z1} and Corner2 {x2,y2,z2}\n\n    <pre class=\"code\">\n    IList<uiview> views = uidoc.GetOpenUIViews();\n    UIView currentView = views.Where(t => t.ViewId == view3D.Id).FirstOrDefault();\n    //Corners of the active UI view\n    IList<xyz> corners = currentView.GetZoomCorners();\n    XYZ corner1 = corners[0];\n    XYZ corner2 = corners[1];\n    </pre>\n\n2. Calculate center point {0.5(x1+x2),0.5(y1+y2),0.5(z1+z2)}\n\n    <pre class=\"code\">\n    double x = (corner1.X + corner2.X) / 2;\n    double y = (corner1.Y + corner2.Y) / 2;\n    double z = (corner1.Z + corner2.Z) / 2;\n    //center of the UI view\n    XYZ viewCenter = new XYZ(x, y, z);\n    </pre>\n\n3. Calculate diagonal vector\n\n    <pre class=\"code\">\n    diagVector = Corner1-Corner2={x1-x2,y1-y2,z1-z2}\n    XYZ diagVector = corner1 - corner2;\n    </pre>\n\n4. Get up and right vectors\n\n    <pre class=\"code\">\n    ViewOrientation3D viewOrientation3D = view3D.GetOrientation();\n    XYZ upDirection = viewOrientation3D.UpDirection;\n    XYZ rightDirection = forwardDirection.CrossProduct(upDirection);\n    </pre>\n\n5. Calculate height=abs(diagVector*upVector);\n\n    <pre class=\"code\">\n    double height = Math.Abs(diagVector.DotProduct(upDirection));\n    </pre>\n\n6. Find scale = 0.5 * height\n\n    But, the provided solution doesnâ€™t work correctly if the height &gt; width.\n\n    So, we need to take into account both height and width:\n\n    <pre class=\"code\">\n    double height = Math.Abs(diagVector.DotProduct(upDirection));\n    double width = Math.Abs(diagVector.DotProduct(rightDirection));\n    </pre>\n\n    Then we have to find the minimal minside = min(height,width)\n\n    <pre class=\"code\">\n    double minside = Math.Min(height, width);\n    </pre>\n\n7. scale = 0.5 * minside\n\n8. Save center point (eyePosition=viewCenter), upDirection, forwardDirection and scale.\n\nRestoring is the same as in provided above link to GitHub project:\n\n1. Get prevously saved eyePosition, upDirection, forwardDirection and scale.\n2. Move the camera to preciously saved eyePosition\n\n    <pre class=\"code\">\n    var orientation = new ViewOrientation3D(eyePosition, upDirection, forwardDirection);\n    view3D.SetOrientation(orientation);\n    </pre>\n\n3. Calculate corners of square\n\n    Upper left:\n\n    <pre class=\"code\">\n    Corner1 = eyePosition+scale*upVector-scale*rightVector\n    </pre>\n\n    Lower right:\n\n    <pre class=\"code\">\n    Corner2 = eyePosition-scale*upVector+scale*rightVector\n  \n    XYZ Corner1 = position + upDirection* scale - uidoc.ActiveView.RightDirection * scale;\n    XYZ Corner2 = position - upDirection* scale + uidoc.ActiveView.RightDirection * scale;\n    </pre>\n\n4. ZoomCorners\n\n    <pre class=\"code\">\n    ZoomAndCenterRectangle(Corner1, Corner2);\n    uidoc.GetOpenUIViews().FirstOrDefault(t => t.ViewId == view3D.Id).ZoomAndCenterRectangle(Corner1, Corner2);\n    </pre>\n\nHere are two more figures illustrating the scale calculation and zooming corners:\n\n<center>\n<img src=\"img/vn_3d_camera_orientation_3_scale_calc.png\" alt=\"Scale calculation\" title=\"Scale calculation\" width=\"500\"/> <!-- 1081 -->\n<p style=\"font-size: 80%; font-style:italic\">Scale calculation</p> \n<img src=\"img/vn_3d_camera_orientation_4_zoom_corners.png\" alt=\"Zooming corners\" title=\"Zooming corners\" width=\"430\"/> <!-- 899 -->\n<p style=\"font-size: 80%; font-style:italic\">Zooming corners</p>\n</center>\n\nI prepared a sample project fully implementing this task to share in\nthe [RevitOrthoCamera GitHub repository](https://github.com/Valerii-Nozdrenkov/RevitOrthoCamera).\n\nVery many thanks indeed to Valerii for all his valuable work researching and documenting this!"
  },
  {
    "original_filename": "1870_save_restore_camera",
    "header_text": "Revit Cheat Sheets",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Revit Cheat Sheets\n\nEhsan [@eirannejad](https://github.com/eirannejad) Iran-Nejad [shares](https://twitter.com/eirannejad/status/1313890807368228864)\nhis [Revit cheat sheets](https://github.com/eirannejad/revit-cheatsheets) for\nall to enjoy:\n\n> Here are all the Revit cheat sheets I made in the past years to make life easier working with Revit.\nWant to add yours as well?!\n\n<center>\n<img src=\"img/eirannejad_cheatsheet_keynote_file.png\" alt=\"Keynote file cheat sheet\" title=\"Keynote file cheat sheet\" width=\"500\"/> <!-- 1539 -->\n</center>"
  }
]