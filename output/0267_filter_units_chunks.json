[
  {
    "original_filename": "0267_filter_units",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0267_filter_units",
    "header_text": "Parameter Filter Units",
    "local_header_href": "#parameter-filter-units",
    "chunk_text": "<h3>Parameter Filter Units</h3><p>The Western European DevDays conference tour has begun, and I will be presenting and travelling all week, leaving very little time to spend blogging or responding to comments.\nI visited relatives in London the preceding weekend, and took some time to write and post this before the real crunch began.\n\n<p>We have several old posts dealing with various aspects of unit handling in the Revit API:\n\n<ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2008/09/units.html\">Units</a>.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2008/11/formatting-units-strings.html\">Formatting unit strings</a>.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2009/01/unit-types-and-format-options.html\">Unit types and format options</a>.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/unit-conversion.html\">Unit conversion</a>.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2009/10/unit-suffix-and-the-projectunit-sdk-sample.html\">Unit Suffix and the ProjectUnit SDK sample</a>.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2009/10/dut-versus-ust.html\">DisplayUnitType and UnitSymbolType</a>.</li>\n</ul>\n<p>Here is a new related information nugget, a surprising little quirk when defining Revit API filters that just came to my attention last week.\nIn brief, a Revit API parameter filter specifying a length or area will be evaluated using the current user interface units, and not the database units, as one would expect.\nThis is an inconsistency that we expect to change in future releases.\nThis means that to make proper use of filters for selecting elements depending on some unit-based parameter, an add-in using the 2010 API will have to convert the target value to the current user interface unit.\nThis is unexpected.\nI would expect that when working purely within the API, all units should remain in the internal database units, with no exceptions, not for filters nor for anything else.\nIn future, this conversion will hopefully be removed, so that add-ins can work consistently and exclusively in Revit database units.\n\n<p>Specifically, the Filter.NewParameterFilter method taking the three arguments <span class=\"teal\">BuiltInParameter</span>, <span class=\"teal\">CriteriaFilterType</span>, and <span class=\"blue\">double</span> returns the selected elements based on the units displayed in the user interface instead of the internal database units. \n\n<p><strong>Example:</strong> This can be reproduced using the ElementsFilter SDK sample. \nI tested it by running the ElementsFilter in a minimal model with two rooms:\n\n<pre>\nROOM_AREA  Area  double   6.840 m<sup>2</sup>   73.63 sqf\nROOM_AREA  Area  double  14.440 m<sup>2</sup>  155.43 sqf\n</pre>\n<p>Specifying a filter to select all rooms with a value of ROOM_AREA exceeding 14 returns only the second, larger room, i.e. it is evaluating the parameter in the user interface area unit 'square meters' rather than the database area unit 'square feet'.\n</p></p></p></p></p></p>"
  }
]