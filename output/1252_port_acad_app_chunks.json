[
  {
    "original_filename": "1252_port_acad_app",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1252_port_acad_app",
    "header_text": "Porting an AutoCAD Application to Revit",
    "local_header_href": "#porting-an-autocad-application-to-revit",
    "chunk_text": "<h3>Porting an AutoCAD Application to Revit</h3><p>As repeatedly noted, AutoCAD and Revit and their APIs are\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.41\">\nvery different animals</a>.</p><p>Still, the question of porting applications from other CAD systems to Revit does keep popping up, e.g. in this Revit API discussion forum thread on\n\n<a href=\"http://forums.autodesk.com/t5/revit-api/importing-an-autocad-application/m-p/5429829\">importing an AutoCAD application</a>,\n\nso I'll reiterate some aspects of that here once again:</p><p><strong>Question:</strong> We are looking for a bit of updated information in regards to porting an AutoCAD MEP application into Revit MEP. I found a\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/10/porting-an-autocad-application.html\">\ndiscussion on this topic dated back to 2012</a>.\n\nDoes this information remain relevant today?\nWe develop and maintain software that matches the criteria that the first question in the link presents.\nWe create a custom ribbon, create grips and graphic overrules in our software, use MEP objects to store property data and show labels on them and perform extractions to various file types and interfaces.</p><p>Are any of these items possible using the Revit API?</p><p><strong>Answer:</strong>\n<p>Everything said in the blog post back then remains equally valid today.</p>\n<p>Here are some more discussions on the topic of\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.41\">\nRevit and its API compared to other CAD systems</a>.</p>\n<p>Answers to your questions:</p>\n<ol>\n<li>Forget about <i>porting</i>. Think <i>rewrite</i> from scratch.</li>\n<li>Before you do anything else at all, learn and understand the Revit UI, workflows and best practices and talk to experienced users about what Revit can and cannot do. It may do everything you are thinking of programming already, or it may be completely beside the point.</li>\n<li>Custom ribbon... well, no, not really. No such thing as grips. Graphic overrules... well, yes, sort of, but probably nowhere near what you are thinking of. Property data: yes, either shared properties or extensible storage. Labels: use tags, cf. user interface. Perform extractions: cf. schedules or custom add-ins.</li>\n</ol>\n<p>Yes, everything is possible.</p>\n<p>No, porting probably makes no sense whatsoever.</p>\n<p>Yes, rewriting with all your experience will certainly be fun and interesting and rewarding.</p>\n<p>To start looking at the API, take a few hours to work through the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#2\">\ngetting started material</a>,\n\nespecially the <i>My first Revit plugin</i> and <i>DevTV</i> tutorials.</p>\n<p>Now, after that quick excursion into getting started with the Revit API and porting applications from other CAD systems, back to the excitement here at Autodesk University in Las Vegas...</p>\n</p>"
  }
]