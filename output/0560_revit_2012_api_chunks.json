[
  {
    "original_filename": "0560_revit_2012_api",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0560_revit_2012_api",
    "header_text": "Revit 2012 API Features",
    "local_header_href": "#revit-2012-api-features",
    "chunk_text": "<h3>Revit 2012 API Features</h3><p>Revit 2012 and the other \n\n<a href=\"http://autodesk.blogs.com/between_the_lines/2011/03/autodesk-2012-products-announced-and-revealed.html\">\nAutodesk 2012 products have been announced</a>, \n\nand already there is abundant information on it on the web. \nDavid Light discusses quite a few of the \n\n<a href=\"http://autodesk-revit.blogspot.com/2011/03/autodesk-revit-architecture-2012.html\">\nuser interface and product features</a>.\n\n<p>A detailed exploration of some of the following items could fill volumes, but I'll try to briefly give you an idea of what each feature is about, at least.\nFirst, here is simply an overview of the highlights of the Revit 2012 API features.\nSee below for a brief explanation of each item:\n\n<h4>Modifications and Updates Overview</h4>\n<p>These are the rather mundane but important issues which affect existing applications:\n\n<ul>\n<li>.NET Framework 4.0\n<li>Final bye bye ini, hello add-in manifest\n<li>Vendor identification\n<li>Manual regeneration mode\n<li>Compound structure and wall sweeps\n<li>Line and fill patterns\n<li>Independent tag\n<li>Import and export\n<li>Save and close\n<li>Reference properties\n<li>Events\n<li>Move/Mirror/Rotate/Array\n<li>Materials\n<li>Structural analytical model\n<li>Rebar\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<h4>New Features Overview</h4>\n<p>This is the really exciting and in some cases radical new stuff:\n\n<ul>\n<li>Open and Activate Document\n<li>Setting Active View\n<li>Custom Ribbon Tab Management\n<li>Worksharing\n<li>Geometry\n<li>Analysis of Room and Space 3D geometry\n<li>Detailed energy analysis\n<li>Conceptual energy analysis\n<li>Analysis Visualization Framework enhancements\n<li>MEP API enhancements\n<li>Rebar enhancements\n<li>Construction modelling\n<li>Point Clouds\n<li>Extensible Storage\n<li>Linked Models\n<li>Performance Advisor API\n<li>And More!\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<h4>Modifications and Updates Explanation</h4>\n<p>Many of the modifications have to do with cleaning up the separation between the user interface and the API, completing the database/user interface split that was introduced in the Revit 2011 API.\nMany changes are also due to improved automatic API code generation procedures that align the API much better with the internal Revit code and functionality.\n\n<ul>\n<li>.NET Framework 4.0: the Revit 2012 API has been enhanced to run with the .NET 4.0 runtime; to debug add-ins, you must Use Visual Studio 2010; add-ins compiled with VS 2008 will run outside the debug environment.\n<li>Final bye bye ini, hello add-in manifest: loading of external applications and commands through Revit.ini is no longer supported.\n<li>Vendor identification: an additional add-in manifest tag identifying the application developer is required. It makes use of the <a href=\"http://www.autodesk.com/symbreg\">Autodesk Registered Developer Symbol RDS</a>.\n<li>Manual regeneration mode: automatic regeneration mode has been removed. All add-ins now use manual regeneration mode.\n<li>Compound structure and wall sweeps: the compound layer structure is now read-write and can be fully created and access via the API. It was previously read-only.\n<li>Line and fill patterns: new API classes.\n<li>Independent tag: API changed.\n<li>Import and export: API changed.\n<li>Save and close: API changes, better separation of UI and API, preview image can be set.\n<li>Reference properties: the Reference class has been completely renovated.\n<li>Events: various event argument changes.\n<li>Move/Mirror/Rotate/Array: a new ElementTransformUtils class has been introduced to replace the previous methods on the Document class. Implicit dependencies on the current view have been removed.\n<li>Materials: new material classes are introduced and the existing ones deprecated, part of a company-wide materials management undertaking.\n<li>Structural analytical model: API changes.\n<li>Rebar: API changes.\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<h4>New Features Explanation</h4>\n<p>Some of the new features are longstanding and frequently requested wish list items, other are unexpected and exciting completely new areas:\n\n<ul>\n<li>Open and Activate Document: a document can be programmatically opened and activated in the user interface.\n<li>Setting Active View: the active view can be set programmatically.\n<li>Custom Ribbon Tab Management: custom ribbon tabs can be created.\n<li>Worksharing: a comprehensive read-only API to worksharing features is introduced; access the list of worksets, find out what elements are in the workset, who borrowed what, has the element gone out of date with central.\n\n<li>Geometry: some really exciting new geometry features: applications can now create their own geometry; the geometry library was previously read-only. Boolean operations can be performed, and the results can be displayed using the Analysis Visualisation Framework AVF. More detailed access to and analysis of geometrical aspects of Revit elements is supported.\n<li>Analysis of Room and Space 3D geometry: We can now get the 3D geometry of spatial elements like rooms and spaces. It provides access to elements which form the boundary of the rooms and for those who needs fine-grained information of the geometry of the room. You can now access the detailed geometry of the elements that form the boundary of the rooms. Until now we were only able to read the general shape of the room Â– now we can associate that shape with the elements that form the boundary. One of the existing samples, RoofsRooms, which used 300 lines of code to find out if the top boundary of the room intersected the roof or not, has now reduced to 30-40 lines of code.\n<li>Detailed energy analysis: obtain and analyze the contents of a project's detailed energy model, as seen in the Export to gbXML and the Heating and Cooling Loads features; produce an analytical thermal model from the physical model of a building composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<li>Conceptual energy analysis: provide access to the elements and objects created by Revit to perform energy analysis on conceptual design models.\n<li>Analysis Visualization Framework enhancements: support multiple analysis results in the same view, store persistent meta data.\n<li>MEP API enhancements\n<ul>\n<li>Placeholder ducts and pipes: Identify, create, and convert placeholders to physical elements\n<li>PipeSettings, PipeSizeSettings: Read and write access to the plumbing settings governing pipe sizes in Revit MEP\n<li>DuctInsulation, PipeInsulation, DuctLining: Read, write and create access to new procedural insulation and lining features\n</li></li></li></ul>\n<li>Rebar enhancements: multi-planar 3D rebars, corbels.\n<li>Construction modelling: access to parts and assemblies, shop drawings, isolate groups of elements.\n<li>Point Clouds: Engine API for point cloud generation, Client API for point cloud consumption.\n<li>Extensible Storage: read and assign application-owned data to specific elements, create custom XML-based schemas for data storage.\n<li>Linked Models: find external file references, trace the file path of external files and understand the load state in a Revit session, identify if a file is imported or merely linked, what kinds of link, what path.\n<li>Performance Advisor API: issue warnings for elements or settings that may cause performance degradation or affect model performance\n, \naccess built-in Revit rules, define, add and remove custom rules, execute any combination of rules.\n<li>And More:\n<ul>\n<li>Adaptive Components\n<li>IFC Document Open\n<li>FamilyParameter.GUID property: identify shared parameters.\n<li>Copy Element: copy and translate (copy + move).\n<li>Workplane Flip for Family Instances: face-hosted family manipulation.\n<li>Disallow Wall End Joins\n<li>Write access to Element Pinned\n</li></li></li></li></li></li></li></ul>\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<p>Sound exciting?\n\n<p>I promise you, it is!\n</p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0560_revit_2012_api",
    "header_text": "Modifications and Updates Overview",
    "local_header_href": "#modifications-and-updates-overview",
    "chunk_text": "<h4>Modifications and Updates Overview</h4><p>These are the rather mundane but important issues which affect existing applications:\n\n<ul>\n<li>.NET Framework 4.0\n<li>Final bye bye ini, hello add-in manifest\n<li>Vendor identification\n<li>Manual regeneration mode\n<li>Compound structure and wall sweeps\n<li>Line and fill patterns\n<li>Independent tag\n<li>Import and export\n<li>Save and close\n<li>Reference properties\n<li>Events\n<li>Move/Mirror/Rotate/Array\n<li>Materials\n<li>Structural analytical model\n<li>Rebar\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<h4>New Features Overview</h4>\n<p>This is the really exciting and in some cases radical new stuff:\n\n<ul>\n<li>Open and Activate Document\n<li>Setting Active View\n<li>Custom Ribbon Tab Management\n<li>Worksharing\n<li>Geometry\n<li>Analysis of Room and Space 3D geometry\n<li>Detailed energy analysis\n<li>Conceptual energy analysis\n<li>Analysis Visualization Framework enhancements\n<li>MEP API enhancements\n<li>Rebar enhancements\n<li>Construction modelling\n<li>Point Clouds\n<li>Extensible Storage\n<li>Linked Models\n<li>Performance Advisor API\n<li>And More!\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<h4>Modifications and Updates Explanation</h4>\n<p>Many of the modifications have to do with cleaning up the separation between the user interface and the API, completing the database/user interface split that was introduced in the Revit 2011 API.\nMany changes are also due to improved automatic API code generation procedures that align the API much better with the internal Revit code and functionality.\n\n<ul>\n<li>.NET Framework 4.0: the Revit 2012 API has been enhanced to run with the .NET 4.0 runtime; to debug add-ins, you must Use Visual Studio 2010; add-ins compiled with VS 2008 will run outside the debug environment.\n<li>Final bye bye ini, hello add-in manifest: loading of external applications and commands through Revit.ini is no longer supported.\n<li>Vendor identification: an additional add-in manifest tag identifying the application developer is required. It makes use of the <a href=\"http://www.autodesk.com/symbreg\">Autodesk Registered Developer Symbol RDS</a>.\n<li>Manual regeneration mode: automatic regeneration mode has been removed. All add-ins now use manual regeneration mode.\n<li>Compound structure and wall sweeps: the compound layer structure is now read-write and can be fully created and access via the API. It was previously read-only.\n<li>Line and fill patterns: new API classes.\n<li>Independent tag: API changed.\n<li>Import and export: API changed.\n<li>Save and close: API changes, better separation of UI and API, preview image can be set.\n<li>Reference properties: the Reference class has been completely renovated.\n<li>Events: various event argument changes.\n<li>Move/Mirror/Rotate/Array: a new ElementTransformUtils class has been introduced to replace the previous methods on the Document class. Implicit dependencies on the current view have been removed.\n<li>Materials: new material classes are introduced and the existing ones deprecated, part of a company-wide materials management undertaking.\n<li>Structural analytical model: API changes.\n<li>Rebar: API changes.\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<h4>New Features Explanation</h4>\n<p>Some of the new features are longstanding and frequently requested wish list items, other are unexpected and exciting completely new areas:\n\n<ul>\n<li>Open and Activate Document: a document can be programmatically opened and activated in the user interface.\n<li>Setting Active View: the active view can be set programmatically.\n<li>Custom Ribbon Tab Management: custom ribbon tabs can be created.\n<li>Worksharing: a comprehensive read-only API to worksharing features is introduced; access the list of worksets, find out what elements are in the workset, who borrowed what, has the element gone out of date with central.\n\n<li>Geometry: some really exciting new geometry features: applications can now create their own geometry; the geometry library was previously read-only. Boolean operations can be performed, and the results can be displayed using the Analysis Visualisation Framework AVF. More detailed access to and analysis of geometrical aspects of Revit elements is supported.\n<li>Analysis of Room and Space 3D geometry: We can now get the 3D geometry of spatial elements like rooms and spaces. It provides access to elements which form the boundary of the rooms and for those who needs fine-grained information of the geometry of the room. You can now access the detailed geometry of the elements that form the boundary of the rooms. Until now we were only able to read the general shape of the room Â– now we can associate that shape with the elements that form the boundary. One of the existing samples, RoofsRooms, which used 300 lines of code to find out if the top boundary of the room intersected the roof or not, has now reduced to 30-40 lines of code.\n<li>Detailed energy analysis: obtain and analyze the contents of a project's detailed energy model, as seen in the Export to gbXML and the Heating and Cooling Loads features; produce an analytical thermal model from the physical model of a building composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<li>Conceptual energy analysis: provide access to the elements and objects created by Revit to perform energy analysis on conceptual design models.\n<li>Analysis Visualization Framework enhancements: support multiple analysis results in the same view, store persistent meta data.\n<li>MEP API enhancements\n<ul>\n<li>Placeholder ducts and pipes: Identify, create, and convert placeholders to physical elements\n<li>PipeSettings, PipeSizeSettings: Read and write access to the plumbing settings governing pipe sizes in Revit MEP\n<li>DuctInsulation, PipeInsulation, DuctLining: Read, write and create access to new procedural insulation and lining features\n</li></li></li></ul>\n<li>Rebar enhancements: multi-planar 3D rebars, corbels.\n<li>Construction modelling: access to parts and assemblies, shop drawings, isolate groups of elements.\n<li>Point Clouds: Engine API for point cloud generation, Client API for point cloud consumption.\n<li>Extensible Storage: read and assign application-owned data to specific elements, create custom XML-based schemas for data storage.\n<li>Linked Models: find external file references, trace the file path of external files and understand the load state in a Revit session, identify if a file is imported or merely linked, what kinds of link, what path.\n<li>Performance Advisor API: issue warnings for elements or settings that may cause performance degradation or affect model performance\n, \naccess built-in Revit rules, define, add and remove custom rules, execute any combination of rules.\n<li>And More:\n<ul>\n<li>Adaptive Components\n<li>IFC Document Open\n<li>FamilyParameter.GUID property: identify shared parameters.\n<li>Copy Element: copy and translate (copy + move).\n<li>Workplane Flip for Family Instances: face-hosted family manipulation.\n<li>Disallow Wall End Joins\n<li>Write access to Element Pinned\n</li></li></li></li></li></li></li></ul>\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<p>Sound exciting?\n\n<p>I promise you, it is!\n</p></p></p></p></p></p>"
  },
  {
    "original_filename": "0560_revit_2012_api",
    "header_text": "New Features Overview",
    "local_header_href": "#new-features-overview",
    "chunk_text": "<h4>New Features Overview</h4><p>This is the really exciting and in some cases radical new stuff:\n\n<ul>\n<li>Open and Activate Document\n<li>Setting Active View\n<li>Custom Ribbon Tab Management\n<li>Worksharing\n<li>Geometry\n<li>Analysis of Room and Space 3D geometry\n<li>Detailed energy analysis\n<li>Conceptual energy analysis\n<li>Analysis Visualization Framework enhancements\n<li>MEP API enhancements\n<li>Rebar enhancements\n<li>Construction modelling\n<li>Point Clouds\n<li>Extensible Storage\n<li>Linked Models\n<li>Performance Advisor API\n<li>And More!\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<h4>Modifications and Updates Explanation</h4>\n<p>Many of the modifications have to do with cleaning up the separation between the user interface and the API, completing the database/user interface split that was introduced in the Revit 2011 API.\nMany changes are also due to improved automatic API code generation procedures that align the API much better with the internal Revit code and functionality.\n\n<ul>\n<li>.NET Framework 4.0: the Revit 2012 API has been enhanced to run with the .NET 4.0 runtime; to debug add-ins, you must Use Visual Studio 2010; add-ins compiled with VS 2008 will run outside the debug environment.\n<li>Final bye bye ini, hello add-in manifest: loading of external applications and commands through Revit.ini is no longer supported.\n<li>Vendor identification: an additional add-in manifest tag identifying the application developer is required. It makes use of the <a href=\"http://www.autodesk.com/symbreg\">Autodesk Registered Developer Symbol RDS</a>.\n<li>Manual regeneration mode: automatic regeneration mode has been removed. All add-ins now use manual regeneration mode.\n<li>Compound structure and wall sweeps: the compound layer structure is now read-write and can be fully created and access via the API. It was previously read-only.\n<li>Line and fill patterns: new API classes.\n<li>Independent tag: API changed.\n<li>Import and export: API changed.\n<li>Save and close: API changes, better separation of UI and API, preview image can be set.\n<li>Reference properties: the Reference class has been completely renovated.\n<li>Events: various event argument changes.\n<li>Move/Mirror/Rotate/Array: a new ElementTransformUtils class has been introduced to replace the previous methods on the Document class. Implicit dependencies on the current view have been removed.\n<li>Materials: new material classes are introduced and the existing ones deprecated, part of a company-wide materials management undertaking.\n<li>Structural analytical model: API changes.\n<li>Rebar: API changes.\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<h4>New Features Explanation</h4>\n<p>Some of the new features are longstanding and frequently requested wish list items, other are unexpected and exciting completely new areas:\n\n<ul>\n<li>Open and Activate Document: a document can be programmatically opened and activated in the user interface.\n<li>Setting Active View: the active view can be set programmatically.\n<li>Custom Ribbon Tab Management: custom ribbon tabs can be created.\n<li>Worksharing: a comprehensive read-only API to worksharing features is introduced; access the list of worksets, find out what elements are in the workset, who borrowed what, has the element gone out of date with central.\n\n<li>Geometry: some really exciting new geometry features: applications can now create their own geometry; the geometry library was previously read-only. Boolean operations can be performed, and the results can be displayed using the Analysis Visualisation Framework AVF. More detailed access to and analysis of geometrical aspects of Revit elements is supported.\n<li>Analysis of Room and Space 3D geometry: We can now get the 3D geometry of spatial elements like rooms and spaces. It provides access to elements which form the boundary of the rooms and for those who needs fine-grained information of the geometry of the room. You can now access the detailed geometry of the elements that form the boundary of the rooms. Until now we were only able to read the general shape of the room Â– now we can associate that shape with the elements that form the boundary. One of the existing samples, RoofsRooms, which used 300 lines of code to find out if the top boundary of the room intersected the roof or not, has now reduced to 30-40 lines of code.\n<li>Detailed energy analysis: obtain and analyze the contents of a project's detailed energy model, as seen in the Export to gbXML and the Heating and Cooling Loads features; produce an analytical thermal model from the physical model of a building composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<li>Conceptual energy analysis: provide access to the elements and objects created by Revit to perform energy analysis on conceptual design models.\n<li>Analysis Visualization Framework enhancements: support multiple analysis results in the same view, store persistent meta data.\n<li>MEP API enhancements\n<ul>\n<li>Placeholder ducts and pipes: Identify, create, and convert placeholders to physical elements\n<li>PipeSettings, PipeSizeSettings: Read and write access to the plumbing settings governing pipe sizes in Revit MEP\n<li>DuctInsulation, PipeInsulation, DuctLining: Read, write and create access to new procedural insulation and lining features\n</li></li></li></ul>\n<li>Rebar enhancements: multi-planar 3D rebars, corbels.\n<li>Construction modelling: access to parts and assemblies, shop drawings, isolate groups of elements.\n<li>Point Clouds: Engine API for point cloud generation, Client API for point cloud consumption.\n<li>Extensible Storage: read and assign application-owned data to specific elements, create custom XML-based schemas for data storage.\n<li>Linked Models: find external file references, trace the file path of external files and understand the load state in a Revit session, identify if a file is imported or merely linked, what kinds of link, what path.\n<li>Performance Advisor API: issue warnings for elements or settings that may cause performance degradation or affect model performance\n, \naccess built-in Revit rules, define, add and remove custom rules, execute any combination of rules.\n<li>And More:\n<ul>\n<li>Adaptive Components\n<li>IFC Document Open\n<li>FamilyParameter.GUID property: identify shared parameters.\n<li>Copy Element: copy and translate (copy + move).\n<li>Workplane Flip for Family Instances: face-hosted family manipulation.\n<li>Disallow Wall End Joins\n<li>Write access to Element Pinned\n</li></li></li></li></li></li></li></ul>\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<p>Sound exciting?\n\n<p>I promise you, it is!\n</p></p></p></p></p>"
  },
  {
    "original_filename": "0560_revit_2012_api",
    "header_text": "Modifications and Updates Explanation",
    "local_header_href": "#modifications-and-updates-explanation",
    "chunk_text": "<h4>Modifications and Updates Explanation</h4><p>Many of the modifications have to do with cleaning up the separation between the user interface and the API, completing the database/user interface split that was introduced in the Revit 2011 API.\nMany changes are also due to improved automatic API code generation procedures that align the API much better with the internal Revit code and functionality.\n\n<ul>\n<li>.NET Framework 4.0: the Revit 2012 API has been enhanced to run with the .NET 4.0 runtime; to debug add-ins, you must Use Visual Studio 2010; add-ins compiled with VS 2008 will run outside the debug environment.\n<li>Final bye bye ini, hello add-in manifest: loading of external applications and commands through Revit.ini is no longer supported.\n<li>Vendor identification: an additional add-in manifest tag identifying the application developer is required. It makes use of the <a href=\"http://www.autodesk.com/symbreg\">Autodesk Registered Developer Symbol RDS</a>.\n<li>Manual regeneration mode: automatic regeneration mode has been removed. All add-ins now use manual regeneration mode.\n<li>Compound structure and wall sweeps: the compound layer structure is now read-write and can be fully created and access via the API. It was previously read-only.\n<li>Line and fill patterns: new API classes.\n<li>Independent tag: API changed.\n<li>Import and export: API changed.\n<li>Save and close: API changes, better separation of UI and API, preview image can be set.\n<li>Reference properties: the Reference class has been completely renovated.\n<li>Events: various event argument changes.\n<li>Move/Mirror/Rotate/Array: a new ElementTransformUtils class has been introduced to replace the previous methods on the Document class. Implicit dependencies on the current view have been removed.\n<li>Materials: new material classes are introduced and the existing ones deprecated, part of a company-wide materials management undertaking.\n<li>Structural analytical model: API changes.\n<li>Rebar: API changes.\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<h4>New Features Explanation</h4>\n<p>Some of the new features are longstanding and frequently requested wish list items, other are unexpected and exciting completely new areas:\n\n<ul>\n<li>Open and Activate Document: a document can be programmatically opened and activated in the user interface.\n<li>Setting Active View: the active view can be set programmatically.\n<li>Custom Ribbon Tab Management: custom ribbon tabs can be created.\n<li>Worksharing: a comprehensive read-only API to worksharing features is introduced; access the list of worksets, find out what elements are in the workset, who borrowed what, has the element gone out of date with central.\n\n<li>Geometry: some really exciting new geometry features: applications can now create their own geometry; the geometry library was previously read-only. Boolean operations can be performed, and the results can be displayed using the Analysis Visualisation Framework AVF. More detailed access to and analysis of geometrical aspects of Revit elements is supported.\n<li>Analysis of Room and Space 3D geometry: We can now get the 3D geometry of spatial elements like rooms and spaces. It provides access to elements which form the boundary of the rooms and for those who needs fine-grained information of the geometry of the room. You can now access the detailed geometry of the elements that form the boundary of the rooms. Until now we were only able to read the general shape of the room Â– now we can associate that shape with the elements that form the boundary. One of the existing samples, RoofsRooms, which used 300 lines of code to find out if the top boundary of the room intersected the roof or not, has now reduced to 30-40 lines of code.\n<li>Detailed energy analysis: obtain and analyze the contents of a project's detailed energy model, as seen in the Export to gbXML and the Heating and Cooling Loads features; produce an analytical thermal model from the physical model of a building composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<li>Conceptual energy analysis: provide access to the elements and objects created by Revit to perform energy analysis on conceptual design models.\n<li>Analysis Visualization Framework enhancements: support multiple analysis results in the same view, store persistent meta data.\n<li>MEP API enhancements\n<ul>\n<li>Placeholder ducts and pipes: Identify, create, and convert placeholders to physical elements\n<li>PipeSettings, PipeSizeSettings: Read and write access to the plumbing settings governing pipe sizes in Revit MEP\n<li>DuctInsulation, PipeInsulation, DuctLining: Read, write and create access to new procedural insulation and lining features\n</li></li></li></ul>\n<li>Rebar enhancements: multi-planar 3D rebars, corbels.\n<li>Construction modelling: access to parts and assemblies, shop drawings, isolate groups of elements.\n<li>Point Clouds: Engine API for point cloud generation, Client API for point cloud consumption.\n<li>Extensible Storage: read and assign application-owned data to specific elements, create custom XML-based schemas for data storage.\n<li>Linked Models: find external file references, trace the file path of external files and understand the load state in a Revit session, identify if a file is imported or merely linked, what kinds of link, what path.\n<li>Performance Advisor API: issue warnings for elements or settings that may cause performance degradation or affect model performance\n, \naccess built-in Revit rules, define, add and remove custom rules, execute any combination of rules.\n<li>And More:\n<ul>\n<li>Adaptive Components\n<li>IFC Document Open\n<li>FamilyParameter.GUID property: identify shared parameters.\n<li>Copy Element: copy and translate (copy + move).\n<li>Workplane Flip for Family Instances: face-hosted family manipulation.\n<li>Disallow Wall End Joins\n<li>Write access to Element Pinned\n</li></li></li></li></li></li></li></ul>\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<p>Sound exciting?\n\n<p>I promise you, it is!\n</p></p></p></p>"
  },
  {
    "original_filename": "0560_revit_2012_api",
    "header_text": "New Features Explanation",
    "local_header_href": "#new-features-explanation",
    "chunk_text": "<h4>New Features Explanation</h4><p>Some of the new features are longstanding and frequently requested wish list items, other are unexpected and exciting completely new areas:\n\n<ul>\n<li>Open and Activate Document: a document can be programmatically opened and activated in the user interface.\n<li>Setting Active View: the active view can be set programmatically.\n<li>Custom Ribbon Tab Management: custom ribbon tabs can be created.\n<li>Worksharing: a comprehensive read-only API to worksharing features is introduced; access the list of worksets, find out what elements are in the workset, who borrowed what, has the element gone out of date with central.\n\n<li>Geometry: some really exciting new geometry features: applications can now create their own geometry; the geometry library was previously read-only. Boolean operations can be performed, and the results can be displayed using the Analysis Visualisation Framework AVF. More detailed access to and analysis of geometrical aspects of Revit elements is supported.\n<li>Analysis of Room and Space 3D geometry: We can now get the 3D geometry of spatial elements like rooms and spaces. It provides access to elements which form the boundary of the rooms and for those who needs fine-grained information of the geometry of the room. You can now access the detailed geometry of the elements that form the boundary of the rooms. Until now we were only able to read the general shape of the room Â– now we can associate that shape with the elements that form the boundary. One of the existing samples, RoofsRooms, which used 300 lines of code to find out if the top boundary of the room intersected the roof or not, has now reduced to 30-40 lines of code.\n<li>Detailed energy analysis: obtain and analyze the contents of a project's detailed energy model, as seen in the Export to gbXML and the Heating and Cooling Loads features; produce an analytical thermal model from the physical model of a building composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<li>Conceptual energy analysis: provide access to the elements and objects created by Revit to perform energy analysis on conceptual design models.\n<li>Analysis Visualization Framework enhancements: support multiple analysis results in the same view, store persistent meta data.\n<li>MEP API enhancements\n<ul>\n<li>Placeholder ducts and pipes: Identify, create, and convert placeholders to physical elements\n<li>PipeSettings, PipeSizeSettings: Read and write access to the plumbing settings governing pipe sizes in Revit MEP\n<li>DuctInsulation, PipeInsulation, DuctLining: Read, write and create access to new procedural insulation and lining features\n</li></li></li></ul>\n<li>Rebar enhancements: multi-planar 3D rebars, corbels.\n<li>Construction modelling: access to parts and assemblies, shop drawings, isolate groups of elements.\n<li>Point Clouds: Engine API for point cloud generation, Client API for point cloud consumption.\n<li>Extensible Storage: read and assign application-owned data to specific elements, create custom XML-based schemas for data storage.\n<li>Linked Models: find external file references, trace the file path of external files and understand the load state in a Revit session, identify if a file is imported or merely linked, what kinds of link, what path.\n<li>Performance Advisor API: issue warnings for elements or settings that may cause performance degradation or affect model performance\n, \naccess built-in Revit rules, define, add and remove custom rules, execute any combination of rules.\n<li>And More:\n<ul>\n<li>Adaptive Components\n<li>IFC Document Open\n<li>FamilyParameter.GUID property: identify shared parameters.\n<li>Copy Element: copy and translate (copy + move).\n<li>Workplane Flip for Family Instances: face-hosted family manipulation.\n<li>Disallow Wall End Joins\n<li>Write access to Element Pinned\n</li></li></li></li></li></li></li></ul>\n</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n<p>Sound exciting?\n\n<p>I promise you, it is!\n</p></p></p>"
  }
]