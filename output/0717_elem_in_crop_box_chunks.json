[
  {
    "original_filename": "0717_elem_in_crop_box",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0717_elem_in_crop_box",
    "header_text": "Element in View Crop Box Predicate",
    "local_header_href": "#element-in-view-crop-box-predicate",
    "chunk_text": "<h3>Element in View Crop Box Predicate</h3><p>We had a look at one aspect of the interaction between element geometry and the view crop box last week when noting that\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/02/section-view-geometry-not-cropped.html\">\nsection view geometry is not cropped</a>.\n\n<p>Here is another aspect: a useful little predicate function developer by Frode Tørresdal of \n\n<a href=\"http://www.nois.no\">\nNorconsult Informasjonssystemer AS</a> to\n\ndetermine whether an element is contained in the crop box of a view.\n\n<p><strong>Question:</strong> Using the API I'm trying to determine if a detail item element is inside or outside the cropbox of a view. \n\n<p>This code works fine in a plan view, but not in a elevation view:\n\n<pre class=\"code\">\n  <span class=\"blue\">bool</span> IsElementOutsideCropBox( <span class=\"teal\">Element</span> e, <span class=\"teal\">View</span> v )\n  {\n    <span class=\"blue\">bool</span> rc = v.CropBoxActive;\n \n    <span class=\"blue\">if</span>( rc )\n    {\n      <span class=\"teal\">BoundingBoxXYZ</span> vBox = v.CropBox;\n      <span class=\"teal\">BoundingBoxXYZ</span> eBox = e.get_BoundingBox( v );\n\n      rc = ( eBox.Min.X &gt; vBox.Max.X )\n        || ( eBox.Max.X &lt; vBox.Min.X )\n        || ( eBox.Min.Y &gt; vBox.Max.Y )\n        || ( eBox.Max.Y &lt; vBox.Min.Y )\n        || ( eBox.Min.Z &gt; vBox.Max.Z )\n        || ( eBox.Max.Z &lt; vBox.Min.Z );\n    }\n    <span class=\"blue\">return</span> rc;\n  }\n</pre>\n<p>What might I be doing wrong, please?\n\n\n\n<p><strong>Answer:</strong> In what way does it not work in an elevation view? \nAre some (or all) of the six logical checks incorrect, or what?\n\n<p>In any case, comparing the bounding box min and max will never be precise, because the element's rectangular bounding box will not match the geometry of any non-rectangular element. \n\n<p>Instead, how about creating a FilteredElementCollector with the view so that it returns only the elements visible in the view, and then check to see if the element of interest is found by the collector?\n\n\n<p><strong>Response:</strong> I tried to create the FilteredElementCollector with the view as an input parameter, but that collector also collects the elements outside the crop box.\n\n<p>I think I found the solution to the problem, however:\nThe transforms of the view and the element are different. \nOn all the cases I've tested, it seems to work OK if I use the inverse transform of the crop box of the view on the element.\n\n<p>I now use the following code to transform the bounding box:\n\n<pre class=\"code\">\n  <span class=\"blue\">bool</span> IsElementOutsideCropBox( <span class=\"teal\">Element</span> e, <span class=\"teal\">View</span> v )\n  {\n    <span class=\"blue\">bool</span> rc = v.CropBoxActive;\n \n    <span class=\"blue\">if</span>( rc )\n    {\n      <span class=\"teal\">BoundingBoxXYZ</span> vBox = v.CropBox;\n      <span class=\"teal\">BoundingBoxXYZ</span> eBox = e.get_BoundingBox( v );\n \n      <span class=\"teal\">Transform</span> tInv = v.CropBox.Transform.Inverse;\n      eBox.Max = tInv.OfPoint( eBox.Max );\n      eBox.Min = tInv.OfPoint( eBox.Min );\n \n      rc = ( eBox.Min.X &gt; vBox.Max.X )\n        || ( eBox.Max.X &lt; vBox.Min.X )\n        || ( eBox.Min.Y &gt; vBox.Max.Y )\n        || ( eBox.Max.Y &lt; vBox.Min.Y );\n    }\n    <span class=\"blue\">return</span> rc;\n  }\n</pre>\n<p>I left out the Z coordinate in this version, because the transform is not 100% accurate. \nTherefore, if the element box is on the edge of the view box, the comparison might be slightly off and not return the desired result. \nI should probably include a tolerance in the test, but in my case the Z test is not important anyway.\n\n<p>As said, the new system resolves my issue and I will use that in the future.\n\n<p>Many thanks to Frode for this useful hint!\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  }
]