[
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "The Revit MEP 2012 API",
    "local_header_href": "#the-revit-mep-2012-api",
    "chunk_text": "<h3>The Revit MEP 2012 API</h3><p>The Revit 2012 API includes a number of important MEP specific enhancements, some completely new APIs have been added which are especially useful in the MEP domain, and last but not least, all of the many significant Revit platform enhancements are useful for MEP as well.\n<p>The major Revit MEP enhancements include:\n<ul>\n<li>Placeholder ducts and pipes\n<li>Duct and pipe insulation and lining\n<li>Read and write access to MEP pipe settings and sizes\n</li></li></li></ul>\n<p>A number of minor enhancements have also been made to the Revit MEP API, e.g. spare and space circuits, cable tray and conduit domain, connector, MEP system and space properties, and disconnection warnings.\n<p>Completely new APIs which are applicable to the MEP domain include:\n<ul>\n<li>Detailed energy analysis model API\n<li>Conceptual energy analysis API\n</li></li></ul>\n<p>Furthermore, the Revit platform API enhancements include some features which are especially useful in the MEP domain, such as new classes for the analysis of room and space 3D geometry, new geometry functionality, and new support for handling linked files.\n<p>Here is a very brief overview of the main product enhancements, followed by a more detailed look at the API features. For more information, please refer to the What's New section in the Revit API help file RevitAPI.chm, which is included in the Revit SDK, available from the <a href=\"http://www.autodesk.com/developrevit\">Revit Developer Center</a>.\n<h4>Revit MEP 2012 Product Features</h4>\n<p>Here are some of the key features of Revit MEP 2012 from a product point of view:\n<ul>\n<li>Placeholder elements\n<li>Insulation and lining\n<li>Parallel pipe and conduit runs\n<li>Sloped piping enhancements: settings, tooltips, connection \n<li>System browser enhancements: filtering, hovering and selection\n<li>System enhancements: graphic overrides and warnings, disconnect markers, materials, calculation control, connector labels\n</li></li></li></li></li></li></ul>\n<h4>Placeholder Ducts and Pipes</h4>\n<p>Revit MEP introduces placeholder elements which can be used to indicate a planned layout when the system itself has not been fully sized. You obtain maximum planning flexibility with a minimum of input. The placeholders can be converted into true duct and pipe elements later on. Placeholders can be assigned a size and slope. \n<p>In the API, the following new properties identify placeholder ducts and pipes:\n<ul>\n<li>Duct.IsPlaceholder \n<li>Pipe.IsPlaceholder \n</li></li></ul>\n<p>These new static methods allow creation of placeholder ducts and pipes:\n<ul>\n<li>Duct.CreatePlaceholder \n<li>Pipe.CreatePlaceholder \n</li></li></ul>\n<p>New utility meds are exposed to convert a set of placeholder ducts and pipes to real 3D entities:\n<ul>\n<li>MechanicalUtils.ConvertDuctPlaceholders \n<li>PlumbingUtils.ConvertPipePlaceholders\n</li></li></ul>\n<p>This functionality is demonstrated by the MepPlaceHolder sample in the \n\n<!-- <a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online recording</a>. -->\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> (<a href=\"#2\">see below</a>).\n\nIt defines two external commands, CreatePlaceholders and ConvertPlaceholders.\n\n<!-- Updated source code for this sample is included in the Revit 2012 webcast support material, which is still in the process of being uploaded. -->\n<h4>Insulation and Lining</h4>\n<p>In previous versions of Revit, insulation and lining had to be modelled separately in the family definitions, practically tripling the amount of geometry that needed to be defined. In Revit 2012, insulation and lining can be added programmatically instead. In the user interface, insulation can now be added to an entire duct or pipe run in a single command, and lining to an entire duct run in a similar way. Fittings and flexible ducts and pipes can also be selected and processed.\n<p>The new API classes DuctInsulation, PipeInsulation, DuctLining and related types support read, write and create access to duct and pipe insulation and lining. In Revit 2012, these objects are now accessible as standalone elements related to their parent duct, pipe, or fitting.\n<h4>Pipe Settings and Sizes</h4>\n<p>MEP pipe settings are now accessible programmatically. The following new classes provide read and write access to them:\n<ul>\n<li>PipeSettings – The pipe settings. There is one object of this type in a document accessible through the static method GetPipeSettings. \n<li>PipeSizeSettings – The main class to access pipe sizes. There is one object of this type in a document accessible through the static method GetPipeSizeSettings. Stores PipeConnections for each pipe material, using the id of the pipe material element as key to access. \n<li>PipeSizeSettingIterator – An iterator to a set of items from PipeSizeSettings. Each item is a KeyValuePair<elementid, pipeconnections=\"\">. \n<li>PipeConnections – Represents a set of pipe connection types. Stores PipeSchedules per each pipe connection type, using the id of the pipe connection type as key to access. \n<li>PipeConnectionIterator – An iterator to a set of items from PipeConnections. Each item is a KeyValuePair<elementid, pipeschedules=\"\">. \n<li>PipeSchedules – Represents a set of pipe schedules. Stores PipeSizes per each pipe schedule type, using the id of the pipe schedule type as key to access. \n<li>PipeScheduleIterator – An iterator to a set of items from PipeSchedules. Each item is a KeyValuePair<elementid, pipesizes=\"\">. \n<li>PipeSizes – Stores a set of pipe sizes, with the ability to add and remove from the set as needed. \n<li>PipeSizeIterator – An iterator to a set of MEP pipe sizes from PipeSizes. \n<li>MEPSize – Stores the basic size information for an MEP duct, pipe, cable tray, or conduit. \n</li></li></li></elementid,></li></li></elementid,></li></li></elementid,></li></li></li></ul>\n<h4>Detailed Energy Analysis Model API</h4>\n<p>A new feature added to the Revit API that is of special interest in the MEP domain is the detailed energy analysis model API. It enables you to obtain and analyze the contents of a project's detailed energy analysis model, as seen in the Export to gbXML and the Heating and Cooling Loads features. This analysis produces an analytical thermal model from the physical model of a building. The analytical thermal model is composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<p>The method EnergyAnalysisDetailModel.Create generates the model, which can the be traversed using methods such as GetAnalyticalSpaces, Surfaces, Openings, ShadingSurfaces.\n<p>This is demonstrated by the new SDK sample EnergyAnalysisModel:</p>\n<center>\n<img alt=\"EnergyAnalysisModel SDK sample\" src=\"img/EnergyAnalysisModel02.png\"/>\n</center>\n<h4>Conceptual Energy Analysis API</h4>\n<p>A second new API deals with energy analysis on conceptual design models. New classes provide access to the elements and objects created by Revit to perform this kind of analysis, and using the Document.Export method with a MassGBXMLExportOptions instance supports export of a gBXML file containing conceptual energy analysis elements (mass elements) only.\n\n\n<h4>Small Enhancements and Changes</h4>\n<p>A number of small enhancements and changes have been made to the Revit MEP API:\n<p><u>Spare and space circuits:</u>\nThe new property ElectricalSystem.CircuitType identifies the type of an electrical circuit (circuit, spare or space). The method ElectricalSystem.AddToCircuit now throws an exception when the system is a spare or space circuit. \n<p><u>Cable tray and conduit domain:</u>\nThe Autodesk.Revit.DB.Domain enumeration adds a new value to represent cable tray and conduit.\n<p><u>Connector:</u>\nNew read-only properties have been added for the JointType, GenderType and EngagementLength.\n<p><u>MEPSystem:</u>\nThe new property MEPSystem.IsEmpty identifies if the system currently contains no components.\n<p><u>Graphical warnings for disconnects:</u>\nThe new 'show graphical warning' properties on the Application class and the matching setters control whether Revit MEP will highlight disconnects in systems graphically.\n<p><u>Space properties:</u>\nThe new property Space.BaseHeatLoadOn indicates if the value of Space.LatentHeatGainperPerson and Space.SensibleHeatGainperPerson properties is the default value or if it is user-defined.   \n<p><u>Fitting methods:</u>\nThe Document methods to create new fittings no longer remove unused or dangling curve connectors.\n\n\n<a name=\"2\"></a>\n<h4>Revit 2012 API Webcast Recording</h4>\n<p>The material presented here was also discussed in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/05/revit-2012-api-webcast.html\">Revit 2012 API webcast</a>, \n\nand before that in somewhat less detail in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online presentation</a>.\n\nRecordings and sample material for both of these are now available from the \n\n<a href=\"http://www.adskconsulting.com/adn/cs/api_course_webcast_archive.php\">ADN webcast recordings archive</a>.\n\nFilter for \"Revit API\" and \"Developer Days Online: Revit\" respectively, \"English\", and \"Webcast\".\n\n<p>Here are direct links to the \n\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> and the \n\n<a href=\"http://download.autodesk.com/media/adn/DevDay_Online-Revit_2012_API.zip\">DevDays Online recording and material</a>, \n\nrespectively.\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "Revit MEP 2012 Product Features",
    "local_header_href": "#revit-mep-2012-product-features",
    "chunk_text": "<h4>Revit MEP 2012 Product Features</h4><p>Here are some of the key features of Revit MEP 2012 from a product point of view:\n<ul>\n<li>Placeholder elements\n<li>Insulation and lining\n<li>Parallel pipe and conduit runs\n<li>Sloped piping enhancements: settings, tooltips, connection \n<li>System browser enhancements: filtering, hovering and selection\n<li>System enhancements: graphic overrides and warnings, disconnect markers, materials, calculation control, connector labels\n</li></li></li></li></li></li></ul>\n<h4>Placeholder Ducts and Pipes</h4>\n<p>Revit MEP introduces placeholder elements which can be used to indicate a planned layout when the system itself has not been fully sized. You obtain maximum planning flexibility with a minimum of input. The placeholders can be converted into true duct and pipe elements later on. Placeholders can be assigned a size and slope. \n<p>In the API, the following new properties identify placeholder ducts and pipes:\n<ul>\n<li>Duct.IsPlaceholder \n<li>Pipe.IsPlaceholder \n</li></li></ul>\n<p>These new static methods allow creation of placeholder ducts and pipes:\n<ul>\n<li>Duct.CreatePlaceholder \n<li>Pipe.CreatePlaceholder \n</li></li></ul>\n<p>New utility meds are exposed to convert a set of placeholder ducts and pipes to real 3D entities:\n<ul>\n<li>MechanicalUtils.ConvertDuctPlaceholders \n<li>PlumbingUtils.ConvertPipePlaceholders\n</li></li></ul>\n<p>This functionality is demonstrated by the MepPlaceHolder sample in the \n\n<!-- <a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online recording</a>. -->\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> (<a href=\"#2\">see below</a>).\n\nIt defines two external commands, CreatePlaceholders and ConvertPlaceholders.\n\n<!-- Updated source code for this sample is included in the Revit 2012 webcast support material, which is still in the process of being uploaded. -->\n<h4>Insulation and Lining</h4>\n<p>In previous versions of Revit, insulation and lining had to be modelled separately in the family definitions, practically tripling the amount of geometry that needed to be defined. In Revit 2012, insulation and lining can be added programmatically instead. In the user interface, insulation can now be added to an entire duct or pipe run in a single command, and lining to an entire duct run in a similar way. Fittings and flexible ducts and pipes can also be selected and processed.\n<p>The new API classes DuctInsulation, PipeInsulation, DuctLining and related types support read, write and create access to duct and pipe insulation and lining. In Revit 2012, these objects are now accessible as standalone elements related to their parent duct, pipe, or fitting.\n<h4>Pipe Settings and Sizes</h4>\n<p>MEP pipe settings are now accessible programmatically. The following new classes provide read and write access to them:\n<ul>\n<li>PipeSettings – The pipe settings. There is one object of this type in a document accessible through the static method GetPipeSettings. \n<li>PipeSizeSettings – The main class to access pipe sizes. There is one object of this type in a document accessible through the static method GetPipeSizeSettings. Stores PipeConnections for each pipe material, using the id of the pipe material element as key to access. \n<li>PipeSizeSettingIterator – An iterator to a set of items from PipeSizeSettings. Each item is a KeyValuePair<elementid, pipeconnections=\"\">. \n<li>PipeConnections – Represents a set of pipe connection types. Stores PipeSchedules per each pipe connection type, using the id of the pipe connection type as key to access. \n<li>PipeConnectionIterator – An iterator to a set of items from PipeConnections. Each item is a KeyValuePair<elementid, pipeschedules=\"\">. \n<li>PipeSchedules – Represents a set of pipe schedules. Stores PipeSizes per each pipe schedule type, using the id of the pipe schedule type as key to access. \n<li>PipeScheduleIterator – An iterator to a set of items from PipeSchedules. Each item is a KeyValuePair<elementid, pipesizes=\"\">. \n<li>PipeSizes – Stores a set of pipe sizes, with the ability to add and remove from the set as needed. \n<li>PipeSizeIterator – An iterator to a set of MEP pipe sizes from PipeSizes. \n<li>MEPSize – Stores the basic size information for an MEP duct, pipe, cable tray, or conduit. \n</li></li></li></elementid,></li></li></elementid,></li></li></elementid,></li></li></li></ul>\n<h4>Detailed Energy Analysis Model API</h4>\n<p>A new feature added to the Revit API that is of special interest in the MEP domain is the detailed energy analysis model API. It enables you to obtain and analyze the contents of a project's detailed energy analysis model, as seen in the Export to gbXML and the Heating and Cooling Loads features. This analysis produces an analytical thermal model from the physical model of a building. The analytical thermal model is composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<p>The method EnergyAnalysisDetailModel.Create generates the model, which can the be traversed using methods such as GetAnalyticalSpaces, Surfaces, Openings, ShadingSurfaces.\n<p>This is demonstrated by the new SDK sample EnergyAnalysisModel:</p>\n<center>\n<img alt=\"EnergyAnalysisModel SDK sample\" src=\"img/EnergyAnalysisModel02.png\"/>\n</center>\n<h4>Conceptual Energy Analysis API</h4>\n<p>A second new API deals with energy analysis on conceptual design models. New classes provide access to the elements and objects created by Revit to perform this kind of analysis, and using the Document.Export method with a MassGBXMLExportOptions instance supports export of a gBXML file containing conceptual energy analysis elements (mass elements) only.\n\n\n<h4>Small Enhancements and Changes</h4>\n<p>A number of small enhancements and changes have been made to the Revit MEP API:\n<p><u>Spare and space circuits:</u>\nThe new property ElectricalSystem.CircuitType identifies the type of an electrical circuit (circuit, spare or space). The method ElectricalSystem.AddToCircuit now throws an exception when the system is a spare or space circuit. \n<p><u>Cable tray and conduit domain:</u>\nThe Autodesk.Revit.DB.Domain enumeration adds a new value to represent cable tray and conduit.\n<p><u>Connector:</u>\nNew read-only properties have been added for the JointType, GenderType and EngagementLength.\n<p><u>MEPSystem:</u>\nThe new property MEPSystem.IsEmpty identifies if the system currently contains no components.\n<p><u>Graphical warnings for disconnects:</u>\nThe new 'show graphical warning' properties on the Application class and the matching setters control whether Revit MEP will highlight disconnects in systems graphically.\n<p><u>Space properties:</u>\nThe new property Space.BaseHeatLoadOn indicates if the value of Space.LatentHeatGainperPerson and Space.SensibleHeatGainperPerson properties is the default value or if it is user-defined.   \n<p><u>Fitting methods:</u>\nThe Document methods to create new fittings no longer remove unused or dangling curve connectors.\n\n\n<a name=\"2\"></a>\n<h4>Revit 2012 API Webcast Recording</h4>\n<p>The material presented here was also discussed in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/05/revit-2012-api-webcast.html\">Revit 2012 API webcast</a>, \n\nand before that in somewhat less detail in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online presentation</a>.\n\nRecordings and sample material for both of these are now available from the \n\n<a href=\"http://www.adskconsulting.com/adn/cs/api_course_webcast_archive.php\">ADN webcast recordings archive</a>.\n\nFilter for \"Revit API\" and \"Developer Days Online: Revit\" respectively, \"English\", and \"Webcast\".\n\n<p>Here are direct links to the \n\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> and the \n\n<a href=\"http://download.autodesk.com/media/adn/DevDay_Online-Revit_2012_API.zip\">DevDays Online recording and material</a>, \n\nrespectively.\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "Placeholder Ducts and Pipes",
    "local_header_href": "#placeholder-ducts-and-pipes",
    "chunk_text": "<h4>Placeholder Ducts and Pipes</h4><p>Revit MEP introduces placeholder elements which can be used to indicate a planned layout when the system itself has not been fully sized. You obtain maximum planning flexibility with a minimum of input. The placeholders can be converted into true duct and pipe elements later on. Placeholders can be assigned a size and slope. \n<p>In the API, the following new properties identify placeholder ducts and pipes:\n<ul>\n<li>Duct.IsPlaceholder \n<li>Pipe.IsPlaceholder \n</li></li></ul>\n<p>These new static methods allow creation of placeholder ducts and pipes:\n<ul>\n<li>Duct.CreatePlaceholder \n<li>Pipe.CreatePlaceholder \n</li></li></ul>\n<p>New utility meds are exposed to convert a set of placeholder ducts and pipes to real 3D entities:\n<ul>\n<li>MechanicalUtils.ConvertDuctPlaceholders \n<li>PlumbingUtils.ConvertPipePlaceholders\n</li></li></ul>\n<p>This functionality is demonstrated by the MepPlaceHolder sample in the \n\n<!-- <a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online recording</a>. -->\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> (<a href=\"#2\">see below</a>).\n\nIt defines two external commands, CreatePlaceholders and ConvertPlaceholders.\n\n<!-- Updated source code for this sample is included in the Revit 2012 webcast support material, which is still in the process of being uploaded. -->\n<h4>Insulation and Lining</h4>\n<p>In previous versions of Revit, insulation and lining had to be modelled separately in the family definitions, practically tripling the amount of geometry that needed to be defined. In Revit 2012, insulation and lining can be added programmatically instead. In the user interface, insulation can now be added to an entire duct or pipe run in a single command, and lining to an entire duct run in a similar way. Fittings and flexible ducts and pipes can also be selected and processed.\n<p>The new API classes DuctInsulation, PipeInsulation, DuctLining and related types support read, write and create access to duct and pipe insulation and lining. In Revit 2012, these objects are now accessible as standalone elements related to their parent duct, pipe, or fitting.\n<h4>Pipe Settings and Sizes</h4>\n<p>MEP pipe settings are now accessible programmatically. The following new classes provide read and write access to them:\n<ul>\n<li>PipeSettings – The pipe settings. There is one object of this type in a document accessible through the static method GetPipeSettings. \n<li>PipeSizeSettings – The main class to access pipe sizes. There is one object of this type in a document accessible through the static method GetPipeSizeSettings. Stores PipeConnections for each pipe material, using the id of the pipe material element as key to access. \n<li>PipeSizeSettingIterator – An iterator to a set of items from PipeSizeSettings. Each item is a KeyValuePair<elementid, pipeconnections=\"\">. \n<li>PipeConnections – Represents a set of pipe connection types. Stores PipeSchedules per each pipe connection type, using the id of the pipe connection type as key to access. \n<li>PipeConnectionIterator – An iterator to a set of items from PipeConnections. Each item is a KeyValuePair<elementid, pipeschedules=\"\">. \n<li>PipeSchedules – Represents a set of pipe schedules. Stores PipeSizes per each pipe schedule type, using the id of the pipe schedule type as key to access. \n<li>PipeScheduleIterator – An iterator to a set of items from PipeSchedules. Each item is a KeyValuePair<elementid, pipesizes=\"\">. \n<li>PipeSizes – Stores a set of pipe sizes, with the ability to add and remove from the set as needed. \n<li>PipeSizeIterator – An iterator to a set of MEP pipe sizes from PipeSizes. \n<li>MEPSize – Stores the basic size information for an MEP duct, pipe, cable tray, or conduit. \n</li></li></li></elementid,></li></li></elementid,></li></li></elementid,></li></li></li></ul>\n<h4>Detailed Energy Analysis Model API</h4>\n<p>A new feature added to the Revit API that is of special interest in the MEP domain is the detailed energy analysis model API. It enables you to obtain and analyze the contents of a project's detailed energy analysis model, as seen in the Export to gbXML and the Heating and Cooling Loads features. This analysis produces an analytical thermal model from the physical model of a building. The analytical thermal model is composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<p>The method EnergyAnalysisDetailModel.Create generates the model, which can the be traversed using methods such as GetAnalyticalSpaces, Surfaces, Openings, ShadingSurfaces.\n<p>This is demonstrated by the new SDK sample EnergyAnalysisModel:</p>\n<center>\n<img alt=\"EnergyAnalysisModel SDK sample\" src=\"img/EnergyAnalysisModel02.png\"/>\n</center>\n<h4>Conceptual Energy Analysis API</h4>\n<p>A second new API deals with energy analysis on conceptual design models. New classes provide access to the elements and objects created by Revit to perform this kind of analysis, and using the Document.Export method with a MassGBXMLExportOptions instance supports export of a gBXML file containing conceptual energy analysis elements (mass elements) only.\n\n\n<h4>Small Enhancements and Changes</h4>\n<p>A number of small enhancements and changes have been made to the Revit MEP API:\n<p><u>Spare and space circuits:</u>\nThe new property ElectricalSystem.CircuitType identifies the type of an electrical circuit (circuit, spare or space). The method ElectricalSystem.AddToCircuit now throws an exception when the system is a spare or space circuit. \n<p><u>Cable tray and conduit domain:</u>\nThe Autodesk.Revit.DB.Domain enumeration adds a new value to represent cable tray and conduit.\n<p><u>Connector:</u>\nNew read-only properties have been added for the JointType, GenderType and EngagementLength.\n<p><u>MEPSystem:</u>\nThe new property MEPSystem.IsEmpty identifies if the system currently contains no components.\n<p><u>Graphical warnings for disconnects:</u>\nThe new 'show graphical warning' properties on the Application class and the matching setters control whether Revit MEP will highlight disconnects in systems graphically.\n<p><u>Space properties:</u>\nThe new property Space.BaseHeatLoadOn indicates if the value of Space.LatentHeatGainperPerson and Space.SensibleHeatGainperPerson properties is the default value or if it is user-defined.   \n<p><u>Fitting methods:</u>\nThe Document methods to create new fittings no longer remove unused or dangling curve connectors.\n\n\n<a name=\"2\"></a>\n<h4>Revit 2012 API Webcast Recording</h4>\n<p>The material presented here was also discussed in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/05/revit-2012-api-webcast.html\">Revit 2012 API webcast</a>, \n\nand before that in somewhat less detail in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online presentation</a>.\n\nRecordings and sample material for both of these are now available from the \n\n<a href=\"http://www.adskconsulting.com/adn/cs/api_course_webcast_archive.php\">ADN webcast recordings archive</a>.\n\nFilter for \"Revit API\" and \"Developer Days Online: Revit\" respectively, \"English\", and \"Webcast\".\n\n<p>Here are direct links to the \n\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> and the \n\n<a href=\"http://download.autodesk.com/media/adn/DevDay_Online-Revit_2012_API.zip\">DevDays Online recording and material</a>, \n\nrespectively.\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "Insulation and Lining",
    "local_header_href": "#insulation-and-lining",
    "chunk_text": "<h4>Insulation and Lining</h4><p>In previous versions of Revit, insulation and lining had to be modelled separately in the family definitions, practically tripling the amount of geometry that needed to be defined. In Revit 2012, insulation and lining can be added programmatically instead. In the user interface, insulation can now be added to an entire duct or pipe run in a single command, and lining to an entire duct run in a similar way. Fittings and flexible ducts and pipes can also be selected and processed.\n<p>The new API classes DuctInsulation, PipeInsulation, DuctLining and related types support read, write and create access to duct and pipe insulation and lining. In Revit 2012, these objects are now accessible as standalone elements related to their parent duct, pipe, or fitting.\n<h4>Pipe Settings and Sizes</h4>\n<p>MEP pipe settings are now accessible programmatically. The following new classes provide read and write access to them:\n<ul>\n<li>PipeSettings – The pipe settings. There is one object of this type in a document accessible through the static method GetPipeSettings. \n<li>PipeSizeSettings – The main class to access pipe sizes. There is one object of this type in a document accessible through the static method GetPipeSizeSettings. Stores PipeConnections for each pipe material, using the id of the pipe material element as key to access. \n<li>PipeSizeSettingIterator – An iterator to a set of items from PipeSizeSettings. Each item is a KeyValuePair<elementid, pipeconnections=\"\">. \n<li>PipeConnections – Represents a set of pipe connection types. Stores PipeSchedules per each pipe connection type, using the id of the pipe connection type as key to access. \n<li>PipeConnectionIterator – An iterator to a set of items from PipeConnections. Each item is a KeyValuePair<elementid, pipeschedules=\"\">. \n<li>PipeSchedules – Represents a set of pipe schedules. Stores PipeSizes per each pipe schedule type, using the id of the pipe schedule type as key to access. \n<li>PipeScheduleIterator – An iterator to a set of items from PipeSchedules. Each item is a KeyValuePair<elementid, pipesizes=\"\">. \n<li>PipeSizes – Stores a set of pipe sizes, with the ability to add and remove from the set as needed. \n<li>PipeSizeIterator – An iterator to a set of MEP pipe sizes from PipeSizes. \n<li>MEPSize – Stores the basic size information for an MEP duct, pipe, cable tray, or conduit. \n</li></li></li></elementid,></li></li></elementid,></li></li></elementid,></li></li></li></ul>\n<h4>Detailed Energy Analysis Model API</h4>\n<p>A new feature added to the Revit API that is of special interest in the MEP domain is the detailed energy analysis model API. It enables you to obtain and analyze the contents of a project's detailed energy analysis model, as seen in the Export to gbXML and the Heating and Cooling Loads features. This analysis produces an analytical thermal model from the physical model of a building. The analytical thermal model is composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<p>The method EnergyAnalysisDetailModel.Create generates the model, which can the be traversed using methods such as GetAnalyticalSpaces, Surfaces, Openings, ShadingSurfaces.\n<p>This is demonstrated by the new SDK sample EnergyAnalysisModel:</p>\n<center>\n<img alt=\"EnergyAnalysisModel SDK sample\" src=\"img/EnergyAnalysisModel02.png\"/>\n</center>\n<h4>Conceptual Energy Analysis API</h4>\n<p>A second new API deals with energy analysis on conceptual design models. New classes provide access to the elements and objects created by Revit to perform this kind of analysis, and using the Document.Export method with a MassGBXMLExportOptions instance supports export of a gBXML file containing conceptual energy analysis elements (mass elements) only.\n\n\n<h4>Small Enhancements and Changes</h4>\n<p>A number of small enhancements and changes have been made to the Revit MEP API:\n<p><u>Spare and space circuits:</u>\nThe new property ElectricalSystem.CircuitType identifies the type of an electrical circuit (circuit, spare or space). The method ElectricalSystem.AddToCircuit now throws an exception when the system is a spare or space circuit. \n<p><u>Cable tray and conduit domain:</u>\nThe Autodesk.Revit.DB.Domain enumeration adds a new value to represent cable tray and conduit.\n<p><u>Connector:</u>\nNew read-only properties have been added for the JointType, GenderType and EngagementLength.\n<p><u>MEPSystem:</u>\nThe new property MEPSystem.IsEmpty identifies if the system currently contains no components.\n<p><u>Graphical warnings for disconnects:</u>\nThe new 'show graphical warning' properties on the Application class and the matching setters control whether Revit MEP will highlight disconnects in systems graphically.\n<p><u>Space properties:</u>\nThe new property Space.BaseHeatLoadOn indicates if the value of Space.LatentHeatGainperPerson and Space.SensibleHeatGainperPerson properties is the default value or if it is user-defined.   \n<p><u>Fitting methods:</u>\nThe Document methods to create new fittings no longer remove unused or dangling curve connectors.\n\n\n<a name=\"2\"></a>\n<h4>Revit 2012 API Webcast Recording</h4>\n<p>The material presented here was also discussed in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/05/revit-2012-api-webcast.html\">Revit 2012 API webcast</a>, \n\nand before that in somewhat less detail in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online presentation</a>.\n\nRecordings and sample material for both of these are now available from the \n\n<a href=\"http://www.adskconsulting.com/adn/cs/api_course_webcast_archive.php\">ADN webcast recordings archive</a>.\n\nFilter for \"Revit API\" and \"Developer Days Online: Revit\" respectively, \"English\", and \"Webcast\".\n\n<p>Here are direct links to the \n\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> and the \n\n<a href=\"http://download.autodesk.com/media/adn/DevDay_Online-Revit_2012_API.zip\">DevDays Online recording and material</a>, \n\nrespectively.\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "Pipe Settings and Sizes",
    "local_header_href": "#pipe-settings-and-sizes",
    "chunk_text": "<h4>Pipe Settings and Sizes</h4><p>MEP pipe settings are now accessible programmatically. The following new classes provide read and write access to them:\n<ul>\n<li>PipeSettings – The pipe settings. There is one object of this type in a document accessible through the static method GetPipeSettings. \n<li>PipeSizeSettings – The main class to access pipe sizes. There is one object of this type in a document accessible through the static method GetPipeSizeSettings. Stores PipeConnections for each pipe material, using the id of the pipe material element as key to access. \n<li>PipeSizeSettingIterator – An iterator to a set of items from PipeSizeSettings. Each item is a KeyValuePair<elementid, pipeconnections=\"\">. \n<li>PipeConnections – Represents a set of pipe connection types. Stores PipeSchedules per each pipe connection type, using the id of the pipe connection type as key to access. \n<li>PipeConnectionIterator – An iterator to a set of items from PipeConnections. Each item is a KeyValuePair<elementid, pipeschedules=\"\">. \n<li>PipeSchedules – Represents a set of pipe schedules. Stores PipeSizes per each pipe schedule type, using the id of the pipe schedule type as key to access. \n<li>PipeScheduleIterator – An iterator to a set of items from PipeSchedules. Each item is a KeyValuePair<elementid, pipesizes=\"\">. \n<li>PipeSizes – Stores a set of pipe sizes, with the ability to add and remove from the set as needed. \n<li>PipeSizeIterator – An iterator to a set of MEP pipe sizes from PipeSizes. \n<li>MEPSize – Stores the basic size information for an MEP duct, pipe, cable tray, or conduit. \n</li></li></li></elementid,></li></li></elementid,></li></li></elementid,></li></li></li></ul>\n<h4>Detailed Energy Analysis Model API</h4>\n<p>A new feature added to the Revit API that is of special interest in the MEP domain is the detailed energy analysis model API. It enables you to obtain and analyze the contents of a project's detailed energy analysis model, as seen in the Export to gbXML and the Heating and Cooling Loads features. This analysis produces an analytical thermal model from the physical model of a building. The analytical thermal model is composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<p>The method EnergyAnalysisDetailModel.Create generates the model, which can the be traversed using methods such as GetAnalyticalSpaces, Surfaces, Openings, ShadingSurfaces.\n<p>This is demonstrated by the new SDK sample EnergyAnalysisModel:</p>\n<center>\n<img alt=\"EnergyAnalysisModel SDK sample\" src=\"img/EnergyAnalysisModel02.png\"/>\n</center>\n<h4>Conceptual Energy Analysis API</h4>\n<p>A second new API deals with energy analysis on conceptual design models. New classes provide access to the elements and objects created by Revit to perform this kind of analysis, and using the Document.Export method with a MassGBXMLExportOptions instance supports export of a gBXML file containing conceptual energy analysis elements (mass elements) only.\n\n\n<h4>Small Enhancements and Changes</h4>\n<p>A number of small enhancements and changes have been made to the Revit MEP API:\n<p><u>Spare and space circuits:</u>\nThe new property ElectricalSystem.CircuitType identifies the type of an electrical circuit (circuit, spare or space). The method ElectricalSystem.AddToCircuit now throws an exception when the system is a spare or space circuit. \n<p><u>Cable tray and conduit domain:</u>\nThe Autodesk.Revit.DB.Domain enumeration adds a new value to represent cable tray and conduit.\n<p><u>Connector:</u>\nNew read-only properties have been added for the JointType, GenderType and EngagementLength.\n<p><u>MEPSystem:</u>\nThe new property MEPSystem.IsEmpty identifies if the system currently contains no components.\n<p><u>Graphical warnings for disconnects:</u>\nThe new 'show graphical warning' properties on the Application class and the matching setters control whether Revit MEP will highlight disconnects in systems graphically.\n<p><u>Space properties:</u>\nThe new property Space.BaseHeatLoadOn indicates if the value of Space.LatentHeatGainperPerson and Space.SensibleHeatGainperPerson properties is the default value or if it is user-defined.   \n<p><u>Fitting methods:</u>\nThe Document methods to create new fittings no longer remove unused or dangling curve connectors.\n\n\n<a name=\"2\"></a>\n<h4>Revit 2012 API Webcast Recording</h4>\n<p>The material presented here was also discussed in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/05/revit-2012-api-webcast.html\">Revit 2012 API webcast</a>, \n\nand before that in somewhat less detail in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online presentation</a>.\n\nRecordings and sample material for both of these are now available from the \n\n<a href=\"http://www.adskconsulting.com/adn/cs/api_course_webcast_archive.php\">ADN webcast recordings archive</a>.\n\nFilter for \"Revit API\" and \"Developer Days Online: Revit\" respectively, \"English\", and \"Webcast\".\n\n<p>Here are direct links to the \n\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> and the \n\n<a href=\"http://download.autodesk.com/media/adn/DevDay_Online-Revit_2012_API.zip\">DevDays Online recording and material</a>, \n\nrespectively.\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "Detailed Energy Analysis Model API",
    "local_header_href": "#detailed-energy-analysis-model-api",
    "chunk_text": "<h4>Detailed Energy Analysis Model API</h4><p>A new feature added to the Revit API that is of special interest in the MEP domain is the detailed energy analysis model API. It enables you to obtain and analyze the contents of a project's detailed energy analysis model, as seen in the Export to gbXML and the Heating and Cooling Loads features. This analysis produces an analytical thermal model from the physical model of a building. The analytical thermal model is composed of spaces, zones and planar surfaces that represent the actual volumetric elements of the building.\n<p>The method EnergyAnalysisDetailModel.Create generates the model, which can the be traversed using methods such as GetAnalyticalSpaces, Surfaces, Openings, ShadingSurfaces.\n<p>This is demonstrated by the new SDK sample EnergyAnalysisModel:</p>\n<center>\n<img alt=\"EnergyAnalysisModel SDK sample\" src=\"img/EnergyAnalysisModel02.png\"/>\n</center>\n<h4>Conceptual Energy Analysis API</h4>\n<p>A second new API deals with energy analysis on conceptual design models. New classes provide access to the elements and objects created by Revit to perform this kind of analysis, and using the Document.Export method with a MassGBXMLExportOptions instance supports export of a gBXML file containing conceptual energy analysis elements (mass elements) only.\n\n\n<h4>Small Enhancements and Changes</h4>\n<p>A number of small enhancements and changes have been made to the Revit MEP API:\n<p><u>Spare and space circuits:</u>\nThe new property ElectricalSystem.CircuitType identifies the type of an electrical circuit (circuit, spare or space). The method ElectricalSystem.AddToCircuit now throws an exception when the system is a spare or space circuit. \n<p><u>Cable tray and conduit domain:</u>\nThe Autodesk.Revit.DB.Domain enumeration adds a new value to represent cable tray and conduit.\n<p><u>Connector:</u>\nNew read-only properties have been added for the JointType, GenderType and EngagementLength.\n<p><u>MEPSystem:</u>\nThe new property MEPSystem.IsEmpty identifies if the system currently contains no components.\n<p><u>Graphical warnings for disconnects:</u>\nThe new 'show graphical warning' properties on the Application class and the matching setters control whether Revit MEP will highlight disconnects in systems graphically.\n<p><u>Space properties:</u>\nThe new property Space.BaseHeatLoadOn indicates if the value of Space.LatentHeatGainperPerson and Space.SensibleHeatGainperPerson properties is the default value or if it is user-defined.   \n<p><u>Fitting methods:</u>\nThe Document methods to create new fittings no longer remove unused or dangling curve connectors.\n\n\n<a name=\"2\"></a>\n<h4>Revit 2012 API Webcast Recording</h4>\n<p>The material presented here was also discussed in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/05/revit-2012-api-webcast.html\">Revit 2012 API webcast</a>, \n\nand before that in somewhat less detail in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online presentation</a>.\n\nRecordings and sample material for both of these are now available from the \n\n<a href=\"http://www.adskconsulting.com/adn/cs/api_course_webcast_archive.php\">ADN webcast recordings archive</a>.\n\nFilter for \"Revit API\" and \"Developer Days Online: Revit\" respectively, \"English\", and \"Webcast\".\n\n<p>Here are direct links to the \n\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> and the \n\n<a href=\"http://download.autodesk.com/media/adn/DevDay_Online-Revit_2012_API.zip\">DevDays Online recording and material</a>, \n\nrespectively.\n</p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "Conceptual Energy Analysis API",
    "local_header_href": "#conceptual-energy-analysis-api",
    "chunk_text": "<h4>Conceptual Energy Analysis API</h4><p>A second new API deals with energy analysis on conceptual design models. New classes provide access to the elements and objects created by Revit to perform this kind of analysis, and using the Document.Export method with a MassGBXMLExportOptions instance supports export of a gBXML file containing conceptual energy analysis elements (mass elements) only.\n\n\n<h4>Small Enhancements and Changes</h4>\n<p>A number of small enhancements and changes have been made to the Revit MEP API:\n<p><u>Spare and space circuits:</u>\nThe new property ElectricalSystem.CircuitType identifies the type of an electrical circuit (circuit, spare or space). The method ElectricalSystem.AddToCircuit now throws an exception when the system is a spare or space circuit. \n<p><u>Cable tray and conduit domain:</u>\nThe Autodesk.Revit.DB.Domain enumeration adds a new value to represent cable tray and conduit.\n<p><u>Connector:</u>\nNew read-only properties have been added for the JointType, GenderType and EngagementLength.\n<p><u>MEPSystem:</u>\nThe new property MEPSystem.IsEmpty identifies if the system currently contains no components.\n<p><u>Graphical warnings for disconnects:</u>\nThe new 'show graphical warning' properties on the Application class and the matching setters control whether Revit MEP will highlight disconnects in systems graphically.\n<p><u>Space properties:</u>\nThe new property Space.BaseHeatLoadOn indicates if the value of Space.LatentHeatGainperPerson and Space.SensibleHeatGainperPerson properties is the default value or if it is user-defined.   \n<p><u>Fitting methods:</u>\nThe Document methods to create new fittings no longer remove unused or dangling curve connectors.\n\n\n<a name=\"2\"></a>\n<h4>Revit 2012 API Webcast Recording</h4>\n<p>The material presented here was also discussed in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/05/revit-2012-api-webcast.html\">Revit 2012 API webcast</a>, \n\nand before that in somewhat less detail in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online presentation</a>.\n\nRecordings and sample material for both of these are now available from the \n\n<a href=\"http://www.adskconsulting.com/adn/cs/api_course_webcast_archive.php\">ADN webcast recordings archive</a>.\n\nFilter for \"Revit API\" and \"Developer Days Online: Revit\" respectively, \"English\", and \"Webcast\".\n\n<p>Here are direct links to the \n\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> and the \n\n<a href=\"http://download.autodesk.com/media/adn/DevDay_Online-Revit_2012_API.zip\">DevDays Online recording and material</a>, \n\nrespectively.\n</p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "Small Enhancements and Changes",
    "local_header_href": "#small-enhancements-and-changes",
    "chunk_text": "<h4>Small Enhancements and Changes</h4><p>A number of small enhancements and changes have been made to the Revit MEP API:\n<p><u>Spare and space circuits:</u>\nThe new property ElectricalSystem.CircuitType identifies the type of an electrical circuit (circuit, spare or space). The method ElectricalSystem.AddToCircuit now throws an exception when the system is a spare or space circuit. \n<p><u>Cable tray and conduit domain:</u>\nThe Autodesk.Revit.DB.Domain enumeration adds a new value to represent cable tray and conduit.\n<p><u>Connector:</u>\nNew read-only properties have been added for the JointType, GenderType and EngagementLength.\n<p><u>MEPSystem:</u>\nThe new property MEPSystem.IsEmpty identifies if the system currently contains no components.\n<p><u>Graphical warnings for disconnects:</u>\nThe new 'show graphical warning' properties on the Application class and the matching setters control whether Revit MEP will highlight disconnects in systems graphically.\n<p><u>Space properties:</u>\nThe new property Space.BaseHeatLoadOn indicates if the value of Space.LatentHeatGainperPerson and Space.SensibleHeatGainperPerson properties is the default value or if it is user-defined.   \n<p><u>Fitting methods:</u>\nThe Document methods to create new fittings no longer remove unused or dangling curve connectors.\n\n\n<a name=\"2\"></a>\n<h4>Revit 2012 API Webcast Recording</h4>\n<p>The material presented here was also discussed in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/05/revit-2012-api-webcast.html\">Revit 2012 API webcast</a>, \n\nand before that in somewhat less detail in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online presentation</a>.\n\nRecordings and sample material for both of these are now available from the \n\n<a href=\"http://www.adskconsulting.com/adn/cs/api_course_webcast_archive.php\">ADN webcast recordings archive</a>.\n\nFilter for \"Revit API\" and \"Developer Days Online: Revit\" respectively, \"English\", and \"Webcast\".\n\n<p>Here are direct links to the \n\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> and the \n\n<a href=\"http://download.autodesk.com/media/adn/DevDay_Online-Revit_2012_API.zip\">DevDays Online recording and material</a>, \n\nrespectively.\n</p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0594_mep_2012_api",
    "header_text": "Revit 2012 API Webcast Recording",
    "local_header_href": "#revit-2012-api-webcast-recording",
    "chunk_text": "<h4>Revit 2012 API Webcast Recording</h4><p>The material presented here was also discussed in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/05/revit-2012-api-webcast.html\">Revit 2012 API webcast</a>, \n\nand before that in somewhat less detail in the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/devdays-2010-online-with-revit-2012-api-news.html\">DevDays Online presentation</a>.\n\nRecordings and sample material for both of these are now available from the \n\n<a href=\"http://www.adskconsulting.com/adn/cs/api_course_webcast_archive.php\">ADN webcast recordings archive</a>.\n\nFilter for \"Revit API\" and \"Developer Days Online: Revit\" respectively, \"English\", and \"Webcast\".\n\n<p>Here are direct links to the \n\n<a href=\"http://download.autodesk.com/media/adn/Revit%202012_API_Updates_May_19_2011.zip\">Revit 2012 API webcast recording and material</a> and the \n\n<a href=\"http://download.autodesk.com/media/adn/DevDay_Online-Revit_2012_API.zip\">DevDays Online recording and material</a>, \n\nrespectively.\n</p></p>"
  }
]