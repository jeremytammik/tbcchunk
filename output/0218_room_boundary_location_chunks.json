[
  {
    "original_filename": "0218_room_boundary_location",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0218_room_boundary_location",
    "header_text": "Room Boundary Location",
    "local_header_href": "#room-boundary-location",
    "chunk_text": "<h3>Room Boundary Location</h3><p>We already had a look at\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/06/volume-computation-enable.html\">\nenabling the room volume computation</a>\n\nin C#.\nHere is a closely related question that also prompted me to implement something similar in VB for a change.\n\n<p><strong>Question:</strong>\nCould you please provide some VB.NET code showing how to set the Autodesk.Revit.Rooms.BoundaryLocationType in the document, for instance to 'WallCenter'?\n\n<p><strong>Answer:</strong>\nThe boundary location type is applied when calculating the room volume.\nThese settings are defined by the document settings volume calculation options.\nThe post mentioned above discusses how to access and modify these settings.\n\n<p>I implemented a VB.NET sample application RoomBoundaryLocation for you to demonstrate this in VB as well.\nHere is the mainline code of its Execute method:\n\n<pre class=\"code\">\n<span class=\"blue\">Public</span> <span class=\"blue\">Function</span> Execute( _\n  <span class=\"blue\">ByVal</span> commandData <span class=\"blue\">As</span> ExternalCommandData, _\n  <span class=\"blue\">ByRef</span> message <span class=\"blue\">As</span> <span class=\"blue\">String</span>, _\n  <span class=\"blue\">ByVal</span> elements <span class=\"blue\">As</span> ElementSet) _\n  <span class=\"blue\">As</span> CmdResult _\n  <span class=\"blue\">Implements</span> IExternalCommand.Execute\n\n  <span class=\"blue\">Dim</span> app <span class=\"blue\">As</span> Application = commandData.Application\n  <span class=\"blue\">Dim</span> doc <span class=\"blue\">As</span> Document = app.ActiveDocument\n\n  <span class=\"blue\">Dim</span> opt <span class=\"blue\">As</span> VolumeCalculationOptions _\n    = doc.Settings.VolumeCalculationSetting _\n      .VolumeCalculationOptions\n\n  opt.VolumeComputationEnable = <span class=\"blue\">True</span>\n\n  opt.RoomAreaBoundaryLocation _\n    = Rooms.BoundaryLocationType.WallCenter\n\n  doc.Settings.VolumeCalculationSetting _\n    .VolumeCalculationOptions = opt\n\n  <span class=\"blue\">Dim</span> volumes <span class=\"blue\">As</span> List(<span class=\"blue\">Of</span> <span class=\"blue\">String</span>) = <span class=\"blue\">New</span> List(<span class=\"blue\">Of</span> <span class=\"blue\">String</span>)\n  <span class=\"blue\">Dim</span> els <span class=\"blue\">As</span> ElementSet = doc.Selection.Elements\n\n  <span class=\"blue\">Dim</span> e <span class=\"blue\">As</span> Autodesk.Revit.Element\n  <span class=\"blue\">For</span> <span class=\"blue\">Each</span> e <span class=\"blue\">In</span> els\n    <span class=\"blue\">If</span> <span class=\"blue\">TypeOf</span> e <span class=\"blue\">Is</span> Room <span class=\"blue\">Then</span>\n      <span class=\"blue\">Dim</span> room <span class=\"blue\">As</span> Room = <span class=\"blue\">CType</span>(e, Room)\n      volumes.Add(room.Volume.ToString(<span class=\"maroon\">\"0.##\"</span>))\n      <span class=\"green\">'Else</span>\n      <span class=\"green\">'  volumes.Add(\"Not a room\")</span>\n    <span class=\"blue\">End</span> <span class=\"blue\">If</span>\n  <span class=\"blue\">Next</span>\n\n  <span class=\"blue\">If</span> 0 = volumes.Count <span class=\"blue\">Then</span>\n    message = <span class=\"maroon\">\"Please select some rooms.\"</span>\n  <span class=\"blue\">Else</span>\n    <span class=\"blue\">Dim</span> s <span class=\"blue\">As</span> <span class=\"blue\">String</span> = _\n      +<span class=\"maroon\">\"Selected room volumes in cubic feet: \"</span> _\n      + <span class=\"blue\">String</span>.Join(<span class=\"maroon\">\", \"</span>, volumes.ToArray()) _\n      + <span class=\"maroon\">\".\"</span>\n    MsgBox(s)\n  <span class=\"blue\">End</span> <span class=\"blue\">If</span>\n\n  <span class=\"blue\">Return</span> CmdResult.Failed\n<span class=\"blue\">End</span> <span class=\"blue\">Function</span>\n</pre>\n<p>Here are some sample rooms and spaces selected in the Revit user interface:\n\n<center>\n<img alt=\"Selected rooms and spaces\" src=\"img/selected_rooms.png\"/>\n</center>\n<p>This is the resulting dialogue displayed by running the command:\n\n<center>\n<img alt=\"Selected room volumes\" src=\"img/selected_room_volumes.png\"/>\n</center>\n<p>Here is the complete Visual Studio solution\n\n<a href=\"zip/RoomBoundaryLocation.zip\">\nRoomBoundaryLocation</a>\n\nimplementing the new command.</p>\n</p></p></p></p></p></p>"
  }
]