[
  {
    "original_filename": "0450_place_detail_inst",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0450_place_detail_inst",
    "header_text": "Place Detail Instance",
    "local_header_href": "#place-detail-instance",
    "chunk_text": "<h3>Place Detail Instance</h3><p>Here is a little note on a problem regarding the placement of a detail family instance in the active view that has appeared several times lately, and its solution by Robert Pleysier of \n\n<a href=\"http://www.alfadevelopment.nl\">\nALFA Development</a>:\n\n<p>I want to place a detail family instance in a section view.\nIn my initial attempts, the call to NewFamilyInstance was placing the instance in the wrong view.\nAfter using RevitLookup, we found that the instance was actually hosted in the section view.\nWe began experimenting with the other NewFamilyInstance options and finally found the following option which solved our problem:\n\n<pre class=\"code\">\n  <span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt; docViews = util.GetElemOfType( \n    doc, <span class=\"blue\">typeof</span>( <span class=\"teal\">View</span> ) );\n \n  <span class=\"teal\">View</span> v1 = getView( docViews, <span class=\"maroon\">\"Exterior\"</span> );\n \n  <span class=\"teal\">FamilyInstance</span> fin = factory.NewFamilyInstance(\n    <span class=\"teal\">XYZ</span>.Zero, famSymbol, v1.SketchPlane, \n    StructuralType.NonStructural );\n</pre>\n<p>This code is using the following helper method to find a view by name:\n\n<pre class=\"code\">\n<span class=\"teal\">View</span> getView( <span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt; views, <span class=\"blue\">string</span> name )\n{\n  <span class=\"blue\">foreach</span>( <span class=\"teal\">View</span> v <span class=\"blue\">in</span> views )\n  {\n    <span class=\"blue\">if</span>( v.ViewName == name )\n    {\n      <span class=\"blue\">return</span> v;\n    }\n  }\n  <span class=\"blue\">return</span> <span class=\"blue\">null</span>;\n}\n</pre>\n<p>This approach is making use of the overload of NewFamilyInstance taking the following arguments:\n\n<ul>\n<li>XYZ location\n<li>FamilySymbol symbol\n<li>Element host\n<li>StructuralType structuralType\n</li></li></li></li></ul>\n<p>So the sketch plane of the view is actually being regarded as the host of the detail instance.\nI find this pretty interesting.\n\n<p><strong>Important Note:</strong> Here is an important note from Scott Conover, Revit API Software Development Manager, on the suggestion above:\n\n<span style=\"color:darkblue\">\n<p>In Revit 2011, NewFamilyInstance(XYZ, FamilySymbol, View) is the overload designed for the use case.\n\n<p>I'm surprised the other one works.\n\n</p></p></span>\n<p>I am just in the process of exploring another case dealing with a similar issue, and will post again with a more complete solution for this issue as soon as it is fully clarified and tested.\n\n<p><strong>Response:</strong> Robert responds to Scott's suggestion and says:\n\n<span style=\"color:darkblue\">\n<p>We tried the method recommended by Scott Conover in the latest Revit 2011 but we did not succeed. After placing a detail family instance in a view like elevation or section, the detail family was placed in the plan view.\n\n</p></span>\n<p>The exploration continues...\n</p></p></p></p></p></p></p></p></p>"
  }
]