[
  {
    "original_filename": "0368_au_voting",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0368_au_voting",
    "header_text": "Voting Open for AU 2010 Sessions",
    "local_header_href": "#voting-open-for-au-2010-sessions",
    "chunk_text": "<h3>Voting Open for AU 2010 Sessions</h3><p>Shamelessly copying \n\n<a href=\"http://through-the-interface.typepad.com/through_the_interface/2010/05/voting-open-for-au-2010-sessions.html\">\nKean's lead</a>,\n\nhere is an overview of the classes I have submitted for this year's Autodesk University:\n\n<h4>Session ID 5977 – Optimal Use of New Revit 2011 Programming Features</h4>\n<p>A 60 minute lecture teaching everything you need to know about the new Revit 2011 programming features and how to use them, with many code examples, making use of all new API features in all types of Revit add-ins. We also present the one and only complete overview of all new Revit 2011 SDK samples. Special attention is paid to Idling, the most exciting and unique new event of all, with examples of powerful uses of this unique possibility to synchronise your Revit add-in with external data sources and applications.\n\n<p>Key learning objectives:\n\n<ul>\n<li>A complete and succinct overview of Revit 2011 Programming news\n<li>Optimal use of new basic API features such as element filtering\n<li>New user interface features for interactive selection, ribbon customisation, task dialogues, error and failure handling\n<li>Use of the Idling event to synchronise your Revit add-in with external data sources and applications\n<li>Use of the add-in manifest customisation and localisation functionality\n</li></li></li></li></li></ul>\n<h4>Session ID 4762 – Exactly What You Want, and Faster – Revit 2011 Programming Optimisation</h4>\n<p>A 60 minute lecture that goes one step beyond the optimal use of the new programming features. It performs some in depth analysis and benchmarking of the many different ways to use the most fundamental access to Revit database elements, the filtered element collector. This class covers techniques to efficiently extract elements and information from a Revit model. The new collector framework introduced in the 2011 release includes much more flexibility than before. Along with the flexibility comes some complexity, We demonstrate the best approaches for common element gathering tasks, discuss the new filters including logical and inverted aspects, show how the iteration framework can be used with .NET LINQ, discuss regeneration topics, and share a few auto-join performance tips.\n\n<p>Key learning objectives:\n\n<ul>\n<li>A complete overview of Revit 2011 filtered element collectors\n<li>In-depth understanding of the Revit add-in regeneration option and auto-join\n<li>Detailed Revit API performance benchmarking\n<li>Efficiently extract elements and information from a Revit model programmatically.\n<li>Demonstrate use of filtering using LINQ, the .NET language integrated query\n</li></li></li></li></li></ul>\n<h4>Session ID 1573 – All Systems Go in Revit MEP Programming</h4>\n<p>A 60 minute lecture that explaining how to analyze and modify Revit MEP models programmatically, as well as how to create entirely new models from scratch. It addresses all MEP domains including HVAC, electrical and plumbing. It discusses all MEP model components such as mechanical and electrical systems, ducts, pipes, fittings, connectors and the new cable trays, conduits and panel schedules. It shows how to implement in-depth analysis and traversal of systems, use the new panel schedule API, and make use of the new part creations methods to implement automatic splitting of parts, obstruction avoidance, routing automation and conduit and cable tray layout. We discuss the standard Revit MEP SDK sample applications as well as custom ones to convert pipes to conduits, layout cable tray elements and fittings,  display electrical system hierarchies in a tree view, and automatically calculate, size and report performance of an HVAC system based on room requirements.\n\n<p>Key learning objectives:\n\n<ul>\n<li>Manage, analyze, create and modify HVAC, electrical and plumbing Revit MEP models programmatically\n<li>Understand relationships between all MEP systems and model components: mechanical and electrical, pipes, ducts, fittings, etc.\n<li>Understand and reuse functionality provided by the Revit SDK samples\n<li>Understand custom API samples for cable tray and conduit generation and routing\n<li>Learn optimal use of new Revit 2011 programming functionality\n</li></li></li></li></li></ul>\n<h4>Please Vote</h4>\n<p>If you find these topics interesting, and are eligible to vote for online classes, please do so at the \n\n<a href=\"http://www.autodeskevents.com/au2010/index.cfm?event=voting.searchForm\">\nonline voting site</a>, \n\nwhich will remain open until <strong>this Friday, May 21<sup>st</sup></strong>.\n\n<p>Other Revit API classes that I would recommend very highly are the ones by my Autodesk colleagues Scott Conover, Harry Mattison, and Miroslav Schonauer.\n\n<!--\n1573 All Systems Go in Revit MEP Programming Lecture Must attend - GREAT Class  \n6017 Analyze geometry of buildings using the Autodesk Revit API Lecture Must attend - GREAT Class  \n6031 Applied dynamics: Using Dynamic Model Update in the Autodesk Revit API  Lecture Must attend - GREAT Class  \n4928 Creating and Analyzing Conceptual Massing Geometry With the Autodesk® Revit® API Lecture Must attend - GREAT Class  \n4763 Exactly What You Want, and Faster - Revit 2011 Programming Optimisation Lecture Must attend - GREAT Class  \n1681 Getting to know AutoCAD's Plugins of the Month Virtual Class Must attend - GREAT Class  \n5899 Integrate F# into your C# or VB.NET application for an 8x performance boost Lecture Must attend - GREAT Class  \n5977 Optimal Use of New Revit 2011 Programming Features Lecture Must attend - GREAT Class  \n1670 Point clouds on a shoestring Lecture Must attend - GREAT Class  \n6663 Presenting Your Analysis Data in Revit Lecture Must attend - GREAT Class  \n4444 Storing complex custom per-document and per-instance data with Re\nvit API Lecture Must attend - GREAT Class  \n-->\n</p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0368_au_voting",
    "header_text": "Session ID 5977 – Optimal Use of New Revit 2011 Programming Features",
    "local_header_href": "#session-id-5977-optimal-use-of-new-revit-2011-programming-features",
    "chunk_text": "<h4>Session ID 5977 – Optimal Use of New Revit 2011 Programming Features</h4><p>A 60 minute lecture teaching everything you need to know about the new Revit 2011 programming features and how to use them, with many code examples, making use of all new API features in all types of Revit add-ins. We also present the one and only complete overview of all new Revit 2011 SDK samples. Special attention is paid to Idling, the most exciting and unique new event of all, with examples of powerful uses of this unique possibility to synchronise your Revit add-in with external data sources and applications.\n\n<p>Key learning objectives:\n\n<ul>\n<li>A complete and succinct overview of Revit 2011 Programming news\n<li>Optimal use of new basic API features such as element filtering\n<li>New user interface features for interactive selection, ribbon customisation, task dialogues, error and failure handling\n<li>Use of the Idling event to synchronise your Revit add-in with external data sources and applications\n<li>Use of the add-in manifest customisation and localisation functionality\n</li></li></li></li></li></ul>\n<h4>Session ID 4762 – Exactly What You Want, and Faster – Revit 2011 Programming Optimisation</h4>\n<p>A 60 minute lecture that goes one step beyond the optimal use of the new programming features. It performs some in depth analysis and benchmarking of the many different ways to use the most fundamental access to Revit database elements, the filtered element collector. This class covers techniques to efficiently extract elements and information from a Revit model. The new collector framework introduced in the 2011 release includes much more flexibility than before. Along with the flexibility comes some complexity, We demonstrate the best approaches for common element gathering tasks, discuss the new filters including logical and inverted aspects, show how the iteration framework can be used with .NET LINQ, discuss regeneration topics, and share a few auto-join performance tips.\n\n<p>Key learning objectives:\n\n<ul>\n<li>A complete overview of Revit 2011 filtered element collectors\n<li>In-depth understanding of the Revit add-in regeneration option and auto-join\n<li>Detailed Revit API performance benchmarking\n<li>Efficiently extract elements and information from a Revit model programmatically.\n<li>Demonstrate use of filtering using LINQ, the .NET language integrated query\n</li></li></li></li></li></ul>\n<h4>Session ID 1573 – All Systems Go in Revit MEP Programming</h4>\n<p>A 60 minute lecture that explaining how to analyze and modify Revit MEP models programmatically, as well as how to create entirely new models from scratch. It addresses all MEP domains including HVAC, electrical and plumbing. It discusses all MEP model components such as mechanical and electrical systems, ducts, pipes, fittings, connectors and the new cable trays, conduits and panel schedules. It shows how to implement in-depth analysis and traversal of systems, use the new panel schedule API, and make use of the new part creations methods to implement automatic splitting of parts, obstruction avoidance, routing automation and conduit and cable tray layout. We discuss the standard Revit MEP SDK sample applications as well as custom ones to convert pipes to conduits, layout cable tray elements and fittings,  display electrical system hierarchies in a tree view, and automatically calculate, size and report performance of an HVAC system based on room requirements.\n\n<p>Key learning objectives:\n\n<ul>\n<li>Manage, analyze, create and modify HVAC, electrical and plumbing Revit MEP models programmatically\n<li>Understand relationships between all MEP systems and model components: mechanical and electrical, pipes, ducts, fittings, etc.\n<li>Understand and reuse functionality provided by the Revit SDK samples\n<li>Understand custom API samples for cable tray and conduit generation and routing\n<li>Learn optimal use of new Revit 2011 programming functionality\n</li></li></li></li></li></ul>\n<h4>Please Vote</h4>\n<p>If you find these topics interesting, and are eligible to vote for online classes, please do so at the \n\n<a href=\"http://www.autodeskevents.com/au2010/index.cfm?event=voting.searchForm\">\nonline voting site</a>, \n\nwhich will remain open until <strong>this Friday, May 21<sup>st</sup></strong>.\n\n<p>Other Revit API classes that I would recommend very highly are the ones by my Autodesk colleagues Scott Conover, Harry Mattison, and Miroslav Schonauer.\n\n<!--\n1573 All Systems Go in Revit MEP Programming Lecture Must attend - GREAT Class  \n6017 Analyze geometry of buildings using the Autodesk Revit API Lecture Must attend - GREAT Class  \n6031 Applied dynamics: Using Dynamic Model Update in the Autodesk Revit API  Lecture Must attend - GREAT Class  \n4928 Creating and Analyzing Conceptual Massing Geometry With the Autodesk® Revit® API Lecture Must attend - GREAT Class  \n4763 Exactly What You Want, and Faster - Revit 2011 Programming Optimisation Lecture Must attend - GREAT Class  \n1681 Getting to know AutoCAD's Plugins of the Month Virtual Class Must attend - GREAT Class  \n5899 Integrate F# into your C# or VB.NET application for an 8x performance boost Lecture Must attend - GREAT Class  \n5977 Optimal Use of New Revit 2011 Programming Features Lecture Must attend - GREAT Class  \n1670 Point clouds on a shoestring Lecture Must attend - GREAT Class  \n6663 Presenting Your Analysis Data in Revit Lecture Must attend - GREAT Class  \n4444 Storing complex custom per-document and per-instance data with Re\nvit API Lecture Must attend - GREAT Class  \n-->\n</p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0368_au_voting",
    "header_text": "Session ID 4762 – Exactly What You Want, and Faster – Revit 2011 Programming Optimisation",
    "local_header_href": "#session-id-4762-exactly-what-you-want-and-faster-revit-2011-programming-optimisation",
    "chunk_text": "<h4>Session ID 4762 – Exactly What You Want, and Faster – Revit 2011 Programming Optimisation</h4><p>A 60 minute lecture that goes one step beyond the optimal use of the new programming features. It performs some in depth analysis and benchmarking of the many different ways to use the most fundamental access to Revit database elements, the filtered element collector. This class covers techniques to efficiently extract elements and information from a Revit model. The new collector framework introduced in the 2011 release includes much more flexibility than before. Along with the flexibility comes some complexity, We demonstrate the best approaches for common element gathering tasks, discuss the new filters including logical and inverted aspects, show how the iteration framework can be used with .NET LINQ, discuss regeneration topics, and share a few auto-join performance tips.\n\n<p>Key learning objectives:\n\n<ul>\n<li>A complete overview of Revit 2011 filtered element collectors\n<li>In-depth understanding of the Revit add-in regeneration option and auto-join\n<li>Detailed Revit API performance benchmarking\n<li>Efficiently extract elements and information from a Revit model programmatically.\n<li>Demonstrate use of filtering using LINQ, the .NET language integrated query\n</li></li></li></li></li></ul>\n<h4>Session ID 1573 – All Systems Go in Revit MEP Programming</h4>\n<p>A 60 minute lecture that explaining how to analyze and modify Revit MEP models programmatically, as well as how to create entirely new models from scratch. It addresses all MEP domains including HVAC, electrical and plumbing. It discusses all MEP model components such as mechanical and electrical systems, ducts, pipes, fittings, connectors and the new cable trays, conduits and panel schedules. It shows how to implement in-depth analysis and traversal of systems, use the new panel schedule API, and make use of the new part creations methods to implement automatic splitting of parts, obstruction avoidance, routing automation and conduit and cable tray layout. We discuss the standard Revit MEP SDK sample applications as well as custom ones to convert pipes to conduits, layout cable tray elements and fittings,  display electrical system hierarchies in a tree view, and automatically calculate, size and report performance of an HVAC system based on room requirements.\n\n<p>Key learning objectives:\n\n<ul>\n<li>Manage, analyze, create and modify HVAC, electrical and plumbing Revit MEP models programmatically\n<li>Understand relationships between all MEP systems and model components: mechanical and electrical, pipes, ducts, fittings, etc.\n<li>Understand and reuse functionality provided by the Revit SDK samples\n<li>Understand custom API samples for cable tray and conduit generation and routing\n<li>Learn optimal use of new Revit 2011 programming functionality\n</li></li></li></li></li></ul>\n<h4>Please Vote</h4>\n<p>If you find these topics interesting, and are eligible to vote for online classes, please do so at the \n\n<a href=\"http://www.autodeskevents.com/au2010/index.cfm?event=voting.searchForm\">\nonline voting site</a>, \n\nwhich will remain open until <strong>this Friday, May 21<sup>st</sup></strong>.\n\n<p>Other Revit API classes that I would recommend very highly are the ones by my Autodesk colleagues Scott Conover, Harry Mattison, and Miroslav Schonauer.\n\n<!--\n1573 All Systems Go in Revit MEP Programming Lecture Must attend - GREAT Class  \n6017 Analyze geometry of buildings using the Autodesk Revit API Lecture Must attend - GREAT Class  \n6031 Applied dynamics: Using Dynamic Model Update in the Autodesk Revit API  Lecture Must attend - GREAT Class  \n4928 Creating and Analyzing Conceptual Massing Geometry With the Autodesk® Revit® API Lecture Must attend - GREAT Class  \n4763 Exactly What You Want, and Faster - Revit 2011 Programming Optimisation Lecture Must attend - GREAT Class  \n1681 Getting to know AutoCAD's Plugins of the Month Virtual Class Must attend - GREAT Class  \n5899 Integrate F# into your C# or VB.NET application for an 8x performance boost Lecture Must attend - GREAT Class  \n5977 Optimal Use of New Revit 2011 Programming Features Lecture Must attend - GREAT Class  \n1670 Point clouds on a shoestring Lecture Must attend - GREAT Class  \n6663 Presenting Your Analysis Data in Revit Lecture Must attend - GREAT Class  \n4444 Storing complex custom per-document and per-instance data with Re\nvit API Lecture Must attend - GREAT Class  \n-->\n</p></p></p></p></p></p>"
  },
  {
    "original_filename": "0368_au_voting",
    "header_text": "Session ID 1573 – All Systems Go in Revit MEP Programming",
    "local_header_href": "#session-id-1573-all-systems-go-in-revit-mep-programming",
    "chunk_text": "<h4>Session ID 1573 – All Systems Go in Revit MEP Programming</h4><p>A 60 minute lecture that explaining how to analyze and modify Revit MEP models programmatically, as well as how to create entirely new models from scratch. It addresses all MEP domains including HVAC, electrical and plumbing. It discusses all MEP model components such as mechanical and electrical systems, ducts, pipes, fittings, connectors and the new cable trays, conduits and panel schedules. It shows how to implement in-depth analysis and traversal of systems, use the new panel schedule API, and make use of the new part creations methods to implement automatic splitting of parts, obstruction avoidance, routing automation and conduit and cable tray layout. We discuss the standard Revit MEP SDK sample applications as well as custom ones to convert pipes to conduits, layout cable tray elements and fittings,  display electrical system hierarchies in a tree view, and automatically calculate, size and report performance of an HVAC system based on room requirements.\n\n<p>Key learning objectives:\n\n<ul>\n<li>Manage, analyze, create and modify HVAC, electrical and plumbing Revit MEP models programmatically\n<li>Understand relationships between all MEP systems and model components: mechanical and electrical, pipes, ducts, fittings, etc.\n<li>Understand and reuse functionality provided by the Revit SDK samples\n<li>Understand custom API samples for cable tray and conduit generation and routing\n<li>Learn optimal use of new Revit 2011 programming functionality\n</li></li></li></li></li></ul>\n<h4>Please Vote</h4>\n<p>If you find these topics interesting, and are eligible to vote for online classes, please do so at the \n\n<a href=\"http://www.autodeskevents.com/au2010/index.cfm?event=voting.searchForm\">\nonline voting site</a>, \n\nwhich will remain open until <strong>this Friday, May 21<sup>st</sup></strong>.\n\n<p>Other Revit API classes that I would recommend very highly are the ones by my Autodesk colleagues Scott Conover, Harry Mattison, and Miroslav Schonauer.\n\n<!--\n1573 All Systems Go in Revit MEP Programming Lecture Must attend - GREAT Class  \n6017 Analyze geometry of buildings using the Autodesk Revit API Lecture Must attend - GREAT Class  \n6031 Applied dynamics: Using Dynamic Model Update in the Autodesk Revit API  Lecture Must attend - GREAT Class  \n4928 Creating and Analyzing Conceptual Massing Geometry With the Autodesk® Revit® API Lecture Must attend - GREAT Class  \n4763 Exactly What You Want, and Faster - Revit 2011 Programming Optimisation Lecture Must attend - GREAT Class  \n1681 Getting to know AutoCAD's Plugins of the Month Virtual Class Must attend - GREAT Class  \n5899 Integrate F# into your C# or VB.NET application for an 8x performance boost Lecture Must attend - GREAT Class  \n5977 Optimal Use of New Revit 2011 Programming Features Lecture Must attend - GREAT Class  \n1670 Point clouds on a shoestring Lecture Must attend - GREAT Class  \n6663 Presenting Your Analysis Data in Revit Lecture Must attend - GREAT Class  \n4444 Storing complex custom per-document and per-instance data with Re\nvit API Lecture Must attend - GREAT Class  \n-->\n</p></p></p></p>"
  },
  {
    "original_filename": "0368_au_voting",
    "header_text": "Please Vote",
    "local_header_href": "#please-vote",
    "chunk_text": "<h4>Please Vote</h4><p>If you find these topics interesting, and are eligible to vote for online classes, please do so at the \n\n<a href=\"http://www.autodeskevents.com/au2010/index.cfm?event=voting.searchForm\">\nonline voting site</a>, \n\nwhich will remain open until <strong>this Friday, May 21<sup>st</sup></strong>.\n\n<p>Other Revit API classes that I would recommend very highly are the ones by my Autodesk colleagues Scott Conover, Harry Mattison, and Miroslav Schonauer.\n\n<!--\n1573 All Systems Go in Revit MEP Programming Lecture Must attend - GREAT Class  \n6017 Analyze geometry of buildings using the Autodesk Revit API Lecture Must attend - GREAT Class  \n6031 Applied dynamics: Using Dynamic Model Update in the Autodesk Revit API  Lecture Must attend - GREAT Class  \n4928 Creating and Analyzing Conceptual Massing Geometry With the Autodesk® Revit® API Lecture Must attend - GREAT Class  \n4763 Exactly What You Want, and Faster - Revit 2011 Programming Optimisation Lecture Must attend - GREAT Class  \n1681 Getting to know AutoCAD's Plugins of the Month Virtual Class Must attend - GREAT Class  \n5899 Integrate F# into your C# or VB.NET application for an 8x performance boost Lecture Must attend - GREAT Class  \n5977 Optimal Use of New Revit 2011 Programming Features Lecture Must attend - GREAT Class  \n1670 Point clouds on a shoestring Lecture Must attend - GREAT Class  \n6663 Presenting Your Analysis Data in Revit Lecture Must attend - GREAT Class  \n4444 Storing complex custom per-document and per-instance data with Re\nvit API Lecture Must attend - GREAT Class  \n-->\n</p></p>"
  }
]