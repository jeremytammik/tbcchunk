[
  {
    "original_filename": "0447_doorswing",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0447_doorswing",
    "header_text": "DoorSwing Fix",
    "local_header_href": "#doorswing-fix",
    "chunk_text": "<h3>DoorSwing Fix</h3><p>I am spending this week in the UK.\nWe are having a long-awaited EMEA DevTech team meeting today.\nWe finally succeeded in creating a possibility for all ADN engineers working in the European region to get together face to face.\nI met some of my colleagues for the first time, for instance Marat, who is based in Moscow, and Kristine from Toronto (not really part of Europe).\nThe rest of the week I will be attending an internal training course, so expect a bit less blogging activity than usual.\nI do hope to be able to present at least something anyway, though, beginning with the following little item that cropped up a week or two ago:\n\n<p>Eric Wigren of <a href=\"http://www.cadspecialisten.se\">CAD Specialisten</a> brought a little problem with the DoorSwing SDK sample to my attention.\n\n<p>Since the fix is simple, I will publish my version of it here, in case anyone needs it urgently, like Eric did.\nThe public SDK will also be fixed, of course, the next time an update becomes available.\n\n<p>It started out with Eric's raising the following issue:\n\n<p><strong>Question:</strong> I am trying to use the Revit 2011 SDK DoorSwing sample.\nIf I flip a door in the user interface without clicking 'Update Door Properties' and then save the project, I get the following error message:\n\n<p>\"Attempt to modify the model outside of transaction.\"\n\n<p>Do you have a solution for this?\n\n<p>I need the DoorSwing add-in because in Sweden when ordering doors for a new building, the factory needs to know for every door whether its leaf is on the left or right. \nThis swing direction feature is available in AutoCAD Architecture, but not in Revit.\n\n<p><strong>Answer:</strong> I looked at this sample and discovered two unrelated problems with it:\n\n<ul>\n<li>The external application is missing from the add-in manifest file.\n<li>The external application call-back event handlers lack the required transactions.\n</li></li></ul>\n<p>Put differently, with a little more detail:\n\n<ul>\n<li>The add-in manifest file lists the three commands, but not the external application implemented by this sample.\n<li>The external application implements event handlers for the DocumentSaving and DocumentSavingAs, and these do not set up the transactions that they require.\n</li></li></ul>\n<p>The latter issue is causing the problem you describe.\n\n<p>Adding the external application to the add-in manifest can be achieved by including the following lines to DoorSwing.addin immediately before the final line with the closing RevitAddIns tag (copy to a text editor to see the truncated lines):\n\n<pre class=\"code\">\n<span class=\"blue\">  &lt;</span><span class=\"maroon\">AddIn</span><span class=\"blue\"> </span><span class=\"red\">Type</span><span class=\"blue\">=</span>\"<span class=\"blue\">Application</span>\"<span class=\"blue\">&gt;</span>\n<span class=\"blue\">    &lt;</span><span class=\"maroon\">Name</span><span class=\"blue\">&gt;</span>DoorSwing<span class=\"blue\">&lt;/</span><span class=\"maroon\">Name</span><span class=\"blue\">&gt;</span>\n<span class=\"blue\">    &lt;</span><span class=\"maroon\">Assembly</span><span class=\"blue\">&gt;</span>C:\\...\\DoorSwing.dll<span class=\"blue\">&lt;/</span><span class=\"maroon\">Assembly</span><span class=\"blue\">&gt;</span>\n<span class=\"blue\">    &lt;</span><span class=\"maroon\">ClientId</span><span class=\"blue\">&gt;</span>ad10ff26-34a5-4186-8142-3619264e0833<span class=\"blue\">&lt;/</span><span class=\"maroon\">ClientId</span><span class=\"blue\">&gt;</span>\n<span class=\"blue\">    &lt;</span><span class=\"maroon\">FullClassName</span><span class=\"blue\">&gt;</span>Revit.SDK.Samples.DoorSwing.CS.ExternalApplication<span class=\"blue\">&lt;/</span><span class=\"maroon\">FullClassName</span><span class=\"blue\">&gt;</span>\n<span class=\"blue\">  &lt;/</span><span class=\"maroon\">AddIn</span><span class=\"blue\">&gt;</span>\n</pre>\n<p>To add the transaction required to the event handlers, I implemented a common helper function 'f' called by both of them in the module ExternalApplication.cs.\nThe resulting code looks like this:\n\n<pre class=\"code\">\n<span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;summary&gt;</span>\n<span class=\"gray\">///</span><span class=\"green\"> This event is fired whenever a document </span>\n<span class=\"gray\">///</span><span class=\"green\"> is saved. Update door's information </span>\n<span class=\"gray\">///</span><span class=\"green\"> according to door's current geometry.</span>\n<span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;/summary&gt;</span>\n<span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;param name=\"sender\"&gt;</span><span class=\"green\">The source of the event.</span><span class=\"gray\">&lt;/param&gt;</span>\n<span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;param name=\"args\"&gt;</span><span class=\"green\">An DocumentSavingEventArgs </span>\n<span class=\"gray\">///</span><span class=\"green\"> that contains the DocumentSaving event data.</span><span class=\"gray\">&lt;/param&gt;</span>\n<span class=\"blue\">private</span> <span class=\"blue\">void</span> DocumentSavingHandler( \n  <span class=\"teal\">Object</span> sender, \n  <span class=\"teal\">DocumentSavingEventArgs</span> args )\n{\n  f( args.Document );\n}\n \n<span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;summary&gt;</span>\n<span class=\"gray\">///</span><span class=\"green\"> This event is fired whenever a document </span>\n<span class=\"gray\">///</span><span class=\"green\"> is saved as. Update door's information </span>\n<span class=\"gray\">///</span><span class=\"green\"> according to door's current geometry.</span>\n<span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;/summary&gt;</span>\n<span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;param name=\"sender\"&gt;</span><span class=\"green\">The source of the event.</span><span class=\"gray\">&lt;/param&gt;</span>\n<span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;param name=\"args\"&gt;</span><span class=\"green\">An DocumentSavingAsEventArgs </span>\n<span class=\"gray\">///</span><span class=\"green\"> that contains the DocumentSavingAs event data.</span><span class=\"gray\">&lt;/param&gt;</span>\n<span class=\"blue\">private</span> <span class=\"blue\">void</span> DocumentSavingAsHandler( \n  <span class=\"teal\">Object</span> sender, \n  <span class=\"teal\">DocumentSavingAsEventArgs</span> args )\n{\n  f( args.Document );\n}\n \n<span class=\"blue\">void</span> f( <span class=\"teal\">Document</span> doc )\n{\n  <span class=\"blue\">string</span> message = <span class=\"maroon\">\"\"</span>;\n \n  <span class=\"teal\">Transaction</span> t = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc, \n    <span class=\"maroon\">\"Door Swing\"</span> );\n \n  t.Start();\n \n  <span class=\"blue\">try</span>\n  {\n    <span class=\"teal\">DoorSwingData</span>.UpdateDoorsInfo( \n      doc, <span class=\"blue\">false</span>, <span class=\"blue\">false</span>, <span class=\"blue\">ref</span> message );\n \n    t.Commit();\n  }\n  <span class=\"blue\">catch</span>( <span class=\"teal\">Exception</span> ex )\n  {\n    t.RollBack();\n \n    message = ex.Message;\n  }\n  <span class=\"blue\">if</span>( 0 &lt; message.Length )\n  {\n    <span class=\"teal\">MessageBox</span>.Show( message, <span class=\"maroon\">\"Door Swing\"</span> );\n  }\n}\n</pre>\n<p>Here is \n\n<!-- C:\\a\\lib\\revit\\2011\\SDK\\Samples\\DoorSwing\\CS\\DoorSwingUpdateJeremy.zip -->\n<a href=\"zip/DoorSwingUpdateJeremy.zip\">\nDoorSwingUpdateJeremy.zip</a> containing the two modified files DoorSwing.addin and ExternalApplication.cs.\n\n\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  }
]