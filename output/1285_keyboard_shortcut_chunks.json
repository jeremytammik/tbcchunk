[
  {
    "original_filename": "1285_keyboard_shortcut",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1285_keyboard_shortcut",
    "header_text": "Keyboard Shortcuts and Other News",
    "local_header_href": "#keyboard-shortcuts-and-other-news",
    "chunk_text": "<h3>Keyboard Shortcuts and Other News</h3><p>A couple of questions on stackoverflow and the Revit API discussion forum prompted me to pick up the age-old issue of\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/04/addin-keyboard-shortcut.html\">keyboard shortcuts</a> again.</p><p>Plus, I'd like to point out some news from the AEC Hackathon in New York and the AECbytes newsletter:</p><ul>\n<li><a href=\"#2\">AEC Hackathon in New York</a></li>\n<li><a href=\"#3\">AECbytes newsletter</a></li>\n<li><a href=\"#4\">How to programmatically retrieve keyboard shortcuts</a></li>\n<li><a href=\"#5\">How to assign a keyboard shortcut to an external command</a></li>\n<li><a href=\"#6\">How to programmatically create a keyboard shortcut</a></li>\n</ul><a name=\"2\"></a>"
  },
  {
    "original_filename": "1285_keyboard_shortcut",
    "header_text": "AEC Hackathon in New York",
    "local_header_href": "#aec-hackathon-in-new-york",
    "chunk_text": "<h4>AEC Hackathon in New York</h4><p>I attended the AEC Hackathon in New York\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/05/aec-hackathon-from-the-midst-of-the-fray.html\">\nlast year</a>,\n\nand one of the numerous results was the vA3C WebGL three.js-based 3D AEC viewer:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2014/05/rvtva3c-revit-va3c-generic-aec-viewer-json-export.html\">RvtVa3c – Revit vA3C generic AEC viewer JSON export</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2014/05/rvtva3c-assembly-resolver.html\">RvtVa3c assembly resolver</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2014/08/threejs-aec-viewer-progress-on-two-fronts.html\">Three.js AEC viewer progress on two fronts</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2014/10/berlin-hackathon-results-3d-viewer-and-web-news.html#7\">Custom user settings storage and RvtVa3c update</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2015/01/3d-viewing-va3c-and-revitlookup-updates.html\">3D Viewing and vA3C updates</a></li>\n</ul><p>This time around, my colleague Jaime Rosales Duque participated and shared his experiences on the\n\n<a href=\"http://adndevblog.typepad.com/aec/2015/02/aec-hackathon-new-york-city-20.html\">\nAEC Hackathon New York City 2.0</a>.</p><p>For more details on the innovative projects created there, see the\n\n<a href=\"http://2build.wordpress.com/2015/02/03/aec-hackathon-nyc-recap\">\nAEC Hackathon NYC recap</a>.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1285_keyboard_shortcut",
    "header_text": "AECbytes Newsletter",
    "local_header_href": "#aecbytes-newsletter",
    "chunk_text": "<h4>AECbytes Newsletter</h4><p>For an overview over a couple of exciting AEC happenings that I have not mentioned previously, I find Lachmi Khemlani's semi-annual\n\n<a href=\"http://www.aecbytes.com/newsletter/2015/issue_73.html\">\nAECbytes AEC technology newsletter</a> a\n\nvery worthwhile read, mentioning Trimble ProjectSight, AllTrak Cloud and Rapid Positioning System, Newforma SmartUse, Conworld and Aconex Dynamic Manuals.</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "1285_keyboard_shortcut",
    "header_text": "How to Programmatically Retrieve Keyboard Shortcuts",
    "local_header_href": "#how-to-programmatically-retrieve-keyboard-shortcuts",
    "chunk_text": "<h4>How to Programmatically Retrieve Keyboard Shortcuts</h4><p>A question was raised on the Revit API discussion forum on\n\n<a href=\"http://forums.autodesk.com/t5/revit-api/how-to-get-short-key-collection/td-p/5513905\">\nhow to programmatically retrieve keyboard shortcuts</a>:</p><p><strong>Question:</strong>\n\nPlease suggest how can I get list of Revit short keys programmatically.\n\n<p><strong>Answer:</strong>\n\nThe user interface provides a command to\n\n<a href=\"http://help.autodesk.com/view/RVT/2015/ENU/?guid=GUID-0A6F242A-EBEF-4B9B-B974-23006DC2E882\">\nexport your shortcut keys</a> to XML.</p>\n<p>This command may possibly be launched programmatically as well using\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.3\">PostCommand</a>.</p>\n<p>It might be tricky to drive programmatically, though.\nMaybe, you can either use the Revit API PostCommand method, the or .NET UI Automation library to drive the following sequence:</p>\n<ul>\n<li>View &gt; Windows &gt; User Interface &gt; Keyboard Shortcuts &gt; Export... &gt; filename input &gt; Save &gt; Cancel</li>\n</ul>\n<p>If you use PostCommand, you will have to\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.32\">\nhandle all the dialogues</a> that\n\npop up via the Revit API.</p>\n<p><strong>Revitalizer</strong> suggests:\n\nJust read this file:</p>\n<ul>\n<li>C:\\Users\\[YOUR_USER_NAME]\\AppData\\Roaming\\Autodesk\\Revit\\Autodesk Revit 2015\\KeyboardShortcuts.xml</li>\n</ul>\n<p>As you can see, this is a per-user-file, so there may be several of them on your system.</p>\n<p><strong>Question:</strong>\n\nIs this file always generated automatically, or do you have to launch some Revit command to export it?</p>\n<p>Does Revit keep it up to date automatically every time you make a change to the keyboard shortcuts?</p>\n<p><strong>Answer:</strong>\nYes, Revit updates this file just if I change the shortcuts in the GUI.</p>\n<p>I don't know if there exists such a file if the user didn't change them yet, but I suppose so since there are not only user defined but also predefined shortcuts, e.g. WF for wireframe display mode.\n\n<p>Further testing shows that the XML file is not present before the use user sets up her first keyboard shortcut.</p>\n<p>If it is missing and you use the GUI to make a change to the existing shortcuts, e.g. by adding one, it appears.</p>\n<p>Since shortcuts are per user, this information needs to be stored, anyway.</p>\n<p>If the user never changed her shortcuts, you can assume that she is using default settings.</p>\n<p>To generate a default settings file, you can make a change, retrieve the XML file, and use your newly generated file as a template, minus your change.</p>\n<p>Since the KeyboardShortcuts.xml file is localised (CommandName and Paths attributes), one will need to create one template per language.</p>\n<p>The CommandId and Shortcuts attributes are language independent.\nIn a German XML file, for example, there is a default MD for \"modify\", \"ändern\" in German.</p>\n<p>If you just want the CommandId-Shortcuts relationship, you need only one file version, since this relation is language independent.</p>\n<a name=\"5\"></a>\n<h4>How to Assign a Keyboard Shortcut to an External Command</h4>\n<p>Another question on the Revit API discussion forum on\n\n<a href=\"http://forums.autodesk.com/t5/revit-api/how-to-assign-keyboard-shortcut-to-external-commands/td-p/5511028\">\nhow to assign a keyboard shortcut to an external command</a>:</p>\n<p><strong>Question:</strong>\n\nHow to assign keyboard shortcuts for external commands in the Revit 2015?\n\n<p>For example, I have created an external command to display the element location and want to execute this commend using a keyboard shortcut \"CP\".</p>\n<p><strong>Answer:</strong>\n\nIts simple.\nJust go to the Revit Menu and click on options at the bottom right of the popup.\nThen click on User Interface tab and then select the Keyboard Shortcuts in the middle of the dialog on the right side.\nFrom there you can find your custom command and assign a shortcut to it.\nYou can also adjust existing shortcuts and make new shortcuts there for most of the commands in Revit.\n\n<p><strong>Response:</strong>\n\nThanks for your reply, but I want to do this programmatically.</p>\n<p><strong>Answer:</strong>\n\nHere is an old description on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/04/addin-keyboard-shortcut.html\">how to achieve that back in 2009</a>.</p>\n<p>Things have changed since then, though.</p>\n<p>The Revit 2011 API introduced\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/02/whats-new-in-the-revit-2011-api.html\">keyboard shortcut support for API buttons</a>:</p>\n<h4 style=\"color:darkblue\">Keyboard shortcut support for API buttons</h4>\n<p style=\"color:darkblue\">API buttons found on the Ribbon can be assigned a keyboard shortcut. Buttons created by applications registered using manifest files now use an id based on their application id and button name to provide a unique identifier for the button. The keyboard shortcut will be maintained even if the order of registration of API applications changes.\n</p>\n<p>This functionality was overhauled in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/03/whats-new-in-the-revit-2013-api.html\">Revit 2013 API</a>:</p>\n<h4 style=\"color:darkblue\">Support for Keyboard Shortcuts and Quick Access Toolbar</h4>\n<p style=\"color:darkblue\">API commands may now be assigned keyboard shortcuts, and those assignments will be preserved even if add-ins are added, removed or changed in subsequent sessions.</p>\n<p style=\"color:darkblue\">API commands may also be moved to the Quick Access Toolbar, and that assignment will also be preserved even if add-ins are added, removed or changed in subsequent sessions.</p>\n<p>Unfortunately, it looks as if the actual assignment still is done manually as described in the Revit help topic on\n\n<a href=\"http://help.autodesk.com/view/RVT/2015/ENU/?guid=GUID-39D549F2-75EE-4C06-8B6A-3DADE1FBEF59\">Keyboard Shortcuts</a>.</p>\n<p>You will obviously be facing the same issues as described above driving this programmatically.</p>\n<a name=\"6\"></a>\n<h4>How to Programmatically Create a Keyboard Shortcut</h4>\n<p>A query on stackoverflow on how to\n\n<a href=\"http://stackoverflow.com/questions/9472227/programmatically-create-a-keyboard-shortcut-in-revit\">\nprogrammatically create a keyboard shortcut in Revit</a>:</p>\n<p><strong>Question:</strong> Can I programmatically create a keyboard shortcut for my Revit add-in?</p>\n<p><strong>Answer:</strong> As explained by the help topics listed above, this can easily be achieved manually.</p>\n<p>Programmatically, again, you will have to tackle the issues described above, as far as I know.</p>\n</p></p></p></p>"
  },
  {
    "original_filename": "1285_keyboard_shortcut",
    "header_text": "How to Assign a Keyboard Shortcut to an External Command",
    "local_header_href": "#how-to-assign-a-keyboard-shortcut-to-an-external-command",
    "chunk_text": "<h4>How to Assign a Keyboard Shortcut to an External Command</h4><p>Another question on the Revit API discussion forum on\n\n<a href=\"http://forums.autodesk.com/t5/revit-api/how-to-assign-keyboard-shortcut-to-external-commands/td-p/5511028\">\nhow to assign a keyboard shortcut to an external command</a>:</p><p><strong>Question:</strong>\n\nHow to assign keyboard shortcuts for external commands in the Revit 2015?\n\n<p>For example, I have created an external command to display the element location and want to execute this commend using a keyboard shortcut \"CP\".</p>\n<p><strong>Answer:</strong>\n\nIts simple.\nJust go to the Revit Menu and click on options at the bottom right of the popup.\nThen click on User Interface tab and then select the Keyboard Shortcuts in the middle of the dialog on the right side.\nFrom there you can find your custom command and assign a shortcut to it.\nYou can also adjust existing shortcuts and make new shortcuts there for most of the commands in Revit.\n\n<p><strong>Response:</strong>\n\nThanks for your reply, but I want to do this programmatically.</p>\n<p><strong>Answer:</strong>\n\nHere is an old description on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/04/addin-keyboard-shortcut.html\">how to achieve that back in 2009</a>.</p>\n<p>Things have changed since then, though.</p>\n<p>The Revit 2011 API introduced\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/02/whats-new-in-the-revit-2011-api.html\">keyboard shortcut support for API buttons</a>:</p>\n<h4 style=\"color:darkblue\">Keyboard shortcut support for API buttons</h4>\n<p style=\"color:darkblue\">API buttons found on the Ribbon can be assigned a keyboard shortcut. Buttons created by applications registered using manifest files now use an id based on their application id and button name to provide a unique identifier for the button. The keyboard shortcut will be maintained even if the order of registration of API applications changes.\n</p>\n<p>This functionality was overhauled in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/03/whats-new-in-the-revit-2013-api.html\">Revit 2013 API</a>:</p>\n<h4 style=\"color:darkblue\">Support for Keyboard Shortcuts and Quick Access Toolbar</h4>\n<p style=\"color:darkblue\">API commands may now be assigned keyboard shortcuts, and those assignments will be preserved even if add-ins are added, removed or changed in subsequent sessions.</p>\n<p style=\"color:darkblue\">API commands may also be moved to the Quick Access Toolbar, and that assignment will also be preserved even if add-ins are added, removed or changed in subsequent sessions.</p>\n<p>Unfortunately, it looks as if the actual assignment still is done manually as described in the Revit help topic on\n\n<a href=\"http://help.autodesk.com/view/RVT/2015/ENU/?guid=GUID-39D549F2-75EE-4C06-8B6A-3DADE1FBEF59\">Keyboard Shortcuts</a>.</p>\n<p>You will obviously be facing the same issues as described above driving this programmatically.</p>\n<a name=\"6\"></a>\n<h4>How to Programmatically Create a Keyboard Shortcut</h4>\n<p>A query on stackoverflow on how to\n\n<a href=\"http://stackoverflow.com/questions/9472227/programmatically-create-a-keyboard-shortcut-in-revit\">\nprogrammatically create a keyboard shortcut in Revit</a>:</p>\n<p><strong>Question:</strong> Can I programmatically create a keyboard shortcut for my Revit add-in?</p>\n<p><strong>Answer:</strong> As explained by the help topics listed above, this can easily be achieved manually.</p>\n<p>Programmatically, again, you will have to tackle the issues described above, as far as I know.</p>\n</p></p>"
  },
  {
    "original_filename": "1285_keyboard_shortcut",
    "header_text": "Keyboard shortcut support for API buttons",
    "local_header_href": "#keyboard-shortcut-support-for-api-buttons",
    "chunk_text": "<h4 style=\"color:darkblue\">Keyboard shortcut support for API buttons</h4><p style=\"color:darkblue\">API buttons found on the Ribbon can be assigned a keyboard shortcut. Buttons created by applications registered using manifest files now use an id based on their application id and button name to provide a unique identifier for the button. The keyboard shortcut will be maintained even if the order of registration of API applications changes.\n</p><p>This functionality was overhauled in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/03/whats-new-in-the-revit-2013-api.html\">Revit 2013 API</a>:</p>"
  },
  {
    "original_filename": "1285_keyboard_shortcut",
    "header_text": "Support for Keyboard Shortcuts and Quick Access Toolbar",
    "local_header_href": "#support-for-keyboard-shortcuts-and-quick-access-toolbar",
    "chunk_text": "<h4 style=\"color:darkblue\">Support for Keyboard Shortcuts and Quick Access Toolbar</h4><p style=\"color:darkblue\">API commands may now be assigned keyboard shortcuts, and those assignments will be preserved even if add-ins are added, removed or changed in subsequent sessions.</p><p style=\"color:darkblue\">API commands may also be moved to the Quick Access Toolbar, and that assignment will also be preserved even if add-ins are added, removed or changed in subsequent sessions.</p><p>Unfortunately, it looks as if the actual assignment still is done manually as described in the Revit help topic on\n\n<a href=\"http://help.autodesk.com/view/RVT/2015/ENU/?guid=GUID-39D549F2-75EE-4C06-8B6A-3DADE1FBEF59\">Keyboard Shortcuts</a>.</p><p>You will obviously be facing the same issues as described above driving this programmatically.</p><a name=\"6\"></a>"
  },
  {
    "original_filename": "1285_keyboard_shortcut",
    "header_text": "How to Programmatically Create a Keyboard Shortcut",
    "local_header_href": "#how-to-programmatically-create-a-keyboard-shortcut",
    "chunk_text": "<h4>How to Programmatically Create a Keyboard Shortcut</h4><p>A query on stackoverflow on how to\n\n<a href=\"http://stackoverflow.com/questions/9472227/programmatically-create-a-keyboard-shortcut-in-revit\">\nprogrammatically create a keyboard shortcut in Revit</a>:</p><p><strong>Question:</strong> Can I programmatically create a keyboard shortcut for my Revit add-in?</p><p><strong>Answer:</strong> As explained by the help topics listed above, this can easily be achieved manually.</p><p>Programmatically, again, you will have to tackle the issues described above, as far as I know.</p>"
  }
]