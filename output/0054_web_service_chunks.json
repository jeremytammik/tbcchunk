[
  {
    "original_filename": "0054_web_service",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<style>\n.blue { color: blue; }\n.teal { color: teal; }\n.maroon { color: maroon; }\n.green { color: green; }\n</style>"
  },
  {
    "original_filename": "0054_web_service",
    "header_text": "Web Service",
    "local_header_href": "#web-service",
    "chunk_text": "<h3>Web Service</h3><p>More than half way through our west European DevDays tour, we have had exciting days with lots of meetings, presentations, discussions, questions and answers in London, GÃ¶teborg and Frankfurt. \nToday we are in Milan, with the next stop in Paris planned for tomorrow.\nMeanwhile, here is a question related to the discussion between Dave and \n\n<a href=\"http://www.cadsmart.net\">\nEd Pitt</a>\n\nin the post on \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/12/using-namespaces.html\">\nusing namespaces</a>\n\na couple of days ago:</p><p>Question: I'm developing an application for Revit Architecture 2009 using Visual Studio 2005 with RevitAPI.dll that interacts with a web service on the client side. In it, a client DLL developed in Visual Studio 2005 interacts with a web service to download and upload Revit projects from a server. The communication between client and server is secured and uses the MTOM or Message Transmission Optimization Mechanism technology. \nThe client DLL works well when it is included as a reference in a stand-alone .NET project such as a WindowsApplicationForm or console application, the authentification succeeds and files can be downloaded from and uploaded to the server. However, when the client is included in the Revit project, the call to the server to download or upload projects fails. It returns an exception from the server and cannot access the services, although it is using the same user id and password as previously. In debug mode on the server side, I can see that the request coming from the Revit application is quite different from the .NET application one.\n\nWhat could be the explanation for this? Are there any built-in security issues in Revit Architecture that might cause this behaviour?</p><p>Reply from Miroslav Schonauer and Saikat Bhattacharya:\n\nYou might try creating a Revit.exe.config file and fine tuning its contents. \n\nThe problem is possibly in some setting required for the particular web service which in the standalone application is either assumed by default or configured via the App.exe.config file. The solution might be to create a Revit.exe.config file in the Revit.exe install folder. Unlike acad.exe.config, this one does not come with the install since no .NET fine-tuning is required by Revit. Of course it is virtually impossible to say exactly <em>what</em> needs to be fine tuned.\nOne project we saw had an issue related to authentication that was solved by adding a complex element to the Revit.exe.config file. Here is an example of a skeleton configuration file:</p><pre>\n&lt;configuration&gt;\n  &lt;system.serviceModel&gt;\n    &lt;bindings&gt;\n      ...project and web service specific info\n    &lt;/bindings&gt;\n    &lt;client&gt;\n      ... project and web service specific info\n    &lt;/client&gt;\n  &lt;/system.serviceModel&gt;  \n&lt;/configuration&gt;\n</pre><p>Even though this may not completely resolve the current issue, \nit is definitely useful information for some applications and a good point to start exploring from.</p>"
  }
]