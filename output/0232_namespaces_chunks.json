[
  {
    "original_filename": "0232_namespaces",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0232_namespaces",
    "header_text": "Namespaces",
    "local_header_href": "#namespaces",
    "chunk_text": "<h3>Namespaces</h3><p>Here is a \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/04/getting-started-with-the-revit-2009-api.html?cid=6a00e553e1689788330120a5e41815970b#comment-6a00e553e1689788330120a5e41815970b\">\nquestion</a> by \n\n<a href=\"mailto:freelancecadd@gmail.com\">\nVince</a> that \n\nmany beginners may encounter, on namespaces and references and setting up a project.\nAlthough it may seem confusing the first time through, it is very simple to handle once you know how.</p><p><strong>Question:</strong> Can you point me to material, blog or forum that discusses how to insert Code Regions from the SDK material into existing code? \n\n<p>I'm learning to code so any basic level information that you can provide me would be a big help. \n\n<p>I figured out how to do the Hello World tutorial located at the beginning of the Revit 2010 API user Manual, but now I would like to expand on the information by utilizing the additional code regions supplied in the User Manual but I continue to get errors.\n\n<p>I'm sure it's basic in nature but because of my limited experience difficulty is around every corner. \n\n<p>Again, if you could supply me with a simple tutorial showing how to insert a code region into existing code would be very helpful.\n\n<p><strong>Answer:</strong> I cannot really say anything special about copying source code snippets from one project to another. I just use copy and paste in any old editor, actually. In .NET, you just need to ensure that all required references and using statements are in place. Maybe that is causing the errors you see.\n\n<p>The 'using' statements at the head of each module specify namespaces that can be used without explicitly specifying the namespace each time, so that you can write 'Element' instead of the full class name 'Autodesk.Revit.Element':\n\n<pre class=\"code\">\n<span class=\"blue\">using</span> System;\n<span class=\"blue\">using</span> System.Collections.Generic;\n<span class=\"blue\">using</span> System.Diagnostics;\n<span class=\"blue\">using</span> Autodesk.Revit;\n<span class=\"blue\">using</span> Autodesk.Revit.Elements;\n</pre>\n<p>The references provide the definitions of the namespaces, and are actually .NET assemblies, i.e. DLL files that need to exist on you system and on the system executing your plug-in. They are loaded by the .NET framework when your plug-in is loaded:\n\n<center>\n<img alt=\"References\" src=\"img/references.png\"/>\n</center>\n<p>Adding the required references to a project is demonstrated by the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/04/getting-started-with-the-revit-2009-api.html\">\nRevit DevTV recording</a>.\n\n<p>The entire Revit API resides in one single assembly, RevitAPI.dll, which includes all the Revit namespaces, so that is simple. Which class resides in which namespace is documented by the Revit API help file RevitAPI.chm, which is included with the Revit SDK:\n\n<center>\n<img alt=\"Namespaces\" src=\"img/namespaces.png\"/>\n</center>\n<p>In general, all you have to do when you copy code from one project to another is ensure that the required references are loaded, and then add appropriate using statements, unless the code you copied uses the full name of every class it references.\n</p></p></p></p></p></p></p></p></p></p></p>"
  }
]