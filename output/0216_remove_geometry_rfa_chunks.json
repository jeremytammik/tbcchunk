[
  {
    "original_filename": "0216_remove_geometry_rfa",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0216_remove_geometry_rfa",
    "header_text": "Remove all Geometry from a Family",
    "local_header_href": "#remove-all-geometry-from-a-family",
    "chunk_text": "<h3>Remove all Geometry from a Family</h3><p>Here is a question from Joel Karr of\n\n<a href=\"http://www.esdesign.com\">\nEnvironmental Systems Design, Inc</a>\n\nthat nicely complements the issue of \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/05/selecting-model-elements.html\">\nidentifying model elements in a project file</a>\n\nwith the subsequent \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/06/category-comparison-and-model-element-selection-revisited.html\">\ncorrection</a>\n\nadded.\n\n<p><strong>Question:</strong>\nIs it possible to delete all geometry from a Revit RFA family file?  \nI would like to keep all parameters but delete all geometry.</p>\n<p><strong>Answer:</strong>\nTo achieve what you desire, we first need to identify all elements contributing geometry to the model, similarly to the model element selection issues mentioned above.\n\n<p>This is simpler in a family file than in a project file, since there are normally less elements and almost all elements having geometry are the ones we are interested in.\n\n<p>I implemented a sample application RemoveRfaGeom to test this, with the following mainline code for its Execute method:\n\n<pre class=\"code\">\n<span class=\"blue\">public</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span> Execute( \n  <span class=\"teal\">ExternalCommandData</span> commandData, \n  <span class=\"blue\">ref</span> <span class=\"blue\">string</span> message, \n  <span class=\"teal\">ElementSet</span> elements )\n{\n  <span class=\"teal\">Application</span> app = commandData.Application;\n  <span class=\"teal\">Document</span> doc = app.ActiveDocument;\n \n  <span class=\"teal\">ElementIterator</span> it = doc.Elements;\n  <span class=\"teal\">Options</span> opt = app.Create.NewGeometryOptions();\n  <span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt; a = <span class=\"blue\">new</span> <span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt;();\n \n  <span class=\"blue\">while</span>( it.MoveNext() )\n  {\n    <span class=\"teal\">Element</span> e = it.Current <span class=\"blue\">as</span> <span class=\"teal\">Element</span>;\n \n    <span class=\"blue\">if</span>( <span class=\"blue\">null</span> != e.get_Geometry( opt ) )\n    {\n      a.Add( e );\n    }\n  }\n \n  <span class=\"blue\">int</span> n = a.Count;\n  <span class=\"teal\">Debug</span>.Print( \n    <span class=\"maroon\">\"{0} element{1} have non-null geometry{2}\"</span>, \n    n, \n    ( 1 == n ? <span class=\"maroon\">\"\"</span> : <span class=\"maroon\">\"s\"</span> ),\n    ( 0 == n ? <span class=\"maroon\">\".\"</span> : <span class=\"maroon\">\":\"</span> ) );\n \n  <span class=\"teal\">ElementSet</span> els = <span class=\"blue\">new</span> <span class=\"teal\">ElementSet</span>();\n \n  <span class=\"blue\">foreach</span>( <span class=\"teal\">Element</span> e <span class=\"blue\">in</span> a )\n  {\n    <span class=\"blue\">string</span> cat = (<span class=\"blue\">null</span> == e.Category)\n      ? <span class=\"maroon\">\"&lt;null&gt;\"</span>\n      : e.Category.Name;\n \n    <span class=\"teal\">Debug</span>.Print(\n      <span class=\"maroon\">\"Category={0}; Name={1}; Id={2}; Type={3}\"</span>,\n      cat,\n      e.Name,\n      e.Id.Value.ToString(),\n      e.GetType().Name );\n \n    <span class=\"blue\">if</span>( <span class=\"blue\">null</span> == e.Category )\n    {\n      els.Insert( e );\n    }\n  }\n \n  <span class=\"teal\">ElementIdSet</span> ids = doc.Delete( els );\n \n  n = (<span class=\"blue\">null</span> == ids) ? 0 : ids.Size;\n \n  <span class=\"teal\">Debug</span>.Print( <span class=\"maroon\">\"{0} element{1} deleted.\"</span>,\n    n,\n    ( 1 == n ? <span class=\"maroon\">\"\"</span> : <span class=\"maroon\">\"s\"</span> ) );\n \n  <span class=\"blue\">return</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span>.Succeeded;\n}\n</pre>\n<p>It performs the following steps, assuming that the active document is indeed a family document:\n\n<ul>\n<li>Iterate over all family document elements.\n<li>Identify and list all elements with non-null geometry.\n<li>Create a set of all elements with geometry whose category is null.\n<li>Delete the latter set and display the number of deleted elements.\n</li></li></li></li></ul>\n<p>Running this in the metric library rectangular column family file 'M_Rectangular Column.rfa' produces the following output:\n\n<pre>\n2 elements have non-null geometry:\nCategory=<null>; Name=Extrusion; Id=105; Type=Extrusion\nCategory=Cameras; Name=View 1; Id=427; Type=Element\n13 elements deleted.\n</null></pre>\n<p>As you can see from this, there are some elements having geometry that you presumably do not want to eliminate, such as the camera, so you will need to remove those from the set before deletion. \nIn this case, I simply noted that the camera has a non-null category, whereas the category of the extrusion I want to remove is null, so I just check the null category property to select the extrusion.\n\n<p>Secondly, deleting an element causes other dependent elements to be deleted also, so even though we just pass in one single extrusion element to the Delete method, a whole group of other elements are eliminated as well.\nWe already discussed and made use of this effect to determine the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/04/tag-association.html\">\nassociation between a tag and the tagged element</a>\n\nand between\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/06/host-reference.html\">\na host and its hosted elements</a>.\n\n<p>Here is the complete Visual Studio solution \n\n<a href=\"zip/RemoveRfaGeom.zip\">\nRemoveRfaGeom</a>\n\nimplementing the new command.</p>\n</p></p></p></p></p></p></p></p>"
  }
]