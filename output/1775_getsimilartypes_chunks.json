[
  {
    "original_filename": "1775_getsimilartypes",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- GetSimilarTypes to find door symbols that can be used in a curtain wall\n  BuiltInCategory of Doors and curtain wall doors\n  https://forums.autodesk.com/t5/revit-api-forum/builtincategory-of-doors-and-curtain-wall-doors/m-p/9002988\n  door_category_1.png\n  door_category_2.png\n\n- SnappingService - What it actually does?\n  https://forums.autodesk.com/t5/revit-api-forum/snappingservice-what-it-actually-does/m-p/8986801\n  Q does anyone have any insight / experience. API Documentation doesn't say much :-(.\n  A SnappingService provides snapping points and lines and is used for point clouds.\n\n- 15711698 [Get Label Parameters]\n\ntwitter:\n\nGetSimilarTypes filters for curtain wall door symbols, SnappingService explanation and title block label parameters in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/getsimilartypes\n\nSo many interesting discussions and inspiring solutions in the Revit API discussion forum!\nHere are a few, plus one non-forum beginner case\n&ndash; <code>GetSimilarTypes</code> filters for curtain wall door symbols\n&ndash; <code>SnappingService</code> &ndash; what does it actually do?\n&ndash; Get title block label parameters...\n\n\nlinkedin:\n\nGetSimilarTypes, SnappingService and Title Labels in the #RevitAPI\n\nhttp://bit.ly/getsimilartypes\n\nSo many interesting discussions and inspiring solutions in the Revit API discussion forum!\n\nHere are two of them, plus one non-forum beginner case:\n\n- GetSimilarTypes filters for curtain wall door symbols\n- SnappingService -- what does it actually do?\n- Get title block label parameters...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<p style=\"font-size: 80%; font-style:italic\"></p>\n\n-->"
  },
  {
    "original_filename": "1775_getsimilartypes",
    "header_text": "GetSimilarTypes, SnappingService and Title Labels",
    "local_header_href": "#getsimilartypes-snappingservice-and-title-labels",
    "chunk_text": "### GetSimilarTypes, SnappingService and Title Labels\n\nSo many interesting discussions and inspiring solutions in\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160)!\n\nHere are two of them, plus one non-forum beginner case:\n\n- [`GetSimilarTypes` filters for curtain wall door symbols](#2)\n- [`SnappingService` &ndash; what does it actually do?](#3)\n- [Get title block label parameters](#4)"
  },
  {
    "original_filename": "1775_getsimilartypes",
    "header_text": "GetSimilarTypes Filters for Curtain Wall Door Symbols",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> GetSimilarTypes Filters for Curtain Wall Door Symbols\n\nYet once again,\nFrank [@Fair59](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/2083518) Aarssen\ncomes to the rescue, answering\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [`BuiltInCategory` of doors and curtain wall doors](https://forums.autodesk.com/t5/revit-api-forum/builtincategory-of-doors-and-curtain-wall-doors/m-p/9002988):\n\n**Question:** I want to build a plugin that changes the curtain wall panel types.\n\nWhen I select a curtain wall door, how can I filter for only curtain wall panel door symbols?\n\nIs there any specific value for curtain panel door?\n\nSnooping a curtain wall panel door in RevitLookup:\n\n<center>\n<img src=\"img/door_category_1.png\" alt=\"Snoop door in curtain wall\" width=\"800\">\n</center>\n\nA door in a standard wall looks similar:\n\n<center>\n<img src=\"img/door_category_2.png\" alt=\"Snoop door in standard wall\" width=\"800\">\n</center>\n  \nSince the category is the same for all doors, that cannot be used to tell them apart.\n\nAnother possible criterion might be to query the door for its host using\nits [`Host` property](https://www.revitapidocs.com/2020/69f30141-bd3b-8bdd-7a63-6353d4d495f9.htm).\nUsing the host element properties, one ought to be able to differentiate curtain walls from others.\nHowever, I am looking at family symbols that have not yet been placed, not instances, so the host is not defined yet.\n\nThe `Family` class provides an [IsCurtainPanelFamily property](https://www.revitapidocs.com/2020/da0becae-cb65-fffd-1e97-b4aab5533004.htm),\nso I also tried checking\n\n<pre>\n  FamilyInstance.Symbol.Family.IsCurtainPanelFamily\n</pre>\n\nUnfortunately, `IsCurtainPanelFamily` always returns false, so that does not work either.\n\n**Answer:** From the `FamilySymbol`, you can find similar types using `GetSimilarTypes`.\n\nThis returns all curtain wall panels that can be placed in a curtain wall.\n\nFilter that list for the door category:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">IEnumerable</span>&lt;<span style=\"color:#2b91af;\">FamilySymbol</span>&gt;&nbsp;CW_doors\n&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc,&nbsp;symbol.GetSimilarTypes()&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfCategory(&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_Doors&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Cast&lt;<span style=\"color:#2b91af;\">FamilySymbol</span>&gt;();\n</pre>\n\nMany thanks to Frank for solving this!\n\nI added his suggestion \nto [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples) in\na new method `GetDoorSymbolsForCurtainWall`\nin [release 2020.0.147.7](https://github.com/jeremytammik/the_building_coder_samples/compare/2020.0.147.7...2020.0.147.7)."
  },
  {
    "original_filename": "1775_getsimilartypes",
    "header_text": "SnappingService &ndash; What Does it Actually Do?",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> SnappingService &ndash; What Does it Actually Do?\n\nFrom\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [`SnappingService` &ndash; What it actually does?](https://forums.autodesk.com/t5/revit-api-forum/snappingservice-what-it-actually-does/m-p/8986801)\n\n**Question:** Does anyone have any insight or experience? The API documentation doesn't say much &nbsp; :-(\n\n**Answer:** According to the development team, `SnappingService` provides snapping points and lines and is used for point clouds.\nThey also expressed an intent to add some documentation for it, and maybe for a couple of other undocumented services as well."
  },
  {
    "original_filename": "1775_getsimilartypes",
    "header_text": "Get Title Block Label Parameters",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> Get Title Block Label Parameters\n\nLet's wrap up for today with a beginner's question:\n\n**Question:** I am trying to access these title block label parameters marked in yellow through the Revit API:\n\n<center>\n<img src=\"img/title_block_label_parameters.png\" alt=\"Title block label parameters\" width=\"907\">\n</center>\n\nI could not find a proper way to access those values in the Revit API documentation.\n\nI'd like to know if this actually possible to achieve or not.\n\n**Answer:** Yes, this is easy to achieve.\n\nIn fact, you can probably find out for yourself how to access this data by\ninstalling [RevitLookup](https://github.com/jeremytammik/RevitLookup) and\nusing that to explore the title block properties.\n\nAre you aware of RevitLookup?\nIt is a really invaluable tool for Revit add-in development and understanding the structure and contents of the Revit database.\n\nYou may also find it out easily for yourself by searching the Internet for an existing solution, e.g., by searching for something\nlike [revit api title block label parameters](https://duckduckgo.com/?q=revit+api+title+block+label+parameters).\n\nThe Building Coder took a look at\nthe [title block of a sheet](https://thebuildingcoder.typepad.com/blog/2009/11/title-block-of-sheet.html) and\nits parameters a long time ago, without providing a method to achieve what you are asking for.\n\nSince I think it is time to take another look at this and it may be useful for others in future as well, I put together the following function that may or may not achieve what you are after:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Read&nbsp;the&nbsp;title&nbsp;block&nbsp;parameters&nbsp;to&nbsp;retrieve&nbsp;the&nbsp;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;label&nbsp;parameters&nbsp;Sheet&nbsp;Number,&nbsp;Author&nbsp;and&nbsp;Client&nbsp;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Name</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;ReadTitleBlockLabelParameters(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;title_block_instances\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfCategory(&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_TitleBlocks&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Parameter</span>&nbsp;p;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Print(&nbsp;<span style=\"color:#a31515;\">&quot;Title&nbsp;block&nbsp;instances:&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;tb&nbsp;<span style=\"color:blue;\">in</span>&nbsp;title_block_instances&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementId</span>&nbsp;typeId&nbsp;=&nbsp;tb.GetTypeId();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;type&nbsp;=&nbsp;doc.GetElement(&nbsp;typeId&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;tb.get_Parameter(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.SHEET_NUMBER&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Assert(&nbsp;<span style=\"color:blue;\">null</span>&nbsp;!=&nbsp;p,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;expected&nbsp;valid&nbsp;sheet&nbsp;number&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;s_sheet_number&nbsp;=&nbsp;p.AsString();\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;tb.get_Parameter(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.PROJECT_AUTHOR&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Assert(&nbsp;<span style=\"color:blue;\">null</span>&nbsp;!=&nbsp;p,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;expected&nbsp;valid&nbsp;project&nbsp;author&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;s_project_author&nbsp;=&nbsp;p.AsValueString();\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;tb.get_Parameter(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.CLIENT_NAME&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Assert(&nbsp;<span style=\"color:blue;\">null</span>&nbsp;!=&nbsp;p,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;expected&nbsp;valid&nbsp;client&nbsp;name&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;s_client_name&nbsp;=&nbsp;p.AsValueString();\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Print(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;Title&nbsp;block&nbsp;{0}&nbsp;&lt;{1}&gt;&nbsp;of&nbsp;type&nbsp;{2}&nbsp;&lt;{3}&gt;:&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;{4}&nbsp;project&nbsp;author&nbsp;{5}&nbsp;for&nbsp;client&nbsp;{6}&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tb.Name,&nbsp;tb.Id.IntegerValue,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type.Name,&nbsp;typeId.IntegerValue,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s_sheet_number,&nbsp;s_project_author,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s_client_name&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n</pre>\n\nI also added this code\nto [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples)\nin [release 2020.0.147.6](https://github.com/jeremytammik/the_building_coder_samples/compare/2020.0.147.5...2020.0.147.6).\n\nI hope this helps.\n\nPlease confirm whether this method does what you are after.\n\nIf not, please use RevitLookup to find out exactly what you need and fix it accordingly."
  }
]