[
  {
    "original_filename": "0883_sn_demo_mode",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0883_sn_demo_mode",
    "header_text": "Determine Revit Demo Mode and Serial Number",
    "local_header_href": "#determine-revit-demo-mode-and-serial-number",
    "chunk_text": "<h3>Determine Revit Demo Mode and Serial Number</h3><p>Last week's\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/01/determine-revit-demo-mode-revisited.html\">\nupdated Revit demo mode determination</a> prompted\n\na lively discussion between two strong Revit API experts and blog contributors,\n\n<a href=\"http://www.facebook.com/profile.php?id=100003616852588\">\nVictor Chekalin</a> and\n\n<a href=\"http://www.acadgraph.de/\">\nRudolf Honke</a> the\n\nRevitalizer, partly on how to further improve the demo mode detection, and mainly on the value and risks of using unsupported features in your products.\n\n<p>The\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/01/determine-revit-demo-mode-revisited.html#comments\">\nthread</a> is\n\nwell worth a read, and I like Victor's final suggestion of reading the Revit serial number instead of using the language dependent title bar caption enough to update The Building Coder sample accordingly.\nHe says:\n\n<blockquote>\n<p>Just reference the UIFrameworkServices.dll assembly and read the Revit serial number with the InfoCenterService class static method ProductSerialNumber.\nIf Revit is running in demo mode, the serial number is 000-00000000.\n<p><a href=\"http://pastebin.com/Lt8WUVhE\">Here</a> is the full source code.\n<p>Simple, isn't it?</p>\n</p></p></blockquote>\n<p>Victor also points out that it is obviously much easier to use System.Diagnostics.Process.GetCurrentProcess().MainWindowTitle to read the Revit main window caption than to do so using the WinAPI and user32.dll functionality.</p>\n<p>I updated the CmdDemoCheck to make use of this and report both the serial number and the demo status:</p>\n<pre class=\"code\">\n  <span class=\"blue\">public</span> <span class=\"teal\">Result</span> Execute(\n    <span class=\"teal\">ExternalCommandData</span> commandData,\n    <span class=\"blue\">ref</span> <span class=\"blue\">string</span> message,\n    <span class=\"teal\">ElementSet</span> elements )\n  {\n    <span class=\"green\">// . . .</span>\n \n    <span class=\"green\">// Language independent serial number check:</span>\n \n    <span class=\"blue\">string</span> serial_number = UIFrameworkServices\n      .<span class=\"teal\">InfoCenterService</span>.ProductSerialNumber;\n \n    isDemo = serial_number.Equals( <span class=\"maroon\">\"000-00000000\"</span> );\n \n    <span class=\"blue\">string</span> sDemo = isDemo ? <span class=\"maroon\">\"Demo\"</span> : <span class=\"maroon\">\"Production\"</span>;\n \n    <span class=\"teal\">TaskDialog</span>.Show(\n      <span class=\"maroon\">\"Serial Number and Demo Version Check\"</span>,\n      <span class=\"blue\">string</span>.Format(\n        <span class=\"maroon\">\"Serial number: {0} : {1} version.\"</span>,\n        serial_number, sDemo ) );\n \n    <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Succeeded;\n  }\n</pre>\n<p>Running this command on my system now produces the following result:</p>\n<center>\n<img alt=\"Serial number and demo mode report\" src=\"img/sn_demo_mode.png\"/>\n</center>\n<p>Here is\n\n<a href=\"zip/bc_13_100_1.zip\">version 2013.0.100.1</a> of\n\nThe Building Coder samples including the updated CmdDemoCheck command and serial number detection.\n\n<p>Many thanks to Victor and Rudolf for their discussion and numerous creative suggestions.</p>\n</p></p></p>"
  }
]