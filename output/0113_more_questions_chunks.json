[
  {
    "original_filename": "0113_more_questions",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<style>\n.blue { color: blue; }\n.teal { color: teal; }\n.maroon { color: maroon; }\n.green { color: green; }\n.gray { color: gray; }\n</style>"
  },
  {
    "original_filename": "0113_more_questions",
    "header_text": "More Questions",
    "local_header_href": "#more-questions",
    "chunk_text": "<h3>More Questions</h3><p>Here are some more of the questions that were raised lately, including some cases handled by my colleagues Joe Ye and Saikat Bhattacharya:</p><ul>\n<li>Can I define my own user or API family type parameters that provide a list of options to the user and are displayed in a drop-down list, like 'Level' or 'Phase Created', or through a dialogue, like 'Assembly Code'?</li>\n<li>I am trying to use a built-in parameter by calling the Parameter method on a family type object, but it produces an error saying 'Parameter' is not a member of 'Autodesk.Revit.Symbols.FloorType'.\nWhat is wrong?</li>\n<li>Is it possible to change a design option to primary in the Revit API, for instance using the Element.DesignOption property?</li>\n<li>Is it possible to find all elements associated with a specific design option?</li>\n<li>How can I change the colour of one individual element instance through the API?</li>\n<li>How can I change the colour of a face using the API? Can I change colour of one and only one face?</li>\n<li>Is it possible to use event handling or some other method to add steps when a user clicks on Save As? We would like to make sure a few things are done before the Save As command executes.</li>\n</ul>"
  },
  {
    "original_filename": "0113_more_questions",
    "header_text": "Drop-down list for parameter values",
    "local_header_href": "#drop-down-list-for-parameter-values",
    "chunk_text": "<h4>Drop-down list for parameter values</h4><p><strong>Question:</strong>\nCan I define my own user or API family type parameters that provide a list of options to the user and are displayed in a drop-down list, like 'Level' or 'Phase Created', or through a dialogue, like 'Assembly Code'?</p><p><strong>Answer:</strong>\nNope, unfortunately not. As a workaround, you can always define your own user interface to set your parameters, and not make use of the default Revit one.</p>"
  },
  {
    "original_filename": "0113_more_questions",
    "header_text": "Parameter get method",
    "local_header_href": "#parameter-get-method",
    "chunk_text": "<h4>Parameter get method</h4><p><strong>Question:</strong>\nI am trying to use built-in parameters like this:\n\n<pre>\nfamName = ft.Parameter(\n  BuiltInParameter.SYMBOL_FAMILY_NAME_PARAM ).AsString\n</pre>\n\nThis produces an error saying\n\n<pre>\n'Parameter' is not a member of 'Autodesk.Revit.Symbols.FloorType'.\n</pre>\n\nWhat is wrong?\n<p><strong>Answer:</strong>\nThe official name of the API method to obtain the parameter is indeed Parameter.\nHowever, some internal compilation mechanism has converted it to get_Parameter.\nIf you look at the true methods available, for instance by using the Visual Studio Intellisense or the object browser, you will see the true names listed.</p>\n<h4>Change design option to primary</h4>\n<p><strong>Question:</strong>\nIs it possible to change a design option to primary in the Revit API, for instance using the Element.DesignOption property?</p>\n<p><strong>Answer:</strong>\nNo, unfortunately it is not possible to change the design option via the API.\nDesign options enable the user to add alternative designs within the same project.\nEach element can either be in a design option or not at all, in which case it is considered to be part of the main model and have no design alternatives.\nThe Element.DesignOption property is read-only.\nThere is a parameter 'Design Option' for this property to store the design option, and this parameter is read-only as well.\nFor elements that already were assigned a design option property, the design option cannot even be changed through the user interface.\nIf the design option value is Main Model, then it can still be changed through the user interface.</p>\n<h4>Finding elements associated with a design option</h4>\n<p><strong>Question:</strong>\nIs it possible to find all elements associated with a specific design option?</p>\n<p><strong>Answer:</strong>\nYes, one can use the parameter filter to quickly find all elements associated with a specified design option.\nHere is an example to find all walls with the Main Model design option:</p>\n<pre class=\"code\">\n<span class=\"blue\">public</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span> Execute(\n  <span class=\"teal\">ExternalCommandData</span> commandData,\n  <span class=\"blue\">ref</span> <span class=\"blue\">string</span> messages,\n  <span class=\"teal\">ElementSet</span> elements )\n{\n  <span class=\"teal\">Application</span> app = commandData.Application;\n  <span class=\"teal\">Document</span> doc = app.ActiveDocument;\n  <span class=\"teal\">CreationFilter</span> cf = app.Create.Filter;\n \n  <span class=\"teal\">Filter</span> f1 = cf.NewParameterFilter(\n    <span class=\"teal\">BuiltInParameter</span>.DESIGN_OPTION_PARAM,\n    <span class=\"teal\">CriteriaFilterType</span>.Equal, <span class=\"maroon\">\"Main Model\"</span> );\n \n  <span class=\"teal\">Filter</span> f2 = cf.NewTypeFilter( <span class=\"blue\">typeof</span>( <span class=\"teal\">Wall</span> ) );\n  <span class=\"teal\">Filter</span> f = cf.NewLogicAndFilter( f1, f2 );\n \n  <span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt; a = <span class=\"blue\">new</span> <span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt;();\n \n  doc.get_Elements( f, a );\n \n  <span class=\"teal\">Util</span>.InfoMsg( <span class=\"maroon\">\"There are \"</span>\n    + a.Count.ToString()\n    + <span class=\"maroon\">\" main model wall elements\"</span> );\n \n  <span class=\"blue\">return</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span>.Succeeded;\n}\n</pre>\n<a name=\"change_colour_of_one_instance\"></a>\n<h4>Change colour of one instance</h4>\n<p><strong>Question:</strong>\nHow can I change the colour of one individual element instance through the API?</p>\n<p><strong>Answer:</strong>\nThere is no direct API to change the colour of individual elements.\nOne workaround is to assign a different material which has a different material colour to the family instance symbol.\nTo get the colour of the material assigned to a family symbol, you can use the following traversal path:</p>\n<pre>\nFamilyInstance famIns\n  = elem as FamilyInstance;\n\nElementId matId\n  = famIns.Symbol.get_Parameter(\"Material\").AsElementId();\n\nMaterial mat = doc.get_Element( ref matId ) as Material;\n\nSystem.Drawing.Color color\n  = System.Drawing.Color.FromArgb(\n    mat.Color.Red, mat.Color.Green,\n    mat.Color.Blue );\n</pre>\n<p>Assigning a different material with different material colour to family instance symbol will change the colour of all instances of that family.\nTo change just one single instance you will have to create a new type for it.\nThis can be done as follows:</p>\n<ul>\n<li>Create a duplicate of the existing type.\n<li>Assign a different material colour to the newly created type.\n<li>Assign this type to the object that you want to colour differently.\n</li></li></li></ul>\n<p>Here is the result of a quick test with three columns. For each column, the type was changed by duplicating the first one and assigning a new material colour to the copy:</p>\n<img alt=\"Three columns with different colours\" src=\"img/three_columns_with_different_colours.gif\"/>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/04/revit-api-cases-1.html#3\">\nContinued...</a>\n<h4>Changing the colour of a face</h4>\n<p><strong>Question:</strong>\nHow can I change the colour of a face using the API? Can I change colour of one and only one face?</p>\n<p><strong>Answer:</strong>\nThe Face object MaterialElement property is read-only, and this is the only property of a face that refers to colour or material in any way, so you cannot change either colour or material of an individual face directly.</p>\n<p>Actually, you should be aware of the fact that Face class is a member of the Autodesk.Revit.Geometry namespace. All classes in this namespace are used to provide views into the Revit database, but not to define the database elements themselves. Therefore, even if there was a way to modify the colour of an individual face, it would have no effect on the Revit model.</p>\n<p>To persistently modify the colour of individual faces within the Revit model, you can use the face split operation provided by the Face Splitter tool in the user interface.</p>\n<p>Please be aware that there is currently no API access to determine the colour or material of split faces.</p>\n<h4>Use event handling on Save As</h4>\n<p><strong>Question:</strong>\nIs it possible to use event handling or some other method to add steps when a user clicks on Save As? We would like to make sure a few things are done before the Save As command executes.</p>\n<p><strong>Answer:</strong>\nThe Revit API help file RevitAPI.chm mentions the DocumentSaveAsEventHandler delegate which is a handler for the event that is fired before the current document is saved as a file with different file name.\nThis should be what you are looking for.\nThe SDK samples include the RoomSchedule sample which shows how to register handlers for some events, including the document save as event. The main line is:</p>\n<pre>\ndoc.OnSaveAs += new\n  DocumentSaveAsEventHandler( OnDocumentSave );\n</pre>\n<h4>More details on my break</h4>\n<p>Some colleagues asked for more details of my experiences during my break, and whether I took any pictures.\nI did not, I was not carrying a camera and thought that there are probably loads of photos of all the places I visited available online.\nHere are some of the nicest and main places I went to, with links to online pictures of some of them:</p>\n<ul>\n<li>\n<!-- <a href=\"http://en.wikipedia.org/wiki/Naples,_Italy\"> -->\nNapoli or Naples.</li>\n<li>Ischia, a beautiful island that I totally fell in love with.</li>\n<li>Palermo.</li>\n<li>The\n<a href=\"http://www.paradoxplace.com/Perspectives/Sicily%20&amp;%20S%20Italy/Montages/Sicily/Palermo/Monreale%20Cathedral.htm\">\ncathedral of Monreale</a>.</li>\n<li>Cefalu.</li>\n<li>\n<a href=\"http://www.swisseduc.ch/stromboli/volcano/photos/index-de.html\">\nStromboli</a>, an island volcano ... I spent the night on top of it and watched the regular eruptions.</li>\n<li>Cathania.</li>\n<li>Etna, a volcano, where I walked in snow over the lava fields for several kilometres ... I did not see the erupting part due to clouds, though.</li>\n<li>The Amalfian coast, with the\n\n<a href=\"http://www.fotoeweb.it/sorrentina/Sentiero%20degli%20Dei.htm\">\nSentiero degli Dei</a>,\n\nor Path of the Gods, the most beautiful path I ever walked \n\n(<a href=\"http://www.youtube.com/watch?v=OoYb7P4ioZs\">photo video</a>).</li>\n</ul>\n<p>It was a really wonderful trip, I met wonderful people, and I will definitely be returning to southern Italy again.</p>\n</p>"
  },
  {
    "original_filename": "0113_more_questions",
    "header_text": "Change design option to primary",
    "local_header_href": "#change-design-option-to-primary",
    "chunk_text": "<h4>Change design option to primary</h4><p><strong>Question:</strong>\nIs it possible to change a design option to primary in the Revit API, for instance using the Element.DesignOption property?</p><p><strong>Answer:</strong>\nNo, unfortunately it is not possible to change the design option via the API.\nDesign options enable the user to add alternative designs within the same project.\nEach element can either be in a design option or not at all, in which case it is considered to be part of the main model and have no design alternatives.\nThe Element.DesignOption property is read-only.\nThere is a parameter 'Design Option' for this property to store the design option, and this parameter is read-only as well.\nFor elements that already were assigned a design option property, the design option cannot even be changed through the user interface.\nIf the design option value is Main Model, then it can still be changed through the user interface.</p>"
  },
  {
    "original_filename": "0113_more_questions",
    "header_text": "Finding elements associated with a design option",
    "local_header_href": "#finding-elements-associated-with-a-design-option",
    "chunk_text": "<h4>Finding elements associated with a design option</h4><p><strong>Question:</strong>\nIs it possible to find all elements associated with a specific design option?</p><p><strong>Answer:</strong>\nYes, one can use the parameter filter to quickly find all elements associated with a specified design option.\nHere is an example to find all walls with the Main Model design option:</p><pre class=\"code\">\n<span class=\"blue\">public</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span> Execute(\n  <span class=\"teal\">ExternalCommandData</span> commandData,\n  <span class=\"blue\">ref</span> <span class=\"blue\">string</span> messages,\n  <span class=\"teal\">ElementSet</span> elements )\n{\n  <span class=\"teal\">Application</span> app = commandData.Application;\n  <span class=\"teal\">Document</span> doc = app.ActiveDocument;\n  <span class=\"teal\">CreationFilter</span> cf = app.Create.Filter;\n \n  <span class=\"teal\">Filter</span> f1 = cf.NewParameterFilter(\n    <span class=\"teal\">BuiltInParameter</span>.DESIGN_OPTION_PARAM,\n    <span class=\"teal\">CriteriaFilterType</span>.Equal, <span class=\"maroon\">\"Main Model\"</span> );\n \n  <span class=\"teal\">Filter</span> f2 = cf.NewTypeFilter( <span class=\"blue\">typeof</span>( <span class=\"teal\">Wall</span> ) );\n  <span class=\"teal\">Filter</span> f = cf.NewLogicAndFilter( f1, f2 );\n \n  <span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt; a = <span class=\"blue\">new</span> <span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt;();\n \n  doc.get_Elements( f, a );\n \n  <span class=\"teal\">Util</span>.InfoMsg( <span class=\"maroon\">\"There are \"</span>\n    + a.Count.ToString()\n    + <span class=\"maroon\">\" main model wall elements\"</span> );\n \n  <span class=\"blue\">return</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span>.Succeeded;\n}\n</pre><a name=\"change_colour_of_one_instance\"></a>"
  },
  {
    "original_filename": "0113_more_questions",
    "header_text": "Change colour of one instance",
    "local_header_href": "#change-colour-of-one-instance",
    "chunk_text": "<h4>Change colour of one instance</h4><p><strong>Question:</strong>\nHow can I change the colour of one individual element instance through the API?</p><p><strong>Answer:</strong>\nThere is no direct API to change the colour of individual elements.\nOne workaround is to assign a different material which has a different material colour to the family instance symbol.\nTo get the colour of the material assigned to a family symbol, you can use the following traversal path:</p><pre>\nFamilyInstance famIns\n  = elem as FamilyInstance;\n\nElementId matId\n  = famIns.Symbol.get_Parameter(\"Material\").AsElementId();\n\nMaterial mat = doc.get_Element( ref matId ) as Material;\n\nSystem.Drawing.Color color\n  = System.Drawing.Color.FromArgb(\n    mat.Color.Red, mat.Color.Green,\n    mat.Color.Blue );\n</pre><p>Assigning a different material with different material colour to family instance symbol will change the colour of all instances of that family.\nTo change just one single instance you will have to create a new type for it.\nThis can be done as follows:</p><ul>\n<li>Create a duplicate of the existing type.\n<li>Assign a different material colour to the newly created type.\n<li>Assign this type to the object that you want to colour differently.\n</li></li></li></ul><p>Here is the result of a quick test with three columns. For each column, the type was changed by duplicating the first one and assigning a new material colour to the copy:</p><img alt=\"Three columns with different colours\" src=\"img/three_columns_with_different_colours.gif\"/><a href=\"http://thebuildingcoder.typepad.com/blog/2009/04/revit-api-cases-1.html#3\">\nContinued...</a>"
  },
  {
    "original_filename": "0113_more_questions",
    "header_text": "Changing the colour of a face",
    "local_header_href": "#changing-the-colour-of-a-face",
    "chunk_text": "<h4>Changing the colour of a face</h4><p><strong>Question:</strong>\nHow can I change the colour of a face using the API? Can I change colour of one and only one face?</p><p><strong>Answer:</strong>\nThe Face object MaterialElement property is read-only, and this is the only property of a face that refers to colour or material in any way, so you cannot change either colour or material of an individual face directly.</p><p>Actually, you should be aware of the fact that Face class is a member of the Autodesk.Revit.Geometry namespace. All classes in this namespace are used to provide views into the Revit database, but not to define the database elements themselves. Therefore, even if there was a way to modify the colour of an individual face, it would have no effect on the Revit model.</p><p>To persistently modify the colour of individual faces within the Revit model, you can use the face split operation provided by the Face Splitter tool in the user interface.</p><p>Please be aware that there is currently no API access to determine the colour or material of split faces.</p>"
  },
  {
    "original_filename": "0113_more_questions",
    "header_text": "Use event handling on Save As",
    "local_header_href": "#use-event-handling-on-save-as",
    "chunk_text": "<h4>Use event handling on Save As</h4><p><strong>Question:</strong>\nIs it possible to use event handling or some other method to add steps when a user clicks on Save As? We would like to make sure a few things are done before the Save As command executes.</p><p><strong>Answer:</strong>\nThe Revit API help file RevitAPI.chm mentions the DocumentSaveAsEventHandler delegate which is a handler for the event that is fired before the current document is saved as a file with different file name.\nThis should be what you are looking for.\nThe SDK samples include the RoomSchedule sample which shows how to register handlers for some events, including the document save as event. The main line is:</p><pre>\ndoc.OnSaveAs += new\n  DocumentSaveAsEventHandler( OnDocumentSave );\n</pre>"
  },
  {
    "original_filename": "0113_more_questions",
    "header_text": "More details on my break",
    "local_header_href": "#more-details-on-my-break",
    "chunk_text": "<h4>More details on my break</h4><p>Some colleagues asked for more details of my experiences during my break, and whether I took any pictures.\nI did not, I was not carrying a camera and thought that there are probably loads of photos of all the places I visited available online.\nHere are some of the nicest and main places I went to, with links to online pictures of some of them:</p><ul>\n<li>\n<!-- <a href=\"http://en.wikipedia.org/wiki/Naples,_Italy\"> -->\nNapoli or Naples.</li>\n<li>Ischia, a beautiful island that I totally fell in love with.</li>\n<li>Palermo.</li>\n<li>The\n<a href=\"http://www.paradoxplace.com/Perspectives/Sicily%20&amp;%20S%20Italy/Montages/Sicily/Palermo/Monreale%20Cathedral.htm\">\ncathedral of Monreale</a>.</li>\n<li>Cefalu.</li>\n<li>\n<a href=\"http://www.swisseduc.ch/stromboli/volcano/photos/index-de.html\">\nStromboli</a>, an island volcano ... I spent the night on top of it and watched the regular eruptions.</li>\n<li>Cathania.</li>\n<li>Etna, a volcano, where I walked in snow over the lava fields for several kilometres ... I did not see the erupting part due to clouds, though.</li>\n<li>The Amalfian coast, with the\n\n<a href=\"http://www.fotoeweb.it/sorrentina/Sentiero%20degli%20Dei.htm\">\nSentiero degli Dei</a>,\n\nor Path of the Gods, the most beautiful path I ever walked \n\n(<a href=\"http://www.youtube.com/watch?v=OoYb7P4ioZs\">photo video</a>).</li>\n</ul><p>It was a really wonderful trip, I met wonderful people, and I will definitely be returning to southern Italy again.</p>"
  }
]