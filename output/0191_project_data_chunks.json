[
  {
    "original_filename": "0191_project_data",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0191_project_data",
    "header_text": "Store Project Data",
    "local_header_href": "#store-project-data",
    "chunk_text": "<h3>Store Project Data</h3><p>We recently discussed \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/07/store-structured-data.html\">\nstoring structured data</a> \n\nin a Revit file, and received a number of very helpful additional \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/07/store-structured-data.html#comments\">\ncomments</a>\n\non the topic.\nTo store custom application data in a Revit project, one needs to attach a shared parameter to some Revit elements.\nAs we have seen in the discussion on \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/06/model-group-shared-parameter.html\">\nmodel group shared parameters</a>, \n\nalmost any element can be used to host the shared parameter.\nHere is a common related question:</p><p><strong>Question:</strong>\nWhere can I store project-wide information in a Revit file, data which is not related to any specific individual element?\n\n<p><strong>Answer:</strong>\nFirst of all, there is no need to separate the two issues of element-specific versus global data, because the only way to store application data in Revit is to use shared parameters on certain elements. \nLuckily, there is one object which occurs exactly once in the entire project and therefore constitutes a suitable repository for global document data, also known as a singleton object: the project information or ProjectInfo element. \nIt can be retrieved using Revit 2009 filtering by searching for the \"Project Information\" category with the built-in category OST_ProjectInformation. \nThis is discussed in the standard Revit programming introduction presentation and demonstrated by the labs 4-4-1 and 4-4-2 in the \n\n<a href=\"zip/rac_labs_2009-07-30.zip\">\nRevit API introduction labs</a>.\n\n<p>The ProjectInfo singleton element is not present in a family file, so we have to resort to some other method in that case.</p>\n<h4>Per-document shared parameter in a family document</h4>\n<p><strong>Question:</strong>\nHow can we add a per-document shared parameter to a family document?\nThe lab 4-4-1 contains code to create and bind shared parameters to the Project Information category, or basically to anything which appears as a singleton in the document. \nHow can we implement the same for a family document? \nIt does not contain a Project Information element.</p>\n<p><strong>Answer:</strong>\nLooking at a new family file using RvtMgdDbg, I can see one likely candidate, the ProjectUnit object. \nI imagine that element also only occurs exactly once. \nThere are some other elements which may or may not also be unique: the default material, the front view, the basic reference level, the solid fill FillPattern, the Work Plane Grid element, etc. \nI suggest you pick an element, any element. \nBuild a filter to select all such elements. \nInclude an assertion to verify that exactly one is returned in all cases. \nAny element will do, it just has to be easily selectable and unique.</p>\n<p>Actually, in a family document, you can probably also use a hidden family parameter instead of attaching the data to any specific element contained within the document.</p>\n</p></p>"
  },
  {
    "original_filename": "0191_project_data",
    "header_text": "Per-document shared parameter in a family document",
    "local_header_href": "#per-document-shared-parameter-in-a-family-document",
    "chunk_text": "<h4>Per-document shared parameter in a family document</h4><p><strong>Question:</strong>\nHow can we add a per-document shared parameter to a family document?\nThe lab 4-4-1 contains code to create and bind shared parameters to the Project Information category, or basically to anything which appears as a singleton in the document. \nHow can we implement the same for a family document? \nIt does not contain a Project Information element.</p><p><strong>Answer:</strong>\nLooking at a new family file using RvtMgdDbg, I can see one likely candidate, the ProjectUnit object. \nI imagine that element also only occurs exactly once. \nThere are some other elements which may or may not also be unique: the default material, the front view, the basic reference level, the solid fill FillPattern, the Work Plane Grid element, etc. \nI suggest you pick an element, any element. \nBuild a filter to select all such elements. \nInclude an assertion to verify that exactly one is returned in all cases. \nAny element will do, it just has to be easily selectable and unique.</p><p>Actually, in a family document, you can probably also use a hidden family parameter instead of attaching the data to any specific element contained within the document.</p>"
  }
]