[
  {
    "original_filename": "1790_macro_updater",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</head>\n\n<!---\n\n- IUpdater in a project macro on startup\n  https://forums.autodesk.com/t5/revit-api-forum/iupdater-in-a-project-macro-on-startup/m-p/9087481\n\ntwitter:\n\nDMU or Dynamic Model Updater macro in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/dmumacro\n\nLet's take a quick look at implementing a dynamic model updater in a macro\n&ndash; Task\n&ndash; Solution\n&ndash; Drill up the filter...\n\nlinkedin:\n\nDMU or Dynamic Model Updater macro in the #RevitAPI\n\nhttp://bit.ly/dmumacro\n\nLet's take a quick look at implementing a dynamic model updater in a macro:\n\n- Task\n- Solution\n- Drill up the filter...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<p style=\"font-size: 80%; font-style:italic\"></p>\n\n-->"
  },
  {
    "original_filename": "1790_macro_updater",
    "header_text": "Dynamic Model Updater Macro",
    "local_header_href": "#dynamic-model-updater-macro",
    "chunk_text": "### Dynamic Model Updater Macro\n\nLet's take a quick look at implementing a dynamic model updater in a macro:\n\n- [Task](#2)\n- [Solution](#3)\n- [Drill up the filter](#4)"
  },
  {
    "original_filename": "1790_macro_updater",
    "header_text": "Task",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Task\n\nDave raised and solved an interesting issue concerning macros, an area that we have not discussed much here yet, in\nhis [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [`IUpdater` in a project macro on startup](https://forums.autodesk.com/t5/revit-api-forum/iupdater-in-a-project-macro-on-startup/m-p/9087481):\n\nI'm trying to use `IUpdater` in a macro that automatically starts when a project opens.\nIs this possible?\n\nSo far, I used Macro Manager / Create to set up some boilerplate.\n\nThen, I pasted in Autodesk's `WallUpdater` example code from the knowledge article\non [Implementing IUpdater](https://knowledge.autodesk.com/search-result/caas/CloudHelp/cloudhelp/2015/ENU/Revit-API/files/GUID-6D434229-0A2E-41FE-B29D-1BB2E6471F50-htm.html)\ninto my `public partial class ThisDocument`.\n\nI figured out how to run the code on project startup by calling it from the boilerplate's `private void Module_Startup`.\n\nBut I haven't had any luck calling `WallUpdater`.\n\nHere is my code:\n\n<pre class=\"code\">\n<span style=\"color:blue;\">using</span>&nbsp;System;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.DB;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.UI.Selection;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.UI;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.Attributes;\n<span style=\"color:blue;\">using</span>&nbsp;System.Collections.Generic;\n<span style=\"color:blue;\">using</span>&nbsp;System.Linq;\n \n<span style=\"color:blue;\">namespace</span>&nbsp;test\n{\n&nbsp;&nbsp;[<span style=\"color:#2b91af;\">Transaction</span>(&nbsp;<span style=\"color:#2b91af;\">TransactionMode</span>.Manual&nbsp;)]\n&nbsp;&nbsp;[Autodesk.Revit.DB.Macros.<span style=\"color:#2b91af;\">AddInId</span>(&nbsp;<span style=\"color:#a31515;\">&quot;redacted&quot;</span>&nbsp;)]\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">partial</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">ThisDocument</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Module_Startup(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;hello&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;this&nbsp;pops&nbsp;up&nbsp;when&nbsp;you&nbsp;open&nbsp;the&nbsp;project&quot;</span>&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Module_Shutdown(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">#region</span>&nbsp;Revit&nbsp;Macros&nbsp;generated&nbsp;code\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;InternalStartup()\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">this</span>.Startup&nbsp;+=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;System.<span style=\"color:#2b91af;\">EventHandler</span>(&nbsp;Module_Startup&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">this</span>.Shutdown&nbsp;+=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;System.<span style=\"color:#2b91af;\">EventHandler</span>(&nbsp;Module_Shutdown&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">#endregion</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">WallUpdaterApplication</span>&nbsp;:&nbsp;<span style=\"color:#2b91af;\">IExternalApplication</span>\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>&nbsp;OnStartup(&nbsp;<span style=\"color:#2b91af;\">UIControlledApplication</span>&nbsp;a&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;Register&nbsp;wall&nbsp;updater&nbsp;with&nbsp;Revit</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">WallUpdater</span>&nbsp;updater&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">WallUpdater</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a.ActiveAddInId&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">UpdaterRegistry</span>.RegisterUpdater(&nbsp;updater&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;Change&nbsp;Scope&nbsp;=&nbsp;any&nbsp;Wall&nbsp;element</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementClassFilter</span>&nbsp;wallFilter\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementClassFilter</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">Wall</span>&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;Change&nbsp;type&nbsp;=&nbsp;element&nbsp;addition</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">UpdaterRegistry</span>.AddTrigger(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;updater.GetUpdaterId(),&nbsp;wallFilter,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Element</span>.GetChangeTypeElementAddition()&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>.Succeeded;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>&nbsp;OnShutdown(&nbsp;<span style=\"color:#2b91af;\">UIControlledApplication</span>&nbsp;a&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">WallUpdater</span>&nbsp;updater&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">WallUpdater</span>(&nbsp;a.ActiveAddInId&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">UpdaterRegistry</span>.UnregisterUpdater(&nbsp;updater.GetUpdaterId()&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>.Succeeded;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">WallUpdater</span>&nbsp;:&nbsp;<span style=\"color:#2b91af;\">IUpdater</span>\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">AddInId</span>&nbsp;m_appId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">UpdaterId</span>&nbsp;m_updaterId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">WallType</span>&nbsp;m_wallType&nbsp;=&nbsp;<span style=\"color:blue;\">null</span>;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;constructor&nbsp;takes&nbsp;the&nbsp;AddInId&nbsp;for&nbsp;the&nbsp;add-in</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;associated&nbsp;with&nbsp;this&nbsp;updater</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;WallUpdater(&nbsp;<span style=\"color:#2b91af;\">AddInId</span>&nbsp;id&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_appId&nbsp;=&nbsp;id;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_updaterId&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">UpdaterId</span>(&nbsp;m_appId,&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Guid</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;FBFBF6B2-4C06-42d4-97C1-D1B4EB593EFF&quot;</span>&nbsp;)&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Execute(&nbsp;<span style=\"color:#2b91af;\">UpdaterData</span>&nbsp;data&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;data.GetDocument();\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;Cache&nbsp;the&nbsp;wall&nbsp;type</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;m_wallType&nbsp;==&nbsp;<span style=\"color:blue;\">null</span>&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;hello&quot;</span>,&nbsp;<span style=\"color:#a31515;\">&quot;world&quot;</span>&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;m_wallType&nbsp;!=&nbsp;<span style=\"color:blue;\">null</span>&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;hello&quot;</span>,&nbsp;<span style=\"color:#a31515;\">&quot;world&quot;</span>&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">string</span>&nbsp;GetAdditionalInformation()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#a31515;\">&quot;Wall&nbsp;type&nbsp;updater&nbsp;example:&nbsp;updates&nbsp;all&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;newly&nbsp;created&nbsp;walls&nbsp;to&nbsp;a&nbsp;special&nbsp;wall&quot;</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">ChangePriority</span>&nbsp;GetChangePriority()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#2b91af;\">ChangePriority</span>.FloorsRoofsStructuralWalls;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">UpdaterId</span>&nbsp;GetUpdaterId()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;m_updaterId;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">string</span>&nbsp;GetUpdaterName()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#a31515;\">&quot;Wall&nbsp;Type&nbsp;Updater&quot;</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n}\n</pre>\n\nAll the samples I've found so far appear to be written as add-ins.\n\nI found one single sample showing an `IUpdater` in a macro, \nfor [wrangling revisions with Ruby](https://thebuildingcoder.typepad.com/blog/2014/02/wrangling-revisions-with-ruby.html).\nUnfortunately, that's a bit too complex for me to follow at this point, especially in Ruby.\n\nI was hoping to find an RVT with a vanilla C# `IUpdater` macro embedded, similar to the SDK *Revit_Macro_Samples.rvt*."
  },
  {
    "original_filename": "1790_macro_updater",
    "header_text": "Solution",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Solution\n\nThe Boost your BIM article\non [automatically running API code when your model changes](https://boostyourbim.wordpress.com/2012/12/17/automatically-run-api-code-when-your-model-changes) looks\npromising...\n\nYes, I got it working!\n\nHere are the steps I followed:\n\n- Use MacroManager to create a new C# module.\n- Edit the new module in SharpDevelop.\n- Add `RegisterUpdater` to `Module_Startup` as follows:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Module_Startup(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;RegisterUpdater();\n&nbsp;&nbsp;}\n</pre>\n\n- Add `UnregisterUpdater` to `Module_Shutdown` as above.\n\n- Just below the boilerplate `#endregion`, add the boostyourbim code:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">FamilyInstanceUpdater</span>&nbsp;:&nbsp;<span style=\"color:#2b91af;\">IUpdater</span>\n&nbsp;&nbsp;{&nbsp;...&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;RegisterUpdater()\n&nbsp;&nbsp;{&nbsp;...&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;UnregisterUpdater()\n&nbsp;&nbsp;{&nbsp;...&nbsp;}\n</pre>\n\nMake sure `FamilyInstanceUpdater`, `RegisterUpdater`, and `UnregisterUpdater` are inside the scope of `ThisDocument`.\n\nFor testing, I found it handy to replace boostyourbim's `Execute` code with this:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Execute(&nbsp;<span style=\"color:#2b91af;\">UpdaterData</span>&nbsp;data&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;data.GetDocument();\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;Revit&quot;</span>,&nbsp;<span style=\"color:#a31515;\">&quot;hello&quot;</span>&nbsp;);\n&nbsp;&nbsp;}\n</pre>\n\n- Save and hit F9 to build the macro.\nCheck the MacroManager to see if the build was successful.\nFor some reason, the build occasionally fails for me.\nI've found that having AssemblyInfo.cs open in SharpDevelop helps.\nNo idea why.\n\nAt this point, the macro should be working.\nAny time you draw an element, you'll get a little popup that says 'hello'.\n\nIf you close your project with a successfully built macro, the macro will run automatically the next time you open the project.\n\nI'm sure lots of improvements can be made.\nFor instance, Jeremy recommended using DocumentOpened.\nAnd my version currently works for columns and beams, but not for walls.\nAny input would be appreciated.\n\nMeanwhile, thanks very much to Jeremy for taking a look and to boostyourbim for their code.\nHope this helps someone.\n\nMany thanks to Dave for his research and sharing the solution!"
  },
  {
    "original_filename": "1790_macro_updater",
    "header_text": "Drill Up the Filter",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> Drill Up the Filter\n\nThe initial version works for columns and beams, but not for walls.\n\nThis is due to the `FamilyInstanceUpdater`.\n\nIt defines a `familyInstanceFilter` variable as `new ElementClassFilter( typeof( FamilyInstance ) )`.\n\nBeams and columns are family instances, and walls are not.\n\nTo expand the filter to include `Wall` objects as well as `FamilyInstance` objects, you can change its name and definition to something like this:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementFilter</span>&nbsp;f&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">LogicalOrFilter</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementClassFilter</span>(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementClassFilter</span>(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">Wall</span>&nbsp;)&nbsp;);\n</pre>\n\n<center>\n<p/>\n<br/>\n<img src=\"img/macro_photography.png\" alt=\"Macro photography\" width=\"500\">\n</center>"
  }
]