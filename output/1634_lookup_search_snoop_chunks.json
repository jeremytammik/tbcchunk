[
  {
    "original_filename": "1634_lookup_search_snoop",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<!--\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n\nRevitLookup search by element and unique id in #RevitAPI @AutodeskRevit #bim #dynamobim @AutodeskForge #ForgeDevCon http://bit.ly/lookupsearchbyid\n\nАлександр Пекшев aka Modis @Pekshev implemented another useful RevitLookup enhancement to search and snoop elements by element id or unique id\n&ndash; Search and snoop by element id or unique id\n&ndash; File changes\n&ndash; The built-in Select by Id command, Zoom To and StringSearch\n&ndash; RevitLookup update...\n\n--->"
  },
  {
    "original_filename": "1634_lookup_search_snoop",
    "header_text": "RevitLookup Search by Element and Unique Id",
    "local_header_href": "#revitlookup-search-by-element-and-unique-id",
    "chunk_text": "### RevitLookup Search by Element and Unique Id\n\nАлександр Пекшев aka Modis [@Pekshev](https://github.com/Pekshev) recently\nsubmitted a pull request\nto [snoop the stable representation of references](http://thebuildingcoder.typepad.com/blog/2018/03/export-geometry-and-snoop-stable-representation-of-reference.html#2)\nfor [RevitLookup](https://github.com/jeremytammik/RevitLookup).\n\nNow he implemented another useful enhancement to search and snoop elements by element id or unique id:\n\n- [Search and snoop by element id or unique id](#2) \n- [File changes](#3) \n- [The built-in Select by Id command, Zoom To and StringSearch](#4) \n- [RevitLookup update](#5) \n\n\n####<a name=\"2\"></a>Search and Snoop by Element Id or Unique Id\n\nAlexander's RevitLookup [pull request #42 adds a 'search by and snoop' command](https://github.com/jeremytammik/RevitLookup/pull/42):\n\nAdd \"Search by and snoop\" command that allows you to search and snoop for elements by condition:\n\n<center>\n<img src=\"img/revitlookup_search_snoop_cmd.png\" alt=\"Search and Snoop command\" width=\"380\"/>\n</center>\n\nA small addition to the project: search for items by `ElementId` or `UniqueId` and then snoop them.\n\nSearch options implemented in the form of a drop-down list provide for the possibility of further future expansion (for example, search by parameters or something similar):\n\n<center>\n<img src=\"img/revitlookup_search_snoop_form.png\" alt=\"Search and Snoop form\" width=\"430\"/>\n</center>\n\nThis view option can be useful for developers who receive an `ElementId` while debugging an application and need to learn about it later in Revit.\n\nThank you very much, Alexander, for this great functionality added with minimal implementation effort, as you can see by looking and\nthe [pull request files changed](https://github.com/jeremytammik/RevitLookup/pull/42/files).\n\n####<a name=\"3\"></a>File Changes\n\nBesides the module *RevitLookup\\CS\\Snoop\\Forms\\SearchBy.cs* defining the new form, the only changes are the following to add the new menu entry and implement the new external command:\n\nIn App.cs:\n\n<pre class=\"code\">\n  optionsBtn.AddPushButton(<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">PushButtonData</span>(\n    <span style=\"color:#a31515;\">&quot;Search&nbsp;and&nbsp;Snoop...&quot;</span>,&nbsp;\n    <span style=\"color:#a31515;\">&quot;Search&nbsp;and&nbsp;Snoop...&quot;</span>,&nbsp;\n    ExecutingAssemblyPath,&nbsp;<span style=\"color:#a31515;\">&quot;\n    RevitLookup.CmdSearchBy&quot;</span>));\n</pre>\n\nIn TestCmds.cs:\n\n<pre class=\"code\">\n<span style=\"color:blue;\">using</span>&nbsp;RevitLookup.Snoop.Forms;\n\n. . .\n\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Search&nbsp;by&nbsp;and&nbsp;Snoop&nbsp;command:&nbsp;Browse&nbsp;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;elements&nbsp;found&nbsp;by&nbsp;the&nbsp;condition</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n[<span style=\"color:#2b91af;\">Transaction</span>(&nbsp;<span style=\"color:#2b91af;\">TransactionMode</span>.Manual&nbsp;)]\n[<span style=\"color:#2b91af;\">Regeneration</span>(&nbsp;<span style=\"color:#2b91af;\">RegenerationOption</span>.Manual&nbsp;)]\n<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">CmdSearchBy</span>&nbsp;:&nbsp;<span style=\"color:#2b91af;\">IExternalCommand</span>\n{\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>&nbsp;Execute(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ExternalCommandData</span>&nbsp;cmdData,\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">ref</span>&nbsp;<span style=\"color:blue;\">string</span>&nbsp;msg,\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementSet</span>&nbsp;elems&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Result</span>&nbsp;result;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">try</span>\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Snoop.CollectorExts.<span style=\"color:#2b91af;\">CollectorExt</span>.m_app&nbsp;=&nbsp;cmdData.Application;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">UIDocument</span>&nbsp;revitDoc&nbsp;=&nbsp;cmdData.Application.ActiveUIDocument;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;dbdoc&nbsp;=&nbsp;revitDoc.Document;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Snoop.CollectorExts.<span style=\"color:#2b91af;\">CollectorExt</span>.m_activeDoc&nbsp;=&nbsp;dbdoc;&nbsp;<span style=\"color:green;\">//&nbsp;TBD:&nbsp;see&nbsp;note&nbsp;in&nbsp;CollectorExt.cs</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">SearchBy</span>&nbsp;searchByWin&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">SearchBy</span>(&nbsp;dbdoc&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ActiveDoc</span>.UIApp&nbsp;=&nbsp;cmdData.Application;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;searchByWin.ShowDialog();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Result</span>.Succeeded;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">catch</span>(&nbsp;System.<span style=\"color:#2b91af;\">Exception</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;e.Message;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Result</span>.Failed;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;result;\n&nbsp;&nbsp;}\n}\n</pre>\n\n\n####<a name=\"4\"></a>The Built-in Select by Id Command, Zoom To and StringSearch\n\nRevit does already provide a built-in command that you should be aware of providing similar functionality, at least for selecting an element by element id: Manage > Inquiry > Select by ID > Show:\n\n<center>\n<img src=\"img/select_by_id_cmd.png\" alt=\"Select by ID command\" width=\"476\"/>\n</center>\n\nIt prompts you to enter the element id and adds the element to the current selection with the option to zoom to it graphically as well:\n\n<center>\n<img src=\"img/select_by_id_form.png\" alt=\"Select by ID form\" width=\"342\"/>\n</center>\n\nOnce you have selected an element in this manner, you can use the traditional RevitLookup 'snoop current selection' to explore its data.\n\nThe 'zoom to' option is very similar to \nthe [zoom to selected elements](http://thebuildingcoder.typepad.com/blog/2018/03/switch-view-or-document-by-showing-elements.html#3) functionality\ndiscussed last week, implemented using `ShowElements`.\n\nThis could obviously be integrated into RevitLookup as well, if so desired.\n\nAnother useful piece of functionality that could be integrated is an adaptation of my\nold [StringSearch](http://thebuildingcoder.typepad.com/blog/2016/01/all-model-text-stringsearch-2016-and-new-jobs.html) add-in,\noriginally [ADN Plugin of the Month](http://thebuildingcoder.typepad.com/blog/2011/10/string-search-adn-plugin-of-the-month.html) back\nin 2011.\n\nIt implements the possibility to search for, list modelessly, select and zoom to elements based on strings in their properties, parameters and other data, including support for regular expressions.\n\n\n####<a name=\"5\"></a>RevitLookup Update\n\nBack to here and now, though.\n\nI integrated Alexander's code and fixed some minor compilation errors due to working with Visual Studio 2015.\n\nHe presumably used a newer version supporting more permissive C# syntax to create the pull request.\n\nThe new functionality is included \nin [RevitLookup](https://github.com/jeremytammik/RevitLookup)\n[release 2018.0.0.8](https://github.com/jeremytammik/RevitLookup/releases/tag/2018.0.0.8)."
  }
]