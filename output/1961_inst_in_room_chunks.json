[
  {
    "original_filename": "1961_inst_in_room",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- Get FamilyInstances within The Room\n  https://forums.autodesk.com/t5/revit-api-forum/get-familyinstances-within-the-room/td-p/11364696\n\n- another look at fuzz:\n  Unit converted parameter value not matching parsed string value\n  https://forums.autodesk.com/t5/revit-api-forum/unit-converted-parameter-value-not-matching-parsed-string-value/m-p/11353053\n  Comparing double values in C#\n  https://stackoverflow.com/questions/1398753/comparing-double-values-in-c-sharp\n\ntwitter:\n\nRetrieving family instances with a given room and comparing real numbers in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon https://autode.sk/instancesinroom\n\nCommon tasks include finding instances with a given room, comparing real numbers, and sharing documentation online\n&ndash; Get family instances within room\n&ndash; Again, the need for fuzz\n&ndash; Avoid PDF for on-screen reading...\n\nlinkedin:\n\nRetrieving family instances with a given room and comparing real numbers in the #RevitAPI\n\nhttps://autode.sk/instancesinroom\n\nCommon tasks include finding instances with a given room, comparing real numbers, and sharing documentation online:\n\n- Get family instances within room\n- Again, the need for fuzz\n- Avoid PDF for on-screen reading...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\" height=\"\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n<pre class=\"code\">\n</pre>\n\n-->"
  },
  {
    "original_filename": "1961_inst_in_room",
    "header_text": "Instances in Room and Need for Fuzz",
    "local_header_href": "#instances-in-room-and-need-for-fuzz",
    "chunk_text": "### Instances in Room and Need for Fuzz\n\nCommon tasks include finding instances with a given room, comparing real numbers, and sharing documentation online:\n\n- [Get family instances within room](#2)\n    - [Rooms in linked models](#2.1)\n    - [MEP components near ceilings](#2.2)\n- [Again, the need for fuzz](#3)\n- [Avoid PDF for on-screen reading](#4)"
  },
  {
    "original_filename": "1961_inst_in_room",
    "header_text": "Get Family Instances Within Room",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Get Family Instances Within Room\n\nA common task is\nto [get FamilyInstances within a room](https://forums.autodesk.com/t5/revit-api-forum/get-familyinstances-within-the-room/td-p/11364696):\n\n**Question:** I'm facing a small issue in filtering family instances within the room.\nA few families do not get filtered; for example, non-solid families are getting excluded.\n\n<center>\n<img src=\"img/instances_in_room.png\" alt=\"Family instances in room\" title=\"Family instances in room\" width=\"600\"/> <!-- 1258 x 776 -->\n</center>\n\nHow to filter intersected 2D families also?\n\nThis my code:\n\n<pre class=\"code\">\n  <span style=\"color:green;\">//Get&nbsp;Family&nbsp;Instance</span>\n  <span style=\"color:blue;\">public</span>&nbsp;List&lt;FamilyInstance&gt;&nbsp;<span style=\"color:#74531f;\">GetFamilyInstance</span>(\n    Document&nbsp;<span style=\"color:#1f377f;\">revitDoc</span>,\n    Room&nbsp;<span style=\"color:#1f377f;\">room</span>)\n  {\n  &nbsp;&nbsp;<span style=\"color:green;\">//Get&nbsp;Closed&nbsp;Shell</span>\n  &nbsp;&nbsp;GeometryElement&nbsp;<span style=\"color:#1f377f;\">geoEle</span>&nbsp;=&nbsp;room.ClosedShell;\n  &nbsp;&nbsp;GeometryObject&nbsp;<span style=\"color:#1f377f;\">geoObject</span>&nbsp;=&nbsp;<span style=\"color:blue;\">null</span>;\n  &nbsp;&nbsp;<span style=\"color:green;\">//Get&nbsp;Geometry&nbsp;Object&nbsp;From&nbsp;Geometry&nbsp;Element</span>\n  &nbsp;&nbsp;<span style=\"color:#8f08c4;\">foreach</span>&nbsp;(GeometryObject&nbsp;<span style=\"color:#1f377f;\">obj</span>&nbsp;<span style=\"color:#8f08c4;\">in</span>&nbsp;geoEle)\n  &nbsp;&nbsp;{\n  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">if</span>&nbsp;(obj&nbsp;<span style=\"color:blue;\">is</span>&nbsp;Solid)\n  &nbsp;&nbsp;&nbsp;&nbsp;{\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geoObject&nbsp;=&nbsp;obj;\n  &nbsp;&nbsp;&nbsp;&nbsp;}\n  &nbsp;&nbsp;}\n   \n  &nbsp;&nbsp;ElementIntersectsSolidFilter&nbsp;<span style=\"color:#1f377f;\">elementIntersectsSolidFilter</span>\n  &nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;ElementIntersectsSolidFilter(geoObject&nbsp;<span style=\"color:blue;\">as</span>&nbsp;Solid);\n   \n  &nbsp;&nbsp;<span style=\"color:#8f08c4;\">return</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;FilteredElementCollector(revitDoc)\n  &nbsp;&nbsp;&nbsp;&nbsp;.OfClass(<span style=\"color:blue;\">typeof</span>(FamilyInstance))\n  &nbsp;&nbsp;&nbsp;&nbsp;.WhereElementIsNotElementType().\n  &nbsp;&nbsp;&nbsp;&nbsp;WherePasses(elementIntersectsSolidFilter).\n  &nbsp;&nbsp;&nbsp;&nbsp;Cast&lt;FamilyInstance&gt;().\n  &nbsp;&nbsp;&nbsp;&nbsp;ToList();\n  }\n</pre>\n\n**Answer:** The `ElementIntersectsSolidFilter` requires the filtered elements to have solid geometry and be of a category supported by interference checking.\nYour 2D instances do not fulfil this requirement.\n\nYou can try using the family instance `Room` property like this:\n\n<pre class=\"code\">\n  <span style=\"color:blue;\">bool</span>&nbsp;<span style=\"color:#74531f;\">IsInstanceInRoom</span>(FamilyInstance&nbsp;<span style=\"color:#1f377f;\">instance</span>,&nbsp;Room&nbsp;<span style=\"color:#1f377f;\">room</span>)\n  {\n  &nbsp;&nbsp;<span style=\"color:blue;\">var</span>&nbsp;<span style=\"color:#1f377f;\">isInstanceInRoom</span>&nbsp;=&nbsp;(instance.Room&nbsp;!=&nbsp;<span style=\"color:blue;\">null</span>)&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp;&nbsp;instance.Room.Id&nbsp;==&nbsp;room.Id;\n  &nbsp;&nbsp;<span style=\"color:#8f08c4;\">return</span>&nbsp;isInstanceInRoom;\n  }\n   \n  <span style=\"color:blue;\">public</span>&nbsp;List&lt;FamilyInstance&gt;&nbsp;<span style=\"color:#74531f;\">GetFamilyInstance</span>(\n    Document&nbsp;<span style=\"color:#1f377f;\">revitDoc</span>,\n    Room&nbsp;<span style=\"color:#1f377f;\">room</span>)\n  {\n  &nbsp;&nbsp;<span style=\"color:blue;\">var</span>&nbsp;<span style=\"color:#1f377f;\">elements</span>&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;FilteredElementCollector(revitDoc)\n    &nbsp;&nbsp;.OfClass(<span style=\"color:blue;\">typeof</span>(FamilyInstance))\n    &nbsp;&nbsp;.WhereElementIsNotElementType()\n    &nbsp;&nbsp;.Cast&lt;FamilyInstance&gt;()\n    &nbsp;&nbsp;.Where(<span style=\"color:#1f377f;\">i</span>&nbsp;=&gt;&nbsp;IsInstanceInRoom(i,&nbsp;room))\n    &nbsp;&nbsp;.ToList();\n  &nbsp;&nbsp;<span style=\"color:#8f08c4;\">return</span>&nbsp;elements;\n  }\n</pre>\n\nAnother approach is to use the `Room.IsPointInRoom` predicate and check the family instance location point or constructing some other point based on geometry location.\nYou may need to elevate it slightly off the floor to ensure it will be found within vertical limits of room.\n\nYou can also try to use the `FromRoom` and `ToRoom` properties.\nIf you are using Phasing, you have to pass in the phase:\n\n<pre class=\"code\">\n  instance.get_Room(phase)\n  // or\n  instance.get_FroomRoom(phase)\n  //or\n  instance.get_ToRoom(phase)\n</pre>\n\n**Response:** So, I need to take a center point of the family instance and then use `IsPointInRoom` to ensure that it is within the room limits.\nCan you write some simple code for me?\n\n**Answer:** The solution for that is very kindly given by EatRevitPoopCad\nexplaining [how to determine if a toilet belongs to a room](https://forums.autodesk.com/t5/revit-api-forum/how-to-determinate-if-a-toilet-belongs-to-a-room/m-p/10305412).\nYou could also simply search this forum for `IsPointInRoom` to find it yourself.\n\nMany thanks to Sam Berk,\nRichard [RPThomas108](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/1035859) Thomas\nand EatRevitPoopCad for their helpful advice!\n\n####<a name=\"2.1\"></a> Rooms in Linked Models\n\nAs Joshua Lumley points out in his [comment below](https://thebuildingcoder.typepad.com/blog/2022/08/instances-in-room-and-need-for-fuzz.html#comment-5959441109),\n`IsPointInRoom` works well for rooms in linked models as well; just remember to invert the total transform of the linked instance before doing it.\n\n####<a name=\"2.2\"></a> MEP Components Near Ceilings\n\nErik Falck JÃ¸rgensen adds in\nhis [comment on LinkedIn](https://www.linkedin.com/feed/update/urn:li:groupPost:3323631-6968139988962025473?commentUrn=urn%3Ali%3Acomment%3A%28groupPost%3A3323631-6968139988962025473%2C6970603210860339200%29):\n\n> Great approach; however, as I see it, we still have the problem with ceilings cutting rooms off and issues capturing (MEP) components without the point option above ceiling level but still inside the constructive room.\nIt would be a great help if either the room or the ceiling element could respect the need for working with elements inside this range.\n\nAnswer: Yup. That may require a different approach.\nMaybe those cases can be addressed by querying the room for its solid using\nits [`ClosedShell` property](https://www.revitapidocs.com/2023/1a510aef-63f6-4d32-c0ff-a8071f5e23b8.htm) and\nusing a full 3D Boolean operation.\nOr, simpler, implementing a [point-in-3D-polyhedron algorithm](https://duckduckgo.com/?q=point+in+polyhedron)."
  },
  {
    "original_filename": "1961_inst_in_room",
    "header_text": "Again, the Need for Fuzz",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Again, the Need for Fuzz\n\nWe take yet another look at fuzz, required in order to deal with comparison of real numbers on digital computers.\n\nThe topic came up once again in\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [unit converted parameter value not matching parsed string value](https://forums.autodesk.com/t5/revit-api-forum/unit-converted-parameter-value-not-matching-parsed-string-value/m-p/11353053).\n\nTo skip the jabber and jump right to a solution, please refer to the StackOverflow discussion\non [comparing double values in C#](https://stackoverflow.com/questions/1398753/comparing-double-values-in-c-sharp).\n\n**Question:** Strictly speaking, this is not a Revit API issue I'm facing, but after some research I couldn't find the answer here or anywhere else and it's still a challenge related to Revit.\n\nI'm comparing a family parameter value with values in a spreadsheet so I can update the parameter accordingly if they don't match, but I'm getting weird results when comparing them.\nThe snippet below shows how I'm extracting the double value of the `WW_Width` parameter and converting it to millimetres.\nThen, I compare it to a parsed string with the exact same value as a double, but I get a false result as to whether or not they match.\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:blue;\">var</span>&nbsp;<span style=\"color:#1f377f;\">famPars</span>&nbsp;=&nbsp;doc.FamilyManager.Parameters;\n&nbsp;&nbsp;<span style=\"color:blue;\">var</span>&nbsp;<span style=\"color:#1f377f;\">famTypes</span>&nbsp;=&nbsp;doc.FamilyManager.Types;\n \n&nbsp;&nbsp;<span style=\"color:#8f08c4;\">foreach</span>&nbsp;(FamilyParameter&nbsp;<span style=\"color:#1f377f;\">param</span>&nbsp;<span style=\"color:#8f08c4;\">in</span>&nbsp;famPars)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">foreach</span>&nbsp;(FamilyType&nbsp;<span style=\"color:#1f377f;\">famtype</span>&nbsp;<span style=\"color:#8f08c4;\">in</span>&nbsp;famTypes)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">if</span>&nbsp;(param.Definition.Name&nbsp;==&nbsp;<span style=\"color:#a31515;\">&quot;WW_Width&quot;</span>)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.ShowBoldMessage(<span style=\"color:#a31515;\">&quot;WW_Width&quot;</span>);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.ShowMessage(<span style=\"color:#a31515;\">$&quot;UnitType:&nbsp;</span>{param.Definition.UnitType}<span style=\"color:#a31515;\">&quot;</span>);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.ShowMessage(<span style=\"color:#a31515;\">$&quot;StorageType:&nbsp;</span>{param.StorageType}<span style=\"color:#a31515;\">\\n&quot;</span>);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">double</span>&nbsp;<span style=\"color:#1f377f;\">valueInMM</span>&nbsp;=&nbsp;UnitUtils.ConvertFromInternalUnits(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<span style=\"color:blue;\">double</span>)&nbsp;famtype.AsDouble(param),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DisplayUnitType.DUT_MILLIMETERS);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">double</span>&nbsp;<span style=\"color:#1f377f;\">parsedString</span>&nbsp;=&nbsp;<span style=\"color:blue;\">double</span>.Parse(<span style=\"color:#a31515;\">&quot;2448&quot;</span>);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.ShowMessage(<span style=\"color:#a31515;\">$&quot;Value:&nbsp;</span>{valueInMM}<span style=\"color:#a31515;\">&quot;</span>);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.ShowMessage(<span style=\"color:#a31515;\">$&quot;Parsed&nbsp;string:&nbsp;</span>{parsedString}<span style=\"color:#a31515;\">&quot;</span>);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.ShowMessage(<span style=\"color:#a31515;\">$&quot;Values&nbsp;match:&nbsp;</span>{valueInMM&nbsp;==&nbsp;parsedString}<span style=\"color:#a31515;\">&quot;</span>);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n</pre>\n\nThis is what my console shows as a result; I don't understand why I'm getting a mismatch:\n\n<pre class=\"code\">\n  WW_Width\n  UnitType: UT_Length\n  StorageType: Double\n  \n  Value: 2448\n  Parsed string: 2448\n  Values match: False\n</pre>\n\n**Answer:** You need to add some fuzz; you\ncan [search The Building Coder for 'fuzz'](https://www.google.com/search?q=fuzz&as_sitesearch=thebuildingcoder.typepad.com).\n\n**Response:** Thanks for the steer in the right direction.\nI wasn't aware of that issue with doubles/floats.\nInstead of directly comparing the doubles, I'm subtracting one from the other and checking if the difference is under a certain tolerance (e.g. A - B < 0.001), and that works.\n\nThe StackOverflow article\non [comparing double values in C#](https://stackoverflow.com/questions/1398753/comparing-double-values-in-c-sharp) explains\nit well in case anyone faces this issue in the future."
  },
  {
    "original_filename": "1961_inst_in_room",
    "header_text": "Avoid PDF for On-Screen Reading",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> Avoid PDF for On-Screen Reading\n\nI just read a piece of advice that I have not heeded so far, and am unsure whether to heed in the future.\n\nHowever, I am very glad to be well informed about my bad manners.\n\nThe recommendation stands\nto [avoid PDF for on-screen reading](https://www.nngroup.com/articles/avoid-pdf-onscreen-reading-original).\nIt was voiced a long time ago and apparently still stands,\ncf. [PDF: still unfit for human consumption, 20 years later](https://www.nngroup.com/articles/pdf-unfit-for-human-consumption).\nInstead, the author recommends using HTML gateway pages instead of PDFs,\nsince [gateway pages prevent pdf shock](https://www.nngroup.com/articles/gateway-pages-prevent-pdf-shock).\n\nI fully agree with the latter, and mostly try to clearly mark links that lead to a PDF so that the unwary reader is well prepared for leaving the world of HTML before following the link."
  }
]