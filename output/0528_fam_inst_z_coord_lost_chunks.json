[
  {
    "original_filename": "0528_fam_inst_z_coord_lost",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0528_fam_inst_z_coord_lost",
    "header_text": "Family Instance Z Coordinate Lost",
    "local_header_href": "#family-instance-z-coordinate-lost",
    "chunk_text": "<h3>Family Instance Z Coordinate Lost</h3><p>Here is another contribution by Rudolf Honke of\n\n<a href=\"http://www.acadgraph.de\">\nacadGraph CADstudio GmbH</a>.\n\nHe says:\n\n<p>I am working with the placement of family instances on a TopographySurface to represent objects such as arrays of trees, traffic lights, RPC figures etc.\nI made use of your discussions on placing\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/11/place-furniture-instance.html\">\nfurniture</a> and\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/11/place-detail-instance.html\">\ndetail</a> family \n\ninstances and created a Revit add-in providing family instance placement functionality:</p>\n<center>\n<img alt=\"Place family instance on terrain\" src=\"img/rh_place_instance1.png\" width=\"400\"/>\n<img alt=\"Place family instance on terrain\" src=\"img/rh_place_instance2.png\" width=\"400\"/>\n</center>\n<p>During the development, we faced some problems similar to those treated in the two blog posts.\n\n<p>There are these steps required to insert a family instance:\n\n<ol>\n<li>Place an instance of the family symbol 'fs' using a given XYZ instance 'intersectionPoint':\n<pre class=\"code\">\n  <span class=\"teal\">FamilyInstance</span> famInst\n    = doc.Create.NewFamilyInstance(\n      interSectionPoint, fs,\n      StructuralType.UnknownFraming );\n</pre>\n<li>Rotate the family instance.\n<li>Set the offset parameter.\n</li></li></li></ol>\n<p>When debugging, I found out that the instances were placed correctly in step 1 and their location points had the desired values.\n\n<p><b>But if the instances were rotated or moved in step 2, the Location.Z switched back to zero.</b>\n<p>This behaviour only appeared in the English version; in the German one the Revit API acts differently. \nIn fact, in the German version the FamilyInstance.Location.Z value remains correct even after a rotation.\n\n<p>As a result, we have to check Revit's language and adapt the procedure:\n\n<ul>\n<li>If it's German, the offset parameter is set correctly, just when placing the family instance.\n<li>If it's English, we collect the correct placing data (element, axis and rotation, offset) in a list. \nFirst, all family instances are placed; after that, we correct their properties using the list like this:\n</li></li></ul>\n<pre class=\"code\">\n  <span class=\"blue\">for</span>( <span class=\"blue\">int</span> i = 0; i &lt; items.Count; ++i )\n  {\n    doc.Rotate( items[i], axes[i], rotations[i] );\n \n    doc.Move( items[i], app.Create.NewXYZ(\n      0, 0, elevations[i] ) );\n \n    items[i]\n      .get_Parameter( <span class=\"teal\">BuiltInParameter</span>\n        .INSTANCE_FREE_HOST_OFFSET_PARAM )\n      .Set( elevations[i] );\n  }\n</pre>\n<p>That's our workaround.\n\n<p>In addition, there is another issue:\n\n<p>If the family instance has no visible offset parameter, there is no parameter connected to BuiltInParameter.INSTANCE_FREE_HOST_OFFSET_PARAM.\n\n<p>In that case it will be impossible to set the offset in both languages.\n\n<p>In the ensuing discussion of this issue, the suggestion came up that this behaviour may well be by design, and a different overload method with a level argument should be used to place the family instance. \nUsing some overloads, the elevation is fixed and cannot be set manually.\nThe choice of overload to use \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/01/newfamilyinstance-overloads.html\">\ncan be quite tricky</a>, \n\nas we have seen.\n\n<p>Rudolf responds that just setting the level and fixing the elevation is not the desired result.\nSince the language dependent workaround does what I need, there is no time pressure.\nI will do some more testing as soon as I find time.\nThank you for your efforts!\n\n<p>Many thanks to Rudolf for this interesting observation, detailed description and rather strange workaround!\n\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  }
]