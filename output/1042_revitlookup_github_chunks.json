[
  {
    "original_filename": "1042_revitlookup_github",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1042_revitlookup_github",
    "header_text": "RevitLookup is on GitHub and You are Invited to Collaborate",
    "local_header_href": "#revitlookup-is-on-github-and-you-are-invited-to-collaborate",
    "chunk_text": "<h3>RevitLookup is on GitHub and You are Invited to Collaborate</h3><p>I sincerely hope that everybody reading this is aware of the power and importance of RevitLookup, has already installed it, and is an avid user.</p><p>If you do not know what I am talking about, please read these previous posts on the topic, noting that it was previously named RvtMgdDbg, short for 'Revit managed debugging tool':</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/rvtmgddbg.html\">RvtMgdDbg</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/fixing-rvtmgddbg-for-mep-connectors.html\">Fixing RvtMgdDbg for MEP Connectors</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2009/10/rvtmgddbg-for-revit-2010.html\">RvtMgdDbg for Revit 2010</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/05/revitlookup-update.html\">RevitLookup Update</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/03/units-and-revitlookup.html\">Units and RevitLookup</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/04/getting-started-with-the-revit-api.html\">Getting Started with the Revit API</a></li>\n</li></ul><p>RevitLookup is currently included in the Revit SDK or Software Developer Kit that can be downloaded from the\n\n<a href=\"http://www.autodesk.com/developrevit\">Revit Developer Centre</a>.\n\n<p>In a\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/06/the-adn-sample-adnrme-for-revit-mep-2014.html?cid=6a00e553e1689788330191034be6cc970c#comment-6a00e553e1689788330191034be6cc970c\">\ncomment</a> on the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/06/the-adn-sample-adnrme-for-revit-mep-2014.html\">\nAdnRme sample</a>,\n\nMatt Mason of\n\n<a href=\"http://imaginit.com/software-solutions/building-architecture/IMAGINiT-Clarity-Workshare\">\nIMAGINiT Technologies</a> suggested\n\nhosting it on GitHub instead, to facilitate community enhancements.</p>\n<p>I talked this over with the development team and now finally got around to doing it.</p>\n<a name=\"2\"></a>\n<h4>RevitLookup GitHub Repository</h4>\n<p>RevitLookup now lives in its own\n\n<a href=\"https://github.com/jeremytammik/RevitLookup\">\nRevitLookup repository</a> on GitHub.</p>\n<p>I already integrated some enhancements for structural models provided by Thomas Fink of\n\n<a href=\"http://www.sofistik.com\">SOFiSTiK AG</a>.</p>\n<p>I made Matt Mason a collaborator on this project and he added some generic enhancements of his own as well, with no need for me to intervene at all in any way.</p>\n<p>The current version on GitHub thus already sports some improvements over the standard SDK one, so I would suggest you upgrade to that right away.\nSimply clone it to your desktop, compile, and replace your existing .NET assembly DLL with the new one.</p>\n<a name=\"3\"></a>\n<h4>Invitation to Collaborate</h4>\n<p>I am happy to welcome anyone else as well who would like to collaborate on this project.</p>\n<p>To begin with, however, to get to know you a little, I would suggest that you use 'Fork &amp; Pull' approach as opposed to the 'Shared Repository' approach, so that I can see what you plan to do.</p>\n<p>For details on how to go about this, please look at</p>\n<ul>\n<li><a href=\"https://help.github.com/articles/using-pull-requests\">Using Pull Requests</a></li>\n<li><a href=\"http://gun.io/blog/how-to-github-fork-branch-and-pull-request\">How to GitHub: Fork, Branch, Track, Squash and Pull Request</a></li>\n</ul>\n<p>Before you can contribute anything at all, of course, you need to discover a problem and fix it.</p>\n<p>Here are some words from an old ADN case on such an issue:</p>\n<a name=\"4\"></a>\n<h4>Fixing RevitLookup</h4>\n<p><strong>Question:</strong> I have used RevitLookup with Revit Architecture without any problems.</p>\n<p>When I use it with Revit Structure it works as long as I do not try to snoop a rebar.</p>\n<p>Is there a version of RevitLookup that can snoop rebar elements?</p>\n<p>Without a software like RevitLookup it would be very time consuming to learn how to access rebar data.</p>\n<p><strong>Answer:</strong> You can fix any problems that you encounter in RevitLookup yourself, if you like.</p>\n<p>Simply run RevitLookup in the Visual Studio debugger, select the offending Revit element, and see what is causing the problem.</p>\n<p>Normally, an exception is thrown, which terminates the operation.</p>\n<p>If you add an exception handler around the offending line, then all the other information will still be displayed.</p>\n<p>That is a cheap fix and workaround solution.</p>\n<p>A better solution, of course, is to implement an improved handling of the problematic element, which is often also quite simple.</p>\n<p>I haven discussed several such improvements in the past on the blog, e.g.,\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/fixing-rvtmgddbg-for-mep-connectors.html\">\nfixing RevitLookup for MEP connectors</a>.</p>\n<p>You have the source. The power is in your hands.</p>\n<p>With the new repository in place, any useful enhancements can easily be integrated into the main stream for all to share and enjoy.</p>\n<p>Good luck and have fun debugging and enhancing RevitLookup together!</p>\n</p>"
  },
  {
    "original_filename": "1042_revitlookup_github",
    "header_text": "RevitLookup GitHub Repository",
    "local_header_href": "#revitlookup-github-repository",
    "chunk_text": "<h4>RevitLookup GitHub Repository</h4><p>RevitLookup now lives in its own\n\n<a href=\"https://github.com/jeremytammik/RevitLookup\">\nRevitLookup repository</a> on GitHub.</p><p>I already integrated some enhancements for structural models provided by Thomas Fink of\n\n<a href=\"http://www.sofistik.com\">SOFiSTiK AG</a>.</p><p>I made Matt Mason a collaborator on this project and he added some generic enhancements of his own as well, with no need for me to intervene at all in any way.</p><p>The current version on GitHub thus already sports some improvements over the standard SDK one, so I would suggest you upgrade to that right away.\nSimply clone it to your desktop, compile, and replace your existing .NET assembly DLL with the new one.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1042_revitlookup_github",
    "header_text": "Invitation to Collaborate",
    "local_header_href": "#invitation-to-collaborate",
    "chunk_text": "<h4>Invitation to Collaborate</h4><p>I am happy to welcome anyone else as well who would like to collaborate on this project.</p><p>To begin with, however, to get to know you a little, I would suggest that you use 'Fork &amp; Pull' approach as opposed to the 'Shared Repository' approach, so that I can see what you plan to do.</p><p>For details on how to go about this, please look at</p><ul>\n<li><a href=\"https://help.github.com/articles/using-pull-requests\">Using Pull Requests</a></li>\n<li><a href=\"http://gun.io/blog/how-to-github-fork-branch-and-pull-request\">How to GitHub: Fork, Branch, Track, Squash and Pull Request</a></li>\n</ul><p>Before you can contribute anything at all, of course, you need to discover a problem and fix it.</p><p>Here are some words from an old ADN case on such an issue:</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "1042_revitlookup_github",
    "header_text": "Fixing RevitLookup",
    "local_header_href": "#fixing-revitlookup",
    "chunk_text": "<h4>Fixing RevitLookup</h4><p><strong>Question:</strong> I have used RevitLookup with Revit Architecture without any problems.</p><p>When I use it with Revit Structure it works as long as I do not try to snoop a rebar.</p><p>Is there a version of RevitLookup that can snoop rebar elements?</p><p>Without a software like RevitLookup it would be very time consuming to learn how to access rebar data.</p><p><strong>Answer:</strong> You can fix any problems that you encounter in RevitLookup yourself, if you like.</p><p>Simply run RevitLookup in the Visual Studio debugger, select the offending Revit element, and see what is causing the problem.</p><p>Normally, an exception is thrown, which terminates the operation.</p><p>If you add an exception handler around the offending line, then all the other information will still be displayed.</p><p>That is a cheap fix and workaround solution.</p><p>A better solution, of course, is to implement an improved handling of the problematic element, which is often also quite simple.</p><p>I haven discussed several such improvements in the past on the blog, e.g.,\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/fixing-rvtmgddbg-for-mep-connectors.html\">\nfixing RevitLookup for MEP connectors</a>.</p><p>You have the source. The power is in your hands.</p><p>With the new repository in place, any useful enhancements can easily be integrated into the main stream for all to share and enjoy.</p><p>Good luck and have fun debugging and enhancing RevitLookup together!</p>"
  }
]