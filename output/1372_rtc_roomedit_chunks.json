[
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<!---\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\n- blog about rtc and desktop-cloud\n\n#dotnet #csharp #geometry\n#fsharp #python\n#grevit\n#responsivedesign #typepad\n#ah8 #augi #dotnet\n#stingray #adsklabs #rendering\n#3dweb #3dviewapi #html5 #threejs #webgl #3d #apis #mobile #vr #ecommerce\n#Markdown #Fusion360 #Fusion360Hackathon #revitapi #3dwebcoder\n#javascript\n#RestSharp #restapi\n#mongoosejs #mongodb #nodejs\n#au2015 #rtceur\n#adskdevnetwrk\n\nRevit API, Jeremy Tammik, akn_include\n\nConnecting Desktop and Cloud, Room Editor Update #revitapi #bim #aec #3dwebcoder #au2015 #rtceur #cloud #svg\n\nLast week, I listed my three Revit Technology Conference classes on connecting the desktop and the cloud, The Building Coder chatroom, and published the full detailed handout of the lab on getting started with Revit macros. This week, I published the notes from the Revit API panel Q&A. So what do we have left to talk about? Oh yes, connecting the desktop and the cloud. That is actually the most interesting of the three, and also the topic of my Autodesk University session\n&ndash; Connecting the desktop and the cloud\n&ndash; Message and Takeaway\n&ndash; The 2D cloud-based round-trip room editor\n&ndash; FireRating in the cloud\n&ndash; The CompHound component tracker\n&ndash; Dotty animated 3D assembly instructions\n&ndash; Conclusion...\n\n-->"
  },
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "Connecting Desktop and Cloud, Room Editor Update",
    "local_header_href": "#connecting-desktop-and-cloud-room-editor-update",
    "chunk_text": "### Connecting Desktop and Cloud, Room Editor Update\n\nLast week, I listed\nmy [three Revit Technology Conference classes](http://thebuildingcoder.typepad.com/blog/2015/10/rtc-classes-and-getting-started-with-revit-macros.html) on\nconnecting the desktop and the cloud, The Building Coder chatroom,\nand published the full detailed handout of the lab\non [getting started with Revit macros](http://thebuildingcoder.typepad.com/blog/2015/10/rtc-classes-and-getting-started-with-revit-macros.html#7).\n\nThis week, I published the notes from\nthe [Revit API panel Q&amp;A](http://thebuildingcoder.typepad.com/blog/2015/11/rtc-budapest-and-the-revit-api-panel.html) held during The Building Coder chatroom.\n\nSo what do we have left to talk about?\n\nOh yes, connecting the desktop and the cloud.\n\nThat is actually the most interesting of the three, and one I spent a lot of time and effort preparing for in the past month or two, working on\nthe [CompHound component tracker project](https://github.com/CompHound/CompHound.github.io).\n\nI will also be presenting this at Autodesk University in Las Vegas in a few weeks time, in\nsession [SD11048 *Connect desktop and cloud: analyse, visualise and report universal component usage*](http://thebuildingcoder.typepad.com/blog/2015/05/connecting-desktop-cloud-lines-and-grid-segments.html#2), cf.\n[AU class catalog](https://events.au.autodesk.com/connect/dashboard.ww) &gt;\n[SD11048](https://events.au.autodesk.com/connect/dashboard.ww#loadSearch-searchPhrase=SD11048&searchType=session&tc=0).\n\nI still want to flesh it out a bit further, and putting down what I have so far here and now will definitely help.\n\nBy the way, my AU handout is due next Friday... four more working days to go... and a weekend...\n\nSo here goes:\n\n- [Connecting the desktop and the cloud](#2)\n- [Message and Takeaway](#2.1)\n- [The 2D cloud-based round-trip room editor](#3)\n- [FireRating in the cloud](#4)\n- [The CompHound component tracker](#5)\n- [Dotty animated 3D assembly instructions](#6)\n- [Conclusion](#7)"
  },
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "<a name=\"2\"></a>Connecting the Desktop and the Cloud",
    "local_header_href": "#a-name2aconnecting-the-desktop-and-the-cloud",
    "chunk_text": "#### <a name=\"2\"></a>Connecting the Desktop and the Cloud\n\nHere is a summary of my session #44 at\nthe Revit Technology Conference [RTC Europe](http://www.rtcevents.com/rtc2015eu) in\nBudapest, *Connecting the Desktop and the Cloud &ndash; cloud-based universal component and asset usage analysis, visualisation and reporting*.\n\nI present four different examples:\n\n- [The 2D cloud-based round-trip room editor](#3)\n- [FireRating in the Cloud](#4)\n- [The CompHound component tracker](#5)\n- [Dotty animated 3D assembly instructions](#6)\n\nLet's look at each of these in turn."
  },
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "<a name=\"2.1\"></a>Message and Takeaway",
    "local_header_href": "#a-name21amessage-and-takeaway",
    "chunk_text": "#### <a name=\"2.1\"></a>Message and Takeaway\n\nThe message and takeaway that I want to bring across is this:\n\nIt is easy to hook up a Revit or any other desktop application with the cloud.\n\nThis enables you to provide read and write access to any properties and data you like.\n\nThe possibilities are powerful and infinite.\n\nIf you have looked at any web technologies, you will have noticed an abundance of open source technology stacks and libraries providing all functionality you can ever possibly use and more.\n\nIn this presentation, I demonstrate and discuss a very simple working example, FireRating in the Cloud, and my current work in progress, CompHound.\n\nYou can grab these samples to get started implementing your ideas really fast.\n\nAll my research is extensively documented, so it should help you circumvent al the numerous snags I hit and resolved.\n\nLet's dive in:"
  },
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "<a name=\"3\"></a>The 2D Cloud-Based Round-Trip Room Editor",
    "local_header_href": "#a-name3athe-2d-cloud-based-round-trip-room-editor",
    "chunk_text": "#### <a name=\"3\"></a>The 2D Cloud-Based Round-Trip Room Editor\n\nThis project was my first serious exploration of a desktop-cloud connection.\n\nI worked on it back in 2013, presented it at two Autodesk Tech Summit conferences and at Autodesk University 2013, in the session\n[DV1736 &ndash; *Cloud-Based, Real-Time, Round-Trip, 2D Revit Model Editing on Any Mobile Device*](http://au.autodesk.com/au-online/classes-on-demand/class-catalog/2013/building-design-suite/dv1736#chapter=0).\n\nIt consists of two components:\n\n- The [RoomEditorApp Revit add-in](https://github.com/jeremytammik/RoomEditorApp)\n- The [roomedit CouchDB web-based NoSQL database](https://github.com/jeremytammik/roomedit)\n\nIt demonstrates bi-directional data exchange between the two, i.e., between a Revit BIM and a globally accessible cloud-based web database, usable on any device, in any browser.\n\nThe display and editing includes 2D dragging, implemented using\nSVG, [scalable vector graphics](https://en.wikipedia.org/wiki/Scalable_Vector_Graphics).\n\nThe Revit add-in captures a simplified plan view of rooms and the furniture contained in them and exports that to the web database.\n\n<center>\n<img src=\"img/roomedit_2014_cafeteria.png\" alt=\"Room editor in browser\">\n</center>\n\nIt captures the containment and relationship hierarchy including Project &rarr; Level &rarr; Room &rarr; Furniture = family instance &rarr; family symbol.\n\nFor the latter three, it also captures the 2D geometry:\n\n- Room: 2D boundary loops.\n- Furniture instance: 2D transform, i.e. location and rotation.\n- Furniture family symbol: XY-projected 2D boundary loops.\n\nThe geometry is encoded in SVG strings, enabling easy visualisation in any browser on any device.\n\nThis data is stored in the database and displayed in the browser, supporting the following steps:\n\n- Navigate through the Project &rarr; Level &rarr; Room containment hierarchy\n- Display a 2D view of a selected room with the furniture it contains\n- Click (or touch) and drag to modify the furniture rotation and location within the room\n- Edit any of the writeable furniture Revit parameters\n\nThe main point is still to come, though:\n\n<center>\n<img src=\"img/roomedit_ext_app_icons.png\" alt=\"Room editor add-in commands\" width=\"367\">\n</center>\n\nBesides simply exporting the BIM data in the `Upload Rooms` and `Upload All Rooms` external commands, the Revit add-in implements two more:\n\n- `Update Furniture`: reimport modified data from the database &ndash; this manual operation reads the browser-edited furniture rotation and location and updates the BIM accordingly.\n- `Subscribe`: set up an external event to automatically poll for web database changes and immediately update the BIM in real time with no manual intervention at all.\n\nLook at the [AU recording](http://au.autodesk.com/au-online/classes-on-demand/class-catalog/2013/building-design-suite/dv1736) pointed\nto above to see this live, and check out the implementation and complete source code in the\ntwo [RoomEditorApp](https://github.com/jeremytammik/RoomEditorApp)\nand [roomedit](https://github.com/jeremytammik/roomedit) GitHub repos.\n\nFor more information and the entire development process, please refer to\nthe [numerous other discussions](https://duckduckgo.com/?q=Jeremy+Tammik+1736+Cloud-based+Real-time+Round-trip+2D+Revit+Model+Editing+on+any+Mobile+Device).\n\nBy the way, I implemented a couple more enhancements to the Revit add-in in the last couple of days:\n\n- Migration to Revit 2016.\n- Cleanup of the external event handling unsubscription process.\n\nThat brings me up to the current [release 2016.0.0.5](https://github.com/jeremytammik/RoomEditorApp/releases/tag/2016.0.0.5)."
  },
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "<a name=\"4\"></a>FireRating in the Cloud",
    "local_header_href": "#a-name4afirerating-in-the-cloud",
    "chunk_text": "#### <a name=\"4\"></a>FireRating in the Cloud\n\n[FireRating in the Cloud](https://github.com/jeremytammik/FireRatingCloud) is\na multi-project re-implementation of the FireRating SDK sample, again with a Revit add-in interacting with a cloud-based database.\n\nIn this case, the [fireratingdb](https://github.com/jeremytammik/firerating) database is implemented as\na [node.js](https://nodejs.org) web server driving\na [MongoDB](https://www.mongodb.org)\nscalable [NoSQL](https://en.wikipedia.org/wiki/NoSQL) web database.\n\nAgain, bi-directional data exchange between the Revit BIM and a globally accessible cloud-based web database is enabled, again usable on any device, in any browser.\n\nI discussed the research and development for this in ample depth\non [The 3D Web Coder](http://the3dwebcoder.typepad.com) blog.\nHere is\nan [overview of the related articles](https://github.com/jeremytammik/FireRatingCloud).\n\nI host the node.js web server\non [Heroku](https://heroku.com) for\nfree, and the MongoDB web database\non [mongolab](https://mongolab.com).\n\nDeploying a GitHub project to Heroku can be totally automated.\n\nUsing Mongolab to host the database is more comfortable than keeping it locally.\n\nI can switch back and forth each of these between remote or local deployment by simply setting two Boolean variables.\n\nShowing these components with Heroku, Mongolab, and Revit all working together is utterly cool.\n\nTo recapitulate:\n\nThe FireRating in the Cloud project is a slight enhancement and modernisation of the ancient and well-known FireRating Revit SDK sample.\n\nThe latter implements three external commands:\n\n- Create a shared 'Fire Rating' parameter and bind it to the Doors category.\n- Export fire rating values for all doors in a project to an external spreadsheet.\n- Import the modified values back into the project.\n\nFireRating in the Cloud adds one single little enhancement:\n\n- Store data for multiple projects to one single cloud-hosted database.\n\nImplementation:\n\n- FireRating in the Cloud consists of two components, a web server and a Revit add-in.\n    - The web server is a very simple node.js REST server driving a MongoDB database.\n    - The Revit add-in implements the same three external commands as the original SDK sample and uses REST to read and write the fire rating values to the cloud-hosted database.\n\nDemo: we looked at this live, both locally on the desktop and live on the web, with the web server hosted by Heroku and the database by mongolab, all completely free of cost for this small sample.\n\nWe can also dive into the source code at this point.\n\nThe repercussions are huge:\n\n- All users can share data globally for all projects with zero installation on any device.\n- You can restrict access as you see fit.\n\nYou can imagine the rest for yourself.\n\nThe developers loved it, both in its efficacy and simplicity.\n\nEven some Autodesk developers, including a senior Revit software architect, said they learned a lot of new stuff about possibilities using the cloud and scalable NoSQL databases to take back to the Revit development team  :-)"
  },
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "<a name=\"5\"></a>The CompHound Component Tracker",
    "local_header_href": "#a-name5athe-comphound-component-tracker",
    "chunk_text": "#### <a name=\"5\"></a>The CompHound Component Tracker\n\nI have been working heavily on\nthe [CompHound component tracker](https://github.com/CompHound/CompHound.github.io) in\nthe past couple of weeks.\n\nCompHound is similar to and based on the FireRating in the Cloud project.\n\nAgain, it consists of a web server driving a mongo database with a REST API invoked by a Revit add-in.\n\nIn addition, it also sports a user interface for online component usage analysis, reporting, bills of materials, viewing and model navigation.\n\nThe Revit add-in is simpler that FireRatingCloud one, since it only implements one-way data writing from the desktop to the cloud.\n\nThe web server is significantly more complex, though.\n\nFor more details, please refer to\nthe [overview of the existing extensive documentation](https://github.com/CompHound/CompHound.github.io).\n\nThe one and only thing that I will mention is that it also includes a viewer enabling 3D exploration of the component occurrences in situ, using\nthe [Autodesk View and Data API](http://developer.autodesk.com).\n\nHere is another compelling example of using that:"
  },
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "<a name=\"6\"></a>Dotty Animated 3D Assembly Instructions",
    "local_header_href": "#a-name6adotty-animated-3d-assembly-instructions",
    "chunk_text": "#### <a name=\"6\"></a>Dotty Animated 3D Assembly Instructions\n\nThis one is really self-explanatory.\n\nCheck out this super cool sample showing how\nthe [View and Data API](https://developer.autodesk.com) viewer\ncan be used to\ndisplay [animated 3D assembly instructions](http://trial.dotdotty.com/share?shareId=431c-bac8-eedb-e43d-fc79&iframe=true) in\nthe browser:\n\n<center>\n<a href=\"http://trial.dotdotty.com/share?shareId=431c-bac8-eedb-e43d-fc79&iframe=true\">\n<img src=\"img/dotty_assembly_instructions.png\" alt=\"Dotty animated 3D assembly instructions\" width=\"400\"/>\n</a>\n</center>\n\nCan you imagine assembly instructions based on simple 2D images, drawing, words, trying to compete with this?\n\nThink of the end user aspect, reading and understanding static information.\n\nAlso consider the preparation side, all the careful analysis, editing and translation that needs to go into such a textual description.\n\nYou have probably seen the industry and culture moving away from text to printed 2D images with minimal wording... imagine where it will go from here.\n\nHow long do you think people will still be using static assembly instructions printed on paper?\n\nMe, I even keep my personal [collection of recipes](http://jeremytammik.github.io/recipe) in a GitHub repository so I can read them comfortably on an iPad in the kitchen while cooking..."
  },
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "<a name=\"7\"></a>Conclusion",
    "local_header_href": "#a-name7aconclusion",
    "chunk_text": "#### <a name=\"7\"></a>Conclusion\n\nThe participants were quite excited about this session, and I received a lot of positive feedback and interest on it during the following days at the RTC.\n\nI guess the main takeaway is:\n\n- Wow, how simple is this!\n- Wow, how scalable is this! I can put specific data for all my projects into one single container for global search and analysis.\n- Wow, how powerful is this stuff working with interactive 3D models in the browser!\n- Wow, how useful is it to be able to share certain data globally in the browser, with anybody I choose, with zero installation, on any mobile device!\n\nI am sure you can find some use for these kinds of opportunities as well.\n\nIf you don't, please watch out for those that do...\n\nFor the sake of completeness, here is\nmy [slide deck](zip/s1_3_pres_cloud_based_analyse_view_jtammik.pdf) for this session.\n\nWhat a nice way to finish my week!\n\nHappy weekend to all!\n\n<!-----"
  },
  {
    "original_filename": "1372_rtc_roomedit",
    "header_text": "<a name=\"#6\"></a>Lukas Baerfuss Swiss Critical Text and Reactions",
    "local_header_href": "#a-name6alukas-baerfuss-swiss-critical-text-and-reactions",
    "chunk_text": "#### <a name=\"#6\"></a>Lukas Baerfuss Swiss Critical Text and Reactions\n\nSwitzerland has recently been discussing [Lukas Bärfuss' critical text](/j/tmp/)\n\nhttp://www.faz.net/aktuell/feuilleton/debatten/streit-um-die-schweiz-dieser-versuchsballon-reicht-nicht-er-stinkt-zum-himmel-13866863.html\n\nhttp://www.faz.net/aktuell/feuilleton/debatten/streit-um-die-schweiz-dieser-versuchsballon-reicht-nicht-er-stinkt-zum-himmel-13866863-p2.html\n\nhttp://www.faz.net/aktuell/feuilleton/debatten/streit-um-die-schweiz-dieser-versuchsballon-reicht-nicht-er-stinkt-zum-himmel-13866863.html?printPagedArticle=true#pageIndex_2\n\n<center>\n<img src=\"\" alt=\"\">\n</center>\n\nhttps://internal.autodesk360beta.com/portal/groups/2013071140751/pages/PG5a730QTbf0022d075180c24de184e2f60d?cacheToken=tWlK57sCgwrwQzb3CXjqp6g7Y50CHYWkF3z1hGTFrbgyLdgN0T1qJzB8kb745f24be7f9150d1817116\n\nhttps://internal.autodesk360beta.com/portal/groups/2013071140751/pages/PG5a730QTbf0022d075180c24de184e2f60d\n\n--->"
  }
]