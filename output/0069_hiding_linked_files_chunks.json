[
  {
    "original_filename": "0069_hiding_linked_files",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<style>\n.blue { color: blue; }\n.teal { color: teal; }\n.maroon { color: maroon; }\n.green { color: green; }\n</style>"
  },
  {
    "original_filename": "0069_hiding_linked_files",
    "header_text": "Hiding Linked Files",
    "local_header_href": "#hiding-linked-files",
    "chunk_text": "<h3>Hiding Linked Files</h3><p>\n<a href=\"http://roddotnet.blogspot.com\">Rod Howarth</a>\n\nraised a question in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/12/linked-files.html\">\ndiscussion on linked files</a>:\n\n</p><p><strong>Question:</strong> I'm trying to make a command to turn off the visibility of linked Revit and DWG models in the current view.</p><p>The intent is to turn off the visibility for all imported categories in the drawing, i.e. all imported CAD files. This would be like going to Visibility/Graphics &gt; Imported Categories &gt; Show imported categories in this view.</p><p>Is there an easy way to do this, or am I going to have to loop over each element, checking if its symbol's name ends in '.dwg' or '.rvt' or is there a certain thing I can look for, i.e. something that tells me it is an imported category, instead of just going by the name?</p><p>For DWG, I simply loop through the document settings categories and make each category whose name ends with \".dwg\" invisible in the current view.</p><p>However, this does not work for RVT, so I had a look with \n\n<a href=\"http://download.autodesk.com/media/adn/RvtMgdDbg2009_0429_2008.zip\">\nRvtMgdDbg</a>, \n\nand it says that my linked file on the plan is part of the OST_RvtLinks built-in category.</p><p>So I changed my code to do:</p><pre class=\"code\">\n<span class=\"teal\">Document</span> doc = app.ActiveDocument;\n<span class=\"teal\">Categories</span> categories = doc.Settings.Categories;\n \n<span class=\"green\">// get category for linked files</span>\n<span class=\"teal\">Category</span> linkedRevitCat\n  = categories.get_Item(\n    <span class=\"teal\">BuiltInCategory</span>.OST_RvtLinks );\n \n<span class=\"green\">// loop through all categories in document</span>\n<span class=\"blue\">foreach</span>( <span class=\"teal\">Category</span> c <span class=\"blue\">in</span> categories )\n{\n  <span class=\"green\">// if they end with dwg or rvt toggle</span>\n  <span class=\"green\">// their current visibility in current view</span>\n  <span class=\"blue\">if</span>( c.Name.ToLower().EndsWith( <span class=\"maroon\">\".dwg\"</span> )\n    || c.Name.ToLower().Contains( <span class=\"maroon\">\".rvt\"</span> )\n    || c.Name.ToLower().EndsWith( <span class=\"maroon\">\".dwf\"</span> )\n    || c.Name.ToLower().EndsWith( <span class=\"maroon\">\".dxf\"</span> )\n    || c.Name.ToLower().EndsWith( <span class=\"maroon\">\".dwfx\"</span> )\n    || ( linkedRevitCat != <span class=\"blue\">null</span>\n      &amp;&amp; c.Id.Equals( linkedRevitCat.Id ) ) )\n  {\n    <span class=\"green\">// toggle visibility </span>\n    doc.ActiveView.setVisibility( c,\n      !c.get_Visible( doc.ActiveView ) );\n  }\n}\n</pre><p>Unfortunately, linkedRevitCat always is null, and when I run the elements filter API sample, OST_RvtLinks doesn't come up as a category list?</p><p><strong>Answer:</strong>\nFirst of all, thank you Rod for raising this interesting question and for pointing out the positive information on how simple it is to hide the linked DWG files.</p><p>Joe Ye discovered the following built-in category behaviour:\nThere is no easy way to filter out those imported categories quickly.\nI found one hint that can make your add-in quicker, though:</p><ul>\n<li>For the built-in categories, the element id is always negative.</li>\n<li>For imported ones, which are created after the DWG is imported, the element id is positive.</li>\n</ul><p>Using this rule, it is no longer necessary to extract the substring and perform a string comparison for built-in categories.</p><p>Phil Xia responded to the question on the OST_RvtLinks built-in category:\nindeed we cannot retrieve the OST_RvtLinks built-in category from the document settings categories.\nWe can get it from the element category property, however:</p><pre class=\"code\">\n  <span class=\"teal\">BuiltInCategory</span> bic = <span class=\"teal\">BuiltInCategory</span>.OST_RvtLinks;\n  <span class=\"teal\">ElementIterator</span> i = doc.Elements;\n  <span class=\"teal\">Element</span> e;\n  <span class=\"blue\">while</span>( i.MoveNext() )\n  {\n    e = i.Current <span class=\"blue\">as</span> <span class=\"teal\">Element</span>;\n    <span class=\"blue\">if</span>( e.Name.Contains( <span class=\"maroon\">\".rvt\"</span> )\n      &amp;&amp; e.Category != <span class=\"blue\">null</span>\n      &amp;&amp; e.Category.Id.Value.Equals( (<span class=\"blue\">int</span>) bic ) )\n    {\n      <span class=\"blue\">break</span>;\n    }\n  }\n</pre><p>Unfortunately, since we cannot obtain the document category for the RVT link element, it is not possible to hide this category via the View.SetVisibility method like we do for the DWG link element.\nAlso, unlike the DWG link elements, all the RVT ones return the same category OST_RvtLinks, so we cannot control the visibility for them individually using this method, even if we were able to obtain the appropriate document category.</p><p>I hope these various hints are of some use and will be interested in hearing whether they help resolve your issue, Rod.</p>"
  }
]