[
  {
    "original_filename": "0419_transaction_migration",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0419_transaction_migration",
    "header_text": "Transaction Migration Errors",
    "local_header_href": "#transaction-migration-errors",
    "chunk_text": "<h3>Transaction Migration Errors</h3><p>Joo Lee just submitted a\n\n<!-- http://thebuildingcoder.typepad.com/blog/2009/06/host-reference.html#comment-6a00e553e168978833013485f4e7ab970c -->\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/06/host-reference.html?cid=6a00e553e168978833013485f433e1970c#comment-6a00e553e168978833013485f433e1970c\">\ncomment</a> pointing\n\nout an error or two in the flat migration of the CmdWallFooting command, which demonstrates an approach to retrieve the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/06/host-reference.html\">\nhost reference</a> using\n\na wall footing:\n\n<p><strong>Question:</strong> I tested your CmdWallFooting command in Revit Architecture 2011.\n\nBut it does not work.\n\nThe transaction is not started.\n\nHow can I get the transaction to work?\n\n<p><strong>Answer:</strong> Thank you very much for pointing this out!\n\n<p>This command was flat migrated from Revit 2010 and never tested.\n\nI tested it now as well and discovered two problems with it:\n\n<ol>\n<li>It did not have any active transaction open at all, since it was set to read-only transaction mode.\n<li>The Revit 2010 transaction was replaced by a Revit 2011 sub-transaction, which requires a call to Start before it can be used.\n</li></li></ol>\n<p>Fix 1: The read-only transaction mode causes the following error when trying to delete the wall: \"Attempt to modify the model outside of transaction.\"\n\n<p>It can be fixed by specifying the transaction attribute like this:\n\n<pre class=\"code\">\n  [<span class=\"teal\">Transaction</span>( <span class=\"teal\">TransactionMode</span>.Automatic )]\n</pre>\n<p>Alterntively, you can specify manual transaction mode and start your own main transaction.\nThat requires a little bit more coding and gives you full and explicit control in return.\n\n<p>Fix 2: The sub-transaction can be started by calling its Start method. Then the code to temporarily delete the wall looks like this:\n\n<pre class=\"code\">\n  <span class=\"teal\">SubTransaction</span> t = <span class=\"blue\">new</span> <span class=\"teal\">SubTransaction</span>( doc );\n  <span class=\"teal\">ICollection</span>&lt;<span class=\"teal\">ElementId</span>&gt; delIds = <span class=\"blue\">null</span>;\n  <span class=\"blue\">try</span>\n  {\n    t.Start();\n    delIds = doc.Delete( wall );\n    t.RollBack();\n  }\n  <span class=\"blue\">catch</span> ( <span class=\"teal\">Exception</span> ex )\n  {\n    message = <span class=\"maroon\">\"Deletion failed: \"</span> + ex.Message;\n    t.RollBack();\n    <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Failed;\n  }\n</pre>\n<p>Here is\n\n<!-- C:\\a\\doc\\revit\\blog\\zip\\bc_11_74_3.zip -->\n<a href=\"zip/bc_11_74_3.zip\">\nversion 2011.0.74.3</a>\n\nof The Building Coder samples including the complete source code and Visual Studio solution with the updated command.\n\n<p>Thank you very much again, Joo Lee, for picking this up and pointing it out!\n</p></p></p></p></p></p></p></p></p></p>"
  }
]