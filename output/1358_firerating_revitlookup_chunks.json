[
  {
    "original_filename": "1358_firerating_revitlookup",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<!---\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\n#revitapi #3dwebcoder #bim #aec #adskdevnetwrk #dotnet #csharp #geometry\n#adsk #fsharp #dynamobim\n#restapi #python\n#grevit\n#responsivedesign #typepad\n#ah8 #augi #au2015 #dotnet #dynamobim\n#stingray #adsklabs #cloud #rendering\n#3dweb #3dviewapi #html5 #threejs #webgl #3d #apis #mobile #vr #ecommerce\n#Markdown #Fusion360 #Fusion360Hackathon #revitapi #adsk #3dwebcoder #aec #bim\n#Mongoose #javascript\n#au2015 #rtceur\n\nRevit API, Jeremy Tammik, akn_include\n\nFireRating in the Cloud and RevitLookup Update #RestSharp #restapi #revitapi #3dwebcoder #mongodb #nodejs #bim\n\nI am currently working intensely at the Autodesk Cloud Accelerator in Prague.\nI spent a lot of my time so far enhancing the FireRating in the Cloud sample.\n&ndash; FireRating in the Cloud enhancements\n&ndash; RevitLookup update to handle null analytical model\n&ndash; Retrieving all model elements...\n\n-->"
  },
  {
    "original_filename": "1358_firerating_revitlookup",
    "header_text": "FireRating in the Cloud and RevitLookup Update",
    "local_header_href": "#firerating-in-the-cloud-and-revitlookup-update",
    "chunk_text": "### FireRating in the Cloud and RevitLookup Update\n\nI am currently working intensely at the\n[Autodesk Cloud Accelerator in Prague](http://autodeskcloudaccelerator.com/prague).\n\nIt is exciting and we are making good progress.\n\nI spent a lot of my time so far enhancing the\n[FireRating in the Cloud](https://github.com/jeremytammik/FireRatingCloud) sample\nand documenting these improvements.\n\nHere are my topics for today:\n\n- [FireRating in the Cloud enhancements](#2)\n- [RevitLookup update to handle null analytical model](#3)\n- [Retrieving all model elements](#4)\n\n\nI glad to report that I found\n[Mlsná Kavka](http://www.mlsnakavka.cz) (*Picky Jackdaw* in English),\na nice and friendly non-smoking vegetarian restaurant, just around the corner from the Autodesk office:\n\n<center>\n<img src=\"file:////j/photo/jeremy/2015/2015-09-15_prag/958.jpg\" alt=\"View from Mlsná Kavka\" width=\"400\"/>\n</center>\n\nYou can also check out Kean Walmsley's report\n[halfway through the Cloud Accelerator Extension](http://through-the-interface.typepad.com/through_the_interface/2015/09/at-the-cloud-accelerator-in-prague.html)."
  },
  {
    "original_filename": "1358_firerating_revitlookup",
    "header_text": "<a name=\"2\"></a>FireRating in the Cloud Enhancements",
    "local_header_href": "#a-name2afirerating-in-the-cloud-enhancements",
    "chunk_text": "#### <a name=\"2\"></a>FireRating in the Cloud Enhancements\n\nMy real goal is to switch back and continue work on the new\n[CompHound component tracker](http://the3dwebcoder.typepad.com/blog/2015/09/comphound-restsharp-mongoose-put-and-post.html#2) as\nfast as possible, in preparation for the upcoming conference presentations at\n[RTC Europe](http://www.rtcevents.com/rtc2015eu) in Budapest end of October and\n[Autodesk University](http://au.autodesk.com) in Las Vegas in December.\n\nHowever, since the\n[FireRating in the Cloud](https://github.com/jeremytammik/FireRatingCloud) sample\nis more generic and fundamental, I want to clean it up to utter perfection first, before expanding into new areas.\n\n[FireRating in the Cloud](https://github.com/jeremytammik/FireRatingCloud) covers the connection of Revit database and element data to a cloud-hosted external database.\n\nThe [CompHound component tracker](https://github.com/CompHound) will add a user interface, reports, and a 3D model viewer and navigator to that.\n\nHere is a list of the recent firerating enhancements:\n\n- [Using RestSharp for Rest API GET](http://the3dwebcoder.typepad.com/blog/2015/09/using-restsharp-for-rest-api-get.html)\n- [Mongodb Upsert](http://the3dwebcoder.typepad.com/blog/2015/09/mongodb-upsert.html)\n- C# DoorData and Node.js DoorService Classes\n    - [DoorData Container Class](http://the3dwebcoder.typepad.com/blog/2015/09/c-doordata-and-nodejs-doorservice-classes.html#3)\n    - [REST GET returns a list of deserialised DoorData instances](http://the3dwebcoder.typepad.com/blog/2015/09/c-doordata-and-nodejs-doorservice-classes.html#4)\n    - [Passing a DoorData instance to the Put method](http://the3dwebcoder.typepad.com/blog/2015/09/c-doordata-and-nodejs-doorservice-classes.html#5)\n    - [Implementing a REST API router DoorService class](http://the3dwebcoder.typepad.com/blog/2015/09/c-doordata-and-nodejs-doorservice-classes.html#6)"
  },
  {
    "original_filename": "1358_firerating_revitlookup",
    "header_text": "<a name=\"3\"></a>RevitLookup Update to Handle Null Analytical Model",
    "local_header_href": "#a-name3arevitlookup-update-to-handle-null-analytical-model",
    "chunk_text": "#### <a name=\"3\"></a>RevitLookup Update to Handle Null Analytical Model\n\nIn between other things here a user reported a problem with RevitLookup, saying that, \"I loaded and ran RevitLookup 2016 'Snoop Current Selection...' today and encountered a rather spectacular error crashing Revit without an error message when a Generic Floor was preselected.\"\n\nThe error can be solved by commenting out the line accessing the analytical model in the Stream method handling a floor element:\n\n<pre class=\"code\">\n  data.Add( new Snoop.Data.String( \"Structural usage\",\n    floor.GetAnalyticalModel().GetAnalyzeAs().ToString() ) );\n</pre>\n\nIn Revit Architecture or MEP, the GetAnalyticalModel will return null, causing the call to ToString to fail.\n\nThis was actually fixed &ndash; more elegantly, I'm glad to say &ndash; in\n[RevitLookup release 2016.0.0.10](https://github.com/jeremytammik/RevitLookup/releases/tag/2016.0.0.10),\nso please do make sure to download and install the latest version if you encounter this situation.\n\nI actually already [mentioned this](http://thebuildingcoder.typepad.com/blog/2015/09/family-category-element-ids-transaction-undo-and-updates.html#5) two weeks ago..."
  },
  {
    "original_filename": "1358_firerating_revitlookup",
    "header_text": "<a name=\"4\"></a>Retrieving All Model Elements",
    "local_header_href": "#a-name4aretrieving-all-model-elements",
    "chunk_text": "#### <a name=\"4\"></a>Retrieving All Model Elements\n\nOnce again, let's revisit the topic of\n[selecting model elements](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.9), raised this time by Dale in the Revit API discussion thread on\n[traversing all model elements](http://forums.autodesk.com/t5/revit-api/traverse-all-model-elements-in-a-project-top-down-approach/m-p/5815247):\n\n**Question:**\nTo be clear, \"all model elements\" could be defined as all objects that exist in the real world: chairs, doors, walls, etc. &ndash; component and system families. Graphic elements such as levels, sheets, views, dimensions, annotation, profiles, etc. would not be included. I have been through all The Building Coder samples (and others) many times, and whilst there are lots of examples to filter for a specific category or feature, I have been unable to come up with a solution that provides all model elements as defined above. Your\n[example from 2009](http://thebuildingcoder.typepad.com/blog/2009/05/selecting-model-elements.html)\n([2](http://thebuildingcoder.typepad.com/blog/2009/11/select-model-elements-2.html)) may be the best,\nbut given that it is several years old, I have been looking for more contemporary code. Apologies if I am overlooking something obvious; I thought this would be a five-minute job but I have been unable to come up with a simple, solid solution.\n\n**Answer:**\nDoes this fit the bill?\n\n<pre class=\"code\">\n&nbsp; <span class=\"teal\">IEnumerable</span>&lt;<span class=\"teal\">Element</span>&gt; GetAllModelElements(\n&nbsp; &nbsp; <span class=\"teal\">Document</span> doc )\n&nbsp; {\n&nbsp; &nbsp; <span class=\"teal\">Options</span> opt = <span class=\"blue\">new</span> <span class=\"teal\">Options</span>();\n&nbsp;\n&nbsp; &nbsp; <span class=\"blue\">return</span> <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc )\n&nbsp; &nbsp; &nbsp; .WhereElementIsNotElementType()\n&nbsp; &nbsp; &nbsp; .WhereElementIsViewIndependent()\n&nbsp; &nbsp; &nbsp; .Where&lt;<span class=\"teal\">Element</span>&gt;( e\n&nbsp; &nbsp; &nbsp; &nbsp; =&gt; <span class=\"blue\">null</span> != e.Category\n&nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; <span class=\"blue\">null</span> != e.get_Geometry( opt ) );\n&nbsp; }\n</pre>\n\nI added and published this in\n[The Building Coder samples release 2016.0.120.14](https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2016.0.120.14).\n\nPlease try it out, and let's ensure that we really get something up and running that suits your needs.\n\n**Response:**\nIf I ever get to AU again, I owe you a beer! Two maybe. Works perfectly. Thanks again, I hope this is helpful for others as I really struggled to resolve it. Dale"
  }
]