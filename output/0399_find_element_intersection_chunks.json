[
  {
    "original_filename": "0399_find_element_intersection",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0399_find_element_intersection",
    "header_text": "Intersection Between Elements",
    "local_header_href": "#intersection-between-elements",
    "chunk_text": "<h3>Intersection Between Elements</h3><p>One question that regularly comes up is how to determine whether certain building elements intersect.\nThere are basically two approaches to this, either querying the elements for their pure geometry and making use of pure geometrical intersection methods, or using the higher-level FindReferencesByDirection method, which works on the building elements themselves.\nHere is a typical version of this question:\n\n<p><strong>Question:</strong> I need to find out if any two elements in a project are interfering with each other. \nSearching the Revit API help, I found that the Intersect methods on the Autodesk.Revit.Geometry.GeometryObject can be used to calculate intersections. \n\n<p>So it seems that I need to find out the type of geometry for the given building element and then call the relevant intersection method. \nIs this correct?\nIs there any sample code available demonstrating this? \nIs there any API method which accepts two elements and finds out whether they are interfering? \n\n<p><strong>Answer:</strong> There is no direct API method that calculates the intersection between two Revit building elements. \nOne possibility is to query them for their geometry elements, and then use the geometry Intersect methods to determine intersection points.\n \n<p>Here is some sample code which shows how to find the intersection points of two geometry lines, excerpted from the Revit SDK sample CreateTruss:\n\n<pre class=\"code\">\n  <span class=\"blue\">private</span> <span class=\"teal\">XYZ</span> GetIntersection( \n    <span class=\"teal\">Line</span> line1, \n    <span class=\"teal\">Line</span> line2 )\n  {\n    <span class=\"teal\">IntersectionResultArray</span> results;\n \n    <span class=\"teal\">SetComparisonResult</span> result \n      = line1.Intersect( line2, <span class=\"blue\">out</span> results );\n \n    <span class=\"blue\">if</span>( result != <span class=\"teal\">SetComparisonResult</span>.Overlap )\n      <span class=\"blue\">throw</span> <span class=\"blue\">new</span> <span class=\"teal\">InvalidOperationException</span>( \n        <span class=\"maroon\">\"Input lines did not intersect.\"</span> );\n \n    <span class=\"blue\">if</span>( results == <span class=\"blue\">null</span> || results.Size != 1 )\n      <span class=\"blue\">throw</span> <span class=\"blue\">new</span> <span class=\"teal\">InvalidOperationException</span>( \n        <span class=\"maroon\">\"Could not extract line intersection point.\"</span> );\n \n    <span class=\"teal\">IntersectionResult</span> iResult \n      = results.get_Item( 0 );\n \n    <span class=\"blue\">return</span> iResult.XYZPoint;\n  }\n</pre>\n<p>A more advanced and complex use of the pure geometrical intersection methods is provided by the AreSolidsCut method defined by the Revit SDK \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/09/roomsroofs-sdk.html\">\nRoomsRoofs sample</a>.\n\n<p>While there is no direct method to determine whether two building elements intersect, one could implement such a method based on the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/01/findreferencesbydirection.html\">\nFindReferencesByDirection</a> method,\n\nas we suggested in the discussion on the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/10/analytical-support-tolerance.html\">\nanalytical support tolerance</a>.\n\nSeveral SDK samples demonstrate its use.\n\n</p></p></p></p></p></p></p>"
  }
]