[
  {
    "original_filename": "0793_update_2013",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0793_update_2013",
    "header_text": "Update API Assembly References and Wizards",
    "local_header_href": "#update-api-assembly-references-and-wizards",
    "chunk_text": "<h3>Update API Assembly References and Wizards</h3><p>I finally completed my disk clean-up and managed to install the Autodesk Building Design Suite Ultimate 2013. \nPhew.\n\n\n<a name=\"2\"></a>\n<h4>Update API Assembly References</h4>\n<p>That requires me to update the Revit API references in the projects I am working on accordingly.\n\n<p>In order to easily compile all the SDK samples, I always create copies of the Revit API assemblies in the default installation locations for Revit Architecture, MEP and Structure.\n\n<p>Here is the batch file cprvtapi.bat that I used to achieve this after installing the onebox version of Revit 2013:\n\n<pre>\n@echo off\nset a=C:\\Program Files\\Autodesk\nset b=Revit 2013\\Program\n\nset c=Revit Architecture 2013\\Program\n\ncopy \"%a%\\%b%\\RevitAPI.dll\" \"%a%\\%c%\"\ncopy \"%a%\\%b%\\RevitAPIUI.dll\" \"%a%\\%c%\"\ncopy \"%a%\\%b%\\RevitAddInUtility.dll\" \"%a%\\%c%\"\n\nset c=Revit MEP 2013\\Program\n\ncopy \"%a%\\%b%\\RevitAPI.dll\" \"%a%\\%c%\"\ncopy \"%a%\\%b%\\RevitAPIUI.dll\" \"%a%\\%c%\"\n\nset c=Revit Structure 2013\\Program\n\ncopy \"%a%\\%b%\\RevitAPI.dll\" \"%a%\\%c%\"\ncopy \"%a%\\%b%\\RevitAPIUI.dll\" \"%a%\\%c%\"\n\nset a=\nset b=\nset c=\n</pre>\n<!--\n<p>I also need to update my Visual Studio projects that are referencing the Quasar preview release Revit API assemblies, and specifying the corresponding executable as their debug target.\nI implemented a little utility named jhint.exe to handle the .NET assembly references back in 2007, and updated it now to handle the debug target as well.\n-->\n<a name=\"3\"></a>\n<h4>Autodesk University Proposals Confirmed and Requested</h4>\n<p>I was notified yesterday that my AU proposals were accepted, so now I know where I will be spending my next birthday again.\n\n<p>I will be presenting two lectures and participating in one panel with members of the Revit API development team and ADN DevTech AEC workgroup:\n\n<ul>\n<li>CP4107 Let's face it: New Autodesk Revit 2013 UI API Functionality\n<li>CP4108 Revit MEP Programming: All Systems Go \n<li>CP4109 Revit API Round Table: Meet the Champions \n</li></li></li></ul>\n<p>One advantage of these two lectures is that the AEC DevCamp class material can be reused for preparing them:\n\n<ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#2\">\n1-4 Revit 2013 UI API enhancements</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#5\">\n2-7 Revit MEP API</a>\n</li></li></ul>\n<p>Another advantage is that they have consecutive numbers, making them easier to remember for me  :-)\n\n<p>Whereas the live AU proposals have been submitted and processed by now, the\n\n<a href=\"http://auspeaker.wordpress.com/2012/06/28/calling-all-au-virtual-proposals\">\nAutodesk University Virtual call for proposals</a> just\n\nopened and we are eagerly awaiting your submissions.\n\n\n<a name=\"4\"></a>\n<h4>Updated Revit Add-in Wizards for C# and VB</h4>\n<p>After finally installing the official release of Revit, I updated my Revit add-in wizard and also re-implemented the VB one.\n\n<p>Basically, all that needed doing was to replace all occurrences of \"Revit Quasar RP\" by \"Revit 2013\" in the *.csproj and *.vbproj project files.\nThey occur in the StartProgram and HintPath tags.\n\n<p>The boiler-place code now creates a 'using' statement around the dummy transaction, and I changed the default version strings in the assembly properties from \"1.0.0.0\" to \"1.0.*\" to take advantage of the automatically generated build numbers.\n\n<p>For the full description of the wizards, please refer to these previous posts:\n\n<ul>\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/07/devtv-addin-templates.html\">\nOriginal introduction, benefits, and usage example</a> for C# and VB.\n\n<li>Personalised \n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/10/revit-2011-devtv.html#2\">\nminimal C# version</a> for Revit 2011.\n\n<li>A short additional \n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/12/snow-and-woe-with-manifest-files.html\">\nusage note</a>.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/01/automate-designoption-and-64-bit-add-in-templates.html#2\">\n64 bit versions</a> for C# and VB.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/visual-studio-add-in-wizards-for-revit-2012.html\">\nRevit 2012</a> C# and VB version. \n\n<li>Updated C# and VB versions placing\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/product-and-add-in-wizard-updates.html#3\">\nassembly DLL alongside add-in manifest</a> and\n\nincluding other changes.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/add-in-wizard-for-revit-2013.html\">Revit 2013</a> wizard for C# only.\n\n</li></li></li></li></li></li></li></ul>\n<p>To install, simply copy the appropriate zip file to the Visual Studio C# or VB project template folder in your local file system:\n\n<ul>\n<li><a href=\"zip/Revit2013AddinWizardCs.zip\">Revit2013AddinWizardCs.zip</a> – copy to \n<br/>[My Documents]\\Visual Studio 2010\\Templates\\ProjectTemplates\\Visual C#\n\n<li><a href=\"zip/Revit2013AddinWizardVb.zip\">Revit2013AddinWizardVb.zip</a> – copy to \n<br/>[My Documents]\\Visual Studio 2010\\Templates\\ProjectTemplates\\Visual Basic\n</li></li></ul>\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0793_update_2013",
    "header_text": "Update API Assembly References",
    "local_header_href": "#update-api-assembly-references",
    "chunk_text": "<h4>Update API Assembly References</h4><p>That requires me to update the Revit API references in the projects I am working on accordingly.\n\n<p>In order to easily compile all the SDK samples, I always create copies of the Revit API assemblies in the default installation locations for Revit Architecture, MEP and Structure.\n\n<p>Here is the batch file cprvtapi.bat that I used to achieve this after installing the onebox version of Revit 2013:\n\n<pre>\n@echo off\nset a=C:\\Program Files\\Autodesk\nset b=Revit 2013\\Program\n\nset c=Revit Architecture 2013\\Program\n\ncopy \"%a%\\%b%\\RevitAPI.dll\" \"%a%\\%c%\"\ncopy \"%a%\\%b%\\RevitAPIUI.dll\" \"%a%\\%c%\"\ncopy \"%a%\\%b%\\RevitAddInUtility.dll\" \"%a%\\%c%\"\n\nset c=Revit MEP 2013\\Program\n\ncopy \"%a%\\%b%\\RevitAPI.dll\" \"%a%\\%c%\"\ncopy \"%a%\\%b%\\RevitAPIUI.dll\" \"%a%\\%c%\"\n\nset c=Revit Structure 2013\\Program\n\ncopy \"%a%\\%b%\\RevitAPI.dll\" \"%a%\\%c%\"\ncopy \"%a%\\%b%\\RevitAPIUI.dll\" \"%a%\\%c%\"\n\nset a=\nset b=\nset c=\n</pre>\n<!--\n<p>I also need to update my Visual Studio projects that are referencing the Quasar preview release Revit API assemblies, and specifying the corresponding executable as their debug target.\nI implemented a little utility named jhint.exe to handle the .NET assembly references back in 2007, and updated it now to handle the debug target as well.\n-->\n<a name=\"3\"></a>\n<h4>Autodesk University Proposals Confirmed and Requested</h4>\n<p>I was notified yesterday that my AU proposals were accepted, so now I know where I will be spending my next birthday again.\n\n<p>I will be presenting two lectures and participating in one panel with members of the Revit API development team and ADN DevTech AEC workgroup:\n\n<ul>\n<li>CP4107 Let's face it: New Autodesk Revit 2013 UI API Functionality\n<li>CP4108 Revit MEP Programming: All Systems Go \n<li>CP4109 Revit API Round Table: Meet the Champions \n</li></li></li></ul>\n<p>One advantage of these two lectures is that the AEC DevCamp class material can be reused for preparing them:\n\n<ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#2\">\n1-4 Revit 2013 UI API enhancements</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#5\">\n2-7 Revit MEP API</a>\n</li></li></ul>\n<p>Another advantage is that they have consecutive numbers, making them easier to remember for me  :-)\n\n<p>Whereas the live AU proposals have been submitted and processed by now, the\n\n<a href=\"http://auspeaker.wordpress.com/2012/06/28/calling-all-au-virtual-proposals\">\nAutodesk University Virtual call for proposals</a> just\n\nopened and we are eagerly awaiting your submissions.\n\n\n<a name=\"4\"></a>\n<h4>Updated Revit Add-in Wizards for C# and VB</h4>\n<p>After finally installing the official release of Revit, I updated my Revit add-in wizard and also re-implemented the VB one.\n\n<p>Basically, all that needed doing was to replace all occurrences of \"Revit Quasar RP\" by \"Revit 2013\" in the *.csproj and *.vbproj project files.\nThey occur in the StartProgram and HintPath tags.\n\n<p>The boiler-place code now creates a 'using' statement around the dummy transaction, and I changed the default version strings in the assembly properties from \"1.0.0.0\" to \"1.0.*\" to take advantage of the automatically generated build numbers.\n\n<p>For the full description of the wizards, please refer to these previous posts:\n\n<ul>\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/07/devtv-addin-templates.html\">\nOriginal introduction, benefits, and usage example</a> for C# and VB.\n\n<li>Personalised \n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/10/revit-2011-devtv.html#2\">\nminimal C# version</a> for Revit 2011.\n\n<li>A short additional \n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/12/snow-and-woe-with-manifest-files.html\">\nusage note</a>.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/01/automate-designoption-and-64-bit-add-in-templates.html#2\">\n64 bit versions</a> for C# and VB.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/visual-studio-add-in-wizards-for-revit-2012.html\">\nRevit 2012</a> C# and VB version. \n\n<li>Updated C# and VB versions placing\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/product-and-add-in-wizard-updates.html#3\">\nassembly DLL alongside add-in manifest</a> and\n\nincluding other changes.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/add-in-wizard-for-revit-2013.html\">Revit 2013</a> wizard for C# only.\n\n</li></li></li></li></li></li></li></ul>\n<p>To install, simply copy the appropriate zip file to the Visual Studio C# or VB project template folder in your local file system:\n\n<ul>\n<li><a href=\"zip/Revit2013AddinWizardCs.zip\">Revit2013AddinWizardCs.zip</a> – copy to \n<br/>[My Documents]\\Visual Studio 2010\\Templates\\ProjectTemplates\\Visual C#\n\n<li><a href=\"zip/Revit2013AddinWizardVb.zip\">Revit2013AddinWizardVb.zip</a> – copy to \n<br/>[My Documents]\\Visual Studio 2010\\Templates\\ProjectTemplates\\Visual Basic\n</li></li></ul>\n</p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0793_update_2013",
    "header_text": "Autodesk University Proposals Confirmed and Requested",
    "local_header_href": "#autodesk-university-proposals-confirmed-and-requested",
    "chunk_text": "<h4>Autodesk University Proposals Confirmed and Requested</h4><p>I was notified yesterday that my AU proposals were accepted, so now I know where I will be spending my next birthday again.\n\n<p>I will be presenting two lectures and participating in one panel with members of the Revit API development team and ADN DevTech AEC workgroup:\n\n<ul>\n<li>CP4107 Let's face it: New Autodesk Revit 2013 UI API Functionality\n<li>CP4108 Revit MEP Programming: All Systems Go \n<li>CP4109 Revit API Round Table: Meet the Champions \n</li></li></li></ul>\n<p>One advantage of these two lectures is that the AEC DevCamp class material can be reused for preparing them:\n\n<ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#2\">\n1-4 Revit 2013 UI API enhancements</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#5\">\n2-7 Revit MEP API</a>\n</li></li></ul>\n<p>Another advantage is that they have consecutive numbers, making them easier to remember for me  :-)\n\n<p>Whereas the live AU proposals have been submitted and processed by now, the\n\n<a href=\"http://auspeaker.wordpress.com/2012/06/28/calling-all-au-virtual-proposals\">\nAutodesk University Virtual call for proposals</a> just\n\nopened and we are eagerly awaiting your submissions.\n\n\n<a name=\"4\"></a>\n<h4>Updated Revit Add-in Wizards for C# and VB</h4>\n<p>After finally installing the official release of Revit, I updated my Revit add-in wizard and also re-implemented the VB one.\n\n<p>Basically, all that needed doing was to replace all occurrences of \"Revit Quasar RP\" by \"Revit 2013\" in the *.csproj and *.vbproj project files.\nThey occur in the StartProgram and HintPath tags.\n\n<p>The boiler-place code now creates a 'using' statement around the dummy transaction, and I changed the default version strings in the assembly properties from \"1.0.0.0\" to \"1.0.*\" to take advantage of the automatically generated build numbers.\n\n<p>For the full description of the wizards, please refer to these previous posts:\n\n<ul>\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/07/devtv-addin-templates.html\">\nOriginal introduction, benefits, and usage example</a> for C# and VB.\n\n<li>Personalised \n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/10/revit-2011-devtv.html#2\">\nminimal C# version</a> for Revit 2011.\n\n<li>A short additional \n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/12/snow-and-woe-with-manifest-files.html\">\nusage note</a>.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/01/automate-designoption-and-64-bit-add-in-templates.html#2\">\n64 bit versions</a> for C# and VB.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/visual-studio-add-in-wizards-for-revit-2012.html\">\nRevit 2012</a> C# and VB version. \n\n<li>Updated C# and VB versions placing\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/product-and-add-in-wizard-updates.html#3\">\nassembly DLL alongside add-in manifest</a> and\n\nincluding other changes.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/add-in-wizard-for-revit-2013.html\">Revit 2013</a> wizard for C# only.\n\n</li></li></li></li></li></li></li></ul>\n<p>To install, simply copy the appropriate zip file to the Visual Studio C# or VB project template folder in your local file system:\n\n<ul>\n<li><a href=\"zip/Revit2013AddinWizardCs.zip\">Revit2013AddinWizardCs.zip</a> – copy to \n<br/>[My Documents]\\Visual Studio 2010\\Templates\\ProjectTemplates\\Visual C#\n\n<li><a href=\"zip/Revit2013AddinWizardVb.zip\">Revit2013AddinWizardVb.zip</a> – copy to \n<br/>[My Documents]\\Visual Studio 2010\\Templates\\ProjectTemplates\\Visual Basic\n</li></li></ul>\n</p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0793_update_2013",
    "header_text": "Updated Revit Add-in Wizards for C# and VB",
    "local_header_href": "#updated-revit-add-in-wizards-for-c-and-vb",
    "chunk_text": "<h4>Updated Revit Add-in Wizards for C# and VB</h4><p>After finally installing the official release of Revit, I updated my Revit add-in wizard and also re-implemented the VB one.\n\n<p>Basically, all that needed doing was to replace all occurrences of \"Revit Quasar RP\" by \"Revit 2013\" in the *.csproj and *.vbproj project files.\nThey occur in the StartProgram and HintPath tags.\n\n<p>The boiler-place code now creates a 'using' statement around the dummy transaction, and I changed the default version strings in the assembly properties from \"1.0.0.0\" to \"1.0.*\" to take advantage of the automatically generated build numbers.\n\n<p>For the full description of the wizards, please refer to these previous posts:\n\n<ul>\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/07/devtv-addin-templates.html\">\nOriginal introduction, benefits, and usage example</a> for C# and VB.\n\n<li>Personalised \n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/10/revit-2011-devtv.html#2\">\nminimal C# version</a> for Revit 2011.\n\n<li>A short additional \n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/12/snow-and-woe-with-manifest-files.html\">\nusage note</a>.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/01/automate-designoption-and-64-bit-add-in-templates.html#2\">\n64 bit versions</a> for C# and VB.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/visual-studio-add-in-wizards-for-revit-2012.html\">\nRevit 2012</a> C# and VB version. \n\n<li>Updated C# and VB versions placing\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/product-and-add-in-wizard-updates.html#3\">\nassembly DLL alongside add-in manifest</a> and\n\nincluding other changes.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/add-in-wizard-for-revit-2013.html\">Revit 2013</a> wizard for C# only.\n\n</li></li></li></li></li></li></li></ul>\n<p>To install, simply copy the appropriate zip file to the Visual Studio C# or VB project template folder in your local file system:\n\n<ul>\n<li><a href=\"zip/Revit2013AddinWizardCs.zip\">Revit2013AddinWizardCs.zip</a> – copy to \n<br/>[My Documents]\\Visual Studio 2010\\Templates\\ProjectTemplates\\Visual C#\n\n<li><a href=\"zip/Revit2013AddinWizardVb.zip\">Revit2013AddinWizardVb.zip</a> – copy to \n<br/>[My Documents]\\Visual Studio 2010\\Templates\\ProjectTemplates\\Visual Basic\n</li></li></ul>\n</p></p></p></p></p>"
  }
]