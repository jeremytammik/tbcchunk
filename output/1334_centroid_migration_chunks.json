[
  {
    "original_filename": "1334_centroid_migration",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<style type=\"text/css\">p.en { font-style: italic; }</style>\n<!-- <script src=\"http://thebuildingcoder.typepad.com/google-code-prettify/run_prettify.js\"></script>-->\n</head>"
  },
  {
    "original_filename": "1334_centroid_migration",
    "header_text": "Dynamo, Centroid & Volume Calculation Migration Blitz",
    "local_header_href": "#dynamo-centroid-volume-calculation-migration-blitz",
    "chunk_text": "<h3>Dynamo, Centroid &amp; Volume Calculation Migration Blitz</h3><p>My French colleague\n\n<a href=\"http://villagebim.typepad.com/villagebim/olivier-bayle.html\">\nOlivier Bayle</a>,\n\nco-author of the French AEC-related\n\n<a href=\"http://villagebim.typepad.com\">\nVillage BIM</a> blog,\n\njust re-raised the topic of my old\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/12/solid-centroid-and-volume-calculation.html\">\nsolid centroid and volume calculation</a> add-in.</p><p>Let's also point out one or two of the numerous topics we tackled in the past few days on the Revit API discussion forum:</p><ul>\n<li><a href=\"#2\">Graphically displaying the centre of gravity using Dynamo</a></li>\n<li><a href=\"#3\">GetCentroid on GitHub and blitz migration across four Revit API releases</a></li>\n<li><a href=\"#4\">Finding the orientation of welded pipe outlets</a></li>\n<li><a href=\"#5\">How to set the change type for DMU AddTrigger</a></li>\n</ul><a name=\"2\"></a>"
  },
  {
    "original_filename": "1334_centroid_migration",
    "header_text": "Graphically Displaying the Centre of Gravity using Dynamo",
    "local_header_href": "#graphically-displaying-the-centre-of-gravity-using-dynamo",
    "chunk_text": "<h4>Graphically Displaying the Centre of Gravity using Dynamo</h4><p>Olivier uses the GetCentroid add-in to implement a Dynamo script graphically displaying the centre of gravity of a bunch of selected Revit elements, as demonstrated by his two-minute June 22 YouTube video\n<a href=\"https://www.youtube.com/watch?v=jBgkhXqWh-w\">\nRevit afficher le centre de gravité à l'aide de Dynamo</a>:</p><center>\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/jBgkhXqWh-w\" width=\"480\"></iframe>\n</center><p>Le but de cet article est de vous montrer que Dynamo devient le véritable compagnon de Revit notamment lorsqu’il permet d’accroitre les fonctionnalités de Revit.</p><p class=\"en\">We demonstrate how Dynamo is becoming a true companion of Revit, e.g., by enabling addition of enhanced functionality.</p><p>Looking forward to seeing the upcoming Village BIM article on this topic   :-)</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1334_centroid_migration",
    "header_text": "GetCentroid on GitHub and Blitz Migration Across Four Revit API Releases",
    "local_header_href": "#getcentroid-on-github-and-blitz-migration-across-four-revit-api-releases",
    "chunk_text": "<h4>GetCentroid on GitHub and Blitz Migration Across Four Revit API Releases</h4><p>Prompted by Olivier's request, I created a new home for the original\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/12/solid-centroid-and-volume-calculation.html\">\nGetCentroid add-in</a> add-in implementation, which now lives in its own cosy little\n<a href=\"https://github.com/jeremytammik/GetCentroid\">GetCentroid GitHub repository</a>.</p><p>I performed a 30-minute blitz migration of it from Revit 2013 across all later versions up to Revit 2016:</p><ul>\n<li><a href=\"https://github.com/jeremytammik/GetCentroid/releases/tag/2013.0.0.0\">2013.0.0.0</a> – initial release from december 2012</li>\n<li><a href=\"https://github.com/jeremytammik/GetCentroid/releases/tag/2014.0.0.0\">2014.0.0.0</a> – flat migration to Revit 2014</li>\n<li><a href=\"https://github.com/jeremytammik/GetCentroid/releases/tag/2015.0.0.0\">2015.0.0.0</a> – flat migration to Revit 2015</li>\n<li><a href=\"https://github.com/jeremytammik/GetCentroid/releases/tag/2015.0.0.1\">2015.0.0.1</a> – suppressed architecture mismatch warning</li>\n<li><a href=\"https://github.com/jeremytammik/GetCentroid/releases/tag/2015.0.0.2\">2015.0.0.2</a> – eliminated obsolete API usage</li>\n<li><a href=\"https://github.com/jeremytammik/GetCentroid/releases/tag/2016.0.0.0\">2016.0.0.0</a> – flat migration to Revit 2016</li>\n<li><a href=\"https://github.com/jeremytammik/GetCentroid/releases/tag/2016.0.0.1\">2016.0.0.1</a> – set copy local false on Revit API assemblies</li>\n</ul><p>You can use the GitHub diff functionality to see clearly and exactly what changed from version to version, e.g.\n<a href=\"https://github.com/jeremytammik/GetCentroid/compare/2015.0.0.0...2016.0.0.1\">...GetCentroid/compare/2015.0.0.0...2016.0.0.1</a> to\ncompare the version 2015.0.0.0 with 2016.0.0.1.</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "1334_centroid_migration",
    "header_text": "Finding the Orientation of Welded Pipe Outlets",
    "local_header_href": "#finding-the-orientation-of-welded-pipe-outlets",
    "chunk_text": "<h4>Finding the Orientation of Welded Pipe Outlets</h4><p>A quick summary of the Revit API discussion forum thread on\n<a href=\"http://forums.autodesk.com/t5/revit-api/finding-the-orientation-of-welded-outlets-of-a-pipe/m-p/5688668\">\nfinding the orientation of welded pipe outlets</a>:</p><p><strong>Question:</strong>\n\nI have a pipe with several grooved or welded branches and outlets:</p><center>\n<img alt=\"Pipe with welded outlets\" src=\"img/welded_pipe_outlets.jpeg\" width=\"335\"/>\n</center><p>I would like to programmatically determine the orientation of the outlets.</p><p>Please can anyone suggest me how to achieve this?</p><p><strong>Answer:</strong>\n\nEach of the branches or outlets is connected to the duct.</p><p>Navigate to the corresponding Connection object, e.g. via the FamilyElement &gt; MEPSystem &gt; ConnectionManager properties.</p><p>From that, you can determine the connection orientation. Here are three different articles discussing this topic:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/03/connector-orientation.html\">\nConnector orientation (2010)</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/11/connector-direction-and-createairhandler.html\">\nConnector direction (2010)</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/connector-orientation.html\">\nConnector orientation (2012)</a></li>\n</ul><a name=\"5\"></a>"
  },
  {
    "original_filename": "1334_centroid_migration",
    "header_text": "How to Set the Change Type for DMU AddTrigger",
    "local_header_href": "#how-to-set-the-change-type-for-dmu-addtrigger",
    "chunk_text": "<h4>How to Set the Change Type for DMU AddTrigger</h4><p>A summary of another Revit API discussion forum thread, on\n<a href=\"http://forums.autodesk.com/t5/revit-api/how-can-i-use-getchangetype-to-get-change-of-view3d-orientation/m-p/5687401\">\nhow to use GetChangeType to get change of View3D orientation</a>:</p><p><strong>Question:</strong>\n\nI am using the <a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.31\">Dynamic Model Update framework DMU</a> to create a stereo view and want to update the right and left eye views affected by a modification of the source view orientation.</p><p>However I have a problem catching 'Orientation modified'.</p><p>I want to use this line of code:</p><pre>\n  UpdaterRegistry.AddTrigger(\n    m_updaterId, doc, idsToWatch, ??? );\n</pre><p><code>idsToWatch</code> is a list of element ids specifying the source view.</p><p>What should I use for the last argument?</p><p>How can I get view orientation modified?</p><p><strong>Answer:</strong>\n\nThe last argument to the AddTrigger method is the change type.</p><p>The safest change type to specify is the one returned by the Element.GetChangeTypeAny method.</p><p>Here are some discussions mentioning the AddTrigger method on The Building Coder:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/08/structural-dynamic-model-update-sample.html\">\nStructural Dynamic Model Update Sample</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/10/access-deleted-element.html\">\nAccess Deleted Element</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2011/11/lock-the-model-eg-prevent-deletion.html\">\nLock the Model, e.g. Prevent Deletion</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/documentchanged-versus-dynamic-model-updater.html\">\nDocumentChanged versus Dynamic Model Updater</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2014/07/createlinkreference-sample-code.html#3\">\nHow to Trigger a Dynamic Model Updater by Specific Element Ids</a></li>\n</ul><p>I hope this helps.</p>"
  }
]