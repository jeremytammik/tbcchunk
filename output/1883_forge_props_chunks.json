[
  {
    "original_filename": "1883_forge_props",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- 8252 [Autodesk support]\n\n- Forge at AU video links\n  Sanjana Chand <sanjana.chand@autodesk.com>\n\n- https://github.com/va3c/RvtVa3c/issues/18#issuecomment-748546481\n\n \ntwitter:\n\nForge at AU and open source property access with #JavaScript and the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://autode.sk/forgeopensourceproperty\n\nToday, we take a look at a fix for the RvtVa3c custom exporter and a Forge issue related to Revit property access\n&ndash; Pull metadata from RVT in BIM 360\n&ndash; Forge at AU class recordings \n&ndash; RvtVa3c updated and issues fixed...\n\nlinkedin:\n\nForge at AU and open source property access with #JavaScript and the #RevitAPI \n\nhttp://autode.sk/forgeopensourceproperty\n\nToday, we take a look at a fix for the RvtVa3c custom exporter and a Forge issue related to Revit property access:\n\n- Pull metadata from RVT in BIM 360\n- Forge at AU class recordings \n- RvtVa3c updated and issues fixed...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk \n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n<p style=\"font-size: 80%; font-style:italic\">\n<a href=\"\"></a>\n</p>\n</center>\n\n-->"
  },
  {
    "original_filename": "1883_forge_props",
    "header_text": "Forge at AU and Open Source Property Access",
    "local_header_href": "#forge-at-au-and-open-source-property-access",
    "chunk_text": "### Forge at AU and Open Source Property Access\n\nMany thanks to all the numerous brilliant contributors to\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160),\nabove all, during the past weeks,\nRichard [RPThomas108](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/1035859) Thomas,\ncontinuing to provide tremendous help on the hard questions requiring both Revit API understanding and in-depth product usage experience.\n\nMeanwhile, for today, let's take a quick look at a fix for the RvtVa3c custom exporter and a Forge issue related to Revit property access:\n\n- [Pull metadata from RVT in BIM 360](#2)\n- [Forge at AU class recordings](#3)\n- [RvtVa3c updated and issues fixed](#4)"
  },
  {
    "original_filename": "1883_forge_props",
    "header_text": "Pull Metadata from RVT in BIM 360",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Pull Metadata from RVT in BIM 360\n\n**Question:** I am looking for a way to pull metadata from all the Revit files that live in BIM 360 using Forge to then represent it on PowerBi.\nI looked at a previous suggestion on using the Design Automation API but was unable to use that because it requires `ngrok`, which is not approved by my company.\nAlso, as far as I can tell from the [forge-customproperty-revit](https://github.com/augustogoncalves/forge-customproperty-revit) documentation on extracting compound layer information with the Revit engine, it would have to go to each file, one by one, to extract this meta data.\n\nHowever, I can see the required data with the model viewer API. I was informed that even though I could view it, I would not be able to extract it using that API.\n\nThe data lives in Revit with in the sheet properties, in the section labeled identity data:\n\n<center>\n<img src=\"img/rvt_sheet_property_identity_data.png\" alt=\"Revit sheet property identity data\" title=\"Revit sheet property identity data\" width=\"405\"/> <!-- 405 -->\n</center>\n\n**Answer:** Two quick comments off-hand:\n\nFirst, I find it hard to believe that the Design Automation API requires `ngrok`. At least, I have never heard of such a requirement.\n\nSecondly, and more to the point: the Forge viewer is basically open source.\nEverything that you can see in the viewer is available in the browser JavaScript environment.\nIf you can see something in the viewer, you can access it yourself via JavaScript.\n\nConclusion: You can solve your task using JavaScript in the viewer.\nThere is no need for the Design Automation API.\n\n**Response:** Correct, the Design Automation API doesn’t need ngrok.\nI meant to say that it was needed for the example in the link that I included that Forge Support suggested using as a starting point.\nSorry for the confusion.\n\nAs for the Viewer API, I previously asked someone from a Forge program and they informed me that I would be able to see it but not extract it because that isn’t built into the API.\n\nSo, you’re saying if I manipulate the JavaScript in the Viewer API I would be able to automate and extract the fields I need within every Revit file on the project?\n\n**Answer:** Yes indeed, afaik, you can use JavaScript in the Viewer API to access and manipulate all the model data, with no restriction, obviously also covering the fields within the Revit model you are interested in.\n\nFor safety's sake, I asked my more knowledgeable colleagues to confirm.\nThe development team confirmed my original statement:\n\n**Question:** Can you please confirm (or not) one basic statement that I like making on JavaScript access to model data in the Forge Viewer: afaik, *you can use JavaScript in the Viewer API to access and manipulate all the model data, with no restriction*, obviously also covering the Revit sheet property identity data fields within the Revit model you are interested in. True or False?\n\n**Answer:** You can find the correct statement inside the `viewer3d.js` source file:\n\n> Autodesk Forge Viewer Usage Limitations:\n\n> The Autodesk Forge viewer can only be used to view files generated by Autodesk Forge services.\nThe Autodesk Forge Viewer JavaScript must be delivered from an Autodesk hosted URL.\n\nThe same text is available in the documentation, at the bottom of the [developer guide overview](https://forge.autodesk.com/en/docs/viewer/v7/developers_guide/overview).\n\n**Response:** Thank you for that clarification.\n\nHowever, it does not answer my question.\n\nMy question is: are all model properties that can be seen in the viewer also accessible via JavaScript?\nMy assumption is YES.\nIs that correct?\n\n**Answer:** Yes, using\nthe [`GET Properties` endpoint](https://forge.autodesk.com/en/docs/model-derivative/v2/reference/http/urn-metadata-guid-properties-GET).\n\nFurthermore, all properties can be accessed directly via JavaScript using `model.getProperties(elementID)`.\n\nThey cannot be modified, the viewer (being a viewer) is read-only.\n\nIf the model is already loaded, it is better to use the JS API directly, rather than the Forge REST API, because all properties are automatically downloaded by the viewer and available locally to the JS context.\n\nConclusion, yet again, expanded and reinforced: you can use JavaScvript to access all properties visible in the Forge viewer.\n\nDoing so will save you time, effort  and money:\n\n- The properties are all already loaded\n- There is no need for additional Forge REST API programming effort\n- There are no Forge DA4R workitem costs associated"
  },
  {
    "original_filename": "1883_forge_props",
    "header_text": "Forge at AU",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Forge at AU\n\nIn case you would like to dive in a bit deeper into Forge today, the full articles and video recordings of the Forge classes at AU classes are available online for your convenience and enjoyment;\nhere are links to the Forge community blog articles and YouTube recordings:\n\n- [Forge for Construction](https://forge.autodesk.com/blog/forge-construction-au-continuous-learning) &ndash; [recording](https://youtu.be/UKp7Dh_-usU)\n- [Forge for Manufacturing](https://forge.autodesk.com/blog/forge-manufacturing-au-continuous-learning) &ndash; [recording](https://youtu.be/Kh_x_WtWITg)\n- [Forge for Building Design](https://forge.autodesk.com/blog/forge-building-design-au-continuous-learning) &ndash; [recording](https://youtu.be/FFQdgEmFAxY)\n- [Forge for Civil Infrastructure](https://forge.autodesk.com/blog/forge-civil-infrastructure-au-continuous-learning) &ndash; [recording](https://youtu.be/bKlgSl60m_0)\n- [Forge Hackathon Showcase](https://forge.autodesk.com/blog/congrats-winners-forge-hackathon) &ndash; [recording](https://youtu.be/szsBtcYULuU)\n- [Forge Fire Faceoff](https://forge.autodesk.com/blog/forge-fire-faceoff-exclusively-autodesk-university) &ndash; [recording](https://youtu.be/ma1ImLjtrJ0)"
  },
  {
    "original_filename": "1883_forge_props",
    "header_text": "RvtVa3c Updated and Issues Fixed",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> RvtVa3c Updated and Issues Fixed\n\n[Jake Staub](https://github.com/jpstaub) raised an issue\nwith [RvtVa3c](https://github.com/va3c/RvtVa3c), \na Revit custom exporter add-in generating JSON output for the vA3C three.js AEC viewer:\n[Issue #18 &ndash; Filter parameters error in Revit 2020](https://github.com/va3c/RvtVa3c/issues/18).\n\nThe error was easy to fix, presumably also\nresolving [Issue #17 &ndash; Error In Revit 2019](https://github.com/va3c/RvtVa3c/issues/17),\nand also prompting me to update the project to Revit 2021.\n\nMany thanks to Jake for raising the issue and confirming the fix."
  }
]