[
  {
    "original_filename": "1751_filter_benchmark",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n\n</head>\n\n<!---\n\n- filtering benchmark\n  https://thebuildingcoder.typepad.com/blog/2019/04/slow-slower-still-and-faster-filtering.html#comment-4421443231\n\ntwitter:\n\nForge learning resource and filtered element collector benchmark for the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/filterbenchmark\n\nToday, let's present a benchmark monitoring filtered element collector performance.\nFirst, however, a quick note on a very useful Forge learning resource\n&ndash; Forge learning resource\n&ndash; Filtered element collector benchmark...\n\nlinkedin:\n\nForge learning resource and filtered element collector benchmark for the #RevitAPI\n\nhttp://bit.ly/filterbenchmark\n\nToday, let's present a benchmark monitoring filtered element collector performance.\n\nFirst, however, a quick note on a very useful Forge learning resource:\n\n- Forge learning resource\n- Filtered element collector benchmark...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\n-->"
  },
  {
    "original_filename": "1751_filter_benchmark",
    "header_text": "Filtered Element Collector Benchmark",
    "local_header_href": "#filtered-element-collector-benchmark",
    "chunk_text": "### Filtered Element Collector Benchmark\n\nToday, let's present a benchmark monitoring filtered element collector performance.\n\nFirst, however, a quick note on a very useful Forge learning resource:\n\n- [Forge learning resource](#2) \n- [Filtered element collector benchmark](#3) \n\n<center>\n<img src=\"img/stopwatch.png\" alt=\"Stopwatch\" width=\"450\">\n</center>"
  },
  {
    "original_filename": "1751_filter_benchmark",
    "header_text": "Forge Learning Resource",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Forge Learning Resource\n\nIf you are new to Forge or want to dive in deeper, you can find a collection of very cool Forge training material\nat [learnforge.autodesk.io](https://learnforge.autodesk.io), focusing specifically on BIM360 and design automation.\n\nHere is the table of contents:\n\n- Before you start coding\n- Tools\n- OAuth\n- View your models\n    - Create a server\n    - Authenticate\n    - Upload file to OSS\n    - Translate the file\n    - Show on Viewer\n- View BIM 360 & Fusion models\n    - Create a server\n    - Authorize\n    - List hubs & projects\n    - User information\n    - Show on Viewer\n- Modify your models\n    - Create a server\n    - Basic app UI\n    - Prepare a plugin\n    - Define an activity"
  },
  {
    "original_filename": "1751_filter_benchmark",
    "header_text": "Filtered Element Collector Benchmark",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Filtered Element Collector Benchmark\n\nBack to the Revit API, I recently reiterated the differences between [slow, slower still and faster filtering](https://thebuildingcoder.typepad.com/blog/2019/04/slow-slower-still-and-faster-filtering.html).\n\nIn the end, the only way to tell whether your filter is performing well or not is to implement\nsome [benchmarking](https://en.wikipedia.org/wiki/Benchmark_(computing)) for it.\n\nJai Hari Hara Sudhan very commendably did so, documenting his progress and sharing his results in\na [series of](https://thebuildingcoder.typepad.com/blog/2019/04/slow-slower-still-and-faster-filtering.html#comment-4421084673)\n[comments on](https://thebuildingcoder.typepad.com/blog/2019/04/slow-slower-still-and-faster-filtering.html#comment-4421183783)\n[that post](https://thebuildingcoder.typepad.com/blog/2019/04/slow-slower-still-and-faster-filtering.html#comment-4421443231) and in\nhis [API speed test screencast](https://knowledge.autodesk.com/community/screencast/99858ef7-c4c8-4599-ba6d-0394ff830d62) demonstrating\nthe benchmark running live.\n\n<!-- https://autode.sk/2IwemGr -->\n\nHere is a summary of our discussion and his final benchmarking code:\n\n**Question:** The above content is very useful.\n\nI am using three methods to filter and select the element:\n\n1. Using `FilterRule` method (filters in floor by floor / level)\n2. Using `Factory` Method (filters in the projects)\n3. Selection with interface (element by element)\n\nQuestion 1. Which one is the best in performance (quick)? `FilterRule` or `Factory` method?\n\nQuestion 2. In the FamilySelectionFilter method, is there any better or more performant method to select the elements?\n\n**Answer:** Nobody can tell you beforehand how these different approaches will perform in your specific context.\n\nI therefore suggest that you benchmark them yourself and let us know the result.\n\n[The Building Coder topic groups](https://thebuildingcoder.typepad.com/blog/about-the-author.html#5) lists\nseveral benchmarking examples that you can look at to see how.\n\n\n**Response:** I implemented a benchmark.\n\nIt is impossible to determine exact constant performance (time), because the results differ from run to run. \n\nPlease refer to my [API speed test screencast](https://knowledge.autodesk.com/community/screencast/99858ef7-c4c8-4599-ba6d-0394ff830d62). <!-- https://autode.sk/2IwemGr -->\n\nFinally, I rank the different approaches as follows:\n\n<!--\n<ul style=\"list-style-type: none\">\n<li>1st &ndash; `Factory` method (average time = 766.1 microseconds) 100% </li>\n<li>2nd &ndash; `FilterRule` method (average time = 889.0 microseconds) &ndash; 116% slower than `Factory`</li>\n<li>3rd &ndash; `Linq2` method (average time = 983.5 microseconds) &ndash; 128% slower than `Factory`</li>\n<li>4th &ndash; `Linq1` method (average time = 1173.3 microseconds) &ndash; 153% slower than `Factory`</li>\n</ul>\n-->\n\n<ol>\n<li>`Factory` method (average time = 766.1 microseconds) <br/>&ndash; 100% </li>\n<li>`FilterRule` method (average time = 889.0 microseconds) <br/>&ndash; 116% slower than `Factory`</li>\n<li>`Linq2` method (average time = 983.5 microseconds) <br/>&ndash; 128% slower than `Factory`</li>\n<li>`Linq1` method (average time = 1173.3 microseconds) <br/>&ndash; 153% slower than `Factory`</li>\n</ol>\n\nThe code as follows:\n\n<pre class=\"code\">\n[<span style=\"color:#2b91af;\">Transaction</span>(&nbsp;<span style=\"color:#2b91af;\">TransactionMode</span>.Manual&nbsp;)]\n<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">Elec_test</span>&nbsp;:&nbsp;<span style=\"color:#2b91af;\">IExternalCommand</span>\n{\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>&nbsp;Execute(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ExternalCommandData</span>&nbsp;commandData,\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">ref</span>&nbsp;<span style=\"color:blue;\">string</span>&nbsp;message,\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementSet</span>&nbsp;elements&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">UIApplication</span>&nbsp;uiapp&nbsp;=&nbsp;commandData.Application;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">UIDocument</span>&nbsp;uidoc&nbsp;=&nbsp;uiapp.ActiveUIDocument;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Application</span>&nbsp;app&nbsp;=&nbsp;uiapp.Application;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;uidoc.Document;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Selection</span>&nbsp;sel&nbsp;=&nbsp;uidoc.Selection;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;BuilDTecH&nbsp;Architects&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;BuilDTecH&nbsp;Architects&nbsp;by&nbsp;Sudhan&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">InputData</span>&nbsp;InputData&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">InputData</span>();\n&nbsp;&nbsp;&nbsp;&nbsp;InputData.ShowDialog();\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">IList</span>&lt;<span style=\"color:blue;\">object</span>&gt;&nbsp;data&nbsp;=&nbsp;InputData.Data;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">///////////////////////////////&nbsp;Input&nbsp;Values</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">double</span>&nbsp;LeftOffset&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Convert</span>.ToDouble(&nbsp;data[1]&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;RightOffset&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Convert</span>.ToDouble(&nbsp;data[2]&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;TopOffset&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Convert</span>.ToDouble(&nbsp;data[3]&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;BottomOffset&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Convert</span>.ToDouble(&nbsp;data[4]&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;NearClipOffset&nbsp;=&nbsp;-<span style=\"color:#2b91af;\">Convert</span>.ToDouble(&nbsp;data[5]&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;FarClipOffset&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Convert</span>.ToDouble(&nbsp;data[6]&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;Section_Name&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;Electrical&nbsp;GangBox&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;ElectricalEquipment&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;Modular&nbsp;Gang&nbsp;Box&quot;</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//Input&nbsp;///////////////////////////////&nbsp;Input&nbsp;Values</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;data[0].Equals(&nbsp;<span style=\"color:#2b91af;\">InputData</span>.<span style=\"color:#2b91af;\">Option</span>.ByFloor&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Timer</span>&nbsp;floortimeLinq1&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Timer</span>();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeLinq1.Start();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">IEnumerable</span>&lt;<span style=\"color:#2b91af;\">Element</span>&gt;&nbsp;elems&nbsp;=&nbsp;Linq1(&nbsp;doc,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_ElectricalEquipment,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElectricalEquipment&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeLinq1.Stop();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;time&quot;</span>,&nbsp;<span style=\"color:#a31515;\">&quot;LINQ1&nbsp;Method&nbsp;Time&nbsp;=&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;floortimeLinq1.Duration.ToString()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;&nbsp;No.&nbsp;of&nbsp;Elements&nbsp;=&nbsp;&quot;</span>&nbsp;+&nbsp;elems.Count().ToString()&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elems&nbsp;=&nbsp;<span style=\"color:blue;\">null</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Timer</span>&nbsp;floortimeLinq2&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Timer</span>();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeLinq2.Start();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elems&nbsp;=&nbsp;Linq2(&nbsp;doc,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_ElectricalEquipment,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElectricalEquipment&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeLinq2.Stop();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;time&quot;</span>,&nbsp;<span style=\"color:#a31515;\">&quot;LINQ2&nbsp;Method&nbsp;Time&nbsp;=&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;floortimeLinq2.Duration.ToString()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;&nbsp;No.&nbsp;of&nbsp;Elements&nbsp;=&nbsp;&quot;</span>&nbsp;+&nbsp;elems.Count().ToString()&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elems&nbsp;=&nbsp;<span style=\"color:blue;\">null</span>;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Timer</span>&nbsp;floortimeFilterRule&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Timer</span>();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeFilterRule.Start();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elems&nbsp;=&nbsp;FilterRule(&nbsp;doc,&nbsp;<span style=\"color:green;\">//&nbsp;uidoc.ActiveView.Id,</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_ElectricalEquipment,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElectricalEquipment&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeFilterRule.Stop();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;time&quot;</span>,&nbsp;<span style=\"color:#a31515;\">&quot;Filter&nbsp;Rule&nbsp;Method&nbsp;Time&nbsp;=&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;floortimeFilterRule.Duration.ToString()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;&nbsp;No.&nbsp;of&nbsp;Elements&nbsp;=&nbsp;&quot;</span>&nbsp;+&nbsp;elems.Count().ToString()&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elems&nbsp;=&nbsp;<span style=\"color:blue;\">null</span>;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Timer</span>&nbsp;floortimeFactoryRule&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Timer</span>();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeFactoryRule.Start();\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elems&nbsp;=&nbsp;Factory(&nbsp;doc,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_ElectricalEquipment,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElectricalEquipment&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeFactoryRule.Stop();\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;time&quot;</span>,&nbsp;<span style=\"color:#a31515;\">&quot;&nbsp;Factory&nbsp;Rule&nbsp;Method&nbsp;Time&nbsp;=&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;floortimeFactoryRule.Duration.ToString()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;&nbsp;No.&nbsp;of&nbsp;Elements&nbsp;=&nbsp;&quot;</span>&nbsp;+&nbsp;elems.Count().ToString()&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">else</span>&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;data[0].Equals(&nbsp;<span style=\"color:#2b91af;\">InputData</span>.<span style=\"color:#2b91af;\">Option</span>.BySingle&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>&nbsp;td&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>(&nbsp;<span style=\"color:#a31515;\">&quot;Element&nbsp;By&nbsp;Element&quot;</span>&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;td.Title&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;Want&nbsp;to&nbsp;Continue&quot;</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;td.MainInstruction&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;Do&nbsp;you&nbsp;want&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;section&quot;</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;td.CommonButtons&nbsp;=&nbsp;<span style=\"color:#2b91af;\">TaskDialogCommonButtons</span>.Yes\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;<span style=\"color:#2b91af;\">TaskDialogCommonButtons</span>.No;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;td.DefaultButton&nbsp;=&nbsp;<span style=\"color:#2b91af;\">TaskDialogResult</span>.Yes;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">bool</span>&nbsp;next&nbsp;=&nbsp;<span style=\"color:blue;\">true</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">while</span>(&nbsp;next&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ISelectionFilter</span>&nbsp;selFilter\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FamilySelectionFilter</span>(&nbsp;doc,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_ElectricalEquipment,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElectricalEquipment&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Reference</span>&nbsp;refe&nbsp;=&nbsp;sel.PickObject(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ObjectType</span>.Element,&nbsp;selFilter,&nbsp;<span style=\"color:#a31515;\">&quot;Select&nbsp;Object&quot;</span>&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;ele&nbsp;=&nbsp;doc.GetElement(&nbsp;refe&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Draw_Section</span>.Draw(&nbsp;doc,&nbsp;ele,&nbsp;Section_Name,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LeftOffset,&nbsp;RightOffset,&nbsp;TopOffset,&nbsp;BottomOffset,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NearClipOffset,&nbsp;FarClipOffset&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialogResult</span>&nbsp;tdRes&nbsp;=&nbsp;td.Show();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;tdRes&nbsp;==&nbsp;<span style=\"color:#2b91af;\">TaskDialogResult</span>.No&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;next&nbsp;=&nbsp;<span style=\"color:blue;\">false</span>;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">else</span>&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;data[0].Equals(&nbsp;<span style=\"color:#2b91af;\">InputData</span>.<span style=\"color:#2b91af;\">Option</span>.ByProject&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Timer</span>&nbsp;floortimeFactoryRule&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Timer</span>();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeFactoryRule.Start();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">IEnumerable</span>&lt;<span style=\"color:#2b91af;\">Element</span>&gt;&nbsp;elems&nbsp;=&nbsp;Factory(&nbsp;doc,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_ElectricalEquipment,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElectricalEquipment&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floortimeFactoryRule.Stop();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">TaskDialog</span>.Show(&nbsp;<span style=\"color:#a31515;\">&quot;time&quot;</span>,&nbsp;<span style=\"color:#a31515;\">&quot;&nbsp;Factory&nbsp;Rule&nbsp;Method&nbsp;Time&nbsp;=&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;floortimeFactoryRule.Duration.ToString()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;&nbsp;No.&nbsp;of&nbsp;Elements&nbsp;=&nbsp;&quot;</span>&nbsp;+&nbsp;elems.Count().ToString()&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;ele&nbsp;<span style=\"color:blue;\">in</span>&nbsp;elems&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Draw_Section</span>.Draw(&nbsp;doc,&nbsp;ele,&nbsp;Section_Name,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LeftOffset,&nbsp;RightOffset,&nbsp;TopOffset,&nbsp;BottomOffset,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NearClipOffset,&nbsp;FarClipOffset&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#2b91af;\">Result</span>.Succeeded;\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">FamilySelectionFilter</span>&nbsp;:&nbsp;<span style=\"color:#2b91af;\">ISelectionFilter</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;Doc;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;FmlyName&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;&quot;</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;BultCatId;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;FamilySelectionFilter(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>&nbsp;BuiltInCat,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;familyTypeName&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Doc&nbsp;=&nbsp;doc;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FmlyName&nbsp;=&nbsp;familyTypeName;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BultCatId&nbsp;=&nbsp;(<span style=\"color:blue;\">int</span>)&nbsp;BuiltInCat;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">bool</span>&nbsp;AllowElement(&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;elem&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;elem.Category.Id.IntegerValue&nbsp;==&nbsp;BultCatId;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">bool</span>&nbsp;AllowReference(&nbsp;<span style=\"color:#2b91af;\">Reference</span>&nbsp;refer,&nbsp;<span style=\"color:#2b91af;\">XYZ</span>&nbsp;point&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;e&nbsp;=&nbsp;Doc.GetElement(&nbsp;refer&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;e.get_Parameter(&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.ELEM_FAMILY_PARAM&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.AsValueString().Equals(&nbsp;FmlyName&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n \n&nbsp;&nbsp;<span style=\"color:blue;\">#region</span>&nbsp;Retrieve&nbsp;named&nbsp;family&nbsp;type&nbsp;using&nbsp;either&nbsp;LINQ&nbsp;or&nbsp;a&nbsp;parameter&nbsp;filter&nbsp;\n&nbsp;&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">IEnumerable</span>&lt;<span style=\"color:#2b91af;\">Element</span>&gt;&nbsp;Linq1(\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc,\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>&nbsp;BultCat,\n&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;familyTypeName&nbsp;)\n&nbsp;&nbsp;{\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;).OfCategory(&nbsp;BultCat&nbsp;).OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;.Cast&lt;<span style=\"color:#2b91af;\">FamilyInstance</span>&gt;()\n&nbsp;&nbsp;&nbsp;&nbsp;.Where(&nbsp;x&nbsp;=&gt;&nbsp;x.Symbol.Family.Name.Equals(&nbsp;familyTypeName&nbsp;)&nbsp;);\n&nbsp;&nbsp;}\n \n&nbsp;&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">IEnumerable</span>&lt;<span style=\"color:#2b91af;\">Element</span>&gt;&nbsp;Linq2(\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc,\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>&nbsp;BultCat,\n&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;familyTypeName&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;).OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;).Cast&lt;<span style=\"color:#2b91af;\">FamilyInstance</span>&gt;()\n&nbsp;&nbsp;&nbsp;&nbsp;.Where(&nbsp;x&nbsp;=&gt;&nbsp;x.get_Parameter(&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.ELEM_FAMILY_PARAM&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.AsValueString()&nbsp;==&nbsp;familyTypeName&nbsp;);\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">IEnumerable</span>&lt;<span style=\"color:#2b91af;\">Element</span>&gt;&nbsp;FilterRule(\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc,\n&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;ElementId&nbsp;ActiveViewId,</span>\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>&nbsp;BultCat,\n&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;familyTypeName&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)<span style=\"color:green;\">//,ActiveViewId)</span>\n&nbsp;&nbsp;&nbsp;&nbsp;.OfCategory(&nbsp;BultCat&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementParameterFilter</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilterStringRule</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ParameterValueProvider</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>(&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.ELEM_FAMILY_PARAM&nbsp;)&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilterStringEquals</span>(),&nbsp;familyTypeName,&nbsp;<span style=\"color:blue;\">true</span>&nbsp;)&nbsp;)&nbsp;);\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">IEnumerable</span>&lt;<span style=\"color:#2b91af;\">Element</span>&gt;&nbsp;Factory(\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc,\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>&nbsp;BultCat,\n&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;familyTypeName&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;.OfCategory(&nbsp;BultCat&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementParameterFilter</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ParameterFilterRuleFactory</span>.CreateEqualsRule(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>(&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.ELEM_FAMILY_PARAM&nbsp;),&nbsp;familyTypeName,&nbsp;<span style=\"color:blue;\">true</span>&nbsp;)&nbsp;)&nbsp;);\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">#endregion</span>&nbsp;<span style=\"color:green;\">//&nbsp;Retrieve&nbsp;named&nbsp;family&nbsp;symbols&nbsp;using&nbsp;either&nbsp;LINQ&nbsp;or&nbsp;a&nbsp;parameter&nbsp;filter</span>\n \n&nbsp;&nbsp;<span style=\"color:blue;\">#region</span>&nbsp;Timer\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">Timer</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;[<span style=\"color:#2b91af;\">DllImport</span>(&nbsp;<span style=\"color:#a31515;\">&quot;Kernel32.dll&quot;</span>&nbsp;)]\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:blue;\">extern</span>&nbsp;<span style=\"color:blue;\">bool</span>&nbsp;QueryPerformanceCounter(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">out</span>&nbsp;<span style=\"color:blue;\">long</span>&nbsp;lpPerformanceCount&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;[<span style=\"color:#2b91af;\">DllImport</span>(&nbsp;<span style=\"color:#a31515;\">&quot;Kernel32.dll&quot;</span>&nbsp;)]\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:blue;\">extern</span>&nbsp;<span style=\"color:blue;\">bool</span>&nbsp;QueryPerformanceFrequency(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">out</span>&nbsp;<span style=\"color:blue;\">long</span>&nbsp;lpFrequency&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">long</span>&nbsp;startTime,&nbsp;stopTime;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">long</span>&nbsp;freq;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Constructor</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;Timer()\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startTime&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopTime&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;!QueryPerformanceFrequency(&nbsp;<span style=\"color:blue;\">out</span>&nbsp;freq&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">throw</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Win32Exception</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;high-performance&nbsp;counter&nbsp;not&nbsp;supported&quot;</span>&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Start&nbsp;the&nbsp;timer</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Start()\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Thread</span>.Sleep(&nbsp;0&nbsp;);&nbsp;<span style=\"color:green;\">//&nbsp;let&nbsp;waiting&nbsp;threads&nbsp;work</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QueryPerformanceCounter(&nbsp;<span style=\"color:blue;\">out</span>&nbsp;startTime&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">Stop&nbsp;the&nbsp;timer&nbsp;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Stop()\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QueryPerformanceCounter(&nbsp;<span style=\"color:blue;\">out</span>&nbsp;stopTime&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Return&nbsp;the&nbsp;duration&nbsp;of&nbsp;the&nbsp;timer&nbsp;in&nbsp;seconds</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">double</span>&nbsp;Duration\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">get</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;(<span style=\"color:blue;\">double</span>)&nbsp;(&nbsp;stopTime&nbsp;-&nbsp;startTime&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;(<span style=\"color:blue;\">double</span>)&nbsp;freq;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">#endregion</span>&nbsp;<span style=\"color:green;\">//&nbsp;Timer</span>\n</pre>\n\nMany thanks to Sudhan for implementing this benchmark and reporting these useful (and reassuring) results!\n\nI created a complete Visual Studio solution and added the missing bits and pieces to test this live in\nthe [FilterBenchmark GitHub repository](https://github.com/jeremytammik/FilterBenchmark).\n\nI hope that this encourages you to do some benchmarking as well and helps you optimise your own filtered element collectors.\n\n\n<!--\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n**Question:** \n\n**Answer:** \n\n<pre class=\"code\">\n</pre>\n\nDear Sudhan,\n\nI grabbed this code of yours and created an add-in from it. However, I cannot test or reproduce your result, since the definitions of the Draw_Section and InputData classes are lacking. I created a GitHub repository to hold the current state of the sample I created:\n\nhttps://github.com/jeremytammik/FilterBenchmark\n\nWould you like to fork that, add the missing definitions, and submit a pull request for me to integrate your changes?\n\nThank you!\n\nCheers, Jeremy.\n\n-->"
  }
]