[
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Attributes, Relationships and Other Stuff",
    "local_header_href": "#attributes-relationships-and-other-stuff",
    "chunk_text": "<h3>Attributes, Relationships and Other Stuff</h3><p>Before entering this wonderful new week, I have some unfinished business left over from the last one.</p><p>Last week I returned from a short holiday and was inundated with developer cases, some of which I would still like to report on, or the results will presumably be lost forever, or at least until the next person runs into the same issue.\nI hope to prevent this here and now before starting with anything new.</p><p>Let us therefore take a quick look at the following topics:</p><ul>\n<li><a href=\"#2\">View transparency setting</a></li>\n<li><a href=\"#3\">Determine BIM element masses</a></li>\n<li><a href=\"#4\">Stacked wall component relationships</a></li>\n<li><a href=\"#5\">Bind a link</a></li>\n<li><a href=\"#6\">Determine the colour of an element</a></li>\n<li><a href=\"#7\">Exception retrieving a bounding box</a></li>\n<li><a href=\"#8\">Happy week to all!</a></li>\n</ul><a name=\"2\"></a>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "View Transparency Setting",
    "local_header_href": "#view-transparency-setting",
    "chunk_text": "<h4>View Transparency Setting</h4><p><strong>Question:</strong> The graphic display options provide the following transparency setting:</p><center>\n<img alt=\"Graphic display options transparency setting\" src=\"img/graphic_display_options_transparency.jpg\" width=\"300\"/>\n</center><p>How can I control that setting programmatically, please?</p><p><strong>Answer:</strong> This is documented in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/04/whats-new-in-the-revit-2014-api.html\">\nRevit 2014 API 'What's New'</a> section:\n\n<h4 style=\"color: darkblue\">Views &amp; Display</h4>\n<h5 style=\"color: darkblue\">Graphic Display options</h5>\n<p style=\"color: darkblue\">These new members expose read and write of graphic display options:</p>\n<ul style=\"color: darkblue\">\n<li>View.GetBackground()</li>\n<li>View.SetBackground()</li>\n<li>View.ShadowIntensity</li>\n<li>View.SunlightIntensity</li>\n<li>View.SurfaceTransparency</li>\n<li>View.ShowEdges</li>\n<li>View.ShowSilhouettes</li>\n<li>View.SilhouetteLineStyleId</li>\n</ul>\n<p>The View.SurfaceTransparency property provides an integer value controlling the amount of transparency applied to all surfaces, with 0 = opaque, 100 = fully transparent.</p>\n<a name=\"3\"></a>\n<h4>Determine BIM Element Mass</h4>\n<p><strong>Question:</strong> I need to extract the masses of my various building elements and am having difficulties accessing the geometry information to achieve this.\n\n<p>I'm using a method similar to the ObjectViewer SDK sample.\nIn the project I am working on, this is only returning the roof and floor geometry.</p>\n<p>What do I need to do to retrieve the window frame geometry as well?</p>\n<p>Is there is a specific Mass class I can make use of?</p>\n<p><strong>Answer:</strong> You can query any Revit element for its geometry, extract the solids from that, and query them for their volume.\nThis should work just as well for windows and other family instances as for roofs and floors.</p>\n<p>In some cases, you need to traverse the geometry instances as well as the main geometry object.</p>\n<p>This is demonstrated by many samples, e.g. the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/revit-2014-obj-exporter-and-new-sdk-samples.html#2\">\nOBJ viewer</a>.</p>\n<p>However, it is probably simpler for you to use the Element methods GetMaterialIds, GetMaterialArea and GetMaterialVolume to determine the masses for different materials for any given element.\nLook at the discussion of the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/02/material-quantity-extraction.html\">\nmaterial quantity extraction</a> and\n\nthe MaterialQuantities SDK sample for an example of using this.</p>\n<a name=\"4\"></a>\n<h4>Stacked Wall Component Relationships</h4>\n<p><strong>Question:</strong> How can I find the basic WallTypes composing a stacked wall?</p>\n<p>I tried using the RevitLookup application and can see an unspecified \"structure\", but no further information.</p>\n<p><strong>Answer:</strong> I am glad you are using RevitLookup.\nThis important tool is a must-have for any Revit developer, and very useful for end users as well.</p>\n<p>Currently, however, the Revit API provides no direct support for determining the relationship between a stacked wall and its subcomponent members.\nThere are a couple of workarounds, though.</p>\n<p>One method to determine the relationship between a stacked wall and it basic wall components is described in the blog post on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/05/curtain-wall-geometry.html\">\ncurtain wall geometry</a>,\n\nusing\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/11/undocumented-elementid-relationships.html\">\nundocumented sequential element id relationships</a>.</p>\n<p>A more reliable and useful method to determine this relationship is to delete the stacked wall and see which child walls go with it, a method used in a totally general way by the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/03/object-relationships.html\">\nobject relationship analyser</a>\n\n(<a href=\"http://thebuildingcoder.typepad.com/blog/2010/03/object-relationships-in-vb.html\">VB</a>).</p>\n<p>Pointers to several uses of that utility and the associated\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/11/temporary-transaction-trick-touchup.html\">\ntemporary transaction trick</a> are\n\nprovided in this discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/03/determining-purgeable-elements.html\">\npurging elements</a>.</p>\n<a name=\"5\"></a>\n<h4>Bind Link</h4>\n<p><strong>Question:</strong> Is it possible to use the Revit API to \"Bind Link\", like from the user interface?</p>\n<p>I searched for a method to achieve this, but with no luck.</p>\n<p><strong>Answer:</strong> I am not aware of any direct API support for this functionality.</p>\n<p>However, I can imagine two different approaches to achieving it anyway.</p>\n<ul>\n<li>Make use of the existing built-in 'bind link' Revit command;\nyou can check whether this command can be launched programmatically using the UIApplication.CanPostCommand method and then post it using the PostCommand method.</li>\n<li>Make use of the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/copy-and-paste-api-applications-and-modeless-assertion.html\">\ncopy and paste API</a>.</li>\n</ul>\n<a name=\"6\"></a>\n<h4>Determine the Colour of an Element</h4>\n<p><strong>Question:</strong> I want to change the colour of a specific family instance.</p>\n<p>How can I achieve that, please?</p>\n<p><strong>Answer:</strong> Before you can affect the colour of a Revit element, you need to choose which method to use, and at what level this control should take place.\nThere are numerous choices, as we mentioned discussing the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/getelement-method-and-get-element-type.html#2\">\nelement display overrides</a>, e.g.:</p>\n<ul>\n<li><a href=\"http://revitclinic.typepad.com/my_weblog/2012/02/revit-visibility-hierarchy.html\">\nVisibility hierarchy 1</a></li>\n<li><a href=\"http://adndevblog.typepad.com/aec/2012/06/revit-visibility-hierarchy.html\">\nVisibility hierarchy 2</a></li>\n<li><a href=\"http://www.aecbytes.com/tipsandtricks/2010/issue54-revit2.html\">\nControlling the graphical representation</a></li>\n<li><a href=\"http://blogs.rand.com/support/2011/10/revit-graphic-overrides.html\">\nGraphic overrides</a></li>\n</ul>\n<a name=\"7\"></a>\n<h4>Exception Retrieving a Bounding Box</h4>\n<p><strong>Question:</strong> I am using the following three lines of code with hard-coded element ids to retrieve the bounding box of a panel element in my BIM:</p>\n<pre class=\"code\">\n  View view = doc.GetElement(\n    new ElementId(231354)) as View;\n\n  Panel panel = doc.GetElement(\n    new ElementId(4944423)) as Panel;\n\n  var bb = panel.get_BoundingBox( view );\n</pre>\n<p>However, this pretty trivial operation is throwing a SEHException:</p>\n<center>\n<img alt=\"Bounding box exception\" src=\"img/bb_exception.png\" width=\"350\"/>\n</center>\n<p>What is going wrong here, please?</p>\n<p><strong>Answer:</strong> You are requesting the bounding box of an element in a template view, as you can immediately see exploring the view using RevitLookup:</p>\n<center>\n<img alt=\"Template view property\" src=\"img/bb_exception_snoop.png\" width=\"700\"/>\n</center>\n<p>Note the true 'Is Template' property.\nElements do not have any geometry in template views, so this is a nonsensical operation.</p>\n<p>Please test the View.IsTemplate property before using a view to query element geometry.\nIf it returns true, then elements cannot return any geometry in that view.\n\n\n<a name=\"8\"></a>\n<h4>Happy Week to All!</h4>\n<p>So, that wraps up a couple of things, and I feel free to enter my new week.\nI wish you a happy week as well!</p>\n</p></p></p>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Views & Display",
    "local_header_href": "#views-display",
    "chunk_text": "<h4 style=\"color: darkblue\">Views &amp; Display</h4>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Graphic Display options",
    "local_header_href": "#graphic-display-options",
    "chunk_text": "<h5 style=\"color: darkblue\">Graphic Display options</h5><p style=\"color: darkblue\">These new members expose read and write of graphic display options:</p><ul style=\"color: darkblue\">\n<li>View.GetBackground()</li>\n<li>View.SetBackground()</li>\n<li>View.ShadowIntensity</li>\n<li>View.SunlightIntensity</li>\n<li>View.SurfaceTransparency</li>\n<li>View.ShowEdges</li>\n<li>View.ShowSilhouettes</li>\n<li>View.SilhouetteLineStyleId</li>\n</ul><p>The View.SurfaceTransparency property provides an integer value controlling the amount of transparency applied to all surfaces, with 0 = opaque, 100 = fully transparent.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Determine BIM Element Mass",
    "local_header_href": "#determine-bim-element-mass",
    "chunk_text": "<h4>Determine BIM Element Mass</h4><p><strong>Question:</strong> I need to extract the masses of my various building elements and am having difficulties accessing the geometry information to achieve this.\n\n<p>I'm using a method similar to the ObjectViewer SDK sample.\nIn the project I am working on, this is only returning the roof and floor geometry.</p>\n<p>What do I need to do to retrieve the window frame geometry as well?</p>\n<p>Is there is a specific Mass class I can make use of?</p>\n<p><strong>Answer:</strong> You can query any Revit element for its geometry, extract the solids from that, and query them for their volume.\nThis should work just as well for windows and other family instances as for roofs and floors.</p>\n<p>In some cases, you need to traverse the geometry instances as well as the main geometry object.</p>\n<p>This is demonstrated by many samples, e.g. the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/revit-2014-obj-exporter-and-new-sdk-samples.html#2\">\nOBJ viewer</a>.</p>\n<p>However, it is probably simpler for you to use the Element methods GetMaterialIds, GetMaterialArea and GetMaterialVolume to determine the masses for different materials for any given element.\nLook at the discussion of the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/02/material-quantity-extraction.html\">\nmaterial quantity extraction</a> and\n\nthe MaterialQuantities SDK sample for an example of using this.</p>\n<a name=\"4\"></a>\n<h4>Stacked Wall Component Relationships</h4>\n<p><strong>Question:</strong> How can I find the basic WallTypes composing a stacked wall?</p>\n<p>I tried using the RevitLookup application and can see an unspecified \"structure\", but no further information.</p>\n<p><strong>Answer:</strong> I am glad you are using RevitLookup.\nThis important tool is a must-have for any Revit developer, and very useful for end users as well.</p>\n<p>Currently, however, the Revit API provides no direct support for determining the relationship between a stacked wall and its subcomponent members.\nThere are a couple of workarounds, though.</p>\n<p>One method to determine the relationship between a stacked wall and it basic wall components is described in the blog post on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/05/curtain-wall-geometry.html\">\ncurtain wall geometry</a>,\n\nusing\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/11/undocumented-elementid-relationships.html\">\nundocumented sequential element id relationships</a>.</p>\n<p>A more reliable and useful method to determine this relationship is to delete the stacked wall and see which child walls go with it, a method used in a totally general way by the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/03/object-relationships.html\">\nobject relationship analyser</a>\n\n(<a href=\"http://thebuildingcoder.typepad.com/blog/2010/03/object-relationships-in-vb.html\">VB</a>).</p>\n<p>Pointers to several uses of that utility and the associated\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/11/temporary-transaction-trick-touchup.html\">\ntemporary transaction trick</a> are\n\nprovided in this discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/03/determining-purgeable-elements.html\">\npurging elements</a>.</p>\n<a name=\"5\"></a>\n<h4>Bind Link</h4>\n<p><strong>Question:</strong> Is it possible to use the Revit API to \"Bind Link\", like from the user interface?</p>\n<p>I searched for a method to achieve this, but with no luck.</p>\n<p><strong>Answer:</strong> I am not aware of any direct API support for this functionality.</p>\n<p>However, I can imagine two different approaches to achieving it anyway.</p>\n<ul>\n<li>Make use of the existing built-in 'bind link' Revit command;\nyou can check whether this command can be launched programmatically using the UIApplication.CanPostCommand method and then post it using the PostCommand method.</li>\n<li>Make use of the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/copy-and-paste-api-applications-and-modeless-assertion.html\">\ncopy and paste API</a>.</li>\n</ul>\n<a name=\"6\"></a>\n<h4>Determine the Colour of an Element</h4>\n<p><strong>Question:</strong> I want to change the colour of a specific family instance.</p>\n<p>How can I achieve that, please?</p>\n<p><strong>Answer:</strong> Before you can affect the colour of a Revit element, you need to choose which method to use, and at what level this control should take place.\nThere are numerous choices, as we mentioned discussing the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/getelement-method-and-get-element-type.html#2\">\nelement display overrides</a>, e.g.:</p>\n<ul>\n<li><a href=\"http://revitclinic.typepad.com/my_weblog/2012/02/revit-visibility-hierarchy.html\">\nVisibility hierarchy 1</a></li>\n<li><a href=\"http://adndevblog.typepad.com/aec/2012/06/revit-visibility-hierarchy.html\">\nVisibility hierarchy 2</a></li>\n<li><a href=\"http://www.aecbytes.com/tipsandtricks/2010/issue54-revit2.html\">\nControlling the graphical representation</a></li>\n<li><a href=\"http://blogs.rand.com/support/2011/10/revit-graphic-overrides.html\">\nGraphic overrides</a></li>\n</ul>\n<a name=\"7\"></a>\n<h4>Exception Retrieving a Bounding Box</h4>\n<p><strong>Question:</strong> I am using the following three lines of code with hard-coded element ids to retrieve the bounding box of a panel element in my BIM:</p>\n<pre class=\"code\">\n  View view = doc.GetElement(\n    new ElementId(231354)) as View;\n\n  Panel panel = doc.GetElement(\n    new ElementId(4944423)) as Panel;\n\n  var bb = panel.get_BoundingBox( view );\n</pre>\n<p>However, this pretty trivial operation is throwing a SEHException:</p>\n<center>\n<img alt=\"Bounding box exception\" src=\"img/bb_exception.png\" width=\"350\"/>\n</center>\n<p>What is going wrong here, please?</p>\n<p><strong>Answer:</strong> You are requesting the bounding box of an element in a template view, as you can immediately see exploring the view using RevitLookup:</p>\n<center>\n<img alt=\"Template view property\" src=\"img/bb_exception_snoop.png\" width=\"700\"/>\n</center>\n<p>Note the true 'Is Template' property.\nElements do not have any geometry in template views, so this is a nonsensical operation.</p>\n<p>Please test the View.IsTemplate property before using a view to query element geometry.\nIf it returns true, then elements cannot return any geometry in that view.\n\n\n<a name=\"8\"></a>\n<h4>Happy Week to All!</h4>\n<p>So, that wraps up a couple of things, and I feel free to enter my new week.\nI wish you a happy week as well!</p>\n</p></p>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Stacked Wall Component Relationships",
    "local_header_href": "#stacked-wall-component-relationships",
    "chunk_text": "<h4>Stacked Wall Component Relationships</h4><p><strong>Question:</strong> How can I find the basic WallTypes composing a stacked wall?</p><p>I tried using the RevitLookup application and can see an unspecified \"structure\", but no further information.</p><p><strong>Answer:</strong> I am glad you are using RevitLookup.\nThis important tool is a must-have for any Revit developer, and very useful for end users as well.</p><p>Currently, however, the Revit API provides no direct support for determining the relationship between a stacked wall and its subcomponent members.\nThere are a couple of workarounds, though.</p><p>One method to determine the relationship between a stacked wall and it basic wall components is described in the blog post on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/05/curtain-wall-geometry.html\">\ncurtain wall geometry</a>,\n\nusing\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/11/undocumented-elementid-relationships.html\">\nundocumented sequential element id relationships</a>.</p><p>A more reliable and useful method to determine this relationship is to delete the stacked wall and see which child walls go with it, a method used in a totally general way by the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/03/object-relationships.html\">\nobject relationship analyser</a>\n\n(<a href=\"http://thebuildingcoder.typepad.com/blog/2010/03/object-relationships-in-vb.html\">VB</a>).</p><p>Pointers to several uses of that utility and the associated\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/11/temporary-transaction-trick-touchup.html\">\ntemporary transaction trick</a> are\n\nprovided in this discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/03/determining-purgeable-elements.html\">\npurging elements</a>.</p><a name=\"5\"></a>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Bind Link",
    "local_header_href": "#bind-link",
    "chunk_text": "<h4>Bind Link</h4><p><strong>Question:</strong> Is it possible to use the Revit API to \"Bind Link\", like from the user interface?</p><p>I searched for a method to achieve this, but with no luck.</p><p><strong>Answer:</strong> I am not aware of any direct API support for this functionality.</p><p>However, I can imagine two different approaches to achieving it anyway.</p><ul>\n<li>Make use of the existing built-in 'bind link' Revit command;\nyou can check whether this command can be launched programmatically using the UIApplication.CanPostCommand method and then post it using the PostCommand method.</li>\n<li>Make use of the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/copy-and-paste-api-applications-and-modeless-assertion.html\">\ncopy and paste API</a>.</li>\n</ul><a name=\"6\"></a>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Determine the Colour of an Element",
    "local_header_href": "#determine-the-colour-of-an-element",
    "chunk_text": "<h4>Determine the Colour of an Element</h4><p><strong>Question:</strong> I want to change the colour of a specific family instance.</p><p>How can I achieve that, please?</p><p><strong>Answer:</strong> Before you can affect the colour of a Revit element, you need to choose which method to use, and at what level this control should take place.\nThere are numerous choices, as we mentioned discussing the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/getelement-method-and-get-element-type.html#2\">\nelement display overrides</a>, e.g.:</p><ul>\n<li><a href=\"http://revitclinic.typepad.com/my_weblog/2012/02/revit-visibility-hierarchy.html\">\nVisibility hierarchy 1</a></li>\n<li><a href=\"http://adndevblog.typepad.com/aec/2012/06/revit-visibility-hierarchy.html\">\nVisibility hierarchy 2</a></li>\n<li><a href=\"http://www.aecbytes.com/tipsandtricks/2010/issue54-revit2.html\">\nControlling the graphical representation</a></li>\n<li><a href=\"http://blogs.rand.com/support/2011/10/revit-graphic-overrides.html\">\nGraphic overrides</a></li>\n</ul><a name=\"7\"></a>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Exception Retrieving a Bounding Box",
    "local_header_href": "#exception-retrieving-a-bounding-box",
    "chunk_text": "<h4>Exception Retrieving a Bounding Box</h4><p><strong>Question:</strong> I am using the following three lines of code with hard-coded element ids to retrieve the bounding box of a panel element in my BIM:</p><pre class=\"code\">\n  View view = doc.GetElement(\n    new ElementId(231354)) as View;\n\n  Panel panel = doc.GetElement(\n    new ElementId(4944423)) as Panel;\n\n  var bb = panel.get_BoundingBox( view );\n</pre><p>However, this pretty trivial operation is throwing a SEHException:</p><center>\n<img alt=\"Bounding box exception\" src=\"img/bb_exception.png\" width=\"350\"/>\n</center><p>What is going wrong here, please?</p><p><strong>Answer:</strong> You are requesting the bounding box of an element in a template view, as you can immediately see exploring the view using RevitLookup:</p><center>\n<img alt=\"Template view property\" src=\"img/bb_exception_snoop.png\" width=\"700\"/>\n</center><p>Note the true 'Is Template' property.\nElements do not have any geometry in template views, so this is a nonsensical operation.</p><p>Please test the View.IsTemplate property before using a view to query element geometry.\nIf it returns true, then elements cannot return any geometry in that view.\n\n\n<a name=\"8\"></a>\n<h4>Happy Week to All!</h4>\n<p>So, that wraps up a couple of things, and I feel free to enter my new week.\nI wish you a happy week as well!</p>\n</p>"
  },
  {
    "original_filename": "0996_attrib_relations",
    "header_text": "Happy Week to All!",
    "local_header_href": "#happy-week-to-all",
    "chunk_text": "<h4>Happy Week to All!</h4><p>So, that wraps up a couple of things, and I feel free to enter my new week.\nI wish you a happy week as well!</p>"
  }
]