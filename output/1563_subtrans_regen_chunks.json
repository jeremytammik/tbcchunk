[
  {
    "original_filename": "1563_subtrans_regen",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<!--\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\n- AI News\n  https://www.theverge.com/2017/5/27/15704088/alphago-ke-jie-game-3-result-retires-future\n  [Startup uses AI to create programs from simple screenshots](https://siliconangle.com/blog/2017/05/28/startup-uses-ai-create-gui-source-code-simple-screenshots)\n  research paper [pix2code: Generating Code from a Graphical User Interface Screenshot](https://arxiv.org/pdf/1705.07962.pdf)\n  \n- Александр Игнатович Re: for the tbc blogpost\n\nAI beats all + invents new moves post 3000 year @AutodeskForge #ForgeDevCon #RevitAPI @AutodeskRevit #bim #dynamobim http://bit.ly/ai_sub_tx_regen\n\nSub-Transaction requires regeneration @AutodeskForge #ForgeDevCon #RevitAPI @AutodeskRevit #bim #dynamobim http://bit.ly/ai_sub_tx_regen\n\nThings continue moving fast in AI, and the need to regenerate in the Revit API remains unchanged\n&ndash; AI News\n&ndash; Subtransaction Requires Regeneration...\n\n-->"
  },
  {
    "original_filename": "1563_subtrans_regen",
    "header_text": "AI News and Sub-Transaction Regen",
    "local_header_href": "#ai-news-and-sub-transaction-regen",
    "chunk_text": "### AI News and Sub-Transaction Regen\n\nThings continue moving fast in AI, and\nthe [need to regenerate](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.33) in\nthe Revit API remains unchanged:\n\n- [AI News](#2)\n- [Sub-Transaction Requires Regeneration](#3)"
  },
  {
    "original_filename": "1563_subtrans_regen",
    "header_text": "<a name=\"2\"></a>AI News",
    "local_header_href": "#a-name2aai-news",
    "chunk_text": "#### <a name=\"2\"></a>AI News\n\nI [reported](http://thebuildingcoder.typepad.com/blog/2016/01/bim-programming-madrid-and-spanish-connectivity.html#7) on\nthe surprising success of [AlphaGo](https://en.wikipedia.org/wiki/AlphaGo) 18\nmonths ago, when it unexpectedly defeated legendary player Lee Se-dol 4-1, cf.\nthe [DeepMind Go challenge overview](https://www.theverge.com/google-deepmind).\n\nThat revolutionised the expectation and perception of AI of scientists and the industry alike: AI is indeed capable of extracting and generating knowledge that exceeds the best human capacity.\n\nNow another important step was taken, completely settling the matter:\n[AlphaGo retires from competitive Go after defeating world number one Ke Jie 3-0](https://www.theverge.com/2017/5/27/15704088/alphago-ke-jie-game-3-result-retires-future).\n\nIn this game, Ke Jie made use of some unconventional new moves that AlphaGo invented and first demonstrated in its previous public games... nota bene, it invented new moves after 3000 years of human exploration... one question this raises: 'Invent'? Or discover?\n\n<center>\n<img src=\"img/go_game_kobayashi_kato.png\" alt=\"Go game\" width=\"300\"> <!-- 437 -->\n</center>\n\nThe DeepMind research team behind AlphaGo has conclusively proved its point and is moving on to new and greener pastures.\n\nAnother recent impressive example of what AI enables is provided by\nthe [startup that uses AI to create programs from simple screenshots](https://siliconangle.com/blog/2017/05/28/startup-uses-ai-create-gui-source-code-simple-screenshots),\ncf. the corresponding [research paper *pix2code: Generating Code from a Graphical User Interface Screenshot*](https://arxiv.org/pdf/1705.07962.pdf).\n\nExciting times indeed.\n\nBack to the Revit API:"
  },
  {
    "original_filename": "1563_subtrans_regen",
    "header_text": "<a name=\"3\"></a>Sub-Transaction Requires Regeneration",
    "local_header_href": "#a-name3asub-transaction-requires-regeneration",
    "chunk_text": "#### <a name=\"3\"></a>Sub-Transaction Requires Regeneration\n\nAlexander Ignatovich, [@CADBIMDeveloper](https://github.com/CADBIMDeveloper),\naka Александр Игнатович, shares another important example that fits in perfectly with our continuing series demonstrating\nthe [need to regenerate](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.33).\n\nIn his own words:\n\n> It's time to share some piece of knowledge about sub-transactions in your brilliant blog ;-)\n\n> I've spent some time, so it should be documented somewhere.\n\n> As most Revit programmers know, the document automatically regenerates on transaction commit.\n\n> My problem was, that sub-transactions do not cause this, as I previously assumed.\n\n> I wanted to retrieve family symbol geometry. I activated the family symbol earlier in a sub-transaction, but I didn't call the `document.Regenerate` method, so the `familySymbol.get_Geometry` method returned null. I was confused, because in the debugger I saw that my family symbol is active. I also looked at the activated family symbol geometry, and it was not null.\n\n> After I added document regeneration, my code execution path looks like this:\n\n<pre class=\"code\">\n  start main transaction\n  {\n    ...\n    \n    start sub transaction\n    {\n      ...\n      \n      if (!familySymbol.IsActive)\n        familySymbol.Activate()\n      \n      ...\n      \n      subtransaction.Commit()\n    }\n    \n    document.Regenerate()\n    \n    ...\n    \n    geometry = familySymbol.get_Geometry(options)\n    \n    ...\n  }\n</pre>\n\n> I previously considered sub-transactions as mini transactions with practically the same behaviour, except they are nested to the transaction and make real changes to model only when outer transaction is committed.\n\n> Now I understand that nothing is really committed automatically to the Revit database before completion and commitment of the outer-most transaction.\n\nMany thanks to Alexander for explicitly pointing this out!"
  }
]