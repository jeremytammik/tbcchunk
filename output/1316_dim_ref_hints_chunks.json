[
  {
    "original_filename": "1316_dim_ref_hints",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1316_dim_ref_hints",
    "header_text": "How to Retrieve Dimensioning References",
    "local_header_href": "#how-to-retrieve-dimensioning-references",
    "chunk_text": "<h3>How to Retrieve Dimensioning References</h3><p>Several cases recently came up asking how to obtain references to programmatically create dimensioning elements.</p><p>These hints expand on the recently discussed topic of creating\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/11/picking-pairs-and-dimensioning-family-instance-origin.html\">\ndimensioning between family instance insertion points</a>.</p><p>They were raised by the following queries on how to retrieve suitable references for dimensioning:</p><ul>\n<li><a href=\"#2\">Dimensioning to family instance centre reference planes</a></li>\n<li><a href=\"#3\">Dimensioning between a grid and an edge of a face</a></li>\n<li><a href=\"#4\">Dimensioning to the wall opening wrapping location</a></li>\n</ul><p>Before getting to that, I'll just add that I returned safe and sound from the\n<a href=\"http://thebuildingcoder.typepad.com/blog/2015/05/cloning-a-solid-angelhack-3d-web-fest-and-dubai.html\">\nDubai hackathon</a> that I mentioned last Friday.</p><p>I reported on the event during the weekend, discussing\n<a href=\"http://the3dwebcoder.typepad.com/blog/2015/05/dubai-hackathon-preparation-and-viewer-workshop.html#6\">hackathon preparation</a> in general, the\n<a href=\"http://the3dwebcoder.typepad.com/blog/2015/05/dubai-hackathon-preparation-and-viewer-workshop.html#7\">View and Data API workshop</a> and the\n<a href=\"http://the3dwebcoder.typepad.com/blog/2015/05/dubai-hackathon-project-presentation-notes.html\">hackathon projects presented</a>.</p><p>Back to the Revit API and the topic at hand:</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "1316_dim_ref_hints",
    "header_text": "Dimensioning to Family Instance Centre Reference Planes",
    "local_header_href": "#dimensioning-to-family-instance-centre-reference-planes",
    "chunk_text": "<h4>Dimensioning to Family Instance Centre Reference Planes</h4><p><strong>Question:</strong>\n\nI want to get the reference planes in a family instance for dimension creation with the API.</p><p>For example, use the API to create a dimension between the centre references of two windows.</p><p>The following test code, for example, does not find the reference planes I need:</p><pre class=\"code\">\n  <span class=\"blue\">public</span> <span class=\"blue\">void</span> ListFamilyGeometry( <span class=\"teal\">UIDocument</span> uidoc )\n  {\n    <span class=\"teal\">Document</span> doc = uidoc.Document;\n \n    <span class=\"teal\">Reference</span> r;\n \n    <span class=\"blue\">try</span>\n    {\n      r = uidoc.Selection.PickObject(\n        <span class=\"teal\">ObjectType</span>.Element );\n    }\n    <span class=\"blue\">catch</span>( Autodesk.Revit.Exceptions\n      .<span class=\"teal\">OperationCanceledException</span> )\n    {\n      <span class=\"blue\">return</span>;\n    }\n \n    <span class=\"teal\">FamilyInstance</span> fi = doc.GetElement( r )\n      <span class=\"blue\">as</span> <span class=\"teal\">FamilyInstance</span>;\n \n    <span class=\"blue\">if</span>( fi == <span class=\"blue\">null</span> )\n    {\n      <span class=\"blue\">return</span>;\n    }\n \n    <span class=\"teal\">Transform</span> transform = fi.GetTransform();\n \n    <span class=\"blue\">string</span> data = <span class=\"blue\">string</span>.Empty;\n \n    <span class=\"teal\">Options</span> options = <span class=\"blue\">new</span> <span class=\"teal\">Options</span>();\n    options.IncludeNonVisibleObjects = <span class=\"blue\">true</span>;\n \n    <span class=\"blue\">foreach</span>( <span class=\"teal\">GeometryObject</span> go <span class=\"blue\">in</span>\n      fi.get_Geometry( options ) )\n    {\n      data += go.GetType().ToString()\n        + <span class=\"teal\">Environment</span>.NewLine;\n \n      <span class=\"blue\">if</span>( go <span class=\"blue\">is</span> <span class=\"teal\">GeometryInstance</span> )\n      {\n        <span class=\"teal\">GeometryInstance</span> gi = go <span class=\"blue\">as</span> <span class=\"teal\">GeometryInstance</span>;\n \n        <span class=\"blue\">foreach</span>( <span class=\"teal\">GeometryObject</span> goSymbol <span class=\"blue\">in</span>\n          gi.GetSymbolGeometry() )\n        {\n          data += <span class=\"maroon\">\" - \"</span> + goSymbol.GetType().ToString()\n            + <span class=\"teal\">Environment</span>.NewLine;\n \n          <span class=\"blue\">if</span>( goSymbol <span class=\"blue\">is</span> <span class=\"teal\">Line</span> )\n          {\n            <span class=\"teal\">Line</span> line = goSymbol <span class=\"blue\">as</span> <span class=\"teal\">Line</span>;\n \n            makeLine( doc, transform.OfPoint(\n              line.GetEndPoint( 0 ) ),\n              transform.OfPoint( line.GetEndPoint( 1 ) ) );\n          }\n        }\n      }\n    }\n    <span class=\"teal\">TaskDialog</span>.Show( <span class=\"maroon\">\"data\"</span>, data );\n  }\n</pre><p><strong>Answer:</strong>\n\nI assume you have read about <a href=\"http://thebuildingcoder.typepad.com/blog/2014/11/picking-pairs-and-dimensioning-family-instance-origin.html\">dimensioning between family instance origins</a>.</p><p>If your window symbols have their insertion points at the same location as the centre reference, you could use that approach.</p><p>To address your real requirement, though, you need to retrieve the centre references directly.</p><p>Here are some important aspects that you need to keep in mind to retrieve the references to create dimensioning between the centre references of two family instances, e.g. windows:</p><ul>\n<li>IncludeNonVisibleGeometry is required to be set, just as you have done in your sample code snippet.</li>\n<li>The geometry must be extracted from a view where the reference would be useful.  In the example below, no View is passed to the geometry options.  In that case, the model level geometry is extracted, which lacks view specific references like reference planes orthogonal to the view.</li>\n<li>Once you pass in a suitable view and obtain these extra references, there is nothing to identify them.  You  have to analyse the geometry to figure out which one is the 'centre' one.  For 2D views, reference planes may be returned as lines (Curve instances) instead of planes.</li>\n</ul><p>These aspects have been mentioned in the past; still, I hope it helps to spell them out explicitly again here and now.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1316_dim_ref_hints",
    "header_text": "Dimensioning Between a Grid and an Edge of a Face",
    "local_header_href": "#dimensioning-between-a-grid-and-an-edge-of-a-face",
    "chunk_text": "<h4>Dimensioning Between a Grid and an Edge of a Face</h4><p>The following query was raised by Samer Habib in a\n<a href=\"http://thebuildingcoder.typepad.com/blog/2015/04/whats-new-in-the-revit-2016-api.html?cid=6a00e553e16897883301b7c788f437970b#comment-6a00e553e16897883301b7c788f437970b\">comment</a> on\n<a href=\"http://thebuildingcoder.typepad.com/blog/2015/04/whats-new-in-the-revit-2016-api.html\">What's New in the Revit 2016 API</a>:</p><p><strong>Question:</strong>\n\nI am trying to create a new dimension between a grid and an edge of a face.</p><p>I get the reference of grid by grid.Curve.reference and I get the reference of the face edge.</p><p>However, in the NewDimension method the references argument requires an array of geometric references to which the dimension is to be bound.</p><p>The grid does not seem to have any such geometric reference.</p><p>Therefore, when I call the NewDimension method, it throws an 'Invalid number of references' error.</p><p>How can I solve this, please?</p><p><strong>Answer:</strong>\n\nThe answer is exactly the same as above:</p><p>Please note the description of <a href=\"http://thebuildingcoder.typepad.com/blog/2014/11/picking-pairs-and-dimensioning-family-instance-origin.html\">dimensioning between instance insertion points</a>, plus these additional important aspects:</p><ul>\n<li>Set IncludeNonVisibleGeometry when requesting the element geometry.</li>\n<li>The geometry must be extracted from a view where the reference would be useful. In the example below, no View is passed to the geometry options. In that case, the model level geometry is extracted, which lacks view specific references like reference planes orthogonal to the view.</li>\n<li>Once you pass in a suitable view and obtain these extra references, there is nothing to identify them. You have to analyse the geometry to figure out which one is the one you need. For instance, for 2D views, reference planes may be returned as lines (Curve instances) instead of planes.</li>\n</ul><p><strong>Response:</strong>\n\nYes!</p><p>I now set the options like this:</p><pre class=\"code\">\n  <span class=\"teal\">Options</span> goption = <span class=\"blue\">new</span> <span class=\"teal\">Options</span>();\n  goption.ComputeReferences = <span class=\"blue\">true</span>;\n  goption.IncludeNonVisibleObjects = <span class=\"blue\">true</span>;\n  goption.View = doc.ActiveView;\n</pre><p>That returns the grid geometry and the problem is solved.</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "1316_dim_ref_hints",
    "header_text": "Dimensioning to the Wall Opening Wrapping Location",
    "local_header_href": "#dimensioning-to-the-wall-opening-wrapping-location",
    "chunk_text": "<h4>Dimensioning to the Wall Opening Wrapping Location</h4><p>Here is another query on dimensioning to a specific location that does not directly provide any built-in references of its own:</p><p><strong>Question:</strong>\n\nCan the API be used to create a dimension to the wrapping location of an insert in a wall?</p><p>Here is an example of the desired dimension:</p><center>\n<img alt=\"Dimension to wall opening wall wrap location\" src=\"img/dimension_to_wall_opening_wall_wrap_location.png\" width=\"309\"/>\n</center><p>If it is not possible to get a reference to this location, can the location be found so a detail line can be created which could be used for the dimension?</p><p><strong>Answer:</strong>\n\nYes, this location can be found as described in the discussion on <a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/retrieving-detailed-wall-layer-geometry.html\">retrieving detailed wall layer geometry</a>. </p>"
  }
]