[
  {
    "original_filename": "0899_schedules_on_sheet",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0899_schedules_on_sheet",
    "header_text": "Retrieving Schedules on a Sheet",
    "local_header_href": "#retrieving-schedules-on-a-sheet",
    "chunk_text": "<h3>Retrieving Schedules on a Sheet</h3><p><a href=\"http://redbolts.com\">Guy Robinson</a> recently\n\nexplained an easy way to\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/12/accessing-all-element-in-a-schedule.html\">\naccess all elements in a schedule</a>.\n\n<p><a href=\"http://www.facebook.com/profile.php?id=100003616852588\">\nVictor Chekalin</a> picked up and expanded on that.\n\n<p>Here is his solution to retrieve all schedules in a view and elements from a schedule.\nIn his own words:</p>\n<p>One wonderful day I had to retrieve schedules which are presented on a\nsheet:</p>\n<center>\n<img alt=\"Schedules on a sheet\" src=\"img/vc_schedules_on_sheet_1.png\"/>\n</center>\n<p>At first I looked at the Revit API Help but unfortunately there is no method such as GetSchdulesOnView in the ViewSheet class.\nThere is no explicit way to get it.\nAfter a couple of hours trying to achieve that I need I encountered Guy's simple solution to\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/12/accessing-all-element-in-a-schedule.html\">\naccess all elements in a schedule</a>.\n\nThe solution is use FilteredElementCollector and pass in the element id of the view in which you want to collect elements.\n\n<p>I created the following simple extension method GetSchedules to get schedules on view:\n\n<pre class=\"code\">\n  <span class=\"blue\">public</span> <span class=\"blue\">static</span> <span class=\"blue\">class</span> <span class=\"teal\">ViewSheetExtensions</span>\n  {\n    <span class=\"blue\">public</span> <span class=\"blue\">static</span> <span class=\"teal\">IEnumerable</span>&lt;<span class=\"teal\">ViewSchedule</span>&gt;\n      GetSchedules( <span class=\"blue\">this</span> <span class=\"teal\">ViewSheet</span> viewSheet )   \n    {\n      <span class=\"blue\">var</span> doc = viewSheet.Document;\n \n      <span class=\"teal\">FilteredElementCollector</span> collector =\n        <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>(\n          doc, viewSheet.Id );\n \n      <span class=\"blue\">var</span> scheduleSheetInstances =\n        collector\n          .OfClass( <span class=\"blue\">typeof</span>( <span class=\"teal\">ScheduleSheetInstance</span> ) )\n          .ToElements()\n          .OfType&lt;<span class=\"teal\">ScheduleSheetInstance</span>&gt;();\n \n      <span class=\"blue\">foreach</span>( <span class=\"blue\">var</span> scheduleSheetInstance <span class=\"blue\">in</span>\n        scheduleSheetInstances )\n      {\n        <span class=\"blue\">var</span> scheduleId =\n          scheduleSheetInstance\n            .ScheduleId;\n \n        <span class=\"blue\">if</span>( scheduleId == <span class=\"teal\">ElementId</span>.InvalidElementId )\n          <span class=\"blue\">continue</span>;\n \n        <span class=\"blue\">var</span> viewSchedule =\n          doc.GetElement( scheduleId )\n          <span class=\"blue\">as</span> <span class=\"teal\">ViewSchedule</span>;\n \n        <span class=\"blue\">if</span>( viewSchedule != <span class=\"blue\">null</span> )\n          <span class=\"blue\">yield</span> <span class=\"blue\">return</span> viewSchedule;\n      }\n    }\n  }\n</pre>\n<p>It can be used like this:\n\n<pre class=\"code\">\n  <span class=\"blue\">var</span> schedules = viewSheet\n    .GetSchedules()\n    .ToList();\n\n  <span class=\"blue\">foreach</span>( <span class=\"blue\">var</span> viewSchedule <span class=\"blue\">in</span> schedules )\n  {\n    <span class=\"green\">// Do something</span>\n  }\n</pre>\n<p>Here is the demo result:</p>\n<center>\n<img alt=\"Demo result\" src=\"img/vc_schedules_on_sheet_2.png\" width=\"400\"/>\n</center>\n<p>But I decided not to stop and go deeper.\nThe next step is to get all elements which are involved in a schedule.\nThe approach is the same as with schedules. Using FiltereredElementCollector but instead of the ViewSheet element id we pass in the ViewSchedule id.\n\n<p>The extension method is similar:\n\n<pre class=\"code\">\n  <span class=\"blue\">public</span> <span class=\"blue\">static</span> <span class=\"blue\">class</span> <span class=\"teal\">ViewScheduleExtensions</span>\n  {\n    <span class=\"blue\">public</span> <span class=\"blue\">static</span> <span class=\"teal\">IEnumerable</span>&lt;<span class=\"teal\">ElementId</span>&gt;\n      GetElementIdsInSchedule(\n        <span class=\"blue\">this</span> <span class=\"teal\">ViewSchedule</span> viewSchedule )\n    {\n      <span class=\"blue\">var</span> doc = viewSchedule.Document;\n \n      <span class=\"teal\">FilteredElementCollector</span> collector =\n        <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>(\n          doc, viewSchedule.Id );\n \n      <span class=\"blue\">var</span> elementIds = collector\n        .WhereElementIsNotElementType()\n        .ToElementIds();\n \n      <span class=\"blue\">return</span> elementIds;\n    }\n  }\n</pre>\n<p>But there is an additional little nuance.\nIf I retrieve elements from a material takeoff schedule, the method will return all materials in the project together with other elements. The solution is to just skip all elements which are materials:</p>\n<pre class=\"code\">\n  <span class=\"blue\">foreach</span>( var id <span class=\"blue\">in</span> elementIds )\n  {\n    var element = doc.GetElement( id );\n \n    <span class=\"blue\">if</span>( element <span class=\"blue\">is</span> <span class=\"teal\">Material</span> )\n      <span class=\"blue\">continue</span>;\n \n    <span class=\"green\">// Do something</span>\n  }\n</pre>\n<p>Here is the result of my demo project:</p>\n<center>\n<img alt=\"Demo result\" src=\"img/vc_schedules_on_sheet_3.png\" width=\"400\"/>\n</center>\n<p>I attached the\n\n<a href=\"zip/VcScheduleAPIDemo.zip\">\ndemo Visual Studio solution and Revit project</a>.\n\n<p>I hope this information will useful for developers.\n\n<p>Have a nice day,\n<br/>Victor.\n</p></p></p></p></p></p></p></p></p></p>"
  }
]