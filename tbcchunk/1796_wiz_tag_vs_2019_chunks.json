[
  {
    "original_filename": "1796_wiz_tag_vs_2019",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</head>\n\n<!---\n\n\ntwitter:\n\nVisual Studio 2019 tags for the #RevitAPI add-in wizard template @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/vs2019wizard\n\nA small enhancement to the Visual Studio Revit Add-in Template, and another interesting little AI surprise\n&ndash; Template tags for Visual Studio 2019\n&ndash; My wizard works again\n&ndash; OpenAI plays hide and seek and breaks the game...\n\nlinkedin:\n\nVisual Studio 2019 tags for the #RevitAPI add-in wizard template\n\nhttp://bit.ly/vs2019wizard\n\nA small enhancement to the Visual Studio Revit Add-in Template, and another interesting little AI surprise:\n\n- Template tags for Visual Studio 2019\n- My wizard works again\n- OpenAI plays hide and seek and breaks the game...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<p style=\"font-size: 80%; font-style:italic\"></p>\n\n-->"
  },
  {
    "original_filename": "1796_wiz_tag_vs_2019",
    "header_text": "Visual Studio 2019 Revit Add-in Template Tags",
    "local_header_href": "#visual-studio-2019-revit-add-in-template-tags",
    "chunk_text": "### Visual Studio 2019 Revit Add-in Template Tags\n\nA small enhancement to the Visual Studio Revit Add-in Template, and another interesting little AI surprise:\n\n- [Template tags for Visual Studio 2019](#2)\n- [My wizard works again](#3)\n- [OpenAI plays hide and seek and breaks the game](#4)"
  },
  {
    "original_filename": "1796_wiz_tag_vs_2019",
    "header_text": "Template Tags for Visual Studio 2019",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Template Tags for Visual Studio 2019\n\n[WinterXMQ](https://github.com/WinterXMQ) submitted \n[pull request #10 &ndash; Add template tag for Visual Studio 2019](https://github.com/jeremytammik/VisualStudioRevitAddinWizard/pull/10) to \nthe [Visual Studio Revit Add-In Wizards](https://thebuildingcoder.typepad.com/blog/about-the-author.html#5.20), saying:\n> Support for Visual Studio 2019, but not tested in the other versions of Visual Studio.\n\n<center>\n<img src=\"img/winterxmq_wizard_tags.png\" alt=\"Template Tags for Visual Studio 2019\" width=\"595\">\n</center>\n\nI integrated the request in [release 2020.0.0.3](https://github.com/jeremytammik/VisualStudioRevitAddinWizard/releases/tag/2020.0.0.3).\n\nMany thanks to WinterXMQ for this enhancement!"
  },
  {
    "original_filename": "1796_wiz_tag_vs_2019",
    "header_text": "My Wizard Works Again",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> My Wizard Works Again\n\nThat prompted me to finally get my wizard working again on my new PC.\nIt previously was not, and I had no idea why.\nThe StackOverflow answer on [no templates in Visual Studio 2017](https://stackoverflow.com/questions/41189398/no-templates-in-visual-studio-2017) prompted me to check my VS settings in Options &gt; Projects and Solutions &gt; Locations.\nLo and behold, the content was messed up (by Parallels?).\nResetting it to the default *C:\\Users\\jta\\Documents\\Visual Studio 2017\\Templates\\ProjectTemplates* fixed everything, and I was able to verify that the wizard still works for Visual Studio 2017 after the addition of WinterXMQ's new tags."
  },
  {
    "original_filename": "1796_wiz_tag_vs_2019",
    "header_text": "OpenAI Plays Hide and Seek and Breaks the Game",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> OpenAI Plays Hide and Seek and Breaks the Game\n\nAnother amusing and fascinating example of AI coming up with unexpected innovative solutions is described by the three-minute video\non [multi-agent hide and seek](https://youtu.be/kopoLzvh5jY):\n\n> Weâ€™ve observed agents discovering progressively more complex tool use while playing a simple game of hide-and-seek.\nThrough training in our new simulated hide-and-seek environment, agents build a series of six distinct strategies and counterstrategies, some of which we did not know our environment supported.\nThe self-supervised emergent complexity in this simple environment further suggests that multi-agent co-adaptation may one day produce extremely complex and intelligent behaviour.\n\n<center>\n<iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/kopoLzvh5jY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</center>\n\nMore detail is provided in the corresponding article\non [emergent tool use from multi-agent interaction](https://openai.com/blog/emergent-tool-use).\n\n<!--\n<center>\n<img src=\"img/ai_hide_and_seek.png\" alt=\"AI hide and seek\" width=\"443\">\n</center>\n-->"
  }
]