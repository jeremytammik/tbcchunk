[
  {
    "original_filename": "1925_2022_1_bld_inst_dev",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- Revit 2022.1 SDK posting\n  https://www.autodesk.com/developer-network/platform-technologies/revit\n\n- Revit 2022.1 API unintended breaking change\n  Revit 2022.1 unfortunately introduced a breaking change.\n  https://autodesk.slack.com/archives/C0SR6NAP8/p1635432979033800\n  Revit team is working on Knowledge Base article.\n  RevitApi 2022 update change WallCrossSection to WallCrossSectionDefinition\n  https://forums.autodesk.com/t5/revit-api-forum/revitapi-2022-update-change-wallcrosssection-to/td-p/10720345\n  The good news is the same enum value like @jeremy.tammik comment, I did not test but this code should work in both versions 2022.0 and 2022.1\n  // BuiltInParameterGroup.PG_WALL_CROSS_SECTION_DEFINITION; // -5000228,\n  // BuiltInParameterGroup.PG_WALL_CROSS_SECTION; // -5000228,\n  var PG_WALL_CROSS_SECTION = (BuiltInParameterGroup)(-5000228);\n\n- img/revitlookup_installer.png\n\ntwitter:\n\nadd #thebuildingcoder\n\nRevit 2022.1 SDK, RevitLookup build and install and The Building Coder samples revamped for the #RevitAPI #DynamoBim @AutodeskForge @AutodeskRevit #bim #ForgeDevCon https://autode.sk/sdk2022_1\n\nExciting news with a lot of changes to RevitLookup and The Building Coder samples\n&ndash; Revit 2022.1 SDK released\n&ndash; <code>WallCrossSection</code> vs. <code>WallCrossSectionDefinition</code>\n&ndash; RevitLookup build and install\n&ndash; Bye-bye lookup builds\n&ndash; The Building Coder samples revamped\n&ndash; Copy as HTML update\n&ndash; Image cleanup and a robot arm...\n\nlinkedin:\n\nRevit 2022.1 SDK, RevitLookup build and install and The Building Coder samples revamped for the #RevitAPI\n\nhttps://autode.sk/sdk2022_1\n\nExciting news with a lot of changes to RevitLookup and The Building Coder samples:\n\n- Revit 2022.1 SDK released\n- WallCrossSection vs. WallCrossSectionDefinition\n- RevitLookup build and install\n- Bye-bye lookup builds\n- The Building Coder samples revamped\n- Copy as HTML update\n- Image cleanup and a robot arm...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n**Question:** \n\n**Answer:**\n\n**Response:**  \n\nMany thanks to  for this very helpful explanation!\n\n<pre class=\"code\">\n</pre>\n\n-->"
  },
  {
    "original_filename": "1925_2022_1_bld_inst_dev",
    "header_text": "Revit 2022.1 SDK, RevitLookup Build and Install",
    "local_header_href": "#revit-20221-sdk-revitlookup-build-and-install",
    "chunk_text": "### Revit 2022.1 SDK, RevitLookup Build and Install\n\nExciting news with a lot of changes to RevitLookup and The Building Coder samples:\n\n- [Revit 2022.1 SDK released](#2)\n- [`WallCrossSection` vs. `WallCrossSectionDefinition`](#3)\n- [RevitLookup build and install](#4)\n- [Bye-bye lookup builds](#5)\n- [The Building Coder samples revamped](#6)\n- [Copy as HTML update](#7)\n- [Image cleanup and a robot arm](#8)"
  },
  {
    "original_filename": "1925_2022_1_bld_inst_dev",
    "header_text": "Revit 2022.1 SDK Released",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Revit 2022.1 SDK Released\n\nThe Revit 2022.1 SDK has been released in \nthe [Revit Developer Center](https://www.autodesk.com/developer-network/platform-technologies/revit).\n\nThe initial Revit 2022 SDK dates from April 12, 2021.\n\nThe updated Revit 2022.1 SDK was released on October 28, 2021.\n\nIt includes important enhancements addressing new Revit product functionality and developer wishes and requests.\nA list of what's new is provided in the SDK documentation in the *What's New* section and the *Changes and Additions* document.\nI'll put that information online for easier searching and finding asap."
  },
  {
    "original_filename": "1925_2022_1_bld_inst_dev",
    "header_text": "WallCrossSection vs. WallCrossSectionDefinition",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> WallCrossSection vs. WallCrossSectionDefinition\n\nThe Revit 2022.1 unfortunately introduced a breaking change:\n\n`WallCrossSection` was renamed to `WallCrossSectionDefinition`\n\nThe Revit team is working on a knowledge base article to document this and provide a recommendation on how to handle it.\n\nThe issue was brought to our attention by [@ricaun](https://github.com/ricaun), Luiz Henrique Cassettari, in\nhis [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [RevitApi 2022 update change WallCrossSection to WallCrossSectionDefinition](https://forums.autodesk.com/t5/revit-api-forum/revitapi-2022-update-change-wallcrosssection-to/td-p/10720345):\n\n**Question:** I was messing with `GroupTypeId` and found something interesting and a little worrying.\n\nOn my computer, I have the Revit 2022 first release.\n\n- Product Version: 20210224_1515(x64)\n- RevitApi.dll Version: 22.0.2.392\n\nMy plugin application uses\nthe NuGet package [Revit_All_Main_Versions_API_x64](https://www.nuget.org/packages/Revit_All_Main_Versions_API_x64),\nand I usually use the last version:\n\n- Product Version: 20210921_1515(x64)\n- RevitApi.dll Version: 22.1.1.516\n\nThe `GroupTypeId` property `WallCrossSection` changed to `WallCrossSectionDefinition` in the Revit 2022.1 update.\n\nIf I use the old property, it will throw an exception on the new version.\n\nI use the new one, the first Revit 2022 release will break.\n\nI will probably never use this `ForgeTypeId`, but I worry that other things could change in this update.\n\nShould I be worried about my application breaking each time a new Hotfix is released?\n\n**Answer:** Very sorry about this mishap!\n\nNo, you should not need to worry about that; this is an exceptional case and an error in the update release.\n\nThank you very much for pointing it out!\n\nThis launched a significant discussion in the development team.\n\nFirst of all, it did indeed happen as you noted.\n\nSecondly, it should not have happened.\n\nThey are discussing both how to handle this specific issue and how to prevent anything similar from occurring in the future.\n\nThe simple workaround for the moment is to use the integer value of the enum to cover both 2022.0 and 2022.1.\n\nThey discussed reverting back again in future updates, but that would cause even more disruption.\n\nThey discussed defining both enumerations with the same underlying integer values.\n\nFor the moment, just using the underlying integers is the safest way to go, I guess:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;BuiltInParameterGroup.PG_WALL_CROSS_SECTION_DEFINITION;&nbsp;//&nbsp;-5000228,</span>\n&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;BuiltInParameterGroup.PG_WALL_CROSS_SECTION;&nbsp;//&nbsp;-5000228,</span>\n&nbsp;&nbsp;var&nbsp;PG_WALL_CROSS_SECTION&nbsp;=&nbsp;(BuiltInParameterGroup)&nbsp;(-5000228);\n</pre>"
  },
  {
    "original_filename": "1925_2022_1_bld_inst_dev",
    "header_text": "RevitLookup Build and Install",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> RevitLookup Build and Install\n\nMoving on to more positive news, we were blessed last week with a very exciting contribution to create\na [modeless version of RevitLookup](https://thebuildingcoder.typepad.com/blog/2021/10/bridges-regeneration-and-modeless-revitlookup.html).\n\nThis rapid evolution continues with an untiring stint of contributions\nfrom Roman [@Nice3point](https://github.com/Nice3point) and\nhis extensive series of pull requests:\n\n- [100](https://github.com/jeremytammik/RevitLookup/pull/100) &ndash; Fix naming and implement pattern matching\n- [101](https://github.com/jeremytammik/RevitLookup/pull/101) &ndash; Cleanup and build system\n- [102](https://github.com/jeremytammik/RevitLookup/pull/102) &ndash; Changelog and remove unused files \n- [104](https://github.com/jeremytammik/RevitLookup/pull/104) &ndash; Fix snoop db exception \n- [105](https://github.com/jeremytammik/RevitLookup/pull/105) &ndash; Update badges \n- [107](https://github.com/jeremytammik/RevitLookup/pull/107) &ndash; Renaming \n- [108](https://github.com/jeremytammik/RevitLookup/pull/108) &ndash; Multi-version installer \n- [110](https://github.com/jeremytammik/RevitLookup/pull/110) &ndash; Update Readme.md \n\nAs a result, RevitLookup now boasts a modern up-to-date build system, a multi-version installer, a separate GitHub developer branch `dev`, and many other enhancements:\n\n<center>\n<img src=\"img/revitlookup_installer.png\" alt=\"RevitLookup installer\" title=\"RevitLookup installer\" width=\"517\"/> <!-- 1034 -->\n</center>\n\nHere are some of Roman's explanations from our pull request conversations:\n\n- Corrected the style of the code in accordance with the latest guidelines. Access modifiers and some unused variables and methods are not affected. The .sln file has been moved to the root folder, otherwise the development environment will not capture the installer project and other supporting files.\n- In recent commits, I have integrated the build system from my template https://github.com/Nice3point/RevitTemplates. Now the installer will build directly to github. After installation, I launched Revit, everything seems to work. For debugging added copying to AppData\\Roaming\\Autodesk\\Revit\\Addins\\2022. To local build, net core 5 is required. If you still have version 3, please update\n- You can check how git action works here https://github.com/Nice3point/RevitLookup/actions/runs/1392275582 Artifacts will have an installer\n- to build installer on local machine install this via terminal dotnet tool install Nuke.GlobalTool --global Then you can run nuke command. Watch the video https://github.com/Nice3point/RevitTemplates/wiki/Installer-creation\n- moved the changelog to a separate file.\n- I think you can use this to automatically create a release https://github.com/marketplace/actions/create-release or https://github.com/marketplace/actions/automatic-releases or https://github.com/marketplace/actions/github-upload-release-artifacts\n- Removed the version numbers from the .csproj file. This is redundant information and removes duplication. This solution is not a nuget package and is not used in other projects. Therefore, the most correct decision is to change the installer version number, the dll version number in this case does not affect anything. For now, all you need to remember is to update the version number here https://github.com/jeremytammik/RevitLookup/blob/master/installer/Installer.cs#L19 and generate a new guid https://github.com/jeremytammik/RevitLookup/blob/master/installer/Installer.cs#L37 after Revit 2023 is released\n- Now the version of the file will be the same for the installer and dll. Will only be listed in the RevitLookup.csproj file\n- The `20` prefix in `2022` can be left to keep the usual versioning. Here's what I found about the version limitation in Windows http://msdn.microsoft.com/en-us/library/aa370859%28v=vs.85%29.aspx\n- Added all the latest versions of the plugin to the installer. DLLs are stored in the \"Releases\" folder, if you think that some versions are too outdated, delete the folder from there, the build system picks up the builds automatically, no hardcode. Adding the current assembly, now it is 2022, is not necessary, will cause a conflict. The current assembly is added after the project is compiled\n- Kept the old documentation somewhere, as history, for nostalgic reasons, in honour of Jim Awe. It is authored by Jim Awe, the original implementor of both RevitLookup and the corresponding AutoCAD snooping tool, so it has historical value in itself, i think.\n- you don't need to run nuke to debug. Only the green arrow on the VisualStudio panel. Nuke is used only for the purpose of building a project, it simplifies building if, for example, the project has several configurations, for example, for the 20th, 21st and 22nd versions of revit, Nuke build all dll variants at once. The build system is only needed to release a product.\n- Also, the project was refactored taking into account the latest versions of the C# language.\nSome places have been optimized; for the ribbon, I created extension methods to enable shortening of lengthy repetitive data like this:\n<pre class=\"code\">\n&nbsp;&nbsp;optionsBtn.AddPushButton(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">PushButtonData</span>(<span style=\"color:#a31515;\">&quot;&nbsp;HelloWorld&nbsp;&quot;</span>,<span style=\"color:#a31515;\">&quot;&nbsp;Hello&nbsp;World&nbsp;...&nbsp;&quot;</span>,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExecutingAssemblyPath,&nbsp;<span style=\"color:blue;\">typeof</span>&nbsp;(HelloWorld)&nbsp;.FullName));\n</pre>\nIt can now be written like this:\n<pre class=\"code\">\n&nbsp;&nbsp;optionsBtn.AddPushButton(<span style=\"color:blue;\">typeof</span>&nbsp;(HelloWorld),\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;&nbsp;HelloWorld&nbsp;&quot;</span>,<span style=\"color:#a31515;\">&quot;&nbsp;Hello&nbsp;World&nbsp;...&nbsp;&quot;</span>);\n</pre>\nThe latest versions of the C# language allow you to write like this:\n<pre class=\"code\">\n  MApp.DocumentClosed += m_app_DocumentClosed;\n</pre>\ninstead of\n<pre class=\"code\">\n&nbsp;&nbsp;m_app.DocumentClosed&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;+=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;EventHandler&lt;Autodesk.Revit.DB.Events.DocumentClosedEventArgs&gt;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_app_DocumentClosed);\n</pre>\n\nEver so many thanks to Roman for all his inspired work moving this tool forward and especially his untiring efforts supporting me getting to grips with the new technology!"
  },
  {
    "original_filename": "1925_2022_1_bld_inst_dev",
    "header_text": "Bye-Bye Lookup Builds",
    "local_header_href": "#5",
    "chunk_text": "####<a name=\"5\"></a> Bye-Bye Lookup Builds\n\nUntil now, you could download the most recent build of RevitLookup\nfrom [lookupbuilds.com](https://lookupbuilds.com),\nprovided by [Build Informed](https://www.buildinformed.com),\n[implemented back in 2017](https://thebuildingcoder.typepad.com/blog/2017/04/forgefader-ui-lookup-builds-purge-and-room-instances.html#3) and\ndiligently maintained ever since by [Peter Hirn](https://github.com/peterhirn).\n\nThe new build system broke that and replaces it, as discussed in\nthe [issue #103 &ndash; Gitlab pipeline broken](https://github.com/jeremytammik/RevitLookup/issues/103).\n\nEver so many thanks once again to Peter for all his work setting up and supporting lookupbuilds over the past years!"
  },
  {
    "original_filename": "1925_2022_1_bld_inst_dev",
    "header_text": "The Building Coder Samples Revamped",
    "local_header_href": "#6",
    "chunk_text": "####<a name=\"6\"></a> The Building Coder Samples Revamped\n\nAs if all the above were not enough, Roman also went ahead and\nrevamped [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples),\nsubmitting [pull request #18 &ndash; Refactoring](https://github.com/jeremytammik/the_building_coder_samples/pull/18):\n\n> Same as for RevitLookup.\nI did not add a build system, there is only one command in the project that displays a small dialog box.\nSwitched msbuild to Net SDK, now the .csproj file contains much fewer lines.\nAdded automatic copying of dll and addin to Revit addins folder.\nSome variables cannot be renamed as it causes conflicts, manual renaming will take too long, left as is.\nThere are some unoptimized sections left in the project, but their fixing requires manual labour, there are a lot of files, so I left it as it is.\nChangelog has been moved to a separate file.\nMainly this is the addition of new features of the latest versions of C#, refactoring according to the latest guidelines.\n\nIntegrated and cursorily tested\nin [release 2022.1.152.2](https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2022.1.152.2).\n\nMany thanks again to Roman for this!\n\nNow I just have to figure out how to get back my preferred personal C# editor and formatting settings..."
  },
  {
    "original_filename": "1925_2022_1_bld_inst_dev",
    "header_text": "Copy as HTML Update",
    "local_header_href": "#7",
    "chunk_text": "####<a name=\"7\"></a> Copy as HTML Update\n\nWith the revamped version of The Building Coder Samples, I also finally moved from Visual Studio 2017 to 2019 to compile it.\nI hope I am the last of the Revit add-in developer community to do so.\n\nIt lacked the `Copy as HTML` option that I use for C# source code colourisation, so I revisited my 2019 note\non [updating Copy as HTML](https://thebuildingcoder.typepad.com/blog/2019/09/face-intersect-face-is-unbounded.html#5) and\nagain installed\nthe [Productivity Power Tools 2017/2019](https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.ProductivityPowerPack2017) via\nExtensions &gt; Manage Extensions."
  },
  {
    "original_filename": "1925_2022_1_bld_inst_dev",
    "header_text": "Image Cleanup and a Robot Arm",
    "local_header_href": "#8",
    "chunk_text": "####<a name=\"8\"></a> Image Cleanup and a Robot Arm\n\nFinally, two nice little snippets that caught my attention, a useful image editor tool and impressive novel hardware technology:\n\n- [Quick and free alternative for cleaning up artifacts in images](https://cleanup.pictures)\n- [Robotic arm with full range of motion and static strength](https://youtu.be/guDIwspRGJ8)"
  }
]