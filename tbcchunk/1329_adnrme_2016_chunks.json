[
  {
    "original_filename": "1329_adnrme_2016",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<!-- <script src=\"http://thebuildingcoder.typepad.com/google-code-prettify/run_prettify.js\"></script>-->\n</head>"
  },
  {
    "original_filename": "1329_adnrme_2016",
    "header_text": "ArchSample, Active Transaction and AdnRme for 2016",
    "local_header_href": "#archsample-active-transaction-and-adnrme-for-2016",
    "chunk_text": "<h3>ArchSample, Active Transaction and AdnRme for 2016</h3><p>Today, let me point out ArchSample, a heretofore unmentioned Revit SDK sample that I happened to notice answering a recent case, how to determine a currently active transaction, and an update to the ADN Revit MEP sample AdnRme:</p><ul>\n<li><a href=\"#2\">ArchSample and Retrieving Element Properties</a></li>\n<li><a href=\"#3\">How to determine active or current transaction</a></li>\n<li><a href=\"#4\">AdnRme for Revit MEP 2016</a></li>\n</ul><p>Before getting to those, let me add that I am still travelling in Greece, heading back to Athens now from the Greek island of\n<a href=\"https://en.wikipedia.org/wiki/Euboea\">Euboea</a> on my way to the second\n<a href=\"http://www.meetup.com/I-love-3D-Athens\">I love 3D – Athens</a> meetup\nthis evening, followed by the\n<a href=\"http://angelhack.com/hackathon/athens-2015\">AngelHack hackathon</a> this weekend.\nFor more details, please refer to\n<a href=\"http://the3dwebcoder.typepad.com/blog/2015/06/athens-angelhack-hackathon-and-nodejs-rest-workshop.html#2\">\nThe 3D Web Coder</a>.</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "1329_adnrme_2016",
    "header_text": "ArchSample and Retrieving Element Properties",
    "local_header_href": "#archsample-and-retrieving-element-properties",
    "chunk_text": "<h4>ArchSample and Retrieving Element Properties</h4><p>This was prompted by a recent case on retrieving the element properties of a model:</p><p><strong>Question:</strong>\n\nI am trying to traverse the Revit model to access all element properties.</p><p>For this, I am retrieving the elements from a filtered element collector.</p><p>Now I would like to get the data shown in the property palette for each element.</p><p>Is there any way to get the collection of all the properties associated with an element?</p><p><strong>Answer:</strong>\n\nYes, certainly; this is pretty easy.</p><p>In fact, it is covered by the <a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#2\">Revit API getting started material</a>.</p><p>Please work through that and you will see for yourself.</p><p>Thank you!</p><p>In short, there are a couple of properties and methods on the Revit Element class to look at, e.g., Parameters and the various overloads of GetParameter.\nRead about those in the Revit API help file RevitAPI.chm.</p><p>Once you have done that, you can take a look at the Revit SDK ArchSample sample add-in – I believe it already does almost exactly what you are asking for.</p><p>It is very similar to the external command Lab4_2_ExportParametersToExcel defined in both C# and VB by the\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/09/adn-labs-xtra-on-github-and-rvtva3c-in-threejs.html#4\">\nADN Revit API Xtra training material</a>... not yet migrated to Revit 2016, though.</p><p>The FireRating Revit SDK sample demonstrates both export and import, in VB, of a custom shared parameter.</p><p>This functionality is also duplicated in C# by three ADN Xtra commands:</p><ul>\n<li>Lab4_3_1_CreateAndBindSharedParam</li>\n<li>Lab4_3_2_ExportSharedParamToExcel</li>\n<li>Lab4_3_3_ImportSharedParamFromExcel</li>\n</ul><p>Actually, you can search the Revit SDK main Visual Studio solution globally for 'Excel' and other keywords to find several further related samples.</p><p>I hope this helps.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1329_adnrme_2016",
    "header_text": "How to Determine if there is an Active or Current Transaction",
    "local_header_href": "#how-to-determine-if-there-is-an-active-or-current-transaction",
    "chunk_text": "<h4>How to Determine if there is an Active or Current Transaction</h4><p>Yet another helpful clarification on transactions by Arnošt Löbel:</p><p><strong>Question:</strong>\n\nIs there any way to determine if there is an active or current transaction?</p><p><strong>Answer:</strong>\n\nYes, there is. However, the answer depends on what you mean by active and current transaction. Should I assume you mean the same thing by both the words – that is the active transaction that may be currently open (i.e. between Start and either Commit or RollBack) in a given document?</p><p>If so, there is a way:</p><p>If Document.IsModifiable returns TRUE, then there is an active transaction open in that document.</p><p>However, if IsModifiable returns FALSE, it does not necessarily mean there is no active transaction.\nIt can also mean that there is a transaction except that the document cannot be modified regardless, for example during a failure resolution.\nA true indicator of a situation when there is no active transaction in a document is that when both IsModifiable and IsReadOnly returns FALSE.</p><p>You should also read the remarks on the Document.IsModifiable property in the Revit API help file RevitAPI.chm:</p><p>\"This is not a permanent state such as, for example IsReadOnlyFile.\nValue of this property can change dynamically multiple times within the lifetime of an open document.\nRegardless of the mode a document is opened with, the model can only be modified inside an open transaction.\nFurthermore, even with a transaction open, the model is not always modifiable.\nThough this is rather a rare situation, it can happen, most likely during model regeneration, failure processing, or some events.\nAn attempt to modify a non-modifiable document will result in throwing a ModificationOutsideTransactionException.\"</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "1329_adnrme_2016",
    "header_text": "AdnRme for Revit MEP 2016",
    "local_header_href": "#adnrme-for-revit-mep-2016",
    "chunk_text": "<h4>AdnRme for Revit MEP 2016</h4><p>I migrated the ADN MEP sample AdnRme to Revit MEP 2016.</p><p>The migration was absolutely trivial, simply changing the Revit API assembly references to point to the new version.</p><p>Zero errors and zero warnings.</p><p>The most up-to-date version is always provided in the\n<a href=\"https://github.com/jeremytammik/AdnRme\">AdnRme GitHub repository</a>,\nand the first Revit 2016 version is now available from there as\n<a href=\"https://github.com/jeremytammik/AdnRme/releases/tag/2016.0.0.0\">release 2016.0.0.0</a>.</p>"
  }
]