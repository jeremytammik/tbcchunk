[
  {
    "original_filename": "1983_geo_opt_curve",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- cleaning up and simplifying curve loops\nBenoit Favre, CEO of [etudes &amp; automates](http://www.etudesetautomates.com)\nBoundary Segments Issue\nhttps://forums.autodesk.com/t5/revit-api-forum/boundary-segments-issue/m-p/11732446#M69140\nFunny to get this very old post alive.\nI'd change my answer from the time and say:\n- sometimes the BoundarySegment list is holed (around windows and at the end of walls ending in the middle of the Room). So you have to close the List, practically we add another Segment to the List.\n- check either Douglas Peucker or Visvaligham algorithms, easy to implement and very useful. At least that's what we use and these work fine for us.\ndouglas peucker algorithm\nhttps://duckduckgo.com/?q=douglas+peucker+algorithm\nRamer–Douglas–Peucker algorithm\nhttps://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm\nvisvalingam algorithm\nhttps://duckduckgo.com/?q=visvalingam+algorithm\nVisvalingam–Whyatt algorithm\nhttps://en.wikipedia.org/wiki/Visvalingam%E2%80%93Whyatt_algorithm\nMany thanks to Benoit for the interesting pointer!\n\n- clarifying geometry options, app.Create.NewGeometryOptions, \n  Find Centroid of wall in Revit API\n  https://forums.autodesk.com/t5/revit-api-forum/find-centroid-of-wall-in-revit-api/m-p/11748826\n\n- Greg version of JtClicker in 2023\n  Jacopo Chiappetti\n  Senior Analyst & Developer\n  One Team srl\n  Some annotations, schedules, view templates, filters, and views related to analytical elements might be modified or lost during the upgrade process\n  https://forums.autodesk.com/t5/revit-api-forum/some-annotations-schedules-view-templates-filters-and-views/m-p/11721147\n\n- A awesome package for MEP, Computational Design Inside Dynamo Revit\nhttps://github.com/chuongmep/OpenMEP\nOpenMEP Package also includes a comprehensive library of MEP components, making it easy to select and incorporate the right components into your design.This library includes a wide range of mechanical, electrical, and plumbing components, including pipes, fittings, valves, ducts, electrical equipment, and more fully automate your design process in design, maintenance, calculation and analysis,...\nI believe that the MEP Package will be a valuable asset to construction professionals looking to streamline the MEP design process and ensure that their projects are completed on time and within budget.\nhttps://www.linkedin.com/posts/chuongmep_opensource-dynamo-autodesk-activity-7033100499461570561-OUfG?utm_source=share&utm_medium=member_desktop\nChuong Ho\nComputational Design Researcher | Autodesk Expert Elite\nHi everyone, today I want to tell you that a stable and long-term support package for MEP engineers open source has been released.\nOpen MEP Package also includes a comprehensive library of MEP components, making it easy to select and incorporate the right components into your design. This library includes a wide range of mechanical, electrical, and plumbing components, including pipes, fittings, valves, ducts, electrical equipment, and more fully automate your design process in design, maintenance, calculation and analysis,...\nI believe that the MEP Package will be a valuable asset to construction professionals looking to streamline the MEP design process and ensure that their projects are completed on time and within budget.\nDiscuss on forum : https://lnkd.in/gtAi8RUP\nOpen Source : https://lnkd.in/gcWvCCXK\nNow, I accept all ideas and all problems, contributions from all engineers, communities around the world.\n\n- [Why we all need subtitles now](https://www.youtube.com/watch?v=VYJtb2YXae8)\n\ntwitter:\n\nCurve loop simplification and clean up, geometry options clarification, JtClicker 2023 and the OpenMEP awesome @DynamoBIM package for MEP and computational design with the @AutodeskRevit #RevitAPI #BIM @AutodeskAPS https://autode.sk/simplifycurveloop\n\nGeometry options and clean simple curves\n&ndash; Curve loop simplify and clean up\n&ndash; Geometry options clarification\n&ndash; JtClicker 2023\n&ndash; OpenMEP by Chuong Ho\n&ndash; Unintelligible film dialogue...\n\nlinkedin:\n\nCurve loop simplification and clean up, geometry options clarification, JtClicker 2023 and the OpenMEP awesome Dynamo package for MEP and computational design with the #RevitAPI\n\nhttps://autode.sk/simplifycurveloop\n\n- Curve loop simplification and cleanup\n- Geometry options clarification\n- JtClicker 2023\n- OpenMEP by Chuong Ho\n- Unintelligible film dialogue...\n\n#BIM #DynamoBim #AutodeskAPS #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\" height=\"\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n<pre class=\"code\">\n</pre>\n\n-->"
  },
  {
    "original_filename": "1983_geo_opt_curve",
    "header_text": "Geometry Options and Clean Simple Curves",
    "local_header_href": "#geometry-options-and-clean-simple-curves",
    "chunk_text": "### Geometry Options and Clean Simple Curves\n\nToday, we look at important aspects of geometry handling and other useful stuff:\n\n- [Curve loop simplify and clean up](#2)\n- [Geometry options clarification](#3)\n- [JtClicker 2023](#4)\n- [OpenMEP by Chuong Ho](#5)\n- [Unintelligible film dialogue](#6)"
  },
  {
    "original_filename": "1983_geo_opt_curve",
    "header_text": "Curve Loop Simplify and Clean Up",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Curve Loop Simplify and Clean Up\n\nBenoit Favre, CEO of [etudes &amp; automates](http://www.etudesetautomates.com) shares\nsome interesting advice on how to simplify and clean up curve loops in \nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non a [boundary segments issue](https://forums.autodesk.com/t5/revit-api-forum/boundary-segments-issue/m-p/11732446#m69140):\n\nFunny to get this very old post alive.\n\nI'd change my answer from the first time and now say:\n\n- Sometimes the `BoundarySegment` list has gaps, e.g., around windows and at the end of walls ending in the middle of a room. \n  So, you have to close the gap; in practice, we add another segment to the list.\n- Check out either \n  the [Douglas Peucker](https://duckduckgo.com/?q=douglas+peucker+algorithm)\n  or [Visvaligham algorithm](https://duckduckgo.com/?q=visvalingam+algorithm);\n  they are easy to implement and very useful. \n  At least that's what we use, and they work fine for us.\n\nOn Wikipedia:\n\n- [Ramer–Douglas–Peucker algorithm](https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm)\n- [Visvalingam–Whyatt algorithm](https://en.wikipedia.org/wiki/Visvalingam%E2%80%93Whyatt_algorithm)\n\nMany thanks to Benoit for the interesting pointers!"
  },
  {
    "original_filename": "1983_geo_opt_curve",
    "header_text": "Geometry Options Clarification",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Geometry Options Clarification\n\nThe question on how to [find centroid of wall in Revit API](https://forums.autodesk.com/t5/revit-api-forum/find-centroid-of-wall-in-revit-api/m-p/11748826)\nprovided an opportunity to clarify the meaning of specific settings in the geometry `Options` and the use of the `NewGeometryOptions` method:\n\n- ComputeReferences\n- IncludeNonVisibleObjects\n\n[`ComputeReferences`](https://www.revitapidocs.com/2023/d7da6de4-74a9-60e2-826f-698a5730d0a8.htm) is \nonly needed if you require references to the geometry, e.g., for dimensioning purposes. \nFurthermore, it adds computational effort. \nTherefore, you should not set it to true unless needed, as explained in the 2010 article \non [Geometry Options](https://thebuildingcoder.typepad.com/blog/2010/01/geometry-options.html).\n\nThe effect of turning off `ComputeReferences` was recently benchmarked in the discussion \non [computing the correlation of objects in Revit](https://forums.autodesk.com/t5/revit-api-forum/computing-the-correlation-of-objects-in-revit/m-p/11701329/highlight/true#M68810):\n\nIt includes the final code and the benchmark results:\n\nPC specs:\n\n- CPU: 11th Gen Intel(R) Core(TM) i5-11400F @ 2.60GHz 2.59 GHz\n- GPU: NVidia GeForce GTX 1650\n- RAM: 32.0 GB\n- OS: Windows 10 Pro \n\nThe call to <i>BooleanOperationsUtils.ExecuteBooleanOperation(solidST, solidAR, BooleanOperationsType.Intersect)</i>\nis triggered 113,696 times, both lists columnsSTR and columnsARC have 336 items each.\n\n- Code runtime with `ComputeReferences` = true : 10.38 sec, AVG. 91.34 micro-seconds per intersection.\n- Code runtime with `ComputeReferences` = false : 9.52 sec, AVG. 83.76 micro-seconds per intersection.\n\n`IncludeNonVisibleObjects` is only required for certain supplementary graphical elements, e.g., \nfor [curtain walls](https://thebuildingcoder.typepad.com/blog/2010/05/curtain-wall-geometry.html).\nI am pretty sure that it is not required for such basic element geometry as solids.\n\nSo, I would leave both of those settings turned off in this case, set to their default value of false.\n\nFurthermore, I doubt that there is any difference between using `new Options` and `app.Create.NewGeometryOptions`. \n\nHowever, specifying a view argument in the options will definitely make a difference, depending on the view you supply. \nThat can be achieved using both `new Options` and `app.Create.NewGeometryOptions`."
  },
  {
    "original_filename": "1983_geo_opt_curve",
    "header_text": "JtClicker 2023",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> JtClicker 2023\n\nJacopo Chiappetti of [One Team srl](https://www.oneteam.it) shared \na new implementation of [JtClicker](https://github.com/jeremytammik/JtClicker) to\nprogrammatically dismiss a UI warning message in the thread \non [some annotations, schedules, view templates, filters, and views related to analytical elements might be modified or lost during the upgrade process](https://forums.autodesk.com/t5/revit-api-forum/some-annotations-schedules-view-templates-filters-and-views/m-p/11721147):\n\n**Question:** In Revit 2023, every time I open a model that contains at least one analytical element, a warning is displayed at the end of the process \nto [Upgrade the Analytical Model](https://help.autodesk.com/view/RVT/2023/ENU/?guid=GUID-E74EC52F-EFC6-4914-84B8-0119002A1C98): \n\"Some annotations, schedules, view templates, filters, and views related to analytical elements might be modified or lost during the upgrade process.\"\n\nThis error window doesn't seem to be trappable by code (i.e., `Application_FailuresProcessing`) and blocks the automatic process of the model (custom code), after it is opened, until it's closed by the user. \nIs there a way to eliminate the message or intercept it somehow?\n\n<center>\n<img src=\"img/jc_error_msg.png\" alt=\"JtClicker handles it\" title=\"JtClicker handles it\" width=\"349\"/> <!-- 349 x 231 pixels -->\n</center>\n\n**Answer:** Yes, definitely. \nIf worst comes to worst, you can use the native Windows API to catch and dismiss this dialogue. \nLook at the various options listed in The Building Coder topic group \non [detecting and handling dialogues and failures](https://thebuildingcoder.typepad.com/blog/about-the-author.html#5.32).\n\n**Response:** I cannot use `Application.FailuresProcessing` because it doesn't trap this warning.\nAlso, I cannot use `ControlledApplication.DialogBoxShowing`, as I use `IExternalDBApplication`, not `IExternalApplication`.\nHence, I have no access to any UI related functionality at all.\nSo, the only way seems using your JtClicker, isn't it? \n\nI gave \nthe [.NET Dialogue Clicker in VB by Greg Wesner](https://thebuildingcoder.typepad.com/blog/2009/10/dismiss-dialogue-using-windows-api.html) a \ntry and it works with some small mods.\n\nThe loading process is slower, but finally I can trap the warning dialog and close it.\n\nI really can't understand why this warning hasn't been included, along with all the others, in the `FailuresProcessing` event and no possibility is given to disable it: really disheartening.\n\n**Answer:** If you are operating in an interactive session of Revit, you should be able to use IExternalApplication.\nIt is great to keep your code split validly between DB and UI levels; it allows the DB code to work with the APS Design Automation API.\nIn that case, you might need a specific small UI Application subscribing to and dismissing just this notice.\n  \nIs that feasible for you? \nOr is the JtClicker approach easier? \n\n**Response:** For many reasons, I prefer not to use UI, so it's easier to use the \"JtClicker approach\".\nHere is my implementation; it's very similar to Greg's version:\n\n<pre class=\"prettyprint\">\n  Public timer1 As Timer\n  Public timer_interval As Integer = 1000  'millisecondi\n  Public timer_attempts As Integer 'not used\n  Public Const diagTitle As String = \"Aggiornamento del modello analitico strutturale\"\n  Public Const diagButton As String = \"&Chiudi\"\n\n  Public Function EnumWindowsProc(ByVal hwnd As Integer, ByVal lParam As Integer) As Boolean\n    Dim sbTitle As New StringBuilder(256)\n    Dim test As Integer = User32.GetWindowText(hwnd, sbTitle, sbTitle.Capacity)\n    Dim title As String = sbTitle.ToString()\n    If title.Length &gt; 0 AndAlso title = diagTitle Then\n      User32.EnumChildWindows(hwnd, New User32.EnumWindowsProc(AddressOf EnumChildProc), 0)\n      Return False\n    Else\n      Return True\n    End If\n  End Function\n\n  Public Function EnumChildProc(ByVal hwnd As Integer, ByVal lParam As Integer) As Boolean\n    Dim sbTitle As New StringBuilder(256)\n    User32.GetWindowText(hwnd, sbTitle, sbTitle.Capacity)\n    Dim title As String = sbTitle.ToString()\n    If title.Length &gt; 0 AndAlso title = diagButton Then\n      User32.SendMessage(hwnd, User32.BM_SETSTATE, 1, 0)\n      User32.SendMessage(hwnd, User32.WM_LBUTTONDOWN, 0, 0)\n      User32.SendMessage(hwnd, User32.WM_LBUTTONUP, 0, 0)\n      User32.SendMessage(hwnd, User32.BM_SETSTATE, 1, 0)\n      If Not timer1 Is Nothing Then\n        timer1.Stop()\n        timer1 = Nothing\n      End If\n      Return False\n    Else\n      Return True\n    End If\n  End Function\n\n  Public Sub timer1_Elapsed(ByVal sender As Object, ByVal e As EventArgs)\n    'If timer_attempts &lt; 3000 Then\n    User32.EnumWindows(New User32.EnumWindowsProc(AddressOf EnumWindowsProc), 0)\n    'Else\n    '  timer1.Stop()\n    'End If\n    'timer_attempts += 1\n    'Debug.Print(timer_attempts.ToString())\n  End Sub\n\n  Public Sub closeOptionsDialog()\n    timer_attempts = 0\n    If timer1 Is Nothing Then\n      timer1 = New Timer()\n    End If\n    timer1.Interval = timer_interval\n    AddHandler timer1.Elapsed, New ElapsedEventHandler(AddressOf timer1_Elapsed)\n    timer1.Start()\n  End Sub\n</pre> \n\nThe `user32` module is identical:\n\n<pre class=\"prettyprint\">\nImports System\nImports System.Runtime.InteropServices\nImports System.Text\n\nModule User32\n  Delegate Function EnumWindowsProc(ByVal hWnd As Integer, ByVal lParam As Integer) As Boolean\n\n  &lt;DllImport(\"user32.dll\", CharSet:=CharSet.Unicode)&gt;\n  Function FindWindow(ByVal className As String, ByVal windowName As String) As Integer\n  End Function\n\n  &lt;DllImport(\"user32.dll\", CharSet:=CharSet.Unicode)&gt;\n  Function EnumWindows(ByVal callbackFunc As EnumWindowsProc, ByVal lParam As Integer) As Integer\n  End Function\n\n  &lt;DllImport(\"user32.dll\", CharSet:=CharSet.Unicode)&gt;\n  Function EnumChildWindows(ByVal hwnd As Integer, ByVal callbackFunc As EnumWindowsProc, ByVal lParam As Integer) As Integer\n  End Function\n\n  &lt;DllImport(\"user32.dll\", CharSet:=CharSet.Unicode)&gt;\n  Function GetWindowText(ByVal hwnd As Integer, ByVal buff As StringBuilder, ByVal maxCount As Integer) As Integer\n  End Function\n\n  &lt;DllImport(\"user32.dll\", CharSet:=CharSet.Unicode)&gt;\n  Function GetLastActivePopup(ByVal hwnd As Integer) As Integer\n  End Function\n\n  &lt;DllImport(\"user32.dll\", CharSet:=CharSet.Unicode)&gt;\n  Function SendMessage(ByVal hwnd As Integer, ByVal Msg As Integer, ByVal wParam As Integer, ByVal lParam As Integer) As Integer\n  End Function\n\n  Public BM_SETSTATE As Integer = 243\n  Public WM_LBUTTONDOWN As Integer = 513\n  Public WM_LBUTTONUP As Integer = 514\nEnd Module\n</pre>\n \nMany thanks to Jacopo for sharing his solution and thoughts on this!\n\nBy the way, Kev_D added another aspect: \n\n**Question:** Is there a non API solution to remove this?\n\n**Answer:** I doubt it. \nBut, of course, there are [Windows automation tools](https://duckduckgo.com/?q=windows+automation+tool) that you can use. \nStandard Windows automation. \nThey can click buttons for you, i.e., simulate the required user interaction to dismiss the dialogue."
  },
  {
    "original_filename": "1983_geo_opt_curve",
    "header_text": "OpenMEP by Chuong Ho",
    "local_header_href": "#5",
    "chunk_text": "####<a name=\"5\"></a> OpenMEP by Chuong Ho\n\nChuong Ho released [OpenMEP, an awesome package for MEP and computational design inside Dynamo Revit](https://github.com/chuongmep/OpenMEP).\n\nThe OpenMEP Package also includes a comprehensive library of MEP components, making it easy to select and incorporate the right components into your design.\nThe library contains a wide range of mechanical, electrical, and plumbing components, including pipes, fittings, valves, ducts, electrical equipment, and more fully automate your design process in design, maintenance, calculation and analysis.\nI believe that the MEP Package will be a valuable asset to construction professionals looking to streamline the MEP design process and ensure that their projects are completed on time and within budget.\n\n- [LinkedIn post](https://www.linkedin.com/posts/chuongmep_opensource-dynamo-autodesk-activity-7033100499461570561-OUfG)\n- [DynamoBIM forum OpenMEP Package Feedback Thread](https://forum.dynamobim.com/t/openmep-package-feedback-thread/86350)\n- [OpenMEP GitHub repository](https://github.com/chuongmep/OpenMEP)"
  },
  {
    "original_filename": "1983_geo_opt_curve",
    "header_text": "Unintelligible Film Dialogue",
    "local_header_href": "#6",
    "chunk_text": "####<a name=\"6\"></a> Unintelligible Film Dialogue\n\nCompletely removed from programming and the Revit MEP, I enjoyed this 11-minute analysis \nof [why we all need subtitles now](https://www.youtube.com/watch?v=VYJtb2YXae8)."
  }
]