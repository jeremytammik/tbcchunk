[
  {
    "original_filename": "2014_rbp_shapely",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- Revit Batch Processor project\nJan Christel <jan.r.christel@gmail.com>\nI’ve been following your website for a number of years by know and would like to say thank you for your posts and insights. They are a really great help when getting started with the Revit API.\nFor the last 3 years I’ve been developing code using the Revit API in context of the Revit Batch Processor project which you are familiar with. The library has now grown to reasonable size and might be useful for others too. It focusses mainly on reporting / modifying element data and families. It show cases how to start a number of batch processor sessions concurrently using either .bat or power shell to process a large number of files.\nA link to the GitHub repo: https://github.com/jchristel/SampleCodeRevitBatchProcessor and the pypi package: https://pypi.org/project/DuHast/\n\n- https://neal.fun/internet-artifacts/\n\n- shapely dynamo\nDurmuş Cesur (Bayryam)\nHi Jeremy,  I read your article about \"Shapely Geometry\" in the last weeks, I was very happy to see it because in April I released a package called \"Shapely\" for Dynamo, so that users can easily work with \"Shapely Geometries\". I am a BIM Manager, the Shapely package plays an incredible role in our daily work and in the plug-in of the office. Here you can find the contents of the package. Github : https://github.com/DurmusCesur/Shapely.git Linkednl : https://www.linkedin.com/pulse/shapely-dynamo-durmu%25C5%259F-cesur-bayryam-/?trackingId=9aYP9eQpR8%2Be%2B7CCRqldtw%3D%3D  I care a lot about this package because apart from manipulating geometries, it is now integrated with Machine Learning. In the following days, I will release the \"1.1.1.1\" version of the package and users will now be able to use their scenarios with Machine Learning training models via Shapely, and as a Dynamo user for many years, I am very excited. I just published an article about the Shapely-Machine Learning relationship on linkednl. You can access it here: Linkednl : https://www.linkedin.com/pulse/machine-learning-dynamo-durmu%25C5%259F-cesur-bayryam--m9xoe/?trackingId=9aYP9eQpR8%2Be%2B7CCRqldtw%3D%3D  What are you thinking? I would really like to chat with you about this.  Best regards, Durmus\nJeremy Tammik (Sir)  4:04 AM\nDear Durmuş, thank you for letting me know. I will add a note of that to the blog as well, if you like. Cheers, Jeremy.\nDurmuş Cesur(Bayryam)  6:02 AM\nHi Jeremy,  That would be great, thank you very much.  Best Durmus\nDurmuş Cesur(Bayryam)  9:25 AM\nHi Jeremy,  Whatever you need for that, you can tell me. I can do it for you\n\ntwitter:\n\nPowerful tools and solutions for RFA and RVT batch processing, 2D geometric analysis with Shapely for Dynamo, machine learning in Dynamo, retrieving Toposolid contour lines with the @AutodeskAPS @AutodeskRevit #RevitAPI #BIM @DynamoBIM @AutodeskAPS https://autode.sk/dynamoshapely\n\nPowerful tools and solutions for batch processing, 2D geometric analysis and toposolids\n&ndash; Revit batch processor sample code\n&ndash; Shapely for Dynamo\n&ndash; Retrieve Toposolid contour lines\n&ndash; Internet artifacts...\n\nlinkedin:\n\nPowerful tools and solutions for RFA and RVT batch processing, 2D geometric analysis with Shapely for Dynamo, machine learning in Dynamo, retrieving Toposolid contour lines with the #RevitAPI\n\nhttps://autode.sk/dynamoshapely\n\n- Revit batch processor sample code\n- Shapely for Dynamo\n- Retrieve Toposolid contour lines\n- Internet artifacts...\n\n#BIM #DynamoBIM #AutodeskAPS #Revit #API #IFC #SDK #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n-->"
  },
  {
    "original_filename": "2014_rbp_shapely",
    "header_text": "Contour Lines, Batch Processor and Dynamo Shapely",
    "local_header_href": "#contour-lines-batch-processor-and-dynamo-shapely",
    "chunk_text": "### Contour Lines, Batch Processor and Dynamo Shapely\n\nPowerful tools and solutions for batch processing, 2D geometric analysis and toposolids:\n\n- [Revit batch processor sample code](#2)\n- [Shapely for Dynamo](#3)\n- [Machine learning in Dynamo](#3.1)\n- [Retrieve Toposolid contour lines](#4)\n- [Internet artifacts](#5)"
  },
  {
    "original_filename": "2014_rbp_shapely",
    "header_text": "Revit Batch Processor Sample Code",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Revit Batch Processor Sample Code\n\nSeveral  years ago, we pointed out the\npowerful [Revit Batch Processor (RBP)](https://thebuildingcoder.typepad.com/blog/2019/11/the-revit-batch-processor-rbp.html).\n\n[Jan Christel](https://github.com/jchristel) has implemented and shared\na number of Python code samples making use of it in\nhis [code samples for the Revit Batch Processor](https://github.com/jchristel/SampleCodeRevitBatchProcessor),\nexplaining:\n\n> I’ve been following your website for a number of years by know and would like to say thank you for your posts and insights.\nThey are a really great help when getting started with the Revit API.\nFor the last 3 years I’ve been developing code using the Revit API in context of the Revit Batch Processor project which you are familiar with.\nThe library has now grown to reasonable size and might be useful for others too. It focusses mainly on reporting and modifying element data and families.\nIt showcases how to start a number of batch processor sessions concurrently using either `.bat` or PowerShell to process a large number of files.\nHere are links to the [SampleCodeRevitBatchProcessor GitHub repo](https://github.com/jchristel/SampleCodeRevitBatchProcessor) and\nthe [DuHast PyPI package](https://pypi.org/project/DuHast/).\n\nMany thanks to Jan for sharing these."
  },
  {
    "original_filename": "2014_rbp_shapely",
    "header_text": "Shapely for Dynamo",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Shapely for Dynamo\n\nWe recently discussed\nthe [Shapely Python 2D geometry library](https://thebuildingcoder.typepad.com/blog/2023/09/element-diff-compare-shapely-and-rdbe.html#4) and\nhow it can be used\nto [find and fix a hole](https://thebuildingcoder.typepad.com/blog/2023/09/element-diff-compare-shapely-and-rdbe.html#4.1).\n\nDurmuş Cesur (Bayryam) of [BPA Architecture](https://bpa.archi/) announced an associated Dynamo package to wrap it and provide access to its functionality:\n\n- [Github DurmusCesur/Shapely](https://github.com/DurmusCesur/Shapely)\n\nDurmuş adds:\n\n> I read your article about Shapely Geometry in the last weeks. I was very happy to see it, because in April I released a package called Shapely for Dynamo, so that users can easily work with Shapely Geometries.\nI am a BIM Manager, the Shapely package plays an incredible role in our daily work and in the plug-in of the office.\nI care a lot about this package because apart from manipulating geometries, it is now integrated with Machine Learning. In the following days, I will release the \"1.1.1.1\" version of the package and users will be able to use their scenarios with Machine Learning training models via Shapely, and as a Dynamo user for many years, I am very excited.\nI just published an article about\nthe [Shapely Machine Learning relationship in Dynamo](https://www.linkedin.com/pulse/machine-learning-dynamo-durmu%C5%9F-cesur-bayryam--m9xoe) on LinkedIn.\n\n<center>\n<img src=\"img/shapely_dynamo.png\" alt=\"Shapely for Dynamo\" title=\"Shapely for Dynamo\" width=\"600\"/>\n</center>\n\nShapely is a great Python library that helps us analyse and manipulate geometries.\nWe think it is important to include this library in Dynamo.\nShapely uses its own geometry language.\nTherefore, transformations must be made between each other without losing data. In this package you will find a Dynamo version of Shapely geometry.\nI made a tutorial for you on the Github page; you can use it to get a feel for the polygons and let me know if you have any questions or corrections.\nThe package is completely open source.\nI am one of those people who think open source is important!\n\nHere are some examples:\n\n- ShapelytoDynamo &ndash; It converts a dynamo geometry into a \"Shapely\" geometry without any data loss.\n  There is also a transformation of the shapely geometry obtained in a similar way to the dynamo geometry.\n- DynamotoShapely &ndash; It converts a shapely geometry into a dynamo geometry without any data loss.\n- ShapelyBuffer &ndash; Using a dynamo geometry (polygon, polycurve), it creates a new geometry by looking at the user’s offset distance in the same line of the units that make up the geometry. The user can decide the sharpness of the edges of the created geometry.\n- ShapelyDifference &ndash; It allows us to analyse the relationship between 2 geometries. It subtracts one geometry from the other and returns a new closed geometry containing the remaining geometry.\n- Shapelyİntersection &ndash; Allows us to analyse the relationship between 2 geometries. It extracts 2 geometries from each other and returns a new closed geometry. The result is always a polygon, polycurve and a list of points that make up the geometry.\n- ShapelyUnion &ndash; Allows us to analyse the relationship between 2 geometries. It combines 2 geometries and returns a closed new geometry. The result is always a polygon, polycurve and a list of points that make up the geometry.\n- ShapelySnap &ndash; It allows us to analyse the relationship between 2 geometries. It returns a new closed geometry that adapts to the contours of the geometry approaching the distance specified by the user. The result is always a polygon, polycurve and a list of points that make up that geometry.\n- ShapelyConvexHull &ndash; Dynamo uses the points to create the outermost polygon that the points will form. The result is always a polygon, polycurve and a list of points that form that geometry.\n- ShapelyRotateSkew &ndash; Using a 2D dynamo geometry (polygon), it rotates the geometry in the ground plane in the X and Y axes as if it were a 3D geometry and creates a new geometry.\n- ShapelyOffset &ndash; Using a dynamo geometry (polygon, polycurve), it creates a new geometry by looking at the user’s offset distance in the same line of the units that make up the geometry. The generated geometry is always meaningful and stable. The user can decide the sharpness of the edges of the generated geometry.\n- ShapelySetPrecision &ndash; Using a dynamo geometry (polygon, polycurve), it allows the user to specify the points that make up the geometry and returns a new geometry. This geometry differs from the parent geometry because the position of the vertices that make up the geometry has changed.\n- ShapelyTouchesDistance &ndash; Using a dynamo geometry (polygon, polycurve) allows us to analyse geometries within a distance specified by the user. For this purpose, it finds the points at right angles of all geometries around it and analyses the distance between the main geometry and returns \"True\" and \"False\".\n\nMany thanks to Durmuş for implementing and sharing this powerful tool!\n\n####<a name=\"3.1\"></a> Machine Learning in Dynamo\n\nDurmuş adds: A few days ago I wrote an article about Machine Learning on DynamoBlog.\nToday a copy of this article was published somewhere at NASA.\nThis is incredible news.\nI wanted to share it with you.\nYou can find it here:\n[Machine Learning in Dynamo](https://dynamobim.org/machine-learning-in-dynamo/):\n\n> With advancing technology, we see the widespread use of Machine Learning in almost all industries.\nBut can a vector-based numerical design program work with ML?\nThe answer to this question is a definite “Yes, it can.”\nThe “Shapely geometry” package not only allows users to manipulate 2D geometries but also integrates seamlessly with ML.\nIn other words, the “Shapely” package comes equipped with ML capabilities, making it more functional and significantly expanding its processing capacity."
  },
  {
    "original_filename": "2014_rbp_shapely",
    "header_text": "Retrieve Toposolid Contour Lines",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> Retrieve Toposolid Contour Lines\n\nNing Zhou raised the question\non [how to get contour lines from toposolid](https://forums.autodesk.com/t5/revit-api-forum/how-to-get-contour-lines-from-toposolid/m-p/12315476) and\nsubsequently discovered, tested and shared the solution.\n\nThe gist of it is that the contour lines are view dependent, so you need to be specific about which view to use to retrieve the toposolid geometry.\n\nMy colleague Carol Gitonga picked up this thread to publish her first Revit API blog post,\nalso titled [how to get contour lines from Toposolid](https://adndevblog.typepad.com/aec/2023/11/how-to-get-contour-lines-from-toposolid.html).\n\nCongratulations, Ning, on solving the issue!\n\nCongratulations, Carol, on a very nice blogging debut!\n\nThank you both for your work and sharing the results!"
  },
  {
    "original_filename": "2014_rbp_shapely",
    "header_text": "Internet Artifacts",
    "local_header_href": "#5",
    "chunk_text": "####<a name=\"5\"></a> Internet Artifacts\n\nFinally, let's close with an entertaining look back in time through a collection\nof [internet artifacts](https://neal.fun/internet-artifacts/) by Neal.fun."
  }
]