[
  {
    "original_filename": "0812_mep_2013_api",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0812_mep_2013_api",
    "header_text": "Updated Revit MEP 2013 Material",
    "local_header_href": "#updated-revit-mep-2013-material",
    "chunk_text": "<h3>Updated Revit MEP 2013 Material</h3><p>I presented the Revit MEP API at the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#5\">\nAEC DevCamp</a> in \n\nJune.\nIn preparation for that, I provided a quick \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-revit-2013-mep-api-and-external-services.html\">\nRevit 2013 MEP API overview</a> and \n\nmigrated and more fully described the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-adn-mep-sample-adnrme-for-revit-mep-2013.html\">\nAdnRme sample application</a>.\n\nI will be presenting on this topic again at\n\n<a href=\"http://au.autodesk.com\">\nAutodesk University</a> in \n\nNovember, so I revisited the material and fleshed out the description of the Revit 2013 changes a bit more. \nHere is the completed overview:\n\n<a name=\"2\"></a>\n<h4>The Revit MEP 2013 API</h4>\n<p>The information provided in this section is based on the Revit API help file RevitAPI.chm 'What's New' section. The help file is available as part of the Revit SDK from the Revit developer page (cf. Further Reading at the end).\n<p>One of the main Revit MEP 2013 product features is the support for routing preferences. Previously, you could only define one single default elbow, tee, etc. The routing preferences support multiple settings for different materials and sizes. \n\n<a name=\"3\"></a>\n<h4>Routing Preferences</h4>\n<p>The routing preferences enable you to select your preferred pipe and duct fitting types for various materials and sizes. It can be used to set routing preference policies for end users and query fittings and segments used for given size criteria.\n<p>The RoutingPreferenceManager class is used to manage routing preference rules for segments and fittings or query the fitting or segment chosen by Revit for a given size condition. The MEPCurveType class now provides a RoutingPreferenceManager property to access the main routing preferences object for that type. This is currently only support by the derived PipeType and DuctType classes.\n<p>Routing preferences choose the first symbol in a rule list matching the given criteria. To ensure that a certain symbol is chosen for a given scenario, you can either set appropriate size criteria, or temporarily re-order the rules using the RemoveRule and AddRule methods.\n<p>Programmatic use of routing preferences is demonstrated by \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/03/new-revit-2013-sdk-samples.html#3\">\nRoutingPreferenceTools</a> SDK sample. \n\n<a name=\"4\"></a>\n<h4>Flow Analysis Sections</h4>\n<p>The MEPSection base class has been introduced to represent duct and pipe sections, i.e. a series of connected elements, mainly for pressure loss calculation. A section includes ducts or pipes, fittings, terminals and accessories, where all section members have same the flow analysis properties, e.g. Flow, Size, Velocity, Friction and Roughness. An element can belong to multiple sections. For example, a tee fitting with three connectors usually belongs to three sections, and a tap will divide a duct or pipe segment into two sections.\n\n<a name=\"5\"></a>\n<h4>Fluid Viscosity and Density</h4>\n<p>Revit MEP 2013 provides support for more precise temperature dependant friction calculation via the new FluidTemperature class, which can represent viscosity and density properties at a given temperature. The FluidType class has been extended to provide read and write access to a collection of FluidTemperature objects representing the fluid properties at various different temperatures. This collection can be accessed and manipulated using the new AddTemperature, GetTemperature, RemoveTemperature and GetFluidTemperatureSetIteratormethods.\n\n<a name=\"6\"></a>\n<h4>Thermal Properties</h4>\n<p>Thermal properties have been enhanced in several areas. New properties are provided on the ThermalProperties class, e.g. Absorptance, HeatTransferCoefficient, Roughness, ThermalMass, ThermalResistance. These are available on BIM elements such as wall, floor, ceiling, roof, door, window, etc.\n<p>The new ThermalAsset class is provided, representing the properties of a material pertinent to energy analysis. It is specified using the PropertySetElement and SetMaterialAspectByPropertySet classes.\n<p>The gbXML export provides more precise control of thermal properties of BIM types. They can be set to use calculated values or pre-defined values from Constructions.xml using the MEPBuildingConstruction methods GetBuildingConstructionOverride and SetBuildingConstructionOverride. The EnergyDataSettings.IncludeThermalProperties flag determines whether thermal information from model assemblies and components is included in the gbXML export.\n\n<a name=\"7\"></a>\n<h4>More Revit MEP API News</h4>\n<p>Other enhancements include read and write access to spare circuit values, retrieval of more of the localised user-visible display strings for enumeration values.\n<p>ConnectorProfileType and PartType enumeration changes, ConnectorElement changes and new static creation methods, more LabelUtils access to localised user-visible display strings, access to panel schedule spare circuit values, a light and light group API, \n<p>The new ReferenceIntersector class provides a simpler access to geometric ray-tracing analysis.\n<p>Finally, a new \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-revit-2013-mep-api-and-external-services.html#3\">\nexternal services framework</a> has been put into place. It wraps external service functionality, which can be used to enable encapsulation and replacement of various calculation and analysis workflows, providing a basis for future MEP calculations and structural code checking. It is already in place and fully functional, but not yet used, so no examples are yet provided.\n\n<!--\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api.pdf\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api_ppt.pdf\n-->\n<a name=\"8\"></a>\n<p>For completeness' sake, here is a preview of my AU\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api_ppt.pdf\">presentation</a> and\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api.pdf\">handout document</a>.\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0812_mep_2013_api",
    "header_text": "The Revit MEP 2013 API",
    "local_header_href": "#the-revit-mep-2013-api",
    "chunk_text": "<h4>The Revit MEP 2013 API</h4><p>The information provided in this section is based on the Revit API help file RevitAPI.chm 'What's New' section. The help file is available as part of the Revit SDK from the Revit developer page (cf. Further Reading at the end).\n<p>One of the main Revit MEP 2013 product features is the support for routing preferences. Previously, you could only define one single default elbow, tee, etc. The routing preferences support multiple settings for different materials and sizes. \n\n<a name=\"3\"></a>\n<h4>Routing Preferences</h4>\n<p>The routing preferences enable you to select your preferred pipe and duct fitting types for various materials and sizes. It can be used to set routing preference policies for end users and query fittings and segments used for given size criteria.\n<p>The RoutingPreferenceManager class is used to manage routing preference rules for segments and fittings or query the fitting or segment chosen by Revit for a given size condition. The MEPCurveType class now provides a RoutingPreferenceManager property to access the main routing preferences object for that type. This is currently only support by the derived PipeType and DuctType classes.\n<p>Routing preferences choose the first symbol in a rule list matching the given criteria. To ensure that a certain symbol is chosen for a given scenario, you can either set appropriate size criteria, or temporarily re-order the rules using the RemoveRule and AddRule methods.\n<p>Programmatic use of routing preferences is demonstrated by \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/03/new-revit-2013-sdk-samples.html#3\">\nRoutingPreferenceTools</a> SDK sample. \n\n<a name=\"4\"></a>\n<h4>Flow Analysis Sections</h4>\n<p>The MEPSection base class has been introduced to represent duct and pipe sections, i.e. a series of connected elements, mainly for pressure loss calculation. A section includes ducts or pipes, fittings, terminals and accessories, where all section members have same the flow analysis properties, e.g. Flow, Size, Velocity, Friction and Roughness. An element can belong to multiple sections. For example, a tee fitting with three connectors usually belongs to three sections, and a tap will divide a duct or pipe segment into two sections.\n\n<a name=\"5\"></a>\n<h4>Fluid Viscosity and Density</h4>\n<p>Revit MEP 2013 provides support for more precise temperature dependant friction calculation via the new FluidTemperature class, which can represent viscosity and density properties at a given temperature. The FluidType class has been extended to provide read and write access to a collection of FluidTemperature objects representing the fluid properties at various different temperatures. This collection can be accessed and manipulated using the new AddTemperature, GetTemperature, RemoveTemperature and GetFluidTemperatureSetIteratormethods.\n\n<a name=\"6\"></a>\n<h4>Thermal Properties</h4>\n<p>Thermal properties have been enhanced in several areas. New properties are provided on the ThermalProperties class, e.g. Absorptance, HeatTransferCoefficient, Roughness, ThermalMass, ThermalResistance. These are available on BIM elements such as wall, floor, ceiling, roof, door, window, etc.\n<p>The new ThermalAsset class is provided, representing the properties of a material pertinent to energy analysis. It is specified using the PropertySetElement and SetMaterialAspectByPropertySet classes.\n<p>The gbXML export provides more precise control of thermal properties of BIM types. They can be set to use calculated values or pre-defined values from Constructions.xml using the MEPBuildingConstruction methods GetBuildingConstructionOverride and SetBuildingConstructionOverride. The EnergyDataSettings.IncludeThermalProperties flag determines whether thermal information from model assemblies and components is included in the gbXML export.\n\n<a name=\"7\"></a>\n<h4>More Revit MEP API News</h4>\n<p>Other enhancements include read and write access to spare circuit values, retrieval of more of the localised user-visible display strings for enumeration values.\n<p>ConnectorProfileType and PartType enumeration changes, ConnectorElement changes and new static creation methods, more LabelUtils access to localised user-visible display strings, access to panel schedule spare circuit values, a light and light group API, \n<p>The new ReferenceIntersector class provides a simpler access to geometric ray-tracing analysis.\n<p>Finally, a new \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-revit-2013-mep-api-and-external-services.html#3\">\nexternal services framework</a> has been put into place. It wraps external service functionality, which can be used to enable encapsulation and replacement of various calculation and analysis workflows, providing a basis for future MEP calculations and structural code checking. It is already in place and fully functional, but not yet used, so no examples are yet provided.\n\n<!--\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api.pdf\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api_ppt.pdf\n-->\n<a name=\"8\"></a>\n<p>For completeness' sake, here is a preview of my AU\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api_ppt.pdf\">presentation</a> and\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api.pdf\">handout document</a>.\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0812_mep_2013_api",
    "header_text": "Routing Preferences",
    "local_header_href": "#routing-preferences",
    "chunk_text": "<h4>Routing Preferences</h4><p>The routing preferences enable you to select your preferred pipe and duct fitting types for various materials and sizes. It can be used to set routing preference policies for end users and query fittings and segments used for given size criteria.\n<p>The RoutingPreferenceManager class is used to manage routing preference rules for segments and fittings or query the fitting or segment chosen by Revit for a given size condition. The MEPCurveType class now provides a RoutingPreferenceManager property to access the main routing preferences object for that type. This is currently only support by the derived PipeType and DuctType classes.\n<p>Routing preferences choose the first symbol in a rule list matching the given criteria. To ensure that a certain symbol is chosen for a given scenario, you can either set appropriate size criteria, or temporarily re-order the rules using the RemoveRule and AddRule methods.\n<p>Programmatic use of routing preferences is demonstrated by \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/03/new-revit-2013-sdk-samples.html#3\">\nRoutingPreferenceTools</a> SDK sample. \n\n<a name=\"4\"></a>\n<h4>Flow Analysis Sections</h4>\n<p>The MEPSection base class has been introduced to represent duct and pipe sections, i.e. a series of connected elements, mainly for pressure loss calculation. A section includes ducts or pipes, fittings, terminals and accessories, where all section members have same the flow analysis properties, e.g. Flow, Size, Velocity, Friction and Roughness. An element can belong to multiple sections. For example, a tee fitting with three connectors usually belongs to three sections, and a tap will divide a duct or pipe segment into two sections.\n\n<a name=\"5\"></a>\n<h4>Fluid Viscosity and Density</h4>\n<p>Revit MEP 2013 provides support for more precise temperature dependant friction calculation via the new FluidTemperature class, which can represent viscosity and density properties at a given temperature. The FluidType class has been extended to provide read and write access to a collection of FluidTemperature objects representing the fluid properties at various different temperatures. This collection can be accessed and manipulated using the new AddTemperature, GetTemperature, RemoveTemperature and GetFluidTemperatureSetIteratormethods.\n\n<a name=\"6\"></a>\n<h4>Thermal Properties</h4>\n<p>Thermal properties have been enhanced in several areas. New properties are provided on the ThermalProperties class, e.g. Absorptance, HeatTransferCoefficient, Roughness, ThermalMass, ThermalResistance. These are available on BIM elements such as wall, floor, ceiling, roof, door, window, etc.\n<p>The new ThermalAsset class is provided, representing the properties of a material pertinent to energy analysis. It is specified using the PropertySetElement and SetMaterialAspectByPropertySet classes.\n<p>The gbXML export provides more precise control of thermal properties of BIM types. They can be set to use calculated values or pre-defined values from Constructions.xml using the MEPBuildingConstruction methods GetBuildingConstructionOverride and SetBuildingConstructionOverride. The EnergyDataSettings.IncludeThermalProperties flag determines whether thermal information from model assemblies and components is included in the gbXML export.\n\n<a name=\"7\"></a>\n<h4>More Revit MEP API News</h4>\n<p>Other enhancements include read and write access to spare circuit values, retrieval of more of the localised user-visible display strings for enumeration values.\n<p>ConnectorProfileType and PartType enumeration changes, ConnectorElement changes and new static creation methods, more LabelUtils access to localised user-visible display strings, access to panel schedule spare circuit values, a light and light group API, \n<p>The new ReferenceIntersector class provides a simpler access to geometric ray-tracing analysis.\n<p>Finally, a new \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-revit-2013-mep-api-and-external-services.html#3\">\nexternal services framework</a> has been put into place. It wraps external service functionality, which can be used to enable encapsulation and replacement of various calculation and analysis workflows, providing a basis for future MEP calculations and structural code checking. It is already in place and fully functional, but not yet used, so no examples are yet provided.\n\n<!--\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api.pdf\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api_ppt.pdf\n-->\n<a name=\"8\"></a>\n<p>For completeness' sake, here is a preview of my AU\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api_ppt.pdf\">presentation</a> and\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api.pdf\">handout document</a>.\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0812_mep_2013_api",
    "header_text": "Flow Analysis Sections",
    "local_header_href": "#flow-analysis-sections",
    "chunk_text": "<h4>Flow Analysis Sections</h4><p>The MEPSection base class has been introduced to represent duct and pipe sections, i.e. a series of connected elements, mainly for pressure loss calculation. A section includes ducts or pipes, fittings, terminals and accessories, where all section members have same the flow analysis properties, e.g. Flow, Size, Velocity, Friction and Roughness. An element can belong to multiple sections. For example, a tee fitting with three connectors usually belongs to three sections, and a tap will divide a duct or pipe segment into two sections.\n\n<a name=\"5\"></a>\n<h4>Fluid Viscosity and Density</h4>\n<p>Revit MEP 2013 provides support for more precise temperature dependant friction calculation via the new FluidTemperature class, which can represent viscosity and density properties at a given temperature. The FluidType class has been extended to provide read and write access to a collection of FluidTemperature objects representing the fluid properties at various different temperatures. This collection can be accessed and manipulated using the new AddTemperature, GetTemperature, RemoveTemperature and GetFluidTemperatureSetIteratormethods.\n\n<a name=\"6\"></a>\n<h4>Thermal Properties</h4>\n<p>Thermal properties have been enhanced in several areas. New properties are provided on the ThermalProperties class, e.g. Absorptance, HeatTransferCoefficient, Roughness, ThermalMass, ThermalResistance. These are available on BIM elements such as wall, floor, ceiling, roof, door, window, etc.\n<p>The new ThermalAsset class is provided, representing the properties of a material pertinent to energy analysis. It is specified using the PropertySetElement and SetMaterialAspectByPropertySet classes.\n<p>The gbXML export provides more precise control of thermal properties of BIM types. They can be set to use calculated values or pre-defined values from Constructions.xml using the MEPBuildingConstruction methods GetBuildingConstructionOverride and SetBuildingConstructionOverride. The EnergyDataSettings.IncludeThermalProperties flag determines whether thermal information from model assemblies and components is included in the gbXML export.\n\n<a name=\"7\"></a>\n<h4>More Revit MEP API News</h4>\n<p>Other enhancements include read and write access to spare circuit values, retrieval of more of the localised user-visible display strings for enumeration values.\n<p>ConnectorProfileType and PartType enumeration changes, ConnectorElement changes and new static creation methods, more LabelUtils access to localised user-visible display strings, access to panel schedule spare circuit values, a light and light group API, \n<p>The new ReferenceIntersector class provides a simpler access to geometric ray-tracing analysis.\n<p>Finally, a new \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-revit-2013-mep-api-and-external-services.html#3\">\nexternal services framework</a> has been put into place. It wraps external service functionality, which can be used to enable encapsulation and replacement of various calculation and analysis workflows, providing a basis for future MEP calculations and structural code checking. It is already in place and fully functional, but not yet used, so no examples are yet provided.\n\n<!--\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api.pdf\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api_ppt.pdf\n-->\n<a name=\"8\"></a>\n<p>For completeness' sake, here is a preview of my AU\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api_ppt.pdf\">presentation</a> and\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api.pdf\">handout document</a>.\n</p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0812_mep_2013_api",
    "header_text": "Fluid Viscosity and Density",
    "local_header_href": "#fluid-viscosity-and-density",
    "chunk_text": "<h4>Fluid Viscosity and Density</h4><p>Revit MEP 2013 provides support for more precise temperature dependant friction calculation via the new FluidTemperature class, which can represent viscosity and density properties at a given temperature. The FluidType class has been extended to provide read and write access to a collection of FluidTemperature objects representing the fluid properties at various different temperatures. This collection can be accessed and manipulated using the new AddTemperature, GetTemperature, RemoveTemperature and GetFluidTemperatureSetIteratormethods.\n\n<a name=\"6\"></a>\n<h4>Thermal Properties</h4>\n<p>Thermal properties have been enhanced in several areas. New properties are provided on the ThermalProperties class, e.g. Absorptance, HeatTransferCoefficient, Roughness, ThermalMass, ThermalResistance. These are available on BIM elements such as wall, floor, ceiling, roof, door, window, etc.\n<p>The new ThermalAsset class is provided, representing the properties of a material pertinent to energy analysis. It is specified using the PropertySetElement and SetMaterialAspectByPropertySet classes.\n<p>The gbXML export provides more precise control of thermal properties of BIM types. They can be set to use calculated values or pre-defined values from Constructions.xml using the MEPBuildingConstruction methods GetBuildingConstructionOverride and SetBuildingConstructionOverride. The EnergyDataSettings.IncludeThermalProperties flag determines whether thermal information from model assemblies and components is included in the gbXML export.\n\n<a name=\"7\"></a>\n<h4>More Revit MEP API News</h4>\n<p>Other enhancements include read and write access to spare circuit values, retrieval of more of the localised user-visible display strings for enumeration values.\n<p>ConnectorProfileType and PartType enumeration changes, ConnectorElement changes and new static creation methods, more LabelUtils access to localised user-visible display strings, access to panel schedule spare circuit values, a light and light group API, \n<p>The new ReferenceIntersector class provides a simpler access to geometric ray-tracing analysis.\n<p>Finally, a new \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-revit-2013-mep-api-and-external-services.html#3\">\nexternal services framework</a> has been put into place. It wraps external service functionality, which can be used to enable encapsulation and replacement of various calculation and analysis workflows, providing a basis for future MEP calculations and structural code checking. It is already in place and fully functional, but not yet used, so no examples are yet provided.\n\n<!--\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api.pdf\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api_ppt.pdf\n-->\n<a name=\"8\"></a>\n<p>For completeness' sake, here is a preview of my AU\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api_ppt.pdf\">presentation</a> and\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api.pdf\">handout document</a>.\n</p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0812_mep_2013_api",
    "header_text": "Thermal Properties",
    "local_header_href": "#thermal-properties",
    "chunk_text": "<h4>Thermal Properties</h4><p>Thermal properties have been enhanced in several areas. New properties are provided on the ThermalProperties class, e.g. Absorptance, HeatTransferCoefficient, Roughness, ThermalMass, ThermalResistance. These are available on BIM elements such as wall, floor, ceiling, roof, door, window, etc.\n<p>The new ThermalAsset class is provided, representing the properties of a material pertinent to energy analysis. It is specified using the PropertySetElement and SetMaterialAspectByPropertySet classes.\n<p>The gbXML export provides more precise control of thermal properties of BIM types. They can be set to use calculated values or pre-defined values from Constructions.xml using the MEPBuildingConstruction methods GetBuildingConstructionOverride and SetBuildingConstructionOverride. The EnergyDataSettings.IncludeThermalProperties flag determines whether thermal information from model assemblies and components is included in the gbXML export.\n\n<a name=\"7\"></a>\n<h4>More Revit MEP API News</h4>\n<p>Other enhancements include read and write access to spare circuit values, retrieval of more of the localised user-visible display strings for enumeration values.\n<p>ConnectorProfileType and PartType enumeration changes, ConnectorElement changes and new static creation methods, more LabelUtils access to localised user-visible display strings, access to panel schedule spare circuit values, a light and light group API, \n<p>The new ReferenceIntersector class provides a simpler access to geometric ray-tracing analysis.\n<p>Finally, a new \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-revit-2013-mep-api-and-external-services.html#3\">\nexternal services framework</a> has been put into place. It wraps external service functionality, which can be used to enable encapsulation and replacement of various calculation and analysis workflows, providing a basis for future MEP calculations and structural code checking. It is already in place and fully functional, but not yet used, so no examples are yet provided.\n\n<!--\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api.pdf\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api_ppt.pdf\n-->\n<a name=\"8\"></a>\n<p>For completeness' sake, here is a preview of my AU\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api_ppt.pdf\">presentation</a> and\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api.pdf\">handout document</a>.\n</p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0812_mep_2013_api",
    "header_text": "More Revit MEP API News",
    "local_header_href": "#more-revit-mep-api-news",
    "chunk_text": "<h4>More Revit MEP API News</h4><p>Other enhancements include read and write access to spare circuit values, retrieval of more of the localised user-visible display strings for enumeration values.\n<p>ConnectorProfileType and PartType enumeration changes, ConnectorElement changes and new static creation methods, more LabelUtils access to localised user-visible display strings, access to panel schedule spare circuit values, a light and light group API, \n<p>The new ReferenceIntersector class provides a simpler access to geometric ray-tracing analysis.\n<p>Finally, a new \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/the-revit-2013-mep-api-and-external-services.html#3\">\nexternal services framework</a> has been put into place. It wraps external service functionality, which can be used to enable encapsulation and replacement of various calculation and analysis workflows, providing a basis for future MEP calculations and structural code checking. It is already in place and fully functional, but not yet used, so no examples are yet provided.\n\n<!--\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api.pdf\nC:\\a\\doc\\revit\\au\\2012\\doc\\CP4108_rme_api_ppt.pdf\n-->\n<a name=\"8\"></a>\n<p>For completeness' sake, here is a preview of my AU\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api_ppt.pdf\">presentation</a> and\n\n<a href=\"file:///C:/a/doc/revit/au/2012/doc/CP4108_rme_api.pdf\">handout document</a>.\n</p></p></p></p></p>"
  }
]