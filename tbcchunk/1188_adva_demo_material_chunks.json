[
  {
    "original_filename": "1188_adva_demo_material",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1188_adva_demo_material",
    "header_text": "View and Data API Presentation Material",
    "local_header_href": "#view-and-data-api-presentation-material",
    "chunk_text": "<h3>View and Data API Presentation Material</h3><p>I presented the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/07/autodesk-view-and-data-api.html\">\nAutodesk View and Data API</a> at the\n\n<a href=\"http://www.meetup.com/basel-js/events/192651262\">Basel.js meetup</a> yesterday evening.</p><p>Now I would like to share the material that I showed with you as well:</p><ul>\n<li><a href=\"#2\">Appetiser demos</a></li>\n<li><a href=\"#3\">Introduction</a></li>\n<li><a href=\"#4\">Slide deck and notes</a></li>\n<li><a href=\"#5\">Curl shell scripts for authorisation, model upload and translation</a></li>\n<li><a href=\"#6\">Demo script</a></li>\n<!-- <li><a href=\"#7\">Chrome demo bookmark XML file</a></li> -->\n<li><a href=\"#7\">Resources</a></li>\n<li><a href=\"#8\">Holiday and vacation</a></li>\n</ul><p>This should provide a handy snapshot and point of reference for my colleagues as well  :-)</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "1188_adva_demo_material",
    "header_text": "Appetiser Demos",
    "local_header_href": "#appetiser-demos",
    "chunk_text": "<h4>Appetiser Demos</h4><p>Before we even start talking about this, let's take a really quick look at a couple of samples that show what it is all about:</p><ul>\n<li><a href=\"https://s3.amazonaws.com/FastViewer/index.html?file=frontloader/0.svf\">\nFrontloader tractor</a> –\nZoom, rotate, isolate, focus, explode, embedded data.\n\n<li><a href=\"https://s3.amazonaws.com/FastViewer/index.html?file=Waltham/0.svf\">\nWaltham office building</a> –\nLarge building model, explore structure.\n\n<li><a href=\"http://54.191.41.170/sapdemo\">\nSAP</a> –\nLink to external database, double click headrest, look at the linked SAP database data displayed in a separate property palette, edit the price in the database view at the bottom, and watch the properties update immediately.\n\n<li><a href=\"http://safe-reef-1847.herokuapp.com\">\nMorgan steampunk</a> –\nHuge model with highly customised UI.\n\n</li></li></li></li></ul><a name=\"3\"></a>"
  },
  {
    "original_filename": "1188_adva_demo_material",
    "header_text": "Introduction – aka Stephen's Spiel",
    "local_header_href": "#introduction-aka-stephens-spiel",
    "chunk_text": "<h4>Introduction – aka Stephen's Spiel</h4><p>Note that the viewer is currently still in preview mode.</p><p>The general public will be able to request developer keys and make complete use it within the next few weeks.</p><p>There was a time when everybody <b><i>knew</i></b> the earth was flat. They <b><i>knew</i></b> that if you sailed far enough, you'd fall off the edge of the world. But things change, and by the fifteenth century it was generally accepted that the earth was a sphere. In 1492, Christopher Columbus tried to take advantage of this 3D world to find a westerly trade route to the East Indies. Instead he discovered the Americas. European settlers quickly followed him, and a few hundred years and several genocides later we ended up here – in Silicon Valley.</p><p>And then we programmers invented another world – the worldwide web. And just like our ancestors, we all thought it was flat. If you moved your mouse far enough it would fall off the edge of the screen. A few people thought this new world shouldn't be flat, but 3D on the web was hard – you had to download a huge client-side executable, or you had to write a lot of code – so most web developers were happy with their two-dimensional webpages. Just think for a moment how a seller on Amazon or eBay shows you what their product looks like – you have to click through a set of photos taken from different angles. Why can't I see that product in 3D – and zoom it and pan it and rotate it? And maybe even explode it to see what it looks like on the inside?</p><p>But the world is changing. Today, all the important browsers support WebGL natively (so there's no need for customers to download a nasty plugin), and we have robust libraries like THREE.js that greatly simplify creating 3D web apps. For the first time, it’s not only possible for us to create 3D content – but we can be confident that our customers can actually view it.</p><p>But 3D still isn't that easy. You have to design your model somewhere and then you have to translate it into a format that your WebGL-enabled app can understand. And that's where Autodesk comes in. Our goal is to make 3D on the web so easy that it’s a no-brainer. We are launching our new 3D viewer API, which consists of a state-of-the-art zero-client, WebGL viewer and a REST API that allows you to translate and view almost any 3D file format. Let’s see what it can do.</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "1188_adva_demo_material",
    "header_text": "Slide Deck and Notes",
    "local_header_href": "#slide-deck-and-notes",
    "chunk_text": "<h4>Slide Deck and Notes</h4><p>Here is the Autodesk Web Services View and Data API presentation\n\n<a href=\"http://thebuildingcoder.typepad.com/adva/2014-07/adva_jeremy.pdf\">slide deck</a>,\n\nshown at the Basel.js meetup on July 30, 2014, based on work by Daniel and Cyrille with some additional notes by Jeremy:</p><p>The Challenge – Big Data, 2D and/or 3D:  Autodesk Large Model Viewer.</p><p>Add interactive 3D viewing to your web application.</p><p>Single pipeline for integrated interactive viewing, search and data: extend it, find it, see it.</p><p>The same pipeline feeds search and viewing.</p><p>Two APIs available:</p><ul>\n<li><b>REST</b> Server and Management API</li>\n<ul>\n<li>Authenticate using oAuth 2.0</li>\n<li>Upload and translate files</li>\n<li>Manage access rights</li>\n</ul>\n<li><b>JavaScript</b> Web Client API</li>\n<ul>\n<li>Viewing technology based on Three.js</li>\n<li>Embed and control viewer in HTML5 applications</li>\n<li>Implement user interaction, access documents, manipulate objects, camera...</li>\n</ul>\n</ul><p>Empowered by\n\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/WebGL\">\nWEBGL</a> and\n\n<a href=\"http://threejs.org\">Three.js</a>.</p><p>3D First – focus is currently on getting the 3D functionality out there first.</p><ul>\n<li>3D Functionality</li>\n<ul>\n<li>Select, view properties, zoom, pan, orbit, isolate, focus, highlight</li>\n<li>Access to underlying 3D model, e.g. meshes and materials</li>\n</ul>\n<li>2D Functionality</li>\n<ul>\n<li>Raster image – zoom and pan only</li>\n<li>Later: Vector graphics soon – select, view properties, zoom, pan, isolate, focus, highlight</li>\n</ul>\n</ul><p>Currently supported formats:</p><ul>\n<li>dwg</li>\n<li>dwt</li>\n<li>dwf</li>\n<li>dwfx</li>\n<li>rvt</li>\n<li>iam</li>\n<li>ipt</li>\n<li>nwc</li>\n<li>nwd</li>\n<li>f3d</li>\n<li>fbx</li>\n<li>3ds</li>\n<li>dae</li>\n<li>obj</li>\n<li>zip</li>\n<li>stl</li>\n<li>ifc</li>\n<li>ige</li>\n<li>iges</li>\n<li>igs</li>\n<li>3dm</li>\n<li>asm</li>\n<li>catpart</li>\n<li>catproduct</li>\n<li>cgr</li>\n<li>dlv3</li>\n<li>exp</li>\n<li>g</li>\n<li>jt</li>\n<li>model</li>\n<li>neu</li>\n<li>prt</li>\n<li>sab</li>\n<li>sat</li>\n<li>session</li>\n<li>skp</li>\n<li>sldasm</li>\n<li>sldprt</li>\n<li>smb</li>\n<li>smt</li>\n<li>ste</li>\n<li>step</li>\n<li>stla</li>\n<li>stlb</li>\n<li>stp</li>\n<li>wire</li>\n<li>x_b</li>\n<li>x_t</li>\n<li>xas</li>\n<li>xpr</li>\n<li>cam360</li>\n<li>sim</li>\n<li>sim360</li>\n</ul><p>Getting started – server side REST server and management workflow:</p><ul>\n<li>Register an account and create an application.</li>\n<li>Use the authentication API to get an access token. The access token is required for all other API calls.</li>\n<li>Create a bucket in which to store your objects.</li>\n<li>Upload an object to the bucket and request that it be translated into a \"bubble\" for the viewing service.</li>\n<li>At this point you have a uniform resource name (URN) for your object, which you pass to the viewing client.</li>\n</ul><p>Here are the steps in more detail:</p><ul>\n<li>Step 1: Register and Create an Application</li>\n<li>List of Registered Applications</li>\n<li>Step 2: Obtain an Access Token</li>\n<li>Step 3: Create a Bucket</li>\n<li>Bucket Policy:</li>\n<ul>\n<li>Transient: persists for 24 hours</li>\n<li>Temporary: persists for 30 days</li>\n<li>Persistent: persists until deleted</li>\n</ul>\n<li>Step 4: Upload a Model File</li>\n<li>Response to Upload Request</li>\n<li>Determine the URN from the upload response: the URN is the Base64 encoded id.</li>\n<li>Step 5: Register the Model for Viewing</li>\n<li>Check Progress: you can start viewing the object as soon as some parts have a 'complete' status</li>\n<li>Retrieve Thumbnail Image</li>\n</ul><p>This whole sequence is demonstrated most effectively by the <a href=\"#5\">curl shell scripts</a> available from GitHub.</p><p>Getting Started – Client Side JavaScript</p><p>Compatibility Requirements: the A360 Viewer requires a WebGL canvas compatible browser, such as:</p><ul>\n<li>Internet Explorer 11.0+</li>\n<li>Chrome 18.0+</li>\n<li>Opera 15.0+</li>\n<li>Firefox 4.0+</li>\n<li>Chrome on Android</li>\n</ul><p>Load URN in JavaScript Viewer.</p><p>Create a html5 page or web application.</p><p>Add references to CSS style sheet and JavaScript library:</p><pre>\n  &lt;link rel=\"stylesheet\"\n    href=\"https://developer.api.autodesk.com/viewingservice/v1/viewers/style.css\"\n    type=\"text/css\"&gt;\n\n  &lt;script\n    src=\"https://developer.api.autodesk.com/viewingservice/v1/viewers/viewer3D.min.js\"&gt;\n  &lt;/script&gt;\n</pre><p>JavaScript Client Side Extension</p><ul>\n<li>Model hierarchy</li>\n<li>Metadata and properties</li>\n<li>Events</li>\n<li>Camera / Zoom / Navigation</li>\n<li>Access to geometry, textures...</li>\n<li>etc.</li>\n</ul><p>Questions and Answers:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2014/06/technical-summit-day-1-and-removing-rvt-references.html#2\">Rendering optimisations</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2014/06/technical-summit-day-1-and-removing-rvt-references.html#3\">JavaScript optimisations</a></li>\n<li><strong>[Q]</strong> Is this for anyone and everyone? – <strong>[A]</strong> Yes, sure, not just large complex models; everybody's models, cf. 3D printing, SAT, anything.</li>\n<li><strong>[Q]</strong> Other use cases? – <strong>[A]</strong> Any 3D model; every situation where you can replace a bunch of stupid 2D photos or flat plans by something more real and interactive.</li>\n</ul><a name=\"5\"></a>"
  },
  {
    "original_filename": "1188_adva_demo_material",
    "header_text": "Curl Shell Scripts for Authorisation, Model Upload and Translation",
    "local_header_href": "#curl-shell-scripts-for-authorisation-model-upload-and-translation",
    "chunk_text": "<h4>Curl Shell Scripts for Authorisation, Model Upload and Translation</h4><p>Look at Cyrille's\n\n<a href=\"https://github.com/Developer-Autodesk/workflow-curl-view.and.data.api\">\ncurl shell scripts</a> that\n\nprovide a very practical, efficient, interactive and direct method to step through the entire authorisation, upload and translation process.</p><p>Here is an example of uploading, translating and viewing a Revit model test.rvt:</p><pre>\n./viewerAPI auth\n./viewerAPI bucketCreate my_bucket_name\n./viewerAPI upload samples/test.rvt\n./viewerAPI register test.rvt\n./viewerAPI registerProgress test.rvt\n./viewerAPI registerProgress test.rvt\n./viewerAPI thumbnail test.rvt\nsudo ./viewerAPI html test.rvt\n</pre><p>Please refer to the GitHub\n\n<a href=\"https://github.com/Developer-Autodesk/workflow-curl-view.and.data.api\">\nreadme</a> for\n\na more detailed description.</p><a name=\"6\"></a>"
  },
  {
    "original_filename": "1188_adva_demo_material",
    "header_text": "Demo Script and Demos Embedded Everywhere",
    "local_header_href": "#demo-script-and-demos-embedded-everywhere",
    "chunk_text": "<h4>Demo Script and Demos Embedded Everywhere</h4><p>The viewer can be embedded in almost any web application.</p><p>The sample applications presented here include embedding in blogs, Facebook, TypePad, Sharepoint, mechanical models, AEC (architectural, engineering, construction), HVAC (mechanical equipment in buildings), Infraworks (infrastructure and GIS), database integration\t(SAP), etc.</p><p>Here are some notes from a demo held by Jim Quanci in the end of June:</p><p>Remember ahead of time that you need decent Internet access.</p><p>Attached is a recording where I walked through a typical View and Data web service internal demo including the URLs I used.</p><p>Note I have all these set-up as default tabs in chrome, as some of these take a minute to load.</p><p>These are also in the order I show them, starting with simple and getting gradually more complex.</p><p>And remember:</p><ul>\n<li>Zero client</li>\n<li>HTML5 and JavaScript based (open source) – which means runs on most browsers (IE coming very soon) – and is easy to customize/extend/hack</li>\n<li>WebGL (and three.js for the 3D web fluent)</li>\n<li>Industry standard architecture – REST and JSON</li>\n<li>Streaming – so big models</li>\n<li>Integrates easily with external data</li>\n<li>60+ file formats supported – so developers and customers avoid the messiness of having to worry about file formats – including support for lots of general industry formats like OBJ, FBX, DWG, SketchUp – and competitive formats like SWX, CATIA, NX, etc.</li>\n</ul><p>Here are the demo links:</p><ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2014/05/a-sneak-peek-at-the-new-autodesk-360-viewer.html\n\">Blog</a></li>\n<li><a href=\"https://www.facebook.com/a360viewer\n\">Facebook</a></li>\n<li><a href=\"http://adndevblog.typepad.com/cloud_and_mobile/stephens-test-page.html\n\">TypePad</a></li>\n<li><a href=\"https://share.autodesk.com/IPG/CloudPlatforms/SitePages/Test%20Page.aspx\n\">Sharepoint</a></li>\n<li><a href=\"https://s3.amazonaws.com/FastViewer/index.html?file=frontloader/0.svf\n\">Model</a></li>\n<li><a href=\"https://s3.amazonaws.com/FastViewer/index.html?file=Revit_Kitchen/0.svf\n\">Architectural, Engineering, Construction, HVAC, Mechanical Equipment in Buildings</a></li>\n<li><a href=\"https://s3.amazonaws.com/FastViewer/index.html?file=Waltham/0.svf\n\">Waltham – large office building</a></li>\n<li><a href=\"https://s3.amazonaws.com/autodesk.viewingservice.viewers.prod/0.1.68/viewer3d.html?&amp;file=https://s3.amazonaws.com/temporary-model-artifact-storage/11044/LMVGeneratorPlugin/proposals/master/model.svf\n\">Infraworks model – city planning</a></li>\n<li><a href=\"http://54.191.41.170/sapdemo2\n\">SAP Database Integration</a></li>\n</ul><p>Finally, here is Philippe's new slick UI viewer\n\n<a href=\"http://54.191.41.170:3003/nodeview/bootstrap\">nodeview/bootstrap</a> sample:</p><ul>\n<li>Full JavaScript client/server</li>\n<li>Integration of multiple js UI libs</li>\n<li>Bootstrap, jquery layout, slickgrid, jsTree</li>\n<li>Load/upload of 2D and 3D models</li>\n<li>Save/load of named views in MongoDB</li>\n</ul><ol>\n<li>startup chrome and shrink to get tabs</li>\n<li>all tabs are pre-setup in the same order as the email</li>\n<li>depends on audience which demos are shown</li>\n<li>some of the tabs do not come up right away</li>\n<li>figure out what is working beforehand, refresh and wait</li>\n<li>plm360 tab has not worked for the last week – kill it</li>\n<li>refresh some tabs now and then</li>\n<li>sap demo one needs several refreshes</li>\n<li>all tabs set up, check them all quickly, remove ones that don't work</li>\n<li>often the demo is used for a MeetUp and you want to set up quickly</li>\n<li>start with the tractor, not embedded, full screen canvas, zero client, html5, pure chrome, api is js, standard, mostly open source, pretty big model, source model is 2 GB</li>\n<li>tractor has structure from mechanical design, metadata, often equally important as graphics</li>\n<li>everything is built on the api and can be changed</li>\n<li>go back to the full loader</li>\n<li>sometimes escape-escape to clear selection</li>\n<li>explode, mech design, assemblies, subassemblies, etc., and explode follows same order</li>\n<li>next demo is car with metadata to demo search, find batteries, wheels</li>\n<li>look at 2D drawings, not just 3D models</li>\n<li>move on to architectural samples, e.g. autodesk waltham office</li>\n<li>very large model, go to structure, look at plumbing, electrical</li>\n<li>this is a very large model, we use streaming to show something right away in viewer</li>\n<li>right click on an air handler, look at the details</li>\n<li>the id is included, and guid, for linking to the model and other databases for permanent links with external data</li>\n<li>go to office, see textures, chairs, focus on a table, round, third floor, data, guid</li>\n<li>good combination of quality and performance</li>\n<li>give me all the doors, for example</li>\n<li>next: embedding</li>\n<li>mostly you are building some kind of app</li>\n<li>here is an example of embedding in SharePoint</li>\n<li>explode, people like that</li>\n<li>here is a Revit house, look at the materials and textures</li>\n<li>you don't explode building, that is for mechanical, but let's do that here too</li>\n<li>we saw SolidWorks, inventor, Revit</li>\n<li>we support 50 file formats, both adsk and non-proprietary such as OBJ</li>\n<li>here is a Typepad blog embedding, and this can be achieved in ten minutes</li>\n<li>Facebook sample: this will be popular for students</li>\n<li>here is a Facebook page with the viewer embedded, the shaver</li>\n<li>the model is actually in DropBox, the viewer in Facebook</li>\n<li>we are looking at federated data with different sources</li>\n<li>currently mostly adsk servers</li>\n<li>look at the external info presented here coming from a db on azure</li>\n<li>here is other data from the model itself</li>\n<li>this is powerful stuff: help access and relate to metadata</li>\n<li>explode this too</li>\n<li>so far the samples were adsk</li>\n<li>here is a sample by a partner called coins in the uk, pilot partner</li>\n<li>this is just a test, a hospital</li>\n<li>show level 2, level 5, navigate, all columns, simply testing how to drive the view based on bits of metadata</li>\n<li>search all the glazing</li>\n<li>some underlying technology is three.js, open source library</li>\n<li>this viewer is very hackable, you can do interesting things</li>\n<li>revit ids for all glazing, to connect with external db</li>\n<li>oauth is our security system, used widely in the web</li>\n<li>here is another 2D sample</li>\n<li>we can select vectors, relate metadata</li>\n<li>I cannot yet select entities, we are working on that</li>\n<li>you can flip the 2D to 3D also</li>\n<li>this is all zero client</li>\n<li>I am showing on chrome, it works on Firefox, currently not on ie11</li>\n<li>we want to enable you to deliver this viewing everywhere you need it</li>\n<li>protected by password or open, however you need it</li>\n<li>on the mobile side, we are building sdks for iOS and android</li>\n<li>this stuff works on mobile devices, but still a bit clunky lacking a mouse</li>\n<li>here is a code sample showing how to hook it up with SAP</li>\n<li>the chair is from inventor</li>\n<li>double click to isolate</li>\n<li>here is the sap data, straight out of an sap enterprise database online</li>\n<li>change the pricing here to $500 in the sap data</li>\n<li>return to the graphics pane, back out, go back to 5468, and here is the new updated pricing, $500</li>\n<li>this demo was put together by Philippe in two days</li>\n<li>he does have prior experience, but it was one of his first viewer samples</li>\n<li>large scale urban planning, InfraWorks</li>\n<li>here is a pretty big model of an apartment block</li>\n<li>how do you get involved?</li>\n<li>url</li>\n<li>get started</li>\n<li>request access key</li>\n<li>documentation is partially there</li>\n<li>rest and js api</li>\n<li>supported file formats</li>\n<li>details on each api call</li>\n<li>security mechanism</li>\n<li>how to register and process a model</li>\n<li>here is everything you need to get started</li>\n<li>I hope this motivates you to do so</li>\n<li>last thing: here are the different file formats:</li>\n<li>url, spreadsheet?</li>\n<li>as a user, you do not have to worry about the format</li>\n<li>you push it up and we convert it automatically</li>\n<li>extra complications with compound models</li>\n<li>also if you have files with supporting files</li>\n<li>you need to know which file to push up</li>\n<li>federated data coming oauth2 is security mechanism</li>\n<li>source files are only stored temporarily, we do not keep the source file</li>\n<li>you should feel comfortable making the viewable public</li>\n<li>the source seed binary is destroyed</li>\n<li>easy</li>\n<li>zero client, rest based, js, html 5, use your favorite ui tools and libraries</li>\n<li>one question: business model</li>\n<li>we are currently thinking a certain number of free file uploads per month, e.g. x MB</li>\n<li>if you exceed the limit, it may cost, e.g. $100 for a couple of GB</li>\n<li>zero charge for viewing, view as much as you want, unlimited</li>\n<li>encourage people to stick 3D models everywhere, Facebook, Typepad, anywhere</li>\n<li>the web is pretty cool these days</li>\n<li>html 5 gibes some flashiness and interactivity, but it is still rather flat</li>\n<li>young folks are used to 3D games and are not impressed by a flat 2D world</li>\n<li>time to change that</li>\n</ol><a name=\"7\"></a>"
  },
  {
    "original_filename": "1188_adva_demo_material",
    "header_text": "Resources",
    "local_header_href": "#resources",
    "chunk_text": "<h4>Resources</h4><p>Here is an overview of the main resources:</p><ul>\n<li><a href=\"http://developer.autodesk.com\">Getting started material, registration and full documentation</a></li>\n<li><a href=\"http://autode.sk/viewerapisamples\">autode.sk/viewerapisamples</a> – demo code and <a href=\"https://github.com/developer-autodesk\">viewer sample applications</a> on GitHub</li>\n<li><a href=\"https://developer.autodesk.com/api-console\">API Console</a> – test the View and Data API services online</li>\n<li>Autodesk <a href=\"http://adndevblog.typepad.com/cloud_and_mobile\">Cloud and Mobile DevBlog</a></li>\n<li><a href=\"http://forums.autodesk.com\">Autodesk Community</a>\n&gt; <a href=\"http://forums.autodesk.com/t5/Web-Services-API/ct-p/94\">Web Services API</a>\n&gt; <a href=\"http://forums.autodesk.com/t5/View-and-Data-API/bd-p/95\">\nView and Data API discussion forum</a></li>\n</ul><p>As said, please note that the View and Data API is still in pilot program mode right now, so you cannot yet apply for an API key.\nWe expect that to come within the next week or two.</p><p>There you are.</p><p>That just about covers what we have right now.</p><p>I look forward to seeing wat you can do with all this once you have access to the developer keys.</p><p>Good luck, much success, and have fun!</p><a name=\"8\"></a>"
  },
  {
    "original_filename": "1188_adva_demo_material",
    "header_text": "Holiday and Vacation",
    "local_header_href": "#holiday-and-vacation",
    "chunk_text": "<h4>Holiday and Vacation</h4><p>By the way, tomorrow is the first of August, a public holiday in Switzerland, and I am on vacation next week, so I hope this will help keep you entertained in the meantime.</p><p>The public developer key access may even be live by the time I return.</p><p>I'll keep my fingers crossed for that.</p>"
  }
]