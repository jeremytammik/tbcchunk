[
  {
    "original_filename": "0632_section_view_geom",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0632_section_view_geom",
    "header_text": "Section View Geometry",
    "local_header_href": "#section-view-geometry",
    "chunk_text": "<h3>Section View Geometry</h3><p>We have looked at many examples of retrieving \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/geometry\">\ngeometry</a> from\n\nthe Revit model in the past. \nSo far, we always dealt with view independent geometry. \nIt is also easy to obtain section view geometry for an element from Revit. \nHere is a case that highlights that, brought up by Saeed Karshenas of \n\n<a href=\"http://www.marquette.edu/eng/civil_environmental/facstaff_karshenas.shtml\">\nMarquette University</a>:\n\n<p><strong>Question:</strong> Is there a way to get the geometry of a partial element in a section box? \nNot geometry of the whole element, but the part of the element that is visible in a section box. \n\n<p><strong>Answer:</strong> If you simply supply the element id of the section view to the options that you pass in to the Element Geometry property, the geometry returned will match what you see in that view, including cuts and sections etc., as explained by the Revit help file RevitAPI.chm: \n\n<h4 style=\"color:darkblue\">Options.View Property</h4>\n<p style=\"color:darkblue\">The view used for geometry extraction.</p>\n<p style=\"color:darkblue\">If a view-specific version of an element exists, it will be extracted in the retrieval of geometry. Also, the detail level of the geometry will be taken from the view's detail level.</p>\n<p><strong>Response:</strong> Thank you, that solution works fine. I used it to achieve the following in a mixture of C# and C++: \n\n<ul>\n<li>Read a Revit element (in C#). \n<li>If the element has geometry, for each face extract vertices, indices and face normal. If face is not planar calculate the normal for each face triangle (in C#). \n<li>Transfer element geometry to GPU memory (in C++). \n<li>Use OpenGL library to draw the element (in C++). \n<li>Create a camera to view the element (C++) \n<li>Repeat the above steps for all model elements. \n</li></li></li></li></li></li></ul>\n<p>Here is an example of a model that I applied this to:</p>\n<center>\n<img alt=\"Complete model\" src=\"img/section_view_model1.png\"/>\n</center>\n<p>The result of extracting the section view looks like this:</p>\n<center>\n<img alt=\"Section view model\" src=\"img/section_view_model2.png\"/>\n</center>\n<p>Many thanks to Saeed for this nice illustration of using the section view geometry option!\n</p></p></p></p></p>"
  },
  {
    "original_filename": "0632_section_view_geom",
    "header_text": "Options.View Property",
    "local_header_href": "#optionsview-property",
    "chunk_text": "<h4 style=\"color:darkblue\">Options.View Property</h4><p style=\"color:darkblue\">The view used for geometry extraction.</p><p style=\"color:darkblue\">If a view-specific version of an element exists, it will be extracted in the retrieval of geometry. Also, the detail level of the geometry will be taken from the view's detail level.</p><p><strong>Response:</strong> Thank you, that solution works fine. I used it to achieve the following in a mixture of C# and C++: \n\n<ul>\n<li>Read a Revit element (in C#). \n<li>If the element has geometry, for each face extract vertices, indices and face normal. If face is not planar calculate the normal for each face triangle (in C#). \n<li>Transfer element geometry to GPU memory (in C++). \n<li>Use OpenGL library to draw the element (in C++). \n<li>Create a camera to view the element (C++) \n<li>Repeat the above steps for all model elements. \n</li></li></li></li></li></li></ul>\n<p>Here is an example of a model that I applied this to:</p>\n<center>\n<img alt=\"Complete model\" src=\"img/section_view_model1.png\"/>\n</center>\n<p>The result of extracting the section view looks like this:</p>\n<center>\n<img alt=\"Section view model\" src=\"img/section_view_model2.png\"/>\n</center>\n<p>Many thanks to Saeed for this nice illustration of using the section view geometry option!\n</p></p>"
  }
]