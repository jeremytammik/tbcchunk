[
  {
    "original_filename": "1075_trigger_extern_event",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n</head>"
  },
  {
    "original_filename": "1075_trigger_extern_event",
    "header_text": "Triggering Immediate External Event Execution",
    "local_header_href": "#triggering-immediate-external-event-execution",
    "chunk_text": "<h3>Triggering Immediate External Event Execution</h3><p>We held our first West European Devday in Paris on Monday and I am now sitting in the airport headed for Milano.</p><p>En route to Milano, I worked at testing Joe Ye's\n\n<a href=\"http://adndevblog.typepad.com/aec/2013/07/tricks-to-force-trigger-idling-event.html\">\ntrick to trigger the Idling event</a>\n\n(<a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/curve-length-idling-units-and-revitpythonshell.html#3\">potential SetRaiseWithoutDelay workaround</a>)\n\nto force an\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/12/replacing-an-idling-event-handler-by-an-external-event.html#8\">\nimmediate execution of my external event</a>.</p><p>I also added a comment from Guy Robinson on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/12/replacing-an-idling-event-handler-by-an-external-event.html#10\">Revit requiring focus</a> that\n\nhad me worried for a moment.</p><p>However, the solution is easy!</p><p>Before we get to that, here is our one and only photo from the DevDay event in Paris, a shot of beautiful evening sky at the Charles de Gaulle airport:</p><center>\n<img alt=\"Evening sky at Charles de Gaulle airport\" src=\"file:///j/photo/jeremy/2013/2013-12-09_paris/sky_at_cdg.jpg\" width=\"400\"/>\n</center><a name=\"2\"></a>"
  },
  {
    "original_filename": "1075_trigger_extern_event",
    "header_text": "Triggering External Event Execute by Setting Focus",
    "local_header_href": "#triggering-external-event-execute-by-setting-focus",
    "chunk_text": "<h4>Triggering External Event Execute by Setting Focus</h4><p>Let me recapitulate the situation: I can call the external event Raise method from an external thread, giving me complete control over timing and performance overhead.</p><p>I can see from my debug output log messages that Revit has received and taken account of the Raise and the external event is now marked as pending.</p><p>However, Revit does not call the external event Execute method until some time later, often when the mouse cursor is moved over its window area.</p><p>Guy mentions\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/12/replacing-an-idling-event-handler-by-an-external-event.html#10\">Revit requiring focus</a>.</p><p>That can easily be achieved using the Windows API SetForegroundWindow provided by user32.dll.</p><p>I use it in conjunction with its sibling GetForegroundWindow method, so I can restore focus back to the original window after activating Revit for an instant.</p><p>They can both be referenced from user32.dll using p/invoke like this:</p><pre class=\"code\">\n  <span class=\"green\">// DLL imports from user32.dll to set focus to</span>\n  <span class=\"green\">// Revit to force it to forward the external event</span>\n  <span class=\"green\">// Raise to actually call the external event </span>\n  <span class=\"green\">// Execute.</span>\n \n  <span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;summary&gt;</span>\n  <span class=\"gray\">///</span><span class=\"green\"> The GetForegroundWindow function returns a </span>\n  <span class=\"gray\">///</span><span class=\"green\"> handle to the foreground window.</span>\n  <span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;/summary&gt;</span>\n  [<span class=\"teal\">DllImport</span>( <span class=\"maroon\">\"user32.dll\"</span> )]\n  <span class=\"blue\">static</span> <span class=\"blue\">extern</span> <span class=\"teal\">IntPtr</span> GetForegroundWindow();\n \n  <span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;summary&gt;</span>\n  <span class=\"gray\">///</span><span class=\"green\"> Move the window associated with the passed </span>\n  <span class=\"gray\">///</span><span class=\"green\"> handle to the front.</span>\n  <span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;/summary&gt;</span>\n  [<span class=\"teal\">DllImport</span>( <span class=\"maroon\">\"user32.dll\"</span> )]\n  <span class=\"blue\">static</span> <span class=\"blue\">extern</span> <span class=\"blue\">bool</span> SetForegroundWindow(\n    <span class=\"teal\">IntPtr</span> hWnd );\n</pre><p>With those references in place, I can momentarily shift focus to Revit in the  CheckForPendingDatabaseChanges method, immediately after raising the external event, and Revit  forwards that call to the external event Execute method right away, just as I had hoped:</p><pre class=\"code\">\n    <span class=\"blue\">if</span>( rdb.LastSequenceNumberChanged(\n      <span class=\"teal\">DbUpdater</span>.LastSequence ) )\n    {\n      _event.Raise();\n \n      ++_nUpdatesRequested;\n \n      <span class=\"teal\">Util</span>.Log( <span class=\"blue\">string</span>.Format(\n        <span class=\"maroon\">\"database update pending event raised {0} times\"</span>,\n        _nUpdatesRequested ) );\n \n      <span class=\"green\">// Set focus to Revit for a moment.</span>\n      <span class=\"green\">// Otherwise, it may take a while before </span>\n      <span class=\"green\">// Revit forwards the event Raise to the</span>\n      <span class=\"green\">// event handler Execute method.</span>\n \n      <span class=\"teal\">IntPtr</span> hBefore = GetForegroundWindow();\n \n      SetForegroundWindow(\n        <span class=\"teal\">ComponentManager</span>.ApplicationWindow );\n \n      SetForegroundWindow( hBefore );\n    }\n</pre><p>With these three extra lines in place, Revit reacts immediately to my external event Raise.\nThis is also reflected in the log file (compare with the previous version\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/12/replacing-an-idling-event-handler-by-an-external-event.html#8\">\nwaiting for Revit to react</a>):</p><pre>\n01:16:56.820 CheckForPendingDatabaseChanges loop 1 - check for changes 1\n01:16:57.012 CheckForPendingDatabaseChanges loop 2 - check for changes 2\n01:16:57.217 CheckForPendingDatabaseChanges loop 3 - check for changes 3\n. . .\n01:17:09.058 CheckForPendingDatabaseChanges loop 63 - check for changes 63\n01:17:09.076 database update pending event raised 1 times\n01:17:09.115 UpdateBim begin\n01:17:09.216 UpdateBim end\n01:17:09.283 CheckForPendingDatabaseChanges loop 64 - check for changes 64\n01:17:09.457 CheckForPendingDatabaseChanges loop 65 - check for changes 65\n01:17:09.562 CheckForPendingDatabaseChanges loop 66 - check for changes 66\n. . .\n01:17:19.144 CheckForPendingDatabaseChanges loop 153 - check for changes 153\n01:17:19.249 CheckForPendingDatabaseChanges loop 154 - check for changes 154\n01:17:19.305 database update pending event raised 2 times\n01:17:19.333 UpdateBim begin\n01:17:19.400 UpdateBim end\n01:17:19.515 CheckForPendingDatabaseChanges loop 155 - check for changes 155\n01:17:19.652 CheckForPendingDatabaseChanges loop 156 - check for changes 156\n. . .\n</pre><p><b>Much</b> shorter, <b>instantaneous</b> reaction.</p><p>Yay!</p><p>Success!</p><p>Perfection!</p><p>As already explained, I much prefer this use of an external event over the Idling event, due to the detailed timing control over the polling frequency and possibility to run my polls in a separate thread, as opposed to the Idling all-or-nothing approach.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1075_trigger_extern_event",
    "header_text": "Download",
    "local_header_href": "#download",
    "chunk_text": "<h4>Download</h4><p>I am quite happy about this and committed the changes implementing this version in the\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp\">RoomEditorApp GitHub repository</a>\n\nas\n\n<a href=\"https://github.com/jeremytammik/RoomEditorApp/releases/tag/2014.0.0.19\">\nrelease 2014.0.0.19</a>.\n\n<p>I hope that solves this issue for good.</p>\n<p>Hardly likely, though.</p>\n<p>Anyway, I urgently need to get some sleep now before the Milano DevDay conference, due to begin in just a very few hours...</p>\n<p>Again, wish me luck, guys.</p>\n</p>"
  }
]