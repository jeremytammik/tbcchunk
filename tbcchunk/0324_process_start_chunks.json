[
  {
    "original_filename": "0324_process_start",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0324_process_start",
    "header_text": "Using Process.Start to Open a Project or Family",
    "local_header_href": "#using-processstart-to-open-a-project-or-family",
    "chunk_text": "<h3>Using Process.Start to Open a Project or Family</h3><p>Here is a question that comes up from time to time on how to open and display a project or family file in the Revit user interface.\nI mentioned a workaround in the answer to a \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/09/detail-lines.html?cid=6a00e553e1689788330120a6cf0e3e970b#comment-6a00e553e1689788330120a6cf0e3e970b \n\">\ncomment by Nadim</a>,\n\nand now I think it is time to promote this little information nugget to a proper post to make it easier to find.\n\n<p><strong>Question:</strong> I need to open and display an existing project or family in the Revit user interface.\nI see that the NewFamilyDocument and NewProjectDocument methods create new documents but do not open them.\nI tried to use the OpenDocumentFile method taking a document path name argument to open an existing project, but it does not display it in the user interface either, it only returns an in-memory version of the document.\nI also implemented an event handler and verified that the OnDocumentOpen event is not triggered by it.\nIs it possible to open and display a document in the Revit user interface, and if so, how, please?\n\n<p><strong>Answer:</strong> Yes, correct, NewFamilyDocument, NewProjectDocument and OpenDocumentFile only create new or open existing documents for API manipulation. \nThey do not display them in the user interface, only open them in the background in-memory, without the Revit user interface even being aware of it, which is why the event is not triggered either.\nThere is currently no API method at all to make a document current in the Revit user interface. \nThere is a workaround, though, that several people have used successfully:\nyou can use Process.Start as described in the comments on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/09/debugging-a-rev.html?cid=6a00e553e16897883301156fc1fed8970b#comment-6a00e553e16897883301156fc1fed8970b\">\ndebugging an add-in</a>. \n\nHere is a little console application demonstrating such a call:\n\n<pre class=\"code\">\n<span class=\"blue\">class</span> <span class=\"teal\">Program</span>\n{\n  <span class=\"blue\">static</span> <span class=\"blue\">void</span> Main( <span class=\"blue\">string</span>[] args )\n  {\n    System.Diagnostics.<span class=\"teal\">Process</span>.Start( \n      <span class=\"maroon\">\"C:/tmp/wall.rvt\"</span> );\n  }\n}\n</pre>\n<p>This uses the existing instance of Revit if it is already running.\nIt also works fine to start up Revit if you replace the project file \"C:/tmp/wall.rvt\" by the Revit application executable, although in that case obviously no document is opened.\n</p></p></p></p>"
  }
]