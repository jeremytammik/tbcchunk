[
  {
    "original_filename": "1757_lookup_types_names",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- design.automation-nodejs-sketchIt\n  https://github.com/Autodesk-Forge/design.automation-nodejs-sketchIt\n  SketchIt is web application that creates walls and floors in a SVG Canvas to later create & visualize the result RVT file.\n  [demo](https://sketchitapp.herokuapp.com)\n  /a/src/web/forge/da4r/design.automation-nodejs-sketchIt/README.md\n\ntwitter:\n\nSketchIt generates walls and BIM from node.js SVG canvas, RevitLookup family types and parameter definition names in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/lookup_types_names\n\n@afrojme shares a neat Forge Design Automation for Revit sample app enabling you to sketch walls on a canvas and generate a live Revit BIM RVT from that -- https://thebuildingcoder.typepad.com/blog/2019/06/lookup-family-types-and-parameter-definition-names.html#4\n\nToday, we present yet another RevitLookup enhancement, a note on an undocumented built-in parameter change and a neat Forge Design Automation for Revit sample app\n&ndash; RevitLookup family types and parameter definition names\n&ndash; Bitmap aspect ratio built-in parameter renamed\n&ndash; DA4R SketchIt demo generates walls...\n\nlinkedin:\n\nSketchIt generates walls and BIM from node.js SVG canvas, RevitLookup family types and parameter definition names in the #RevitAPI\n\nhttp://bit.ly/lookup_types_names\n\nToday, we present yet another RevitLookup enhancement, a note on an undocumented built-in parameter change and a neat Forge Design Automation for Revit sample app:\n\n- RevitLookup family types and parameter definition names\n- Bitmap aspect ratio built-in parameter renamed\n- DA4R SketchIt demo generates walls\n\n@afrojme shares a neat Forge Design Automation for Revit sample app enabling you to sketch walls on a canvas and generate a live Revit BIM RVT from that...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n-->"
  },
  {
    "original_filename": "1757_lookup_types_names",
    "header_text": "SketchIt, Lookup Family Types, Definition Names",
    "local_header_href": "#sketchit-lookup-family-types-definition-names",
    "chunk_text": "### SketchIt, Lookup Family Types, Definition Names\n\nToday, we present yet another RevitLookup enhancement, a note on an undocumented built-in parameter change and a neat Forge Design Automation for Revit sample app:\n\n- [RevitLookup family types and parameter definition names](#2)\n- [Bitmap aspect ratio built-in parameter renamed](#3)\n- [DA4R SketchIt demo generates walls](#4)"
  },
  {
    "original_filename": "1757_lookup_types_names",
    "header_text": "RevitLookup Family Types and Parameter Definition Names",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> RevitLookup Family Types and Parameter Definition Names\n\nAlexander [@aignatovich](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/1257478) [@CADBIMDeveloper](https://github.com/CADBIMDeveloper) Ignatovich, aka Александр Игнатович,\nsubmitted yet another useful [RevitLookup](https://github.com/jeremytammik/RevitLookup) enhancement\nin [pull request #53 &ndash; available values for parameters (`ParameterType.FamilyType`) and `FamilyParameter` titles](https://github.com/jeremytammik/RevitLookup/pull/53).\n\nIn his own words:\n\n> I added 2 improvements to the RevitLookup tool.\n\n> The first is about available parameters values for parameters with `ParameterType` == `ParameterType.FamilyType`:\n\n<center>\n<img src=\"img/revitlookup_pull_request_53_1.png\" alt=\"RevitLookup lists family types\" width=\"415\">\n</center>\n\n> We can retrieve these values using the `Family.GetFamilyTypeParameterValues` method.\nThe elements are either of class `ElementType` or `NestedFamilyTypeReference`:\n\n<center>\n<img src=\"img/revitlookup_pull_request_53_2.png\" alt=\"RevitLookup lists family types\" width=\"667\">\n</center>\n\n> The second is very simple: Now the tool shows `FamilyParameter` definition names in the left pane:\n\n<center>\n<img src=\"img/revitlookup_pull_request_53_3.png\" alt=\"RevitLookup lists family types\" width=\"596\">\n</center>\n\nYet again many thanks to Alexander for his numerous invaluable contributions!\n\nThis enhancement is captured\nin [RevitLookup release 2020.0.0.2](https://github.com/jeremytammik/RevitLookup/releases/tag/2020.0.0.2)."
  },
  {
    "original_filename": "1757_lookup_types_names",
    "header_text": "Bitmap Aspect Ratio Built-in Parameter Renamed",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Bitmap Aspect Ratio Built-in Parameter Renamed\n\nRudolf [@Revitalizer](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/1103138) Honke\nand I completed a quick 20-km hilly run together yesterday.\n\nThis morning he pointed out an irritating change between the Revit 2019 and Revit 2020 APIs, an undocumented modification of the name of a built-in parameters defining the locked aspect ratio of a bitmap image, or *Seitenverhältnis sperren von eingefügten Rasterbildern* in German.\n\nThe underlying integer value remains unchanged, however, `-1007752`:\n\n- Revit 2019: `BuiltInParameter.RASTER_MAINTAIN_ASPECT_RATIO`\n- Revit 2020: `BuiltInParameter.RASTER_LOCK_PROPORTIONS`\n\nUseful to know, just in case you happen to run into this yourself."
  },
  {
    "original_filename": "1757_lookup_types_names",
    "header_text": "DA4R SketchIt Demo Generates Walls",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> DA4R SketchIt Demo Generates Walls\n\nI just noticed a neat\n[Forge](https://forge.autodesk.com)\n[Design Automation for Revit](https://forge.autodesk.com/en/docs/design-automation/v3/developers_guide/overview)\nor [DA4R](https://thebuildingcoder.typepad.com/blog/about-the-author.html#5.55) sample\napplication created by my colleague\nJaime [@afrojme](https://twitter.com/AfroJme) Rosales,\n[Forge Partner Development](http://forge.autodesk.com):\n\n[SketchIt](https://github.com/Autodesk-Forge/design.automation-nodejs-sketchIt) is\na web application that enables the user to sketch out walls and floors in an SVG Canvas to later create and visualise them in an automatically generated RVT BIM model:\n\n<center>\n<img src=\"img/jr_da4r_sketchit_demo.gif\" alt=\"SketchIt demo\" width=\"600\">\n</center>\n\nYou can try it out live yourself in the [demo web page](https://sketchitapp.herokuapp.com).\n\nThis is a [node.js](https://nodejs.org) app demonstrating an end to end use case for external developers using Design Automation for Revit.\nIn addition to using Design Automation for Revit REST APIs, this app also leverages other Autodesk Forge services like Data Management API (OSS), the Viewer API and Model Derivative services.\n\nThe sketcher is built using Redux with React and makes extensive use of Flux architecture.\n\nMain Parts\n\n- Create a Revit Plugin to be used within AppBundle of Design Automation for Revit.\n- Create your App, upload the AppBundle, define your Activity and test the workitem.\n- Create the Web App to call the workitem."
  }
]