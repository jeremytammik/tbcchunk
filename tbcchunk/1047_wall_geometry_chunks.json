[
  {
    "original_filename": "1047_wall_geometry",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1047_wall_geometry",
    "header_text": "Wall Compound Layer, Other Geometry and Licenses",
    "local_header_href": "#wall-compound-layer-other-geometry-and-licenses",
    "chunk_text": "<h3>Wall Compound Layer, Other Geometry and Licenses</h3><p>Below, we take another quick look at the issue of <a href=\"#2\">licenses</a>.</p><p>First, here is a pretty basic question that keeps reappearing, so I summarise some existing results for everybody's convenience:</p><p><strong>Question:</strong> How can I programmatically retrieve the coordinates of a wall boundary, especially the geometry of the finished interior and exterior layers?</p><p>I wish to export the building blueprint to GML.</p><p>I would also like to know how to achieve the same for the geometry of doors and windows.</p><p>Some C# sample code would be very helpful.</p><p><strong>Answer:</strong> We discussed the topic of retrieving geometry in all conceivable variations here in the past, so numerous C# samples for achieving that are returned immediately by simply searching the web for\n\n<a href=\"http://lmgtfy.com/?q=building+coder+get_geometry\">\nbuilding coder get_geometry</a>.</p><p>You will also find a number of examples of retrieving element geometry in the Revit SDK samples.\nAgain, just search globally for 'get_Geometry'.</p><p>For specific details on the location of wall layers and their boundaries, here are some of different aspects we already looked at:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2008/11/wall-compound-layers.html\">Wall compound layers</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/compound-wall-layer-volumes.html\">Compound wall layer volumes</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/retrieving-detailed-wall-layer-geometry.html\">Retrieving detailed wall layer geometry</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2011/12/interior-side-of-a-wall.html\">Interior side of a wall</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/01/identifying-wall-compound-layers-and-parts.html\">Identifying wall compound layers and parts</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/03/updating-wall-compound-layer-structure.html\">Updating the wall compound layer structure</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/08/setting-the-compound-structure-core-and-shell-layers.html\">Setting the compound structure core and shell layers</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/09/creating-an-offset-wall.html\">Creating an offset wall</a></li>\n</ul><p>Talking about wall boundaries, we had an extensive related discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/10/determining-a-room-boundary-segment-generating-element.html\">\ndetermining the room boundary segment generating element</a> –\n\na wall, in fact, nine time out of ten – just yesterday, pointing to numerous previous examples of retrieving room boundaries, ray shooting to discover neighbouring elements, and also looking at the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/10/determining-a-room-boundary-segment-generating-element.html#4\">\nspatial element boundary location</a> options.\n\n<p>That should provide more than enough information for most wall layer related issues.</p>\n<p>Good luck, and have fun!</p>\n<a name=\"2\"></a>\n<h4>More on Licenses</h4>\n<p>Now that I pointed out\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/10/the-building-coder-samples-on-github.html#2\">\nthe importance of a license</a>,\n\nseveral people asked me to say more about this complex topic, both from inside and outside of Autodesk.</p>\n<p>Actually, maybe, it is pretty simple, and the legalese and numerous variations just make it <b>appear</b> complex.</p>\n<p>I looked at the\n\n<a href=\"http://creativecommons.org\">\nCreative Commons</a> license\n\nand like it a lot at first glance, but there seems to be some discussion on\n\n<a href=\"https://github.com/github/choosealicense.com\">\napplying a Creative Commons license to software</a>,\n\nespecially GitHub projects.</p>\n<p>That discussion led me to the exhaustive\n\n<a href=\"https://www.gnu.org/licenses/license-list.html#Unlicense\">\nGNU list of licenses and comments about them</a>,\n\nincluding a guide on\n\n<a href=\"https://www.gnu.org/licenses/license-recommendations.html\">\nhow to choose a license for your own work</a>.</p>\n<p>Being GNU, the recommendations veer heavily towards the\n\n<a href=\"http://en.wikipedia.org/wiki/Copyleft\">\nCopyleft</a>,\n\nwhich is not suitable for commercial software, including many Revit and other Autodesk software add-ins.</p>\n<p>However, it also states: \"In these special situations where copyleft is not appropriate, we recommend the\n\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\">\nApache License 2.0</a>.\"</p>\n<p>After reading through the Apache license, as far as I can fathom it, that makes a lot of sense, and I am considering switching to it from the MIT license that I chose for my initial GitHub projects.</p>\n<p>Actually, searching the GNU list more thoroughly for the MIT license, I found this entry:</p>\n<p>\"<a href=\"http://directory.fsf.org/wiki/License:Expat\">Expat License</a>:\nThis is a lax, permissive non-copyleft free software license, compatible with the GNU GPL.\nIt is sometimes ambiguously referred to as the <b><i>MIT License</i></b>.\nFor substantial programs it is better to use the Apache 2.0 license since it blocks patent treachery.\"</p>\n<p>Since my samples are all not very substantial, I am not worrying about the warning in the last statement, but I will indeed switch to the Apache 2 license for future submissions.</p>\n<p>It has the added advantage of apperaing right at the top of the new GitHub repository license selection list  :-)</p>\n</p>"
  },
  {
    "original_filename": "1047_wall_geometry",
    "header_text": "More on Licenses",
    "local_header_href": "#more-on-licenses",
    "chunk_text": "<h4>More on Licenses</h4><p>Now that I pointed out\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/10/the-building-coder-samples-on-github.html#2\">\nthe importance of a license</a>,\n\nseveral people asked me to say more about this complex topic, both from inside and outside of Autodesk.</p><p>Actually, maybe, it is pretty simple, and the legalese and numerous variations just make it <b>appear</b> complex.</p><p>I looked at the\n\n<a href=\"http://creativecommons.org\">\nCreative Commons</a> license\n\nand like it a lot at first glance, but there seems to be some discussion on\n\n<a href=\"https://github.com/github/choosealicense.com\">\napplying a Creative Commons license to software</a>,\n\nespecially GitHub projects.</p><p>That discussion led me to the exhaustive\n\n<a href=\"https://www.gnu.org/licenses/license-list.html#Unlicense\">\nGNU list of licenses and comments about them</a>,\n\nincluding a guide on\n\n<a href=\"https://www.gnu.org/licenses/license-recommendations.html\">\nhow to choose a license for your own work</a>.</p><p>Being GNU, the recommendations veer heavily towards the\n\n<a href=\"http://en.wikipedia.org/wiki/Copyleft\">\nCopyleft</a>,\n\nwhich is not suitable for commercial software, including many Revit and other Autodesk software add-ins.</p><p>However, it also states: \"In these special situations where copyleft is not appropriate, we recommend the\n\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\">\nApache License 2.0</a>.\"</p><p>After reading through the Apache license, as far as I can fathom it, that makes a lot of sense, and I am considering switching to it from the MIT license that I chose for my initial GitHub projects.</p><p>Actually, searching the GNU list more thoroughly for the MIT license, I found this entry:</p><p>\"<a href=\"http://directory.fsf.org/wiki/License:Expat\">Expat License</a>:\nThis is a lax, permissive non-copyleft free software license, compatible with the GNU GPL.\nIt is sometimes ambiguously referred to as the <b><i>MIT License</i></b>.\nFor substantial programs it is better to use the Apache 2.0 license since it blocks patent treachery.\"</p><p>Since my samples are all not very substantial, I am not worrying about the warning in the last statement, but I will indeed switch to the Apache 2 license for future submissions.</p><p>It has the added advantage of apperaing right at the top of the new GitHub repository license selection list  :-)</p>"
  }
]