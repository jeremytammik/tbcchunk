[
  {
    "original_filename": "0844_delete_graphicstyle",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0844_delete_graphicstyle",
    "header_text": "Deleting a GraphicStyle Element",
    "local_header_href": "#deleting-a-graphicstyle-element",
    "chunk_text": "<h3>Deleting a GraphicStyle Element</h3><p>Here is a short and sweet deletion question handled by Joe Ye:\n\n<p><strong>Question:</strong> I am trying to delete a GraphicStyle object in a RFA family document.\n\n<p>I tried to achieve this using the following code, but it was not successful: \n\n<pre class=\"code\">\n  Dim elem As Element = m_rvtDoc.Element(\n    \"5ad9f0cf-6eff-4c63-8a44-9f3a87881dd7-00000b22\") \n\n  m_rvtDoc.Delete(elem)\n</pre>\n<p>How can I delete this object?\n\n\n<p><strong>Answer:</strong> Some internal line style objects cannot be deleted, because the model requires their presence.\nAs you can see in the following image, the Delete and Rename buttons are disabled when Hidden Lines are selected:</p>\n<center>\n<img alt=\"Protected line style objects\" src=\"img/object_styles.png\" width=\"600\"/>\n</center>\n<p>Some of the other line types, i.e. GraphicStyle objects, can very well be deleted.\n\n<p>I manually created an own line type in the dialogue shown above. \nSince it is my own, the model does not depend on it.\nI can then delete the line type I created using the following external command:\n\n<pre class=\"code\">\n[<span class=\"teal\">TransactionAttribute</span>( <span class=\"teal\">TransactionMode</span>.Manual )]\n<span class=\"blue\">public</span> <span class=\"blue\">class</span> <span class=\"teal\">Command</span> : <span class=\"teal\">IExternalCommand</span>\n{\n  <span class=\"blue\">public</span> <span class=\"teal\">Result</span> Execute( \n    <span class=\"teal\">ExternalCommandData</span> commandData, \n    <span class=\"blue\">ref</span> <span class=\"blue\">string</span> messages, \n    <span class=\"teal\">ElementSet</span> elements )\n  {\n    <span class=\"teal\">UIApplication</span> app = commandData.Application;\n    <span class=\"teal\">Document</span> doc = app.ActiveUIDocument.Document;\n \n    <span class=\"teal\">Transaction</span> trans = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc );\n    trans.Start( <span class=\"maroon\">\"Delete Line Style\"</span> );\n \n    <span class=\"green\">//ElementId id = new ElementId( 4889 );</span>\n    <span class=\"green\">//Element elem = doc.get_Element( id );</span>\n \n    <span class=\"blue\">string</span> guid = <span class=\"maroon\">\"6387d73b-1e94-456a-8804\"</span>\n      + <span class=\"maroon\">\"-aaaf48a905f0-0000131a\"</span>;\n \n    <span class=\"teal\">Element</span> elem = doc.get_Element( guid );\n \n    doc.Delete( elem );\n \n    trans.Commit();\n \n    <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Succeeded;\n  }\n}\n</pre>\n<p>By the way, deleting elements obviously requires an open transaction, which needs to be committed after the deletion. \n</p></p></p></p></p></p></p>"
  }
]