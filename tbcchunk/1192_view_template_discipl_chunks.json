[
  {
    "original_filename": "1192_view_template_discipl",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n</head>"
  },
  {
    "original_filename": "1192_view_template_discipl",
    "header_text": "Accessing Discipline and Duplicating View Template",
    "local_header_href": "#accessing-discipline-and-duplicating-view-template",
    "chunk_text": "<h3>Accessing Discipline and Duplicating View Template</h3><p>I am back again in the land of the living... working, blogging.</p><p>I'll jump right in with two recent cases related to disciplines and views:</p><ul>\n<li><a href=\"#2\">Accessing view and project browser disciplines</a></li>\n<li><a href=\"#3\">Duplicating a view template</a></li>\n</ul><a name=\"2\"></a>"
  },
  {
    "original_filename": "1192_view_template_discipl",
    "header_text": "Accessing View and Project Browser Disciplines",
    "local_header_href": "#accessing-view-and-project-browser-disciplines",
    "chunk_text": "<h4>Accessing View and Project Browser Disciplines</h4><p><strong>Question:</strong> When changing the Revit project browser organization in Revit to 'Discipline', the project browser shows different subfolders depending on the document template.</p><p>For example, in a project created from an architectural template, it shows ‘Architectural':</p><center>\n<img alt=\"Project browser discipline label Architecture\" src=\"img/discipline_1.png\" width=\"306\"/>\n</center><p>If the project was created from a structural template, it shows ‘Structural':</p><center>\n<img alt=\"Project browser discipline label Structural\" src=\"img/discipline_2.png\" width=\"306\"/>\n</center><p>Is it possible to retrieve this discipline name programmatically?</p><p><strong>Answer:</strong> My understanding is that this is for organization.\nIf you choose 'discipline', it shows discipline as a top categorization.</p><p>If you change the discipline of a view, say from 'Architecture' to 'Structure' for an elevation, it will show up under 'Structure':</p><center>\n<img alt=\"View discipline\" src=\"img/discipline_3.png\" width=\"518\"/>\n</center><p>This depends on the current setting of the View.Discipline property providing a ViewDiscipline enumeration value.</p><p><strong>Response:</strong> Yes, View.Discipline returns the discipline for a given view.</p><p>The returned discipline label is English text, even in a localised (e.g., Japanese) version of Revit.</p><p>I implemented this test code to list the disciplines of all views in the current document:</p><pre class=\"code\">\n  <span class=\"teal\">FilteredElementCollector</span> collector\n    = <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc )\n      .OfClass( <span class=\"blue\">typeof</span>( <span class=\"teal\">View</span> ) );\n \n  <span class=\"blue\">string</span> s = <span class=\"maroon\">\"\"</span>;\n \n  <span class=\"blue\">foreach</span>( <span class=\"teal\">View</span> v <span class=\"blue\">in</span> collector )\n  {\n    <span class=\"blue\">if</span>( ( v.ViewType == <span class=\"teal\">ViewType</span>.Elevation ||\n      v.ViewType == <span class=\"teal\">ViewType</span>.FloorPlan ||\n      v.ViewType == <span class=\"teal\">ViewType</span>.ThreeD ) &amp;&amp;\n      v.CanBePrinted )\n    {\n      <span class=\"blue\">if</span>( !s.Contains( v.Discipline.ToString() ) )\n      {\n        s = s + <span class=\"maroon\">\"\\n\"</span> + v.Discipline.ToString();\n      }\n    }\n  }\n  <span class=\"teal\">TaskDialog</span>.Show( <span class=\"maroon\">\"専門分野名\"</span>, s );\n</pre><p>Is there any other more direct way to retrieve the discipline label displayed in the project browser?</p><p><strong>Answer:</strong> The following code retrieves the string '構造' (Structural) for the current view (Level 1, in this case) in the structural discipline:</p><center>\n<img alt=\"Project browser discipline label\" src=\"img/discipline_4.jpeg\" width=\"258\"/>\n</center><pre class=\"code\">\n  <span class=\"teal\">BrowserOrganization</span> bo = <span class=\"teal\">BrowserOrganization</span>\n    .GetCurrentBrowserOrganizationForViews( doc );\n \n  IList&lt;<span class=\"teal\">FolderItemInfo</span>&gt; folderItems\n    = bo.GetFolderItems( doc.ActiveView.Id );\n \n  <span class=\"blue\">foreach</span>( <span class=\"teal\">FolderItemInfo</span> folder <span class=\"blue\">in</span> folderItems )\n  {\n    <span class=\"blue\">string</span> name = folder.Name;\n  }\n</pre><p>Please note that the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/04/whats-new-in-the-revit-2015-api.html#3.13\">\nBrowserOrganization class</a> was\n\nadded in Revit 2015.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1192_view_template_discipl",
    "header_text": "Duplicating a View Template",
    "local_header_href": "#duplicating-a-view-template",
    "chunk_text": "<h4>Duplicating a View Template</h4><p>Madhu Das raised the issue of duplicating a view template in a\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/04/filter-for-views-and-istemplate-predicate.html?cid=6a00e553e16897883301a73e03bcff970d#comment-6a00e553e16897883301a73e03bcff970d\">comment</a> on\n\nthe discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/04/filter-for-views-and-istemplate-predicate.html\">filtering for views and the IsTemplate predicate</a>:</p><p><strong>Question:</strong> How can I programmatically duplicate a view template?</p><p>The following code returns False if v1 is a view template:</p><pre class=\"code\">\n  v1.CanViewBeDuplicated(<span class=\"teal\">ViewDuplicateOption</span>.Duplicate)\n</pre><p><strong>Answer:</strong> We currently have an open wish list item CF-1509 [API wish: create view template -- 09693106] for programmatic creation of a view template.</p><p>For duplication of an existing one, you may be able to make use of the copy and paste API.</p><p>Look at the numerous\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/copy-and-paste-api-applications-and-modeless-assertion.html\">\ncopy and paste API usage examples</a>.</p><p><strong>Response:</strong> Thank you very much for the help.</p><p>It is possible by using the Copy and Paste API.</p><p>I successfully tried the following code:</p><pre class=\"code\">\n  <span class=\"blue\">Dim</span> elementIds <span class=\"blue\">As</span> <span class=\"blue\">New</span> List(<span class=\"blue\">Of</span> <span class=\"teal\">ElementId</span>)\n \n  elementIds.Add(v.Id)\n \n  copiedIds = <span class=\"teal\">ElementTransformUtils</span>.CopyElements( _\n    activeDoc, elementIds, activeDoc, _\n    <span class=\"teal\">Transform</span>.Identity, Options)\n \n  vNew = activeDoc.GetElement(copiedIds(0))\n \n  vNew.Name = <span class=\"maroon\">\"New View Template\"</span>\n</pre>"
  }
]