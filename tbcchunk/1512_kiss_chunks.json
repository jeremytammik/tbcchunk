[
  {
    "original_filename": "1512_kiss",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<!--\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\nhttps://forums.autodesk.com/t5/revit-api-forum/listing-all-views-in-a-project-on-a-winform-throwing-an/m-p/6786228\n\nhttp://forums.autodesk.com/t5/revit-api-forum/revit-command-line-switches/m-p/6782154\n\nhttp://forums.autodesk.com/t5/revit-api-forum/distance-between-two-points-xyz-along-a-given-vector/m-p/6747568\n  point distance along a vector\n  /a/doc/revit/tbc/git/a/img/point_dist_along_vector.png \n\n #RevitAPI @AutodeskRevit #aec #bim #dynamobim @AutodeskForge\n\nI continued my activity in the Revit API discussion forum and had lots of interesting discussions there.\nOne recent thread caused me to bring up a favourite topic of mine, on keeping things simple.\nI'll also mention two other less recent recurring questions\n&ndash; Distance between two points in a specific direction\n&ndash; Revit command-line switches\n&ndash; Keeping things simple with the Revit API\n&ndash; Dino pondering lengthening days...\n\n- [RevitLookup spot dimension and Escape](#5)\n\n-->"
  },
  {
    "original_filename": "1512_kiss",
    "header_text": "Distances, Switches, Kiss-ing and a Dino",
    "local_header_href": "#distances-switches-kiss-ing-and-a-dino",
    "chunk_text": "### Distances, Switches, Kiss-ing and a Dino\n\nI continued my activity in \nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api/bd-p/160) and \nhad lots of interesting discussions there.\n\nOne recent thread caused me to bring up a favourite topic of mine, on keeping things simple.\n\nI'll also mention two other less recent recurring questions &ndash; one of them partly because I went to the effort of creating a nice figure illustrating it &nbsp; :-)\n\n- [Distance between two points in a specific direction](#2)\n- [Revit command-line switches](#3)\n- [Keeping things simple with the Revit API](#4)\n- [Dino pondering lengthening days](#5)\n\n\n####<a name=\"2\"></a>Distance Between Two Points in a Specific Direction\n\nThis question on determining \nthe [distance between two points along a given vector](http://forums.autodesk.com/t5/revit-api-forum/distance-between-two-points-xyz-along-a-given-vector/m-p/6747568) has\ncome up several times in the past, so let's capture it here for future reference:\n\n**Question:** Does the Revit API provide a method of returning the distance between two points along a given vector?\n \nI realize there are ways to manually do this, but I was wondering if the Revit API had something natively to make my code a little cleaner.\n\n**Answer 1:** You can use a `Autodesk.Revit.DB.Line`. It provides a double `Length` property that it inherits from `Curve`.\n\n**Answer 2:** Where `pointA` and `pointB` are `XYZ` points:\n\n<pre class=\"code\">\n  dim&nbsp;distance&nbsp;<span style=\"color:blue;\">as</span>&nbsp;<span style=\"color:blue;\">double</span>&nbsp;=&nbsp;pointA.DistanceTo(pointB)\n</pre>\n\nThe XYZ class also has `.multiply` and `.divide` functions if you want to go a proportion of that distance along a vector.\n\n**Answer 3:** If you need the distance of the points projected onto the given vector:\n \n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">XYZ</span>&nbsp;p1&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">XYZ</span>(&nbsp;0,&nbsp;10,&nbsp;0&nbsp;);\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">XYZ</span>&nbsp;p2&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">XYZ</span>(&nbsp;10,&nbsp;60,&nbsp;0&nbsp;);\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">XYZ</span>&nbsp;direction&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">XYZ</span>(&nbsp;30,&nbsp;60,&nbsp;0&nbsp;);\n&nbsp;&nbsp;<span style=\"color:blue;\">double</span>&nbsp;distance&nbsp;=&nbsp;direction.Normalize().DotProduct(&nbsp;p1.Subtract(&nbsp;p2&nbsp;)&nbsp;);\n&nbsp;&nbsp;distance&nbsp;=&nbsp;Math.Abs(&nbsp;distance );\n</pre>\n\n**Answer 4:** I would award the main prize and cigar to answer 3 above.\n \nPartly for providing what I guess might be the right answer.\n \nAbove all for guessing what may or may not be the right intended question.\n \nIs this an accurate description of your needs?\n\n**Question rephrased:** Given points `p1` and `p2`, what is the distance between them, measured along the line `L`?\n\n<center>\n<img src=\"img/point_dist_along_vector.png\" alt=\"Distance between points in a specified direction\" width=\"275\"/>\n</center>\n\nIf that is indeed what you need, you are actually not asking about the distance between the points at all.\n \nThese two points, together with the direction `w` of `L`, define two planes.\n \nYou are asking about the distance between those two planes.\n \nAre you?\n \nIf so, answer 3 above is absolutely accurate and can be reformulated as:\n \nAnswer:\n \n<pre>\n  v = p2 - p1\n  w = L.direction.normalise\n  distance_along_w = v.dotProduct( w )\n</pre>\n\nUnfortunately, the Revit geometry API is not full-fledged and therefore lacks a method to return the distance between two planes.\n \nOtherwise, that would probably provide an even more straightforward path.\n \nThe suggested one is very direct and efficient, though, and hard to beat in those respects.\n \nI hope this helps and that we collectively succeeded at nailing your intention.\n\n####<a name=\"2.1\"></a>\n**Clarification:** Why can you not simply use the built-in `XYZ.DistanceTo` method like this?\n\n<pre class=\"code\">\n  double rDist = p1.DistanceTo( p2 );\n</pre>\n\nBecause `DistanceTo` returns the shortest distance between two points, not the distance along a given direction.\nThe latter is actually not the distance between two points, but the distance between two planes.\n\n**Response:** Yes, you are absolutely correct in your initial assumption: I was looking for the distance between two planes, my initial question was a very round-about way of getting to that point. Your answers gave me exactly what I was looking for. Putting together a small routine utilising the information I was given gave me A) a nice, recallable routine, B) something that I can tailor to my needs. I realise that measuring between planes isn't something 'native' to Revit, and making my own routines has the benefit of allowing me to make methods for simple functions that I can expand and modify as needed.\n\n\n####<a name=\"3\"></a>Revit Command-Line Switches\n\nAnother recurring question is\non [Revit command line switches](http://forums.autodesk.com/t5/revit-api-forum/revit-command-line-switches/m-p/6782154),\nwhich Matt Taylor just summarised succinctly:\n\nThese are the switches I'm aware of and tested in Revit 2017:\n \n- *no switch* &lt;fully qualified path of file to open&gt; &ndash; Open a Revit file. Seems to work with a template or project file. Haven't tried a family. I've been doing this since Revit 2011, though I put `/o` in there so I know what it is, though that seems to be ignored.\n- *no switch* &lt;fully qualified path of journal file&gt; &ndash; Replay a journal file.\n- `/language` &lt;language code such as ENU&gt; &ndash; Set user interface language.\n- `/max` &ndash; Start the session maximised.\n- `/min` &ndash; Start the session minimised.\n- `/nosplash` &ndash; Suppress the splash screen.\n- `/viewer` &ndash; Launch Revit in viewer mode.\n \nMany thanks to Matt and [Callumf](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/3964019) for providing this list!\n\n\n####<a name=\"4\"></a>Keeping Things Simple with the Revit API\n\nThe most interesting issue today is \non [listing all views in a project on a Winform throwing an exception](http://forums.autodesk.com/t5/revit-api-forum/listing-all-views-in-a-project-on-a-winform-throwing-an/m-p/6786228) providing \nma an opportunity \nto [wax philosophical](http://english.stackexchange.com/questions/21673/is-there-any-other-way-you-can-wax-as-you-do-when-you-wax-philosophical) on \nkeeping things simple, although Rudi 'Revitalizer' provided the more succinct and accurate fix to the underlying problem:\n\n**Question:** I am attempting to create a WinForm which lists all the views in the project as a viewTree. The WinForm run command is then packaged into a Dynamo ZeroTouch node, however the views are not displayed when the form launches, and when I relaunch the form I get an error that line 53 (the `foreach` statement that attempts to use the view name to populate the viewTree) is \"not set to an instance of an object\". This is my first attempt to raise and consume events and I've done everything I can to get it to work; what is the cause of this error?\n \nThe form successfully launches via the dynamo node:\n\n<center>\n<img src=\"img/dynamo_list_views_1.jpg\" alt=\"Dynamo node displaying Windows form\" width=\"550\"/>\n</center>\n \nThe exception:\n\n<center>\n<img src=\"img/dynamo_list_views_2.jpg\" alt=\"Exception displaying Windows form\" width=\"478\"/>\n</center>\n\nThe code:\n\n<pre class=\"code\"> \n<span style=\"color:blue;\">using</span>&nbsp;System;\n<span style=\"color:blue;\">using</span>&nbsp;System.Collections.Generic;\n<span style=\"color:blue;\">using</span>&nbsp;System.ComponentModel;\n<span style=\"color:blue;\">using</span>&nbsp;System.Data;\n<span style=\"color:blue;\">using</span>&nbsp;System.Drawing;\n<span style=\"color:blue;\">using</span>&nbsp;System.Linq;\n<span style=\"color:blue;\">using</span>&nbsp;System.Text;\n<span style=\"color:blue;\">using</span>&nbsp;System.Threading.Tasks;\n<span style=\"color:blue;\">using</span>&nbsp;System.Windows.Forms;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.DesignScript.Runtime;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.DesignScript.Interfaces;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.DesignScript.Geometry;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.DB;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.DB.Architecture;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.UI;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.UI.Selection;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.ApplicationServices;\n<span style=\"color:blue;\">using</span>&nbsp;Autodesk.Revit.Attributes;\n<span style=\"color:blue;\">using</span>&nbsp;RevitServices.Persistence;\n<span style=\"color:blue;\">using</span>&nbsp;RevitServices.Transactions;\n<span style=\"color:blue;\">using</span>&nbsp;Revit.Elements;\n<span style=\"color:blue;\">using</span>&nbsp;Revit.GeometryConversion;\n \n<span style=\"color:blue;\">namespace</span>&nbsp;SelectSheetsAndViews\n{\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">&nbsp;The&nbsp;form&nbsp;class</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">partial</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">FormRevitSelect</span>&nbsp;:&nbsp;System.Windows.Forms.<span style=\"color:#2b91af;\">Form</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;FormRevitSelect()\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InitializeComponent();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;DynamoTreeListSelect_Activated(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;System.<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n \n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;textBox1_TextChanged(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n \n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;tableLayoutPanel1_Paint(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">PaintEventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n \n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Form1_Load(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&gt;&nbsp;d1&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ThresholdReachedEventArgs</span>().Views;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//List&lt;string&gt;&nbsp;d&nbsp;=&nbsp;new&nbsp;List&lt;string&gt;&nbsp;{&nbsp;&quot;A&quot;,&nbsp;&quot;B&quot;,&nbsp;&quot;C&quot;,&nbsp;&quot;D&quot;};</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&nbsp;x&nbsp;<span style=\"color:blue;\">in</span>&nbsp;d1&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//foreach&nbsp;(string&nbsp;x&nbsp;in&nbsp;d)</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;treeView1.Nodes.Add(&nbsp;x.ToString()&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;checkedListBox1_SelectedIndexChanged(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n \n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;button1_Click(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">this</span>.Close();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;treeView1_AfterSelect(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">TreeViewEventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n \n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n \n \n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">A&nbsp;Revit&nbsp;class&nbsp;to&nbsp;get&nbsp;all&nbsp;the&nbsp;sheets&nbsp;and&nbsp;views&nbsp;in&nbsp;the&nbsp;document</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">RevitWinForm</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">object</span>&gt;&nbsp;_sheetsAndViews;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">object</span>&gt;&nbsp;sheetsAndViewsToDelete;\n \n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">internal</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">object</span>&gt;&nbsp;GetSheetAndViewsToDelete&nbsp;{&nbsp;<span style=\"color:blue;\">get</span>&nbsp;{&nbsp;<span style=\"color:blue;\">return</span>&nbsp;sheetsAndViewsToDelete;&nbsp;}&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;RevitWinForm(&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">object</span>&gt;&nbsp;sheetsAndViews&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_sheetsAndViews&nbsp;=&nbsp;sheetsAndViews;\n \n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">internal</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">object</span>&gt;&nbsp;GetSheetAndViewList&nbsp;{&nbsp;<span style=\"color:blue;\">get</span>&nbsp;{&nbsp;<span style=\"color:blue;\">return</span>&nbsp;_sheetsAndViews;&nbsp;}&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Function&nbsp;to&nbsp;collect&nbsp;all&nbsp;the&nbsp;views&nbsp;and&nbsp;sheets&nbsp;in&nbsp;the&nbsp;document</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">&nbsp;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">internal</span>&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&gt;&nbsp;SheetsAndView()\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;DocumentManager.Instance.CurrentDBDocument;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;collector&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;).OfCategory(&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_Views&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&gt;&nbsp;viewList&nbsp;=&nbsp;collector.ToElements()&nbsp;<span style=\"color:blue;\">as</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&gt;;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;viewList;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;The&nbsp;MultiReturn&nbsp;attribute&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;specify</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;the&nbsp;names&nbsp;of&nbsp;multiple&nbsp;output&nbsp;ports&nbsp;on&nbsp;a&nbsp;node&nbsp;that&nbsp;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;returns&nbsp;a&nbsp;dictionary.&nbsp;The&nbsp;node&nbsp;must&nbsp;return&nbsp;a&nbsp;dictionary</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;to&nbsp;be&nbsp;recognized&nbsp;as&nbsp;a&nbsp;multi-out&nbsp;node.</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&nbsp;name</span><span style=\"color:gray;\">=</span><span style=\"color:gray;\">&quot;</span>refresh<span style=\"color:gray;\">&quot;</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">Refresh</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">DynamoTreeListSelect</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:blue;\">string</span>&nbsp;CompactDocument(&nbsp;<span style=\"color:blue;\">bool</span>&nbsp;refresh&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.Windows.Forms.<span style=\"color:#2b91af;\">Application</span>.Run(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FormRevitSelect</span>()&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#a31515;\">&quot;Process&nbsp;Complete&quot;</span>;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;}\n \n&nbsp;&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">Program</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Main(&nbsp;<span style=\"color:blue;\">string</span>[]&nbsp;args&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">RevitSheetsAndViews</span>&nbsp;v&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">RevitSheetsAndViews</span>();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.GetRevitViews&nbsp;+=&nbsp;v_ViewsOUT;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;v_ViewsOUT(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">ThresholdReachedEventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&gt;&nbsp;d1&nbsp;=&nbsp;e.Views;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n \n&nbsp;&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">RevitSheetsAndViews</span>\n&nbsp;&nbsp;{\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&gt;&nbsp;views;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">/*public&nbsp;RevitSheetsAndViews(List&lt;Autodesk.Revit.DB.View&gt;&nbsp;viewsOUT)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;views&nbsp;=&nbsp;viewsOUT;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;*/</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;RevitSheetsAndViews()\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;DocumentManager.Instance.CurrentDBDocument;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;collector&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;).OfCategory(&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_Views&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;views&nbsp;=&nbsp;collector.ToElements()&nbsp;<span style=\"color:blue;\">as</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&gt;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ThresholdReachedEventArgs</span>&nbsp;args&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ThresholdReachedEventArgs</span>();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.Views&nbsp;=&nbsp;views;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RevitViewsEventHandler(&nbsp;args&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">protected</span>&nbsp;<span style=\"color:blue;\">virtual</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;RevitViewsEventHandler(&nbsp;<span style=\"color:#2b91af;\">ThresholdReachedEventArgs</span>&nbsp;e&nbsp;)&nbsp;<span style=\"color:green;\">//raise&nbsp;the&nbsp;EventHandler&nbsp;delegate&nbsp;and&nbsp;associate&nbsp;GetRevitViews&nbsp;to&nbsp;it</span>\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">EventHandler</span>&lt;<span style=\"color:#2b91af;\">ThresholdReachedEventArgs</span>&gt;&nbsp;handler&nbsp;=&nbsp;GetRevitViews;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;handler&nbsp;!=&nbsp;<span style=\"color:blue;\">null</span>&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler(&nbsp;<span style=\"color:blue;\">this</span>,&nbsp;e&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">event</span>&nbsp;<span style=\"color:#2b91af;\">EventHandler</span>&lt;<span style=\"color:#2b91af;\">ThresholdReachedEventArgs</span>&gt;&nbsp;GetRevitViews;&nbsp;<span style=\"color:green;\">//&nbsp;declare&nbsp;an&nbsp;event&nbsp;named&nbsp;GetRevitViews.&nbsp;The&nbsp;event&nbsp;is&nbsp;associated&nbsp;with&nbsp;the&nbsp;EventHandler&nbsp;delegate&nbsp;and&nbsp;raised&nbsp;in&nbsp;a&nbsp;method&nbsp;named&nbsp;OnThresholdReached.</span>\n&nbsp;&nbsp;}\n \n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">ThresholdReachedEventArgs</span>&nbsp;:&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&gt;&nbsp;Views&nbsp;{&nbsp;<span style=\"color:blue;\">get</span>;&nbsp;<span style=\"color:blue;\">set</span>;&nbsp;}\n&nbsp;&nbsp;}\n}\n</pre>\n\n**Answer 1:**  The answer to every question in the universe is identical:\n\n[KISS](https://en.wikipedia.org/wiki/KISS_principle)!\n \nUnfortunately, that often raises a follow-up question:\n \nHow?\n \nHow can I simplify my problem?\n \nIn programming, simplification can often be achieved by separating separate tasks.\n \nThat was one of the main goals of object oriented programming OOP when it was invented or at least started emerging six (!) decades ago.\n \nIn this case, you are talking with the Revit API to obtain information about views, e.g., their names, or whatever other information you wish to display.\n \nThat is one task.\n \nAnother issue, completely separate, is to display that information.\n \nI suggest you separate the two completely.\n \nIn other words, talk with the Revit API, obtain the information you require, store it, and stop communicating with Revit.\n \nThen, and only then, proceed with other things, such as displaying your stuff.\n \n**Answer 2:** The cause is:\n\nWhen you create a new `ThresholdReachedEventArgs` instance, its `Views` property is `null`, initially.\n\nIt must be set before accessing it via a `foreach` loop.\n\n**Response:** Thanks, Rudi and Jeremy.\n \nVery helpful advice. I realised one of the exceptions was caused by problems with the way I'd written the element collector. Once I fixed that, I acted upon Jeremys advice and did away with extending the Event Handler class, and simply implemented the collector and the rest of my function within the Load event of the form. All now works as expected:\n\n<center>\n<img src=\"img/dynamo_list_views_3_Bimorph_WinForm.jpg\" alt=\"Dynamo displaying Bimorph Windows form\" width=\"600\"/>\n</center>\n\nFor anyone interested, here's the working 'after' code, demonstrating the simplification:\n\n<pre class=\"code\"> \n<span style=\"color:blue;\">namespace</span>&nbsp;Revit\n{\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">&nbsp;The&nbsp;form&nbsp;class</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">internal</span>&nbsp;<span style=\"color:blue;\">partial</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">FormRevitSelect</span>&nbsp;:&nbsp;System.Windows.Forms.<span style=\"color:#2b91af;\">Form</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">int</span>&gt;&nbsp;_viewId;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">int</span>&gt;&nbsp;GetViewIds\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">get</span>&nbsp;{&nbsp;<span style=\"color:blue;\">return</span>&nbsp;_viewId;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">set</span>&nbsp;{&nbsp;_viewId&nbsp;=&nbsp;<span style=\"color:blue;\">value</span>;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;FormRevitSelect()\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InitializeComponent();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;textBox1_TextChanged(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;Form1_Load(&nbsp;<span style=\"color:blue;\">object</span>&nbsp;sender,&nbsp;<span style=\"color:#2b91af;\">EventArgs</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;DocumentManager.Instance.CurrentDBDocument;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BrowserOrganization</span>&nbsp;browserOrg&nbsp;=&nbsp;<span style=\"color:#2b91af;\">BrowserOrganization</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.GetCurrentBrowserOrganizationForViews(&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc&nbsp;);&nbsp;<span style=\"color:green;\">//Get&nbsp;the&nbsp;browser&nbsp;item&nbsp;from&nbsp;the&nbsp;document</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;collector&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfCategory(&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_Views&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">Element</span>&gt;&nbsp;viewList&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;(<span style=\"color:#2b91af;\">List</span>&lt;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">Element</span>&gt;)&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collector.ToElements().ToList();\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">View</span>&nbsp;v&nbsp;<span style=\"color:blue;\">in</span>&nbsp;viewList&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//v.ViewType.ToString()&nbsp;!=&nbsp;&quot;&quot;&nbsp;is&nbsp;used&nbsp;to&nbsp;remove&nbsp;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;views&nbsp;which&nbsp;are&nbsp;present&nbsp;in&nbsp;templates&nbsp;by&nbsp;default&nbsp;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;but&nbsp;only&nbsp;picked&nbsp;up&nbsp;by&nbsp;the&nbsp;element&nbsp;collector.&nbsp;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;They&nbsp;need&nbsp;to&nbsp;be&nbsp;removed&nbsp;from&nbsp;the&nbsp;list.</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;v.Name&nbsp;!=&nbsp;<span style=\"color:blue;\">null</span>&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp;&nbsp;v.ViewType.ToString()&nbsp;!=&nbsp;<span style=\"color:#a31515;\">&quot;&quot;</span>&nbsp;)&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:#2b91af;\">FolderItemInfo</span>&gt;&nbsp;folderInfo&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;browserOrg.GetFolderItems(&nbsp;v.Id&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.ToList();&nbsp;<span style=\"color:green;\">//Get&nbsp;the&nbsp;folder&nbsp;information&nbsp;for&nbsp;the&nbsp;view</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;treeView1.Nodes.Add(&nbsp;v.Id.ToString(),&nbsp;v.Name&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n}\n</pre>\n\nZeroTouch code for Dynamo library import:\n\n<pre class=\"code\"> \n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">A&nbsp;Revit&nbsp;class&nbsp;to&nbsp;get&nbsp;all&nbsp;the&nbsp;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;sheets&nbsp;and&nbsp;views&nbsp;in&nbsp;the&nbsp;document</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">class</span>&nbsp;<span style=\"color:#2b91af;\">DocumentUtilities</span>\n{\n&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">object</span>&gt;&nbsp;_sheetsAndViews;\n \n&nbsp;&nbsp;<span style=\"color:blue;\">internal</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">object</span>&gt;&nbsp;GetSheetAndViewsToDelete\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">get</span>&nbsp;{&nbsp;<span style=\"color:blue;\">return</span>&nbsp;_sheetsAndViews;&nbsp;}\n&nbsp;&nbsp;}\n \n&nbsp;&nbsp;<span style=\"color:blue;\">private</span>&nbsp;DocumentUtilities(&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:blue;\">object</span>&gt;&nbsp;sheetsAndViews&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;_sheetsAndViews&nbsp;=&nbsp;sheetsAndViews;\n&nbsp;&nbsp;}\n \n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Work&nbsp;in&nbsp;progress</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&nbsp;name</span><span style=\"color:gray;\">=</span><span style=\"color:gray;\">&quot;</span>refresh<span style=\"color:gray;\">&quot;</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">Refresh&nbsp;to&nbsp;reopen&nbsp;the&nbsp;form</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">Revit&nbsp;View&nbsp;Elements</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Revit.Elements.Element&gt;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;ExporttDocument(&nbsp;<span style=\"color:blue;\">bool</span>&nbsp;refresh&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;DocumentManager.Instance.CurrentDBDocument;\n \n&nbsp;&nbsp;&nbsp;&nbsp;FormRevitSelect&nbsp;form1&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;FormRevitSelect();\n&nbsp;&nbsp;&nbsp;&nbsp;System.Windows.Forms.<span style=\"color:#2b91af;\">Application</span>.Run(&nbsp;form1&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Revit.Elements.Element&gt;&nbsp;vList&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;Revit.Elements.Element&gt;();\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;<span style=\"color:blue;\">int</span>&nbsp;i&nbsp;<span style=\"color:blue;\">in</span>&nbsp;form1.GetViewIds&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">Element</span>&nbsp;v&nbsp;=&nbsp;doc.GetElement(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">ElementId</span>(&nbsp;i&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">as</span>&nbsp;Autodesk.Revit.DB.<span style=\"color:#2b91af;\">Element</span>;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vList.Add(&nbsp;v.ToDSType(&nbsp;<span style=\"color:blue;\">true</span>&nbsp;)&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;vList;\n&nbsp;&nbsp;}\n}\n</pre>\n \nRun in Dynamo:\n\n<center>\n<img src=\"img/dynamo_list_views_4_Bimorph_Select.png\" alt=\"Bimorph select\" width=\"600\"/>\n</center>\n\nResult:\n\n<center>\n<img src=\"img/dynamo_list_views_5_result.png\" alt=\"List views result\" width=\"600\"/>\n</center>\n\nMany thanks to Thomas for rasing the issue in the first place, sharing the final result, and Rudi 'Revitalizer' for helping to solve it!\n\n\n####<a name=\"5\"></a>Dino Pondering Lengthening Days\n\nLet me end by pointing out that it is pretty cold and snowy here, even though the days are gradually getting longer again:\n\n<center>\n<img src=\"img/dino_in_snow_669_cropped_500.jpg\" alt=\"Dino pondering the gradual lengthening of daytime\" width=\"250\"/>\n</center>\n\nSome warm-blooded creatures prefer to stay inside and interact with the forum instead of pondering nature:\n\n<center>\n<img src=\"img/2017-01-09_top_solution_author.png\" alt=\"Top solution authors\" width=\"233\"/>\n</center>"
  }
]