[
  {
    "original_filename": "0680_update_release_issues",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0680_update_release_issues",
    "header_text": "Intermediate API Update Releases",
    "local_header_href": "#intermediate-api-update-releases",
    "chunk_text": "<h3>Intermediate API Update Releases</h3><p>I recently mentioned the availability of the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/product-and-add-in-wizard-updates.html#2\">\nRevit 2012 Update Release 2</a> and \n\nmy surprise that some people prefer not to update, which gave rise to a couple of vehement\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/product-and-add-in-wizard-updates.html#comments\">\ncomments</a>.\n\n<p>I myself seldom ran into issues with incompatibilities between intermediate releases, but now one affecting the API cropped up:\n\n<p><strong>Question:</strong> Using the IUpdater interface, I can do the following with the Revit 2012 API:\n\n<pre class=\"code\">\n  <span class=\"teal\">ElementId</span> paramId = <span class=\"blue\">new</span> <span class=\"teal\">ElementId</span>(\n    <span class=\"teal\">BuiltInParameter</span>.ROOM_NUMBER );\n \n  <span class=\"teal\">UpdaterRegistry</span>.AddTrigger( \n    GetUpdaterId(), elementFilter, \n    <span class=\"teal\">Element</span>.GetChangeTypeParameter( paramId ) );\n</pre>\n<p>The above works for Revit 2012.  \n\n<p>In the Revit 2011 API, however, the Element.GetChangeTypeParameter is not overloaded to take the above paramId.  \nIs there an equivalent way of achieving the same thing with the Revit 2011 API?   \nI am unable to find a single example for this in the Revit Help, online, or anywhere.\n\n<p><strong>Answer:</strong> Although this method overload was not provided in the initial release of Revit 2011, it was added by the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/09/revit-2011-web-update-2.html\">\nweb update 2</a>.\n\n<p>I am not aware of any reason not to update, although some users never do, possibly due to concerns that regressions will halt their current workflow, or just the amount of time it takes to deploy the new version.  \n\n<p>As a developer selling your add-in, you need to be conscious of this.\nIf you do require functionality from a later update release in your application, you should make \n\n<a href=\"http://wikihelp.autodesk.com/Revit/enu/2012/Help/API_Dev_Guide/0001-Introduc1/0028-Applicat28/0029-Applicat29/How_to_use_Application_properties_to_enforce_a_correct_version_for_your_add-in\">\nappropriate version checks</a>.\n\n<p>This is also one reason why we avoid significant API additions in intermediate update releases, as it becomes more difficult for developers and users of these applications to manage.\n</p></p></p></p></p></p></p></p></p>"
  }
]