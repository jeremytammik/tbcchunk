[
  {
    "original_filename": "1947_whats_new_2023",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n\n<style>\n  ul.toc { list-style-type: none; }\n  h1.new { font-size: 150%; }\n  h2.new { font-size: 150%; }\n  h3.new { font-size: 120%; }\n  h4.new { font-size: 120%; }\n</style>\n\n</head>\n\n<!---\n\ntwitter:\n\nWhat's New in the Revit 2023 API? Exciting new functionality, migration information, overview of changes and additions, table of contents, full details of all new aspects of the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon https://autode.sk/rvt2023apinews\n\nThe Revit 2023 API contains many exciting enhancements for add-in developers\n&ndash; Information sources\n&ndash; What's new in previous versions\n&ndash; Detailed table of contents\n&ndash; API Changes\n&ndash; API Additions...\n\nlinkedin:\n\nWhat's New in the Revit 2023 API? Exciting new functionality, migration information, overview of changes and additions, table of contents, full details of all new aspects of the #RevitAPI\n\nhttps://autode.sk/rvt2023apinews\n\nThe Revit 2023 API contains many exciting enhancements for add-in developers:\n\n- Information sources\n- What's new in previous versions\n- Detailed table of contents\n- API Changes\n- API Additions...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n-->"
  },
  {
    "original_filename": "1947_whats_new_2023",
    "header_text": "What's New in the Revit 2023 API",
    "local_header_href": "#whats-new-in-the-revit-2023-api",
    "chunk_text": "### What's New in the Revit 2023 API\n\nThe Revit 2023 API contains many exciting enhancements for add-in developers:\n\n- [Information sources](#1)\n- [What's new in previous versions](#2)\n- [Detailed table of contents](#4)\n\n Top level table of contents:\n\n<ul class=\"toc\">\n<li>1. <a href=\"#4.1\">API changes </a></li>\n<ul class=\"toc\">\n<li>1.1. <a href=\"#4.1.1\">New version of CEFSharp </a></li>\n<li>1.2. <a href=\"#4.1.2\">Replacement for Structural Analytical Model elements </a></li>\n<li>1.3. <a href=\"#4.1.3\">Geometry API changes </a></li>\n<li>1.4. <a href=\"#4.1.4\">Custom Export API changes </a></li>\n<li>1.5. <a href=\"#4.1.5\">Export API changes </a></li>\n<li>1.6. <a href=\"#4.1.6\">Energy Analysis API changes </a></li>\n<li>1.7. <a href=\"#4.1.7\">Reinforcement API changes </a></li>\n<li>1.8. <a href=\"#4.1.8\">Project Browser API removal </a></li>\n<li>1.9. <a href=\"#4.1.9\">Obsolete API removal </a></li>\n</ul>\n<li>2. <a href=\"#4.2\">API additions </a></li>\n<ul class=\"toc\">\n<li>2.1. <a href=\"#4.2.1\">Schedule API additions </a></li>\n<li>2.2. <a href=\"#4.2.2\">Worksharing API additions </a></li>\n<li>2.3. <a href=\"#4.2.3\">Geometry API additions </a></li>\n<li>2.4. <a href=\"#4.2.4\">DirectShape API additions </a></li>\n<li>2.5. <a href=\"#4.2.5\">Import/Export API additions </a></li>\n<li>2.6. <a href=\"#4.2.6\">View API additions </a></li>\n<li>2.7. <a href=\"#4.2.7\">Electrical API additions </a></li>\n<li>2.8. <a href=\"#4.2.8\">Mechanical API additions </a></li>\n<li>2.9. <a href=\"#4.2.9\">ElementId API additions </a></li>\n<li>2.10. <a href=\"#4.2.10\">Element API additions </a></li>\n<li>2.11. <a href=\"#4.2.11\">Document API additions </a></li>\n<li>2.12. <a href=\"#4.2.12\">Annotation API additions </a></li>\n<li>2.13. <a href=\"#4.2.13\">Energy Analysis API additions </a></li>\n<li>2.14. <a href=\"#4.2.14\">Slab API additions </a></li>\n<li>2.15. <a href=\"#4.2.15\">Applications API additions </a></li>\n<li>2.16. <a href=\"#4.2.16\">Sketched Elements API additions </a></li>\n<li>2.17. <a href=\"#4.2.17\">Project Browser API additions </a></li>\n<li>2.18. <a href=\"#4.2.18\">Structure API additions </a></li>\n<li>2.19. <a href=\"#4.2.19\">Selection API additions </a></li>\n<li>2.20. <a href=\"#4.2.20\">MEP API additions </a></li>\n<li>2.21. <a href=\"#4.2.21\">Parameter API additions </a></li>\n<li>2.22. <a href=\"#4.2.22\">Print API additions </a></li>\n</ul>\n</ul>\n\n####<a name=\"1\"></a>Information Sources\n\nThe information below is based on the contents of the *Revit Platform API Changes and Additions.docx* document included with\nthe Revit 2023 SDK, the software developers kit available from\nthe [Revit Developer Centre](https://www.autodesk.com/developer-network/platform-technologies/revit).\n\nIt is also provided in the section on *What's New* in the Revit 2023 API help file `RevitAPI.chm` included with the SDK:\n\n<center>\n<img src=\"img/revit_2023_api_chm.png\" alt=\"Revit 2023 API help on What's New\" title=\"Revit 2023 API help on What's New\" width=\"621\"/> <!-- 1242 -->\n</center>\n\nFor convenient, easy, and effective web searching, this blog post provides a cleaned-up online HTML version of that information with numbering and table of contents added, as well as the following PDF printout of the original document included in the SDK with table of contents and page numbers added:\n\n- [Revit_Platform_API_Changes_and_Additions_2023.pdf](zip/Revit_Platform_API_Changes_and_Additions_2023_08.pdf)\n\nThe *What's New* section and the *Changes and Additions* document provide important information, both for discovering and exploring the newly added API functionality and for later reference.\n\nIf you encounter any issues migrating your existing add-ins between different versions, this is one of the first places to look.\n\nFor detailed information on all other aspects of the Revit API, please refer to the rest of the API documentation and samples provided in the SDK.\n\nThe most important things to install and always keep at hand are:\n\n- The Revit API help file `RevitAPI.chm`\n- The Visual Studio solution containing all the SDK samples, `Samples\\SDKSamples.sln`\n\nYou will regularly need both for research on how to solve specific Revit API programming tasks.\n\nMore in-depth official explanations and background information is provided by the\nonline [Revit API Developers Guide](http://help.autodesk.com/view/RVT/2023/ENU/?guid=Revit_API_Revit_API_Developers_Guide_html) included\nin the [Revit 2023 online help](http://help.autodesk.com/view/RVT/2023/ENU).\n\n\n####<a name=\"2\"></a>What's New in Previous Versions\n\nHere are links to previous discussions of *What's New in the Revit API*:\n\n- [What's New in the Revit 2010 API](http://thebuildingcoder.typepad.com/blog/2013/02/whats-new-in-the-revit-2010-api.html)\n- [What's New in the Revit 2011 API](http://thebuildingcoder.typepad.com/blog/2013/02/whats-new-in-the-revit-2011-api.html)\n- [What's New in the Revit 2012 API](http://thebuildingcoder.typepad.com/blog/2013/02/whats-new-in-the-revit-2012-api.html)\n- [What's New in the Revit 2013 API](http://thebuildingcoder.typepad.com/blog/2013/03/whats-new-in-the-revit-2013-api.html)\n- [What's New in the Revit 2014 API](http://thebuildingcoder.typepad.com/blog/2013/04/whats-new-in-the-revit-2014-api.html)\n- [What's New in the Revit 2015 API](http://thebuildingcoder.typepad.com/blog/2014/04/whats-new-in-the-revit-2015-api.html)\n- [What's New in the Revit 2016 API](http://thebuildingcoder.typepad.com/blog/2015/04/whats-new-in-the-revit-2016-api.html)\n- [What's New in the Revit 2017 API](http://thebuildingcoder.typepad.com/blog/2016/04/whats-new-in-the-revit-2017-api.html)\n- [What's New in the Revit 2017.1 API](http://thebuildingcoder.typepad.com/blog/2016/11/whats-new-in-the-revit-20171-api.html)\n- [What's New in the Revit 2018 API](http://thebuildingcoder.typepad.com/blog/2017/04/whats-new-in-the-revit-2018-api.html)\n- [Revit 2018.1 and the Visual Materials API](http://thebuildingcoder.typepad.com/blog/2017/08/revit-20181-and-the-visual-materials-api.html)\n- [Revit 2018.1.1 and 2018.1 API Docs Online](http://thebuildingcoder.typepad.com/blog/2017/09/revit-201811-fixes-cropbox-setting.html)\n- [Revit 2018.1 Visual Materials API](http://thebuildingcoder.typepad.com/blog/2017/11/modifying-material-visual-appearance.html)\n- [What's New in the Revit 2018.2 API](http://thebuildingcoder.typepad.com/blog/2017/12/whats-new-in-the-revit-20182-api.html)\n- [What's New in the Revit 2019 API](http://thebuildingcoder.typepad.com/blog/2018/04/whats-new-in-the-revit-2019-api.html)\n- [What's New in the Revit 2020 API](https://thebuildingcoder.typepad.com/blog/2019/04/whats-new-in-the-revit-2020-api.html)\n- [What's New in the Revit 2020.1 API](https://thebuildingcoder.typepad.com/blog/2019/09/whats-new-in-the-revit-20201-api.html)\n- [What's New in the Revit 2021 API](https://thebuildingcoder.typepad.com/blog/2020/04/whats-new-in-the-revit-2021-api.html)\n- [What's New in the Revit 2021.1 API](https://thebuildingcoder.typepad.com/blog/2020/08/revit-20211-sdk-and-whats-new.html)\n- [What's New in the Revit 2022 API](https://thebuildingcoder.typepad.com/blog/2021/04/whats-new-in-the-revit-2022-api.html)\n- [What's New in the Revit 2022.1 API](https://thebuildingcoder.typepad.com/blog/2021/11/whats-new-in-the-revit-20221-api.html)\n\n####<a name=\"4\"></a>Detailed Table of Contents\n\n<!-- <h1>Major changes and renovations to the Revit API -->\n\n<ul class=\"toc\">\n<li>1. <a href=\"#4.1\">API changes </a></li>\n<ul class=\"toc\">\n<li>1.1. <a href=\"#4.1.1\">New version of CEFSharp </a></li>\n<li>1.2. <a href=\"#4.1.2\">Replacement for Structural Analytical Model elements </a></li>\n<ul class=\"toc\">\n<li>1.2.1. <a href=\"#4.1.2.1\">Analytical Model classes</a></li>\n<li>1.2.2. <a href=\"#4.1.2.2\">Analytical Models classes additions </a></li>\n<li>1.2.3. <a href=\"#4.1.2.3\">Analytical Model enums</a></li>\n<li>1.2.4. <a href=\"#4.1.2.4\">Element</a></li>\n<li>1.2.5. <a href=\"#4.1.2.5\">StructuralSettings </a></li>\n<li>1.2.6. <a href=\"#4.1.2.6\">Line Load, Area Load, Point Load</a></li>\n<li>1.2.7. <a href=\"#4.1.2.7\">Load Base</a></li>\n<li>1.2.8. <a href=\"#4.1.2.8\">Boundary Conditions</a></li>\n</ul>\n<li>1.3. <a href=\"#4.1.3\">Geometry API changes </a></li>\n<ul class=\"toc\">\n<li>1.3.1. <a href=\"#4.1.3.1\">Bounding Box </a></li>\n<li>1.3.2. <a href=\"#4.1.3.2\">Geometry Instance </a></li>\n</ul>\n<li>1.4. <a href=\"#4.1.4\">Custom Export API changes </a></li>\n<li>1.5. <a href=\"#4.1.5\">Export API changes </a></li>\n<li>1.6. <a href=\"#4.1.6\">Energy Analysis API changes </a></li>\n<li>1.7. <a href=\"#4.1.7\">Reinforcement API changes </a></li>\n<ul class=\"toc\">\n<li>1.7.1. <a href=\"#4.1.7.1\">Reinforcement Elements </a></li>\n</ul>\n<li>1.8. <a href=\"#4.1.8\">Project Browser API removal </a></li>\n<li>1.9. <a href=\"#4.1.9\">Obsolete API removal </a></li>\n<ul class=\"toc\">\n<li>1.9.1. <a href=\"#4.1.9.1\">Classes </a></li>\n<li>1.9.2. <a href=\"#4.1.9.2\">Methods </a></li>\n<li>1.9.3. <a href=\"#4.1.9.3\">Properties </a></li>\n<li>1.9.4. <a href=\"#4.1.9.4\">Enums </a></li>\n</ul>\n</ul>\n<li>2. <a href=\"#4.2\">API additions </a></li>\n<ul class=\"toc\">\n<li>2.1. <a href=\"#4.2.1\">Schedule API additions </a></li>\n<ul class=\"toc\">\n<li>2.1.1. <a href=\"#4.2.1.1\">Schedule heights on sheets </a></li>\n<li>2.1.2. <a href=\"#4.2.1.2\">Managing schedule segments </a></li>\n<li>2.1.3. <a href=\"#4.2.1.3\">ScheduleDefinition </a></li>\n</ul>\n<li>2.2. <a href=\"#4.2.2\">Worksharing API additions </a></li>\n<ul class=\"toc\">\n<li>2.2.1. <a href=\"#4.2.2.1\">Delete Workset API </a></li>\n</ul>\n<li>2.3. <a href=\"#4.2.3\">Geometry API additions </a></li>\n<ul class=\"toc\">\n<li>2.3.1. <a href=\"#4.2.3.1\">Bounding Box API </a></li>\n<li>2.3.2. <a href=\"#4.2.3.2\">Geometry managed by symbol element </a></li>\n</ul>\n<li>2.4. <a href=\"#4.2.4\">DirectShape API additions </a></li>\n<ul class=\"toc\">\n<li>2.4.1. <a href=\"#4.2.4.1\">Type assignability </a></li>\n</ul>\n<li>2.5. <a href=\"#4.2.5\">Import/Export API additions </a></li>\n<ul class=\"toc\">\n<li>2.5.1. <a href=\"#4.2.5.1\">AXM Import </a></li>\n<li>2.5.2. <a href=\"#4.2.5.2\">OBJ Export </a></li>\n<li>2.5.3. <a href=\"#4.2.5.3\">STL and OBJ Import & Link </a></li>\n<li>2.5.4. <a href=\"#4.2.5.4\">ShapeImporter API additions </a></li>\n</ul>\n<li>2.6. <a href=\"#4.2.6\">View API additions </a></li>\n<ul class=\"toc\">\n<li>2.6.1. <a href=\"#4.2.6.1\">Duplicating Sheets </a></li>\n<li>2.6.2. <a href=\"#4.2.6.2\">Transforming from Model Space to View Projection Space </a></li>\n<li>2.6.3. <a href=\"#4.2.6.3\">Transforming from View Projection Space to Sheet Space </a></li>\n<li>2.6.4. <a href=\"#4.2.6.4\">View Placement on Sheet </a></li>\n<li>2.6.5. <a href=\"#4.2.6.5\">Swapping viewports on sheets to another view </a></li>\n</ul>\n<li>2.7. <a href=\"#4.2.7\">Electrical API additions </a></li>\n<ul class=\"toc\">\n<li>2.7.1. <a href=\"#4.2.7.1\">Load classification API </a></li>\n<li>2.7.2. <a href=\"#4.2.7.2\">Panel schedule API </a></li>\n<li>2.7.3. <a href=\"#4.2.7.3\">Electrical analytical node API </a></li>\n<li>2.7.4. <a href=\"#4.2.7.4\">Bus data API </a></li>\n<li>2.7.5. <a href=\"#4.2.7.5\">Distribution node property data API </a></li>\n<li>2.7.6. <a href=\"#4.2.7.6\">Equipment load data API </a></li>\n<li>2.7.7. <a href=\"#4.2.7.7\">Area based load type API </a></li>\n<li>2.7.8. <a href=\"#4.2.7.8\">Area based load data API </a></li>\n<li>2.7.9. <a href=\"#4.2.7.9\">Electrical load area data API </a></li>\n<li>2.7.10. <a href=\"#4.2.7.10\">Area based load boundary line data API </a></li>\n<li>2.7.11. <a href=\"#4.2.7.11\">Analytical transfer switch data API </a></li>\n<li>2.7.12. <a href=\"#4.2.7.12\">Analytical Power Source API </a></li>\n</ul>\n<li>2.8. <a href=\"#4.2.8\">Mechanical API additions </a></li>\n<li>2.9. <a href=\"#4.2.9\">ElementId API additions </a></li>\n<ul class=\"toc\">\n<li>2.9.1. <a href=\"#4.2.9.1\">Converting strings to ElementId </a></li>\n</ul>\n<li>2.10. <a href=\"#4.2.10\">Element API additions </a></li>\n<ul class=\"toc\">\n<li>2.10.1. <a href=\"#4.2.10.1\">IsModifiable property </a></li>\n<li>2.10.2. <a href=\"#4.2.10.2\">Elements with multiple ExternalResourceReferences </a></li>\n<li>2.10.3. <a href=\"#4.2.10.3\">Category </a></li>\n</ul>\n<li>2.11. <a href=\"#4.2.11\">Document API additions </a></li>\n<ul class=\"toc\">\n<li>2.11.1. <a href=\"#4.2.11.1\">Elements changed since a previous version </a></li>\n</ul>\n<li>2.12. <a href=\"#4.2.12\">Annotation API additions </a></li>\n<ul class=\"toc\">\n<li>2.12.1. <a href=\"#4.2.12.1\">Tag Leader API </a></li>\n</ul>\n<li>2.13. <a href=\"#4.2.13\">Energy Analysis API additions </a></li>\n<li>2.14. <a href=\"#4.2.14\">Slab API additions </a></li>\n<li>2.15. <a href=\"#4.2.15\">Applications API additions </a></li>\n<ul class=\"toc\">\n<li>2.15.1. <a href=\"#4.2.15.1\">Application.ShowGraphicalOpenEndsAreaBasedLoadBoundaryDisconnects </a></li>\n</ul>\n<li>2.16. <a href=\"#4.2.16\">Sketched Elements API additions </a></li>\n<ul class=\"toc\">\n<li>2.16.1. <a href=\"#4.2.16.1\">Editing Sketches with SketchEditScope </a></li>\n<li>2.16.2. <a href=\"#4.2.16.2\">Dimension creation in Sketch Edit mode </a></li>\n<li>2.16.3. <a href=\"#4.2.16.3\">Filled Region for sketch plane </a></li>\n<li>2.16.4. <a href=\"#4.2.16.4\">Boundary Validation for sketched elements </a></li>\n</ul>\n<li>2.17. <a href=\"#4.2.17\">Project Browser API additions </a></li>\n<ul class=\"toc\">\n<li>2.17.1. <a href=\"#4.2.17.1\">BrowserOrganization </a></li>\n<li>2.17.2. <a href=\"#4.2.17.2\">ProjectBrowserOptions </a></li>\n</ul>\n<li>2.18. <a href=\"#4.2.18\">Structure API additions </a></li>\n<ul class=\"toc\">\n<li>2.18.1. <a href=\"#4.2.18.1\">Line Load </a></li>\n<li>2.18.2. <a href=\"#4.2.18.2\">Area Load </a></li>\n<li>2.18.3. <a href=\"#4.2.18.3\">Point Load </a></li>\n<li>2.18.4. <a href=\"#4.2.18.4\">RebarPropagation </a></li>\n<li>2.18.5. <a href=\"#4.2.18.5\">RebarHostData </a></li>\n<li>2.18.6. <a href=\"#4.2.18.6\">RebarCoupler </a></li>\n</ul>\n<li>2.19. <a href=\"#4.2.19\">Selection API additions </a></li>\n<ul class=\"toc\">\n<li>2.19.1. <a href=\"#4.2.19.1\">Selection </a></li>\n<li>2.19.2. <a href=\"#4.2.19.2\">UIApplication </a></li>\n<li>2.19.3. <a href=\"#4.2.19.3\">Events </a></li>\n</ul>\n<li>2.20. <a href=\"#4.2.20\">MEP API additions </a></li>\n<ul class=\"toc\">\n<li>2.20.1. <a href=\"#4.2.20.1\">ConnectorElement </a></li>\n<li>2.20.2. <a href=\"#4.2.20.2\">SpatialElement </a></li>\n<li>2.20.3. <a href=\"#4.2.20.3\">Flipping fabrication parts </a></li>\n</ul>\n<li>2.21. <a href=\"#4.2.21\">Parameter API additions </a></li>\n<ul class=\"toc\">\n<li>2.21.1. <a href=\"#4.2.21.1\">ParameterUtils </a></li>\n</ul>\n<li>2.22. <a href=\"#4.2.22\">Print API additions </a></li>\n<ul class=\"toc\">\n<li>2.22.1. <a href=\"#4.2.22.1\">IViewSheetSet </a></li>\n</ul>\n</ul>\n</ul>\n\n<center>\n<div style=\"border-style:solid; border-width:2px 0px 2px 0px\">\n<a name=\"4.1\"></a><h1 class=\"new\" style=\"font-weight: bold\">API Changes</h1>\n</div>\n</center>\n\n<a name=\"4.1.1\"></a><h2 class=\"new\">1.1. New version of CEFSharp</h2>\n\nRevit and Autodesk add-ins use the CEFsharp library internally for several features. Some third-party add-ins do so as well. Occasionally, when different versions of the library are used, it leads to instability issues for Revit. In order to avoid version conflicts, we are clarifying what CEFsharp version is being used, and loading it prior to all add-in initializations. \n\n- In this version, Revit uses CEFsharp version 92.0.260.\n\n<a name=\"4.1.2\"></a><h2 class=\"new\">1.2. Replacement for Structural Analytical Model elements</h2>\n\nThe elements used for the Structural Analytical Model have been completely replaced and the interactions overhauled in this version of Revit. Because of these changes, many pre-existing API classes and methods have been removed immediately in this release as deprecation was not possible. The classes that are impacted are all in the Autodesk.Revit.DB.Structure namespace. \n\n<a name=\"4.1.2.1\"></a><h3 class=\"new\">1.2.1. Analytical Model classes</h3>\n\n- Removed API &rarr; Replacement \n- AnalyticalModel &rarr; AnalyticalElement\n- AnalyticalModelStick &rarr; AnalyticalMember\n- AnalyticalModelColumn &rarr; AnalyticalMember\n- AnalyticalModelSupport &rarr; None\n- AnalyticalConsistencyChecking &rarr; None\n- AnalyticalModelSketchComponent &rarr; None\n- AnalyticalModelSurface &rarr; AnalyticalPanel\n\n<a name=\"4.1.2.2\"></a><h3 class=\"new\">1.2.2. Analytical Models classes additions</h3>\n\nThis new API is part of a broader Analytical Driven Modeling initiative for Revit that introduces a new approach to analytical modelling, enhancing its overall structural modelling capabilities. See the RevitAPI.chm for a full listing of new functions. \n\nNew classes include:\n\n- Autodesk.Revit.DB.Structure.AnalyticalElement &ndash; Represents the analytical portion of a given structural element.\n- Autodesk.Revit.DB.Structure.AnalyticalMember &ndash; Represents a linear element in the structural analytical model. \n- Autodesk.Revit.DB.Structure.AnalyticalPanel &ndash; Represents a surface in the structural analytical model.\n- Autodesk.Revit.DB.Structure.AnalyticalToPhysicalAssociationManager &ndash; Manages the relationship between an analytical element and its physical (model) counterpart. \n- Autodesk.Revit.DB.Structure.LevelAssociationData &ndash; Holds the information related to level association.\n- Autodesk.Revit.DB.Structure.AnalyticalOpening &ndash; Represents an opening in an analytical panel element. \n- Autodesk.Revit.DB.Structure.ReleaseConditions &ndash; Represents a release condition on an analytical element.\n- Autodesk.Revit.DB.Structure.AnalyticalNodeData &ndash; Holds information related to the analytical model.\n\n<a name=\"4.1.2.3\"></a><h3 class=\"new\">1.2.3. Analytical Model enums</h3>\n\n- Removed API \n- AnalyticalCurveType\n- AnalyticalDirection\n- AnalyticalProjectionType\n\n<a name=\"4.1.2.4\"></a><h3 class=\"new\">1.2.4. Element</h3>\n\n- Removed API &rarr; Replacement \n- Element.GetAnalyticalModel &rarr; AnalyticalToPhysicalRelationManager.GetCounterpartsIds\n- Element.GetAnalyticalModelId &rarr; AnalyticalToPhysicalRelationManager.GetCounterpartsIds\n\n<a name=\"4.1.2.5\"></a><h3 class=\"new\">1.2.5. StructuralSettings</h3>\n\nThe following properties have been removed:\n\n- Removed API \n- AnalyticalModelAutoCheckMemberSupports\n- AnalyticalModelAutoCheckConsistency\n- AnalyticalModelCheckSupportDistance\n- AnalyticalModelCheckBeamSlabDistance\n- AnalyticalModelCheckInstability\n- DifferentiateAnalyticalEnds\n- AnalyticalModelCheckAdjustment\n- CheckAnalyticalModelAsset\n- AnalyticalModelSupportDistanceTolerance\n- AnalyticalModelDiscrepancyTolerance \n- AnalyticalModelHorizontalAutofixTolerance\n- AnalyticalModelVerticalAutofixTolerance\n- AnalyticalModelCheckCircularReferences\n- AnalyticalModelCheckDiscrepancy\n- AnalyticalLinkAutofixTolerance\n\n<a name=\"4.1.2.6\"></a><h3 class=\"new\">1.2.6. Line Load, Area Load, Point Load </h3>\n\n- Removed API &rarr; Replacement \n- Autodesk.Revit.DB.Structure.LineLoad.Create(Document doc, AnalyticalModelStick host, XYZ forceVector1, XYZ momentVector1, LineLoadType symbol) &rarr; Autodesk.Revit.DB.Structure.LineLoad.Create(Document doc, hostElemId, XYZ forceVector1, XYZ momentVector1, LineLoadType symbol)\n- Autodesk.Revit.DB.Structure.LineLoad.Create(Document doc, AnalyticalModelSurface host, int curveIndex, XYZ forceVector1, XYZ momentVector1, LineLoadType symbol) &rarr; Autodesk.Revit.DB.Structure.LineLoad.Create(Document doc, hostElemId, int curveIndex, XYZ forceVector1, XYZ momentVector1, LineLoadType symbol)\n- Autodesk.Revit.DB.Structure.AreaLoad.Create(Document doc, AnalyticalModelSurface host, XYZ forceVector1, AreaLoadType symbol) &rarr; Autodesk.Revit.DB.Structure.AreaLoad.Create(Document doc, hostElemId, XYZ forceVector1, AreaLoadType symbol)\n- Autodesk.Revit.DB.Structure.PointLoad.Create(Document doc, AnalyticalModelStick host, AnalyticalElementSelector selector, XYZ forceVector, XYZ momentVector, PointLoadType symbol) &rarr; Autodesk.Revit.DB.Structure.PointLoad.Create(Document doc, hostId, AnalyticalElementSelector selector, XYZ forceVector, XYZ momentVector, PointLoadType symbol)\n- Autodesk.Revit.DB.Structure.PointLoad.Create(Document doc, AnalyticalModel host, XYZ forceVector, XYZ momentVector, PointLoadType symbol) &rarr; None\n\n<a name=\"4.1.2.7\"></a><h3 class=\"new\">1.2.7. Load Base </h3>\n\n- Removed API &rarr; Replacement \n- Autodesk.Revit.DB.Structure.LoadBase.HostElement &rarr; HostElementId\n\n<a name=\"4.1.2.8\"></a><h3 class=\"new\">1.2.8. Boundary Conditions </h3>\n\n- Removed API &rarr; Replacement \n- Autodesk.Revit.DB.Structure.BoundaryConditions.HostElement &rarr; HostElementId\n\n<a name=\"4.1.3\"></a><h2 class=\"new\">1.3. Geometry API changes</h2>\n\n<a name=\"4.1.3.1\"></a><h3 class=\"new\">1.3.1. Bounding Box</h3>\n\nThe class BoundingBoxXYZ:\n\ndescription was updated to mention that the bounding box might not be empty even if the element's Geometry property returns an empty result, because GetBoundingBox does not take the Geometry property's Options into account.\n\n<a name=\"4.1.3.2\"></a><h3 class=\"new\">1.3.2. Geometry Instance</h3>\n\nThe property Element Symbol of the GeometryInstance was deprecated.\n\nThe replacement is GeometryInstance.GetDocument().GetElement(GeometryInstance.GetSymbolGeometryId().SymbolId)\n\n<a name=\"4.1.4\"></a><h2 class=\"new\">1.4. Custom Export API changes</h2>\n\nDeprecated Methods:\n\nGroupNode is the base class for InstanceNode and LinkNode\n\n- Deprecated API &rarr; Replacement\n- GroupNode.GetSymbolId() &rarr;\n<br/>The replacement for LinkNode is the property LinkNode.SymbolId;\n<br/>The replacement for InstanceNode is InstanceNode.GetSymbolGeometryId()\n\n<a name=\"4.1.5\"></a><h2 class=\"new\">1.5. Export API changes</h2>\n\nThe Enum STLExportResolution has been deprecated and replaced:\n\n- Deprecated API &rarr; Replacement\n- STLExportResolution enum &rarr; ExportResolution enum\n- STLExportOptions(STLExportResolution) &rarr; STLExportOptions(ExportResolution)\n- STLExportOptions.SetTessellationSettings(STLExportResolution) &rarr; STLExportOptions.SetTessellationSettings(ExportResolution)\n\n<a name=\"4.1.6\"></a><h2 class=\"new\">1.6. Energy Analysis API changes</h2>\n\nThe property:\n\n- Autodesk.Revit.DB.Analysis.EnergyAnalysisSpace.Area\n\nis modified to cover all scenarios. Previously, it was only for the spaces created with the mode 'Use Rooms or Spaces', and represented the enclosed area measured by interior bounding surfaces. The additional cases include the spaces created with mode 'Use Building Elements' and 'Use Conceptual Masses and Building Elements', where the area is measured by the center plane of walls and the top plane of roofs and floors.\n\n- Deprecated API &rarr; Replacement\n- EnergyAnalysisSpace.InnerVolume &rarr; EnergyAnalysisSpace.Volume\n- EnergyAnalysisSpace.AnalyticalVolume &rarr; EnergyAnalysisSpace.Volume\n\nConceptual Masses \n\nA number of classes and methods related to using Conceptual Masses in Energy Analysis have been deprecated. These are replaced by classes and methods in detailed energy analysis.\n\n- Deprecated API &rarr; Replacement\n- DB.Analysis.AnalysisMode.ConceptualMasses &rarr; ConceptualMassesAndBuildingElements\n- DB.Analysis.EnergyDataSettings.setCreateAnalyticalModel() &rarr; Use EnergyModel property instead.\n- DB.Analysis.EnergyDataSettings.enableConceptualEnergyAnalyticalModel() &rarr; Use EnergyModel property instead.\n- DB.Analysis.MassGBXMLExportOptions &rarr; GBXMLExportOptions\n- DB.Analysis.MassEnergyAnalyticalMode &rarr; EnergyAnalyticalDetailModel\n- DB.Analysis.MassZone &rarr; EnergyAnalyticalDetailModel and EnergyAnalysisSpace\n- DB.Analysis.MassLevelData &rarr; EnergyAnalyticalDetailModel EnergyAnalysisSpace\n- DB.Analysis.MassSurfaceData &rarr; EnergyAnalyticalDetailModel and EnergyAnalysisSurface\n\n<a name=\"4.1.7\"></a><h2 class=\"new\">1.7. Reinforcement API changes</h2>\n\n<a name=\"4.1.7.1\"></a><h3 class=\"new\">1.7.1. Reinforcement Elements</h3>\n\nThe following methods were deprecated due to the fact that the Reinforcement elements representation as solid in a 3D view will be done automatically on Fine detail level. There are no replacements for these capabilities because the geometry is handled automatically.\n\n- Deprecated API\n- Rebar.IsSolidInView()\n- Rebar.SetSolidInView()\n- AreaReinforcement.IsSolidInView()\n- AreaReinforcement.SetSolidInView()\n- PathReinforcement.IsSolidInView()\n- PathReinforcement.SetSolidInView()\n- RebarInSystem.IsSolidInView()\n- RebarInSystem.SetSolidInView()\n- FabricSheet.IsSolidInView()\n- FabricSheet.SetSolidInView()\n- RebarContainer.IsSolidInView()\n- RebarContainer.SetSolidInView()\n\n<a name=\"4.1.8\"></a><h2 class=\"new\">1.8. Project Browser API removal</h2>\n\nThe enum value Autodesk.Revit.DB.BrowserOrganizationType.Families of BrowserOrganizationType will no longer be exposed to the public API, as there was no user-facing way to use the value.\n\n<a name=\"4.1.9\"></a><h2 class=\"new\">1.9. Obsolete API removal</h2>\n\nThe following API members and classes which had previously been marked Deprecated have been removed in this release. Consult the API documentation from prior releases for information on the replacements to use:\n\n<a name=\"4.1.9.1\"></a><h3 class=\"new\">1.9.1. Classes</h3>\n\n- Autodesk.Revit.UI.SetupEnergySimulationDialog\n\n<a name=\"4.1.9.2\"></a><h3 class=\"new\">1.9.2. Methods</h3>\n\n- AnalyticalToPhysicalRelationManager.UpdateRelation()\n- AnalyticalToPhysicalRelationManager.GetNeighborIds()\n- Autodesk.Revit.Creation.Document.NewFloor() \n- Autodesk.Revit.Creation.Document.NewSlab()\n- Autodesk.Revit.Creation.Document.NewFoundationSlab()\n- Definition.GetSpecTypeId()\n- ExternalDefinitionCreationOptions(string, ParameterType)\n- FamilyManager.AddParameter(string, BuiltInParameterGroup, ParameterType, bool)\n- FabricationNetworkChangeService.SetGroupId()\n- FabricationNetworkChangeService.SetRestrictGroup()\n- FabricationService.IsValidGroupIndex()\n- FabricationService.GetGroupName()\n- FabricationService.IsGroupExcluded()\n- FabricationService.SetServiceGroupExclusions()\n- GlobalParameter.Create(Document, string, ParameterType)\n- GlobalParameter.IsValidDataType(ParameterType)\n- IndependentTag.GetTaggedLocalElement()\n- IndependentTag.GetTaggedReference()\n- LabelUtils.GetLabelFor()\n- RevisionSettings.GetNumericRevisionSettings()\n- RevisionSettings.SetNumericRevisionSettings()\n- RevisionSettings.GetAlphanumericRevisionSettings()\n- RevisionSettings.SetAlphanumericRevisionSettings()\n- TemperatureRatingType.AddCorrectionFactor()\n- UnitUtils.GetAllSpecs()\n- UnitUtils.GetUnitGroup()\n- UnitUtils.IsSpec()\n\n<a name=\"4.1.9.3\"></a><h3 class=\"new\">1.9.3. Properties</h3>\n\n- BarTypeDiameterOptions.BarDiameter\n- CorrectionFactor.Temperature\n- Definition.ParameterType\n- ExternalDefinition.ParameterType\n- ExternalDefinitionCreationOptions.Type\n- FabricationService.GroupCount\n- FabricationServiceButton.GroupIndex\n- FabricationPartSizeMap.GroupId\n- FabricationConfigurationInfo.CloudVersion\n- FabricationConfigurationInfo.IsConnected\n- IndependentTag.TaggedLocalElementId\n- IndependentTag.TaggedElementId\n- IndependentTag.HasElbow\n- IndependentTag.LeaderElbow\n- IndependentTag.LeaderEnd\n- InternalDefinition.ParameterType\n- RebarBarType.BarDiameter\n- RebarBendData.BarDiameter\n- RebarUpdateCurvesData.GetBarDiameter\n- RevisionSettings.NumberType\n\n<a name=\"4.1.9.4\"></a><h3 class=\"new\">1.9.4. Enums</h3>\n\n- ParameterType\n- UnitGroup\n\n\n<center>\n<div style=\"border-style:solid; border-width:2px 0px 2px 0px\">\n<a name=\"4.2\"></a><h1 class=\"new\" style=\"font-weight: bold\">API Additions</h1>\n</div>\n</center>\n\n<a name=\"4.2.1\"></a><h2 class=\"new\">2.1 Schedule API additions</h2> \n\n<a name=\"4.2.1.1\"></a><h3 class=\"new\">2.1.1. Schedule heights on sheets</h3>\n\nThe new class:\n\n- Autodesk.Revit.DB.ScheduleHeightsOnSheet\n\nreturns the heights of schedule title, column header and each body row on sheet view.\n\nThe new method:\n\n- ViewSchedule.GetScheduleHeightsOnSheet()\n\nwill return the heights object.\n\n<a name=\"4.2.1.2\"></a><h3 class=\"new\">2.1.2. Managing schedule segments</h3>\n\nThe new methods:\n\n- ViewSchedule.IsSplit() \n- ViewSchedule.Split(int segmentNumber) \n- ViewSchedule.Split(IList<double> segmentHeights) \n- ViewSchedule.SplitSegment()\n- ViewSchedule.DeleteSegment()\n- ViewSchedule.MergeSegments()\n- ViewSchedule.GetSegmentCount()\n- ViewSchedule.GetSegmentHeight()\n- ViewSchedule.mentHeight()\n\nprovide the ability to split schedules and manage schedule segments.\n\nThe new method:\n\n- ViewSchedule.GetScheduleInstances()\n\nwill return the schedule sheet instances for a schedule segment.\n\nThe new methods:\n\n- ScheduleSheetInstance.SegmentIndex\n- ScheduleSheetInstance.Create(Document document, ElementId viewSheetId, ElementId scheduleId, XYZ origin, int segmentIndex)\n\nprovide the ability to place a schedule segment on sheet and to get and set the schedule segment instance's segment index.\n\n<a name=\"4.2.1.3\"></a><h3 class=\"new\">2.1.3. ScheduleDefinition</h3>\n\nThe new property:\n\n- Autodesk.Revit.DB.ScheduleDefinition.IsFilteredBySheet\n\nindicates if the schedule is set to filter by sheet.\n\nThe new method:\n\n- Autodesk.Revit.DB.ScheduleDefinition.IsValidCategoryForFilterBySheet() \n\nchecks whether a schedule can be filtered by sheet.\n\n<a name=\"4.2.2\"></a><h2 class=\"new\">2.2. Worksharing API additions</h2>\n\n<a name=\"4.2.2.1\"></a><h3 class=\"new\">2.2.1. Delete Workset API</h3>\n\nThe new method:\n\n- WorksetTable.DeleteWorkset()\n\nsupports deleting of worksets from the model. It takes a DeleteWorksetSettings input with options for what to do with elements contained by that workset.\n\n<a name=\"4.2.3\"></a><h2 class=\"new\">2.3. Geometry API additions</h2>\n\n<a name=\"4.2.3.1\"></a><h3 class=\"new\">2.3.1. Bounding Box API</h3>\n\nThe new property:\n\n- BoundingBoxXYZ.IsSet\n\nchecks if the bounding box is Enabled and not empty.\n\n<a name=\"4.2.3.2\"></a><h3 class=\"new\">2.3.2. Geometry managed by symbol element</h3>\n\nThe new class\n\n- Autodesk.Revit.DB.SymbolGeometryId\n\nis used to identify a piece of geometry managed by a symbol element. Can be used to compare if two instances point to the same piece of geometry managed by a symbol element.\n\nThe new method:\n\n- SymbolGeometryId.AsUniqueIdentifier()\n\nthis will convert the SymbolGeometryId to a string that can be used in comparisons to see if two instances point to the same piece of geometry managed by the same symbol element.\n\nThe new property:\n\n- SymbolGeometryId.SymbolId\n\nThe id of the symbol that is containing the geometry that is shared.\n\n<a name=\"4.2.4\"></a><h2 class=\"new\">2.4. DirectShape API additions</h2>\n\n<a name=\"4.2.4.1\"></a><h3 class=\"new\">2.4.1. Type assignability</h3>\n\nThe new property:\n\n- DirectShapeType.UserAssignability\n\nprovides API-level control for whether a given DirectShapeType will appear in the type selector drop-down in the Revit user interface and whether an existing DirectShape can have its type changed to the given DirectShapeType.\n\n<a name=\"4.2.5\"></a><h2 class=\"new\">2.5. Import/Export API additions</h2>\n\n<a name=\"4.2.5.1\"></a><h3 class=\"new\">2.5.1. AXM Import</h3>\n\nThe new class:\n\n- Autodesk.Revit.DB.AXMImportOptions\n\nallows user to determine the import options when importing an AXM file.\n\nThe new method:\n\n- Document.Import(String,AXMImportOptions, View)\n\nimports an AXM file into the document.\n\nThe new method:\n\n- OptionalFunctionalityUtils.IsAXMImportLinkAvailable()\n\nchecks if the Import FormIt function is available. \n\n<a name=\"4.2.5.2\"></a><h3 class=\"new\">2.5.2. OBJ Export</h3>\n\nThe new method:\n\n- Document.Export(String, String, OBJExportOptions)\n\nsupports export of Revit geometry to OBJ format. It uses a new class containing the options available for export:\n\n- OBJExportOptions.TargetUnit\n- OBJExportOptions.SurfaceTolerance\n- OBJExportOptions.NormalTolerance\n- OBJExportOptions.MaxEdgeLength\n- OBJExportOptions.GridAspectRatio\n- OBJExportOptions.SetTessellationSettings()\n\n<a name=\"4.2.5.3\"></a><h3 class=\"new\">2.5.3. STL and OBJ Import & Link</h3>\n\nThe new methods:\n\n- Document.Import(String, OBJImportOptions, View)\n- Document.Import(String, STLImportOptions, View)\n- ImportInstance.Create(Document, View, ExternalResourceReference, OBJImportOptions, [out] LinkLoadResult)\n- ImportInstance.Create(Document, View, ExternalResourceReference, STLImportOptions, [out] LinkLoadResult)\n- Document.Link(String, OBJImportOptions, View)\n- Document.Link(String, STLImportOptions, View)\n\nprovide support for import and linking of files of STL and OBJ formats. These methods use new classes representing the options for each of the new formats.\n\n<a name=\"4.2.5.4\"></a><h3 class=\"new\">2.5.4. ShapeImporter API additions</h3>\n\nThe new enumerations:\n\n- ShapeImporter.SKP\n- ShapeImporter.STL\n- ShapeImporter.OBJ\n\nallows user to import data from more file types.\n\n<a name=\"4.2.6\"></a><h2 class=\"new\">2.6. View API additions</h2>\n\n<a name=\"4.2.6.1\"></a><h3 class=\"new\">2.6.1. Duplicating Sheets</h3>\n\nThe new enum:\n\n- SheetDuplicateOption\n\nallows you to indicate what information should be copied when duplicating a sheet. Its values are:\n\n- DuplicateEmptySheet &ndash; Only copies the title block.\n- DuplicateSheetWithDetailing &ndash; Copies the title block and details.\n- DuplicateSheetWithViewsOnly &ndash; Copies the title block, details, viewports and contained views. The newly created sheet will reference the newly duplicated views.\n- DuplicateSheetWithViewsAndDetailing &ndash; Copies the title block, details, and viewports. Duplicates the sheet's contained views with detailing. The newly created sheet will reference the newly duplicated views.\n- DuplicateSheetWithViewsAsDependent &ndash; Copies the title block, details, and viewports. Duplicates the sheet's contained views as dependent. The newly created sheet will reference the newly duplicated dependent views.\n\nThe new methods:\n\n- ViewSheet.Duplicate(SheetDuplicateOption)\n- ViewSheet.CanBeDuplicated(SheetDuplicateOption)\n\nallow you to duplicate sheets and identify sheets which can be duplicated.\n\n<a name=\"4.2.6.2\"></a><h3 class=\"new\">2.6.2. Transforming from Model Space to View Projection Space</h3>\n\nNew methods in View and TransformWithBoundary allow you to transform between model space and a view's projection space:\n\n- TransformWithBoundary.GetModelToProjectionTransform() \n- TransformWithBoundary.GetBoundary() &ndash; Returns the boundary for the model space to view projection space transform.\n- View.GetModelToProjectionTransforms() &ndash; Gets the transforms from the model space to the view projection space. Views with split crop regions have more than one transform.\n- View.HasViewTransforms() &ndash; Returns true if the view reports model space to view projection space transforms. Schedules and legends, for example, do not report any.\n\n<a name=\"4.2.6.3\"></a><h3 class=\"new\">2.6.3. Transforming from View Projection Space to Sheet Space</h3>\n\nTwo new methods allow you to transform between a view's projection space and sheet space:\n\n- Viewport.GetProjectionToSheetTransform() \n- Viewport.HasViewportTransforms()\n\n<a name=\"4.2.6.4\"></a><h3 class=\"new\">2.6.4. View Placement on Sheet</h3>\n\nThe new enum:\n\n- ViewPlacementOnSheetStatus\n\nindicates whether the View is placed on a Sheet. Some Views can be placed on one or more Sheets completely or partially. For example, a Schedule divided in segments, and only some of them are placed on Sheets.\n\nThe new method\n\n- GetPlacementOnSheetStatus()\n\ndetermines if this view placed on a sheet completely or partially.\n\n<a name=\"4.2.6.5\"></a><h3 class=\"new\">2.6.5. Swapping viewports on sheets to another view</h3>\n\nViewports placed on sheets can now have the associated view swapped to another view in the model. The property:\n\n- Viewport.ViewId\n\nis now editable.\n\nThe new members:\n\n- Viewport.ViewportPositioning &ndash; Specifies how the viewport will be positioned on the sheet when swapped to another view. Default is set to ViewportPositioning.ViewportCenter. The other option, ViewportPositioning.ViewOrigin, will set the viewport location based on the view origin.\n- Viewport.IsViewIdValidForViewport() &ndash; Verifies that the Viewport can change its view id to the input viewId. True if the viewId is valid for the viewport, false otherwise.\n\n<a name=\"4.2.7\"></a><h2 class=\"new\">2.7. Electrical API additions</h2>\n\n<a name=\"4.2.7.1\"></a><h3 class=\"new\">2.7.1. Load classification API</h3>\n\nThe new read only property:\n\n- ElectricalLoadClassification.Spare\n\nindicates if this load classification is to be used for spare.\n\n<a name=\"4.2.7.2\"></a><h3 class=\"new\">2.7.2. Panel schedule API</h3>\n\nThe new method:\n\n- PanelScheduleView.SetLockSlot()\n\nallows an application to set the lock state for a circuit slot at specific cell.\n\n<a name=\"4.2.7.3\"></a><h3 class=\"new\">2.7.3. Electrical analytical node API</h3>\n\nThe new class:\n\n- ElectricalAnalyticalNode\n\nrepresents an electrical analytical node.\n\nThe new enum:\n\n- ElectricalAnalyticalNodeType.NodeType &ndash; Represents the type of electrical analytical node.\n\nThe new properties:\n\n- ElectricalAnalyticalNode.TotalLoad &ndash; Represents the total connected load.\n\nThe new methods:\n\n- ElectricalAnalyticalNode.CanConnectToUpstream() &ndash; Verifies that the current node can connect to the upstream node.\n- ElectricalAnalyticalNode.CanDisconnectFromUpstreamNode() &ndash; Verifies that the current node can disconnect from the upstream node.\n- ElectricalAnalyticalNode.ClearConnections()\n- ElectricalAnalyticalNode.ConnectToUpstreamNode() \n- ElectricalAnalyticalNode.Create() &ndash; Creates an electrical analytical node.\n- ElectricalAnalyticalNode.DisconnectFromUpstreamNode()\n- ElectricalAnalyticalNode.GetAnalyticalPropertyData()\n- ElectricalAnalyticalNode.GetDownstreamNodeIds()\n- lNode.GetUpstreamNodeIds()\n\n<a name=\"4.2.7.4\"></a><h3 class=\"new\">2.7.4. Bus data API</h3>\n\nThe new class:\n\n- AnalyticalBusData\n\nrepresents the data and parameters of analytical bus node.\n\nThe new properties:\n\n- AnalyticalBusData.Rating &ndash; Represents the rating value of the analytical bus.\n- AnalyticalBusData.Voltage &ndash; Represents the voltage value of the analytical bus.\n\nThe new method:\n\n- AnalyticalBusData.GetTotalCurrent() &ndash; Gets the total connected current.\n\n<a name=\"4.2.7.5\"></a><h3 class=\"new\">2.7.5. Distribution node property data API</h3>\n\nThe new class:\n\n- AnalyticalDistributionNodePropertyData\n\nrepresents the data and parameters of electrical analytical node.\n\nThe new property:\n\n- AnalyticalDistributionNodePropertyData.NumberOfPoles\n\n<a name=\"4.2.7.6\"></a><h3 class=\"new\">2.7.6. Equipment load data API</h3>\n\nThe new class:\n\n- AnalyticalEquipmentLoadData\n\nrepresents the data and parameters of point load node.\n\nThe new properties:\n\n- AnalyticalEquipmentLoadData.ApparentLoad- Represents the electrical apparent load of analytical equipment load.\n- AnalyticalEquipmentLoadData.PowerFactor &ndash; Represents the power factor of analytical equipment load.\n- AnalyticalEquipmentLoadDataTrueLoad &ndash; Represents the electrical true load of analytical equipment load.\n- AnalyticalEquipmentLoadData.LoadClassification &ndash; Represents the load classification of analytical equipment load.\n- AnalyticalEquipmentLoadData.LoadType &ndash; Represents the load type of analytical equipment load.\n\nThe new enum:\n\n- ElectricalLoadType &ndash; Represents the electrical load type.\n- ElectricalAnalyticalNodeType &ndash; Represents the type of electrical analytical node.\n\n<a name=\"4.2.7.7\"></a><h3 class=\"new\">2.7.7. Area based load type API</h3>\n\nThe new class:\n\n- AreaBasedLoadType\n\nrepresents an area based load type in Autodesk Revit.\n\nThe new properties：\n\n- AreaBasedLoadType.ApparentPowerDensity &ndash; Represents apparent power density of area based load type.\n- AreaBasedLoadType.LoadClassification &ndash; Represents load classification of area based load type.\n- AreaBasedLoadType.LoadDensity &ndash; Represents the load density of area based load type.\n- AreaBasedLoadType.PowerFactor &ndash; Represents the power factor of area based load type.\n\nThe new method：\n\n- AreaBasedLoadType.Create() &ndash; creates an area based load type.\n\n<a name=\"4.2.7.8\"></a><h3 class=\"new\">2.7.8. Area based load data API</h3>\n\nThe new class:\n\n- AreaBasedLoadData\n\nrepresents the electrical area based load data.\n\nThe new methods:\n\n- AreaBasedLoadData.AddElectricalLoadArea() &ndash; Adds electrical load area into the area based load.\n- AreaBasedLoadData.GetElectricalLoadAreas() &ndash; Gets electrical load areas which the area based load includes.\n- AreaBasedLoadData.RemoveElectricalLoadArea() &ndash; Removes electrical load area from the area based load.\n- Autodesk.Revit.DB.CurveElement.CreateAreaBasedLoadBoundaryLine() &ndash; Creates an area based load boundary line.\n\nThe new properties:\n\n- AreaBasedLoadData.ApparentLoad &ndash; The electrical apparent load of the area based load.\n- AreaBasedLoadData.ApparentPowerDensity &ndash; The apparent power density of the area based load.\n- AreaBasedLoadData.Current &ndash; The current of the area based load .\n- AreaBasedLoadData.AreaBasedLoadType &ndash; The electrical area based load type of the area based load.\n- AreaBasedLoadData.LoadClassification &ndash; The load classification of the area based load.\n- AreaBasedLoadData.LoadDensity &ndash; The load density of the area based load.\n- AreaBasedLoadData.LoadType &ndash; The load type of the area based load.\n- AreaBasedLoadData.PhasesNumber &ndash; The Phases Number of the area based load.\n- AreaBasedLoadData.PowerFactor &ndash; The power factor of the area based load.\n- AreaBasedLoadData.TrueLoad &ndash; The electrical true load of the area based load.\n- AreaBasedLoadData.Voltage &ndash; The voltage of the area based load.\n\n<a name=\"4.2.7.9\"></a><h3 class=\"new\">2.7.9. Electrical load area data API</h3>\n\nThe new class\n\n- ElectricalLoadAreaData \n\nrepresents the electrical load area data.\n\nThe new methods:\n\n- ElectricalLoadAreaData.CreateElectricalLoadAreas() &ndash; Creates electrical load areas on all the empty plan circuits of the given level.\n- ElectricalLoadAreaData.HasCircuitsWithoutElectricalLoadAreas() &ndash; Checks whether there are any empty plan circuits in which there are no electrical load areas.\n- ElectricalLoadAreaData.GetAreaBasedLoadIds() &ndash; Gets the area based load ids of the electrical load area to be included.\n\n<a name=\"4.2.7.10\"></a><h3 class=\"new\">2.7.10. Area based load boundary line data API</h3>\n\nThe new class\n\n- AreaBasedLoadBoundaryLineData \n\nwrapper class used to access area based load boundary line related data.\n\nThe new properties:\n\n- AreaBasedLoadBoundaryLineData.TopLevelId &ndash; The top level id of the area based load boundary line.\n- AreaBasedLoadBoundaryLineData.BottomLevelId &ndash; The bottom level id of the area based load boundary line.\n\nThe new methods:\n\n- AreaBasedLoadBoundaryLineData.GetLevelIdsInRange() &ndash; Returns level ids between the top level and the bottom level (including the top level and the bottom level) of the area based load boundary line.\n- AreaBasedLoadBoundaryLineData.IsElevationWithinRange() &ndash; Checks whether the given elevation is between the bottom level and the top level(including the bottom level and the top level) of the area based load boundary line.\n- AreaBasedLoadBoundaryLineData.IsLevelWithinRange() &ndash; Checks whether the given level is between the bottom level and the top level (including the bottom level and the top level) of the area based load boundary line.\n\n<a name=\"4.2.7.11\"></a><h3 class=\"new\">2.7.11. Analytical transfer switch data API</h3>\n\nThe new class:\n\n- AnalyticalTransferSwitchData \n\nrepresents the data and parameters of electrical analytical transfer switch.\n\nThe new properties:\n\n- AnalyticalTransferSwitchData.CurrentRating &ndash; The current rating value of the electrical analytical transfer switch.\n- AnalyticalTransferSwitchData.Voltage &ndash; The voltage value of the electrical analytical transfer switch.\n\nThe new method:\n\n- AnalyticalTransferSwitchData.GetTotalCurrent() &ndash; Gets total connected current of the electrical analytical transfer switch.\n\n<a name=\"4.2.7.12\"></a><h3 class=\"new\">2.7.12. Analytical Power Source API</h3>\n\nThe new class:\n\n- Autodesk.Revit.DB.Electrical.AnalyticalPowerSourceData\n\nrepresents the data and parameters of an analytical power source node.\n\nIt has the following properties:\n\n- Autodesk.Revit.DB.Electrical.AnalyticalPowerSourceData.TotalConnectedCurrent &ndash; The total connected current of the analytical power source.\n- Autodesk.Revit.DB.Electrical.AnalyticalPowerSourceData.Voltage &ndash; The voltage value of the analytical power source.\n\n<a name=\"4.2.8\"></a><h2 class=\"new\">2.8. Mechanical API additions</h2>\n\nThe new class:\n\n- Autodesk.Revit.DB.Mechanical.ZoneElementDomainData\n\na base class for specific domain requirements for a zone.\n\nThe new method:\n\n- Autodesk.Revit.DB.Mechanical.Zone.CreateAreaBasedLoad()\n\ncreates a new instance of an area based load and adds it to the document.\n\n<a name=\"4.2.9\"></a><h2 class=\"new\">2.9. ElementId API additions</h2>\n\n<a name=\"4.2.9.1\"></a><h3 class=\"new\">2.9.1. Converting strings to ElementId</h3>\n\nThe new methods: \n\n- ElementId.Parse() &ndash; Parse the string representation of the id into a corresponding ElementId. If the string represents Autodesk.Revit.DB.ElementId.InvalidElementId it will be returned. Autodesk.Revit.Exceptions.InvalidOperationException is thrown when the string cannot be parsed into an ElementId.\n- ElementId.TryParse() &ndash; Same as Parse but returns false on failure rather than throwing an exception. If the parse fails, the ElementId returned is undefined.\n\n<a name=\"4.2.10\"></a><h2 class=\"new\">2.10. Element API additions</h2>\n\n<a name=\"4.2.10.1\"></a><h3 class=\"new\">2.10.1. IsModifiable property</h3>\n\nThe new property: \n\n- Element.IsModifiable\n\nidentifies whether an element can be modified or not. The state of the property depends on the document state. For example, active edit modes can make IsModifiable false for many elements. \n\n<a name=\"4.2.10.2\"></a><h3 class=\"new\">2.10.2. Elements with multiple ExternalResourceReferences</h3>\n\nMaterial assets and Decal images are supported with external resource references now.\n\nThe new methods:\n\n- GetExternalResourceReferencesExpanded() &ndash; Gets the expanded map of the external resource references referenced by the element.\n- GetExternalResourceReferenceExpanded() &ndash; Gets the collection of ExternalResourceReference associated with a specified external resource type.\n\nallow users to access the ExternalResourceReferences for an element which might contain multiple references for a specific type. This allows working with Material assets and Decal images, for example. \n\n<a name=\"4.2.10.3\"></a><h3 class=\"new\">2.10.3. Category</h3>\n\nThe new property: \n\n- Autodesk.Revit.DB.BuiltInCategory.Category\n\nthe Autodesk.Revit.DB.BuiltInCategory value for the category or Autodesk.Revit.DB.BuiltInCategory.INVALID if the category is not a built-in category.\n\n<a name=\"4.2.11\"></a><h2 class=\"new\">2.11. Document API additions</h2>\n\n<a name=\"4.2.11.1\"></a><h3 class=\"new\">2.11.1. Elements changed since a previous version</h3>\n\nThe new class:\n\n- Autodesk.Revit.DB.ChangedElements\n\nallows users to see which elements have changed since a previous version of the document. Note that the version refers to a DocumentVersion object and not the Revit release which the document was last saved in. \n\nThe new method:\n\n- Document.GetDocumentVersion()\n\ngets the current document version.\n\nThe new method:\n\n- Document.GetChangedElements() \n\nreturns a collection of the elements which have changed between the input version and the document's current version.\n\n<a name=\"4.2.12\"></a><h2 class=\"new\">2.12. Annotation API additions</h2>\n\n<a name=\"4.2.12.1\"></a><h3 class=\"new\">2.12.1. Tag Leader API</h3>\n\nThe new enumeration:\n\n- LeadersPresentationMode\n\nallows users to set how leaders should be displayed on a tag. It has the following values:\n\n- ShowAll\n- HideAll\n- ShowOnlyOne\n- ShowSpecificLeaders\n\nThe new property\n\n- IndependentTag.MergeElbows \n\nidentifies if the leader's elbows are merged or not\n\nThe new methods\n\n- IndependentTag.IsLeaderVisible() \n\nreturns whether the leader that points to the specified reference is visible or not.\n\n- IndependentTag.SetIsLeaderVisible()\n\nsets the visibility of the leader that points to the specified reference to be visible or not.\n\n<a name=\"4.2.13\"></a><h2 class=\"new\">2.13. Energy Analysis API additions</h2>\n\nThe new property:\n\n- EnergyAnalysisSpace.Volume\n\nthis value is the enclosed volume measured by interior bounding surfaces if the spaces are created with the mode 'Use Rooms or Spaces'. Otherwise, this value is the average of the analytical volume and the voxel volume. Note that the analytical volume is measured by the center plane of walls and the top plane of roofs and floors, and the voxel volume is measured by the number of enclosed unit cubes.\n\nThe new method \n\n- EnergyAnalysisSurface.GetPolyloops()\n\ngets the collection of planar polygons describing the surface/opening geometry. A collection of polyloops (planar polygons) describing the opening geometry as described in gbXML. The geometry is currently measured per analytical(center-line).\n\n<a name=\"4.2.14\"></a><h2 class=\"new\">2.14. Slab API additions</h2>\n\nThe new method:\n\n- SlabShapeEditor.CreateCreasesFromFoldingLines()\n\nallows users to pick edges on a floor and convert them from folding lines to split lines.\n\n<a name=\"4.2.15\"></a><h2 class=\"new\">2.15. Applications API additions</h2>\n\n<a name=\"4.2.15.1\"></a><h3 class=\"new\">2.15.1. Application.ShowGraphicalOpenEndsAreaBasedLoadBoundaryDisconnects</h3>\n\nThe new property\n\n- Application.ShowGraphicalOpenEndsAreaBasedLoadBoundaryDisconnects\n\nindicates whether or not to show the graphical open ends for Area Based Load Boundary disconnects.\n\n<a name=\"4.2.16\"></a><h2 class=\"new\">2.16. Sketched Elements API additions</h2>\n\n<a name=\"4.2.16.1\"></a><h3 class=\"new\">2.16.1. Editing Sketches with SketchEditScope</h3>\n\nThe new method \n\n- SketchEditScope.StartWithNewSketch()\n\nstarts a sketch edit mode for an element which, at this moment, doesn't have a sketch. Some surface Revit elements (like some Walls or some Analytical Elements) does not have a valid sketch all the time so in order to edit them, we have to create a valid sketch first.\n\n<a name=\"4.2.16.2\"></a><h3 class=\"new\">2.16.2. Dimension creation in Sketch Edit mode</h3>\n\nThe method:\n\n- Document.NewDimension()\n\nand its overrides can now support creation of dimensions in Sketch Edit mode. If users need to create dimensions in the sketch, they must call this method under sketch edit mode, passing the view parameter as null and using sketch entities as dimension references. The method signatures were not changed but descriptions have been updated.\n\nThe method:\n\n- Document.NewFamilyInstance()\n\nand its overrides can now support creation of dimensions in Sketch Edit mode. If users need to create dimensions in the sketch, they must call this method under sketch edit mode, passing the view parameter as null and using sketch entities as dimension references. The method signatures were not changed but descriptions have been updated.\n\n<a name=\"4.2.16.3\"></a><h3 class=\"new\">2.16.3. Filled Region for sketch plane</h3>\n\nThe new method:\n\n- FilledRegion.Create() &ndash; Creates a filled region on a sketch plane in a 3d family.\n\n<a name=\"4.2.16.4\"></a><h3 class=\"new\">2.16.4. Boundary Validation for sketched elements</h3>\n\nThe new methods:\n\n- BoundaryValidation.IsValidBoundaryOnView() &ndash; Checks that a curve loop boundary is valid on the view's sketch plane.\n- BoundaryValidation.IsValidBoundaryOnSketchPlane() &ndash; Checks that a curve loop boundary is valid on a sketch plane.\n\n<a name=\"4.2.17\"></a><h2 class=\"new\">2.17. Project Browser API additions</h2>\n\n<a name=\"4.2.17.1\"></a><h3 class=\"new\">2.17.1. BrowserOrganization</h3>\n\nThe new property\n\n- Autodesk.Revit.DB.BrowserOrganization.Type\n\nrepresents the browser organization type.\n\n<a name=\"4.2.17.2\"></a><h3 class=\"new\">2.17.2. ProjectBrowserOptions</h3>\n\nThe new class:\n\n- ProjectBrowserOptions \n\nprovides access to settings that control Revit's Project Browser appearance and functionality. These settings are stored in the Revit.ini file. All documents in Revit instances which use this Revit.ini will follow these settings.\n\nThe new property:\n\n- ProjectBrowserOptions.ShowViewPlacementOnSheetStatusIcons\n\nshow the icons indicating view placement on sheet status. If true, the icons indicating view placement on sheet status will be shown at every view or schedule node in the Project Browser. If false, the icons indicating view placement on sheet status will not be shown.\n\n<a name=\"4.2.18\"></a><h2 class=\"new\">2.18. Structure API additions</h2>\n\n<a name=\"4.2.18.1\"></a><h3 class=\"new\">2.18.1. Line Load</h3>\n\nThe new methods:\n\n- Autodesk.Revit.DB.Structure.LineLoad.Create(Document aDoc, ElementId hostElemId, XYZ forceVector1, XYZ momentVector1, LineLoadType symbol) &ndash; Creates a new hosted line load within the project.\n- Autodesk.Revit.DB.Structure.LineLoad.Create(Document aDoc, ElementId hostElemId, int curveIndex, XYZ forceVector1, XYZ momentVector1, LineLoadType symbol) &ndash; Creates a new hosted line load within the project.\n- Autodesk.Revit.DB.Structure.AreaLoad.isValidHostId() &ndash; Indicates if the provided host id can host line loads.\n\n<a name=\"4.2.18.2\"></a><h3 class=\"new\">2.18.2. Area Load</h3>\n\nThe new methods:\n\n- Autodesk.Revit.DB.Structure.AreaLoad.Create() &ndash; Creates a new hosted area load within the project.\n- Autodesk.Revit.DB.Structure.AreaLoad.isValidHostId() &ndash; Indicates if the provided host id can host area loads.\n\n<a name=\"4.2.18.3\"></a><h3 class=\"new\">2.18.3. Point Load</h3>\n\nThe new methods: \n\n- Autodesk.Revit.DB.Structure.PointLoad.Create() &ndash; Creates a new hosted point load within the project.\n- Autodesk.Revit.DB.Structure.PointLoad.isValidHostId() &ndash; Indicates if the provided host id can host point loads.\n\n<a name=\"4.2.18.4\"></a><h3 class=\"new\">2.18.4. RebarPropagation</h3>\n\nThe new class: \n\n- RebarPropagation\n\na utility class containing functions that can be used to propagate rebar elements.\n\nThe new methods:\n\n- RebarPropagation.AlignByHost() &ndash; It will copy the source rebars, will align them in the same way as how the source host is aligned to destination host and will adapt them to the destination host.\n- RebarPropagation.AlignByFace() &ndash; It will copy the source rebars, will align them to the destination face based on the source face and adapt them to destination host.\n\n<a name=\"4.2.18.5\"></a><h3 class=\"new\">2.18.5. RebarHostData</h3>\n\nThe new method:\n\n- RebarHostData.IsReferenceContainedByAValidHost() &ndash; Identifies whether an element that contains the given reference can host reinforcement.\n\n<a name=\"4.2.18.6\"></a><h3 class=\"new\">2.18.6. RebarCoupler</h3>\n\nThe new property:\n\n- RebarCoupler.RotationAngle &ndash; Identifies the rotation angle of the coupler around its axis.\n\n<a name=\"4.2.19\"></a><h2 class=\"new\">2.19. Selection API additions</h2>\n\n<a name=\"4.2.19.1\"></a><h3 class=\"new\">2.19.1. Selection</h3>\n\nThe new methods:\n\n- Autodesk.Revit.UI.Selection.SetReferences() &ndash; Selects the references. The references can be an element or a sub element in the host or a linked document.\n- Autodesk.Revit.UI.Selection.GetReferences() &ndash; Returns the references that are currently selected.\n\n<a name=\"4.2.19.2\"></a><h3 class=\"new\">2.19.2. UIApplication</h3>\n\nThe new events: \n\n- Autodesk.Revit.UI.UIApplication.SelectionChanged &ndash; Subscribe to the SelectionChanged event to be notified after the selection was changed.\n- Autodesk.Revit.UI.UIControlledApplication.SelectionChanged\n\n<a name=\"4.2.19.3\"></a><h3 class=\"new\">2.19.3. Events</h3>\n\nThe new class:\n\n- Autodesk.Revit.UI.Events.SelectionChangedEventArgs\n\nthe event arguments used by the SelectionChanged event.\n\nThe new methods:\n\n- SelectionChangedEventArgs.GetReferences() &ndash; Returns the selected references.\n- SelectionChangedEventArgs.GetDocument() &ndash; Returns the document associated with this event.\n\n<a name=\"4.2.20\"></a><h2 class=\"new\">2.20. MEP API additions</h2>\n\n<a name=\"4.2.20.1\"></a><h3 class=\"new\">2.20.1. ConnectorElement</h3>\n\nThe new method:\n\n- ConnectorElement.ChangeHostReference()\n\nchanges the connector host reference by plane reference alone, or plane reference plus an edge. The plane reference alone would allow the connector position to move along the plane later, while the plane reference plus an edge fixes the connector position by the edge loop.\n\n<a name=\"4.2.20.2\"></a><h3 class=\"new\">2.20.2. SpatialElement</h3>\n\nThe new class\n\n- Autodesk.Revit.DB.SpatialElementDomainData \n\na base class for specific domain requirements for a spatial element.\n\nThe new method:\n\n- Autodesk.Revit.DB.SpatialElement.GetSpatialElementDomainData() \n\ngets the domain data for the spatial element. The domain data contains information of different spatial elements, such as electrical load area. Currently room/space/area don't have domain data.\n\n<a name=\"4.2.20.3\"></a><h3 class=\"new\">2.20.3. Flipping fabrication parts</h3>\n\nThe new method: \n\n- Autodesk.Revit.DB.FabricationPart.Flip()\n\nflips a directionally oriented fabrication part (tees, crosses, valves, dampers, etc.) to the opposite direction. Existing connections will be maintained. Disconnect warnings will be posted if the connection cannot be maintained.\n\n<a name=\"4.2.21\"></a><h2 class=\"new\">2.21. Parameter API additions</h2>\n\n<a name=\"4.2.21.1\"></a><h3 class=\"new\">2.21.1. ParameterUtils</h3>\n\nThe new method:\n\n- Parameterutils.IsBuiltInParameter()\n\nchecks whether an ElementId identifies a built-in parameter. An ElementId identifies a built-in parameter if it corresponds to a valid BuiltInParameter value.\n\n<a name=\"4.2.22\"></a><h2 class=\"new\">2.22. Print API additions</h2>\n\n<a name=\"4.2.22.1\"></a><h3 class=\"new\">2.22.1. IViewSheetSet</h3>\n\nAutodesk.Revit.DB.IViewSheetSet now supports ordered view sheet list inside. You can now access or arrange the list utilizing the new APIs. Lists can be ordered either automatically or manually, which is controlled by the property IViewSheetSet.IsAutomatic. If the list in under automatic mode, the list will be ordered by Sheet/View organization. You can set them with IViewSheetSet.SheetOrganizationId and IViewSheetSet.ViewOrganizationId. For Manual ordering, you can set IViewSheetSet.OrderedViewList.\n\n- IViewSheetSet.OrderedViewList &ndash; Views and sheets ids in order. The order is affected by Sheet/ViewOrganizationId and IsAutomatic. Throws Autodesk.Revit.Exceptions.ArgumentNullException when the input ordered view list is null. \n- IViewSheetSet.SheetOrganizationId &ndash; Autodesk.Revit.DB.ElementId to the Autodesk.Revit.DB.BrowserOrganzation for sheets. If IViewSheetSet.IsAutomatic is true, Sheets will be ordered by SheetOrganization.\n- IViewSheetSet.ViewOrganizationId &ndash; Autodesk.Revit.DB.ElementId to the Autodesk.Revit.DB.BrowserOrganzation for non-sheet views. If IViewSheetSet.IsAutomatic is true, Views will be ordered by ViewOrganization.\n- IViewSheetSet.IsAutomatic: bool &ndash; Represents automatic or manual ordering of the list."
  }
]