[
  {
    "original_filename": "0701_wall_layers_and_parts",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0701_wall_layers_and_parts",
    "header_text": "Identifying Wall Compound Layers and Parts",
    "local_header_href": "#identifying-wall-compound-layers-and-parts",
    "chunk_text": "<h3>Identifying Wall Compound Layers and Parts</h3><p>We recently looked at how to determine the exact geometry and wall \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/retrieving-detailed-wall-layer-geometry.html\">\njoin points of compound layer geometry</a> subcomponents by temporarily creating separate parts from the wall. \n\nHere is another interesting question the correlation between the wall compound layers and its ensuing parts:\n\n<p><strong>Question:</strong> I have split my wall into parts, and now I would like to determine which of the resulting parts correspond to the component structure layers with certain functions such as Structure or Membrane.\n\n<p>Once the parts have been created, the CompoundStructureLayer information is apparently lost. As a workaround, I was thinking of creating a list of the compound structure layers before converting the wall to parts and storing their materials, width etc.\nAfter the parts are created, I hoped to access each part, search for their material and width, and map these to the list I saved in order to know which part originally had which function.\n\n<p>I am hoping that there is a better way to achieve this, since this approach has multiple limitations.\n\n<p>As a simple example, let's assume we have a wall with two layers, layer 1 and layer 2. \nAfter creating parts from it, we have parts named 1 and 2. \nFrom part 1, I can access the wall that it was created from, and the wall contains all the original layers. \nSo far, so good. \nNow the task here is to find which part corresponds to the layer whose function parameter is say Membrane before it was converted into parts. \nHow do I know which part was created from which layer?\nI was thinking of using material, width etc. to do the check, but if we multiple layers have the same material and width, and possibly even volume, how can I make this mapping foolproof?\n\nFurthermore, some parts may be further subdivided into say horizontal parts, which will add another level of complexity to the problem.\n\n<p><strong>Answer:</strong> It should be possible to find the location of any layer.\n\n<ol>\n<li>Remember that the wall location line is always the centre of the wall, regardless of the layer structure,\n<li>Use CompoundStructure.GetOffsetForLocationLine to find other locations such as CoreBoundary, FinishBoundary, etc., and/or\n<li>Use CompoundStructure.GetLayerWidth to walk the layers in order, and/or\n<li>Use the FindReferencesByDirectionWithContext ray tracing method to find the wall parts in order.\n</li></li></li></li></ol>\n<p>For vertically compound structures, there is more work to be done, as you pointed out.  \n\n<p>It is important to remember that zero width membrane layers do not generate parts.\n</p></p></p></p></p></p></p></p>"
  }
]