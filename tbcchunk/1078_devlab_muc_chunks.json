[
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n</head>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "DevLab Munich",
    "local_header_href": "#devlab-munich",
    "chunk_text": "<h3>DevLab Munich</h3><p>I arrived in Gothenburg last night.</p><p>Today I participate in my last DevDay conference for this year.</p><p>Adam and Jim are continuing to Moscow, where they will be supported by Vladimir and the rest of the team there.</p><p>Last week we conducted DevDay conferences in Paris, Milano and Farnborough, ending with a two-day stay in Munich to hold a DevDay conference followed by a DevLab workshop.</p><p>A DevLab is an open event where developers roll up bringing their current work and issues and continue developing side by side with one or more ADN DevTech engineers, in this case your humble correspondent.</p><p>This time, we organised it as a round table with everybody contributing and sharing ideas on everything together instead of holding one-on-one sessions with people waiting their turn.</p><p>Here is an overview of the participants and the numerous issues we discussed:</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Overview and Participants",
    "local_header_href": "#overview-and-participants",
    "chunk_text": "<h4>Overview and Participants</h4><ul>\n<li>Jabir Ljazouli, <a href=\"http://www.fisa.fr\">FISA</a></li>\n<ul>\n<li>Intersection between two elements</li>\n<li>Multi-language parameters</li>\n<li>Load and prompt for placement of a group</li>\n<li>Prompt for family instance placement options</li>\n</ul>\n</ul><ul>\n<li>Remy van den Bor, <a href=\"http://www.icnsolutions.net\">ICN Solutions</a></li>\n<ul>\n<li>Banned.h</li>\n<li>Hello world for an AppStore app</li>\n<li>How to use Python  with Revit</li>\n<li>How to make a dockable tool palette</li>\n<li>Access to a sketch line in an extrusion in a family</li>\n</ul>\n</ul><ul>\n<li>Christian Tonn, <a href=\"www.kubit-software.com\">kubit</a></li>\n<ul>\n<li>Point clouds</li>\n<li>How to retrieve more than a million points</li>\n<li>Retrieve point cloud engine settings the view options</li>\n<li>Preview Control</li>\n<li>Programmatically generate user input to Revit commands</li>\n<li>Record and play back user input</li>\n</ul>\n</ul><ul>\n<li>Tim Hoffeller, <a href=\"http://www.cad-development.de\">CAD Development</a></li>\n<ul>\n<li>Overview of the GitHub examples</li>\n<li>Managed C++ VDI 3805 MEP Family Generator</li>\n<li>2D cloud-based room editor</li>\n</ul>\n</ul><ul>\n<li>Alex Tomkeyev, <a href=\"http://www.mcdean.com\">M. C. Dean</a></li>\n<ul>\n<li>Unit testing</li>\n<li>CSV file that defines the lookup tables for parameters</li>\n<li>Junction box connect pipe of conduit, but it has no connectors</li>\n</ul>\n</ul><ul>\n<li>Rudolf Honke and Karsten Klempin, <a href=\"http://www.acadgraph.de/en/about-us/company-profile.html\">acadGraph Man &amp; Machine</a></li>\n<ul>\n<li>Revit MEP</li>\n<li>Extensible Storage</li>\n<li>Flex pipes and ducts, get the paths, determine the axis, the spline followed by the pipe</li>\n<li>Add fields to existing estorage schema</li>\n</ul>\n</ul><ul>\n<li>Kris Riemslagh, <a href=\"http://www.hsbcad.de/en\">HSBSoft</a></li>\n<ul>\n<li>Dynamic update of elements mutually influencing each other</li>\n<li>Solid modelling in the Revit project environment</li>\n</ul>\n</ul><ul>\n<li>Jochen Reichert, <a href=\"http://www.bimm.eu/english\">BIMM</a></li>\n<ul>\n<li>Room area with slanted walls</li>\n<li>Analytical visualisation framework</li>\n<li>Editing a floor boundary</li>\n<li>How to determine the area and volume of a hole generated by a window</li>\n</ul>\n</ul><a name=\"3\"></a>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Topics",
    "local_header_href": "#topics",
    "chunk_text": "<h4>Topics</h4><p>Somewhat miraculously, we managed to discuss all of these topics and provide some ideas on resolving each.</p><p>We even had some time left over at the end for a leisurely chat to round off the hectic week.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Banned.h",
    "local_header_href": "#bannedh",
    "chunk_text": "<h5>Banned.h</h5><p>At the DevDay conference, we were told about banned.h.\nWhat is that?</p><p>Banned.h is a new\n\n<a href=\"http://en.wikipedia.org/wiki/Header_file\">C header file</a> introduced\n\nin Visual Studio 2012 that automatically warns a developer about unsafe C and C++ function usage.\nIt is a sanitizing resource that lists all banned APIs and helps you locate them in your code.\nIt uses pre-processor #define pragmas to ensure that the compiler produces notifications about unsafe function calls.\nReplacements for the unsafe functions have been around for a long time, but calls to the unsafe functions may still be around, e.g. from age-old code.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Hello World for an AppStore App",
    "local_header_href": "#hello-world-for-an-appstore-app",
    "chunk_text": "<h5>Hello World for an AppStore App</h5><p>Where can I find a minimal introduction to creating an Autodesk Exchange AppStore application, e.g. a simple 'Hello, world' example?</p><p>Look at the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/08/exchange-app-videos-and-devtv-youtube-channel.html\">\nExchange App videos</a> on\n\nYouTube.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "How to use Python with Revit",
    "local_header_href": "#how-to-use-python-with-revit",
    "chunk_text": "<h5>How to use Python with Revit</h5><p>Look at the article on intimate Revit database\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/11/intimate-revit-database-exploration-with-the-python-shell.html\">\nexploration with the Python shell</a>,\n\nthe\n\n<a href=\"http://code.google.com/p/revitpythonshell\">\nRevitPythonShell home page</a>,\n\n<a href=\"http://lmgtfy.com/?q=building+coder+revitpythonshell\">\nother articles on it</a>,\n\nand also the similar\n\n<a href=\"http://lmgtfy.com/?q=building+coder+revitrubyshell\">RevitRubyShell</a>.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "How to Make a Dockable Tool Palette",
    "local_header_href": "#how-to-make-a-dockable-tool-palette",
    "chunk_text": "<h5>How to Make a Dockable Tool Palette</h5><p>Here is a list of\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.4\">\nseveral dockable tool palette samples.</a>\n<h5>Unit Testing</h5>\n<p>Unit testing is important and can lead to a completely new approach to developing and programming.</p>\n<p>Two serious unit testing frameworks for Revit add-ins have now been presented, both of them based on <a href=\"http://www.nunit.org\">NUnit</a>:</p>\n<ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/revit-add-in-unit-testing.html\">RvtUnit – Revit Add-in Unit Testing</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/10/the-dynamo-revit-unit-test-framework.html\">The Dynamo Revit Unit Test Framework</a></li>\n</ul>\n<p>Here is a collection of <a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.16\">The Building Coder unit testing articles</a>.</p>\n<h5>Overview of the GitHub Examples</h5>\n<p>Could you please provide an overview of the examples that you currently provide on GitHub?</p>\n<p>Yes, sure; here they are:</p>\n<ul>\n<li><a href=\"https://github.com/jeremytammik/FramingXsecAnalyzer\">FramingXsecAnalyzer</a> – Structural Framing Cross Section Analysis</li>\n<li><a href=\"https://github.com/jeremytammik/RoomEditorApp\">RoomEditorApp</a> – Revit add-in part of cloud-based, real-time, round-trip, 2D Revit model editor</li>\n<li><a href=\"https://github.com/jeremytammik/ExportCncFab\">ExportCncFab</a> – Revit Add-In to export Revit wall parts to DXF or SAT for CNC fabrication</li>\n<li><a href=\"https://github.com/jeremytammik/the_building_coder_samples\">the_building_coder_samples</a> – The Building Coder Samples</li>\n<li><a href=\"https://github.com/jeremytammik/Ppt2txt\">Ppt2txt</a> – PowerPoint Slide Deck Text Extractor</li>\n<li><a href=\"https://github.com/jeremytammik/TestIdlingUnsubscribe\">TestIdlingUnsubscribe</a> – Revit add-in to test unsubscribing from the Idling event.</li>\n<li><a href=\"https://github.com/jeremytammik/EstoreFile\">EstoreFile</a> – Revit Add-in storing a file in extensible storage.</li>\n<li><a href=\"https://github.com/jeremytammik/UserMepCalculation\">UserMepCalculation</a> – Revit MEP Calculation External Service Sample</li>\n<li><a href=\"https://github.com/jeremytammik/RevitLookup\">RevitLookup</a> – Interactive Revit BIM database exploration tool to view and navigate element properties and relationships.</li>\n<li><a href=\"https://github.com/jeremytammik/roomedit\">roomedit</a> – CouchDB application for 2D cloud-based room editor</li>\n<li><a href=\"https://github.com/jeremytammik/PostAddinCommand\">PostAddinCommand</a> – Test programmatic posting of an external command defined by a custom Revit add-in.</li>\n<li><a href=\"https://github.com/jeremytammik/PlaceInstances\">PlaceInstances</a> – Revit add-in to place family instances at locations read from selected text file.</li>\n<li><a href=\"https://github.com/jeremytammik/MoveDuctJoin\">MoveDuctJoin</a> – Revit MEP Add-in to Move Duct Join</li>\n<li><a href=\"https://github.com/jeremytammik/DisableMismatchWarning\">DisableMismatchWarning</a> – Disable Processor Architecture Mismatch Warning MSB3270 in Revit Projects</li>\n</ul>\n<h5>Loading the Building Coder Samples</h5>\n<p>How do I load The Building Coder samples?</p>\n<p>They are loaded by the RvtSamples SDK external application.\nYou first need to set up RvtSamples as usual to load all the standard Revit SDK samples.\nWhen that is working, you add the include file BcSamples.txt at the end of RvtSamples.txt as described in\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/11/loading-the-building-coder-samples.html\">\nloading The Building Coder samples</a> way back\n\nin the year 2008.</p>\n<h5>Worksharing and Add-ins</h5>\n<p>This is a really important topic.</p>\n<p>If your users are using worksharing and worksets, you absolutely must look at Scott Conover's Autodesk University class on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/12/au-day-2-worksharing-and-revit-2014-api-roundtables.html#4\">\nRevit add-ins that cooperate with worksharing</a>.</p>\n<p>Avoid using ProjectInfo to store data for your add-in, since that element is required by all users!</p>\n<p>Place extensible storage on private DataStorage elements to minimize conflicts.</p>\n<p>Understand best practice for worksharing and worksets from the product point of view, and ensure your add-in interferes as little as possible!</p>\n<h5>Dynamic Update of Elements that Mutually Influence each Other</h5>\n<p>How can I implement relationships where one element influences another in the Revit BIM?</p>\n<p>You can use a combination of extensible storage and DMU.\nStore the element ids of the relationship in estorage.\nExample: distributing trees along a model curve across a terrain model.\nExtensible storage stores the required rules and other parameters.\nThe model curve is the parent; each element stores its parent in estorage.\nOn modification, destroy the old instances and create new ones.\nStore the collection of child element ids in parent estorage.\nIn the add-in options, you can control DMU activity and toggle it on and off to reduce the performance impact.\nDMU does not allow element creation.\nSometimes the DMU updater Execute method needs to subscribe to another follow-up event, e.g. Idling or something, since it cannot commit all required changes in one single transaction.</p>\n<h5>Availability of a Solid Modeller Inside a Revit Project</h5>\n<p>How can I define an arbitrary solid shape out of the blue in the project, e.g. a box with a spherical hole?</p>\n<p>In Revit 2014, you have to create a family and insert an instance.\nLook at the FreeFormElement SDK sample.\nThe solid to subtract can be an arbitrary geometry instance.\nPump them into the BooleanOperationsUtils class and e.g. its ExecuteBooleanOperation method.\nThe resulting volume is immediately accessible e.g. by querying the toSubtract.Volume property.\nThere are other possibilities as well, e.g. the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/06/boolean-operations-and-instancevoidcututils.html\">\ninstance void cut utils</a>.</p>\n<h5>Intersection Between Elements</h5>\n<p>On one hand, all the aspects mentioned above regarding Boolean operations between elements apply.</p>\n<p>On the other hand, you can also use the pure geometry memory-only\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/10/element-intersection.html\">BooleanOperationsUtils class ExecuteBooleanOperation method</a>.</p>\n<h5>Multi-language Shared Parameters</h5>\n<p>We recently discussed an interesting workaround showing how to implement\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/11/translated-shared-parameter-guid-consolidation.html\">\nmulti-language shared parameter</a>.</p>\n<p>To specify the parameter group, include the appropriate BuiltInParameterGroup PG_ enum value in the call to create the parameter definition.</p>\n<h5>Point Clouds</h5>\n<p>How can I get more than a million points?</p>\n<p>The point cloud itself was expanded from 1 to 20 million points in Revit 2014, but the API is still limited to 1 million.</p>\n<p>For the point cloud engines, how can we retrieve the settings, e.g. the view options defining whether scans should be displayed or not?</p>\n<h5>Access to CSV Files and Internal Data Defining Parameter Value Lookup Tables</h5>\n<p>In Revit 2014, the CSV file family parameter value lookup tables can be moved from the project space to the family environment and embedded into the family definition.\nLoad it into the family and send the family to a customer in one single file.</p>\n<p>How can we programmatically extract this CSV information back out of the family definition?</p>\n<p>In family parameters, you can use the lookup function.\nE.g., look at Pipe fitting &gt; Edit family &gt; Types and properties:</p>\n<pre>\n size_lookup(\n   Lookup Table Name, \"FOD\",\n   Nominal Diameter + 3.2 mm,\n   Nominal Diameter)\n</pre>\n<ul>\n<li>M_Pipe Fitting - Generic</li>\n<li>C:\\ProgramData\\Autodesk\\RVT 2014\\Lookup Tables\\Pipe\\M_Pipe Fitting - Generic.csv</li>\n</ul>\n<p>This functionality is usable in any kind of family.\nIt specifies all valid parameter combinations in individual rows.</p>\n<p>Family instance &gt; Symbol &gt; Parameters &gt; Conduit Size Lookup &gt; Value filename.csv.</p>\n<p>How to access this data from the API?</p>\n<p>Look at the value of the 'Lookup Table Name' parameter in the family types and parameters.\nThis name may vary for different families, though.</p>\n<ul>\n<li>Iterate over all family parameters.</li>\n<li>Search for 'size_lookup'.</li>\n<li>Extract the first argument.</li>\n<li>It names a parameter.</li>\n<li>Look up its value.</li>\n<li>It names the CSV file.</li>\n</ul>\n<p>When the lookup table is loaded into the family, it may differ from the content of the external CSV file.</p>\nWhere is it if it has been loaded into the family?\nYou import the whole file content into the family.\nLook at the FamilySizeTableManager documentation in the Revit API help file RevitAPI.chm.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Unit Testing",
    "local_header_href": "#unit-testing",
    "chunk_text": "<h5>Unit Testing</h5><p>Unit testing is important and can lead to a completely new approach to developing and programming.</p><p>Two serious unit testing frameworks for Revit add-ins have now been presented, both of them based on <a href=\"http://www.nunit.org\">NUnit</a>:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/revit-add-in-unit-testing.html\">RvtUnit – Revit Add-in Unit Testing</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/10/the-dynamo-revit-unit-test-framework.html\">The Dynamo Revit Unit Test Framework</a></li>\n</ul><p>Here is a collection of <a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.16\">The Building Coder unit testing articles</a>.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Overview of the GitHub Examples",
    "local_header_href": "#overview-of-the-github-examples",
    "chunk_text": "<h5>Overview of the GitHub Examples</h5><p>Could you please provide an overview of the examples that you currently provide on GitHub?</p><p>Yes, sure; here they are:</p><ul>\n<li><a href=\"https://github.com/jeremytammik/FramingXsecAnalyzer\">FramingXsecAnalyzer</a> – Structural Framing Cross Section Analysis</li>\n<li><a href=\"https://github.com/jeremytammik/RoomEditorApp\">RoomEditorApp</a> – Revit add-in part of cloud-based, real-time, round-trip, 2D Revit model editor</li>\n<li><a href=\"https://github.com/jeremytammik/ExportCncFab\">ExportCncFab</a> – Revit Add-In to export Revit wall parts to DXF or SAT for CNC fabrication</li>\n<li><a href=\"https://github.com/jeremytammik/the_building_coder_samples\">the_building_coder_samples</a> – The Building Coder Samples</li>\n<li><a href=\"https://github.com/jeremytammik/Ppt2txt\">Ppt2txt</a> – PowerPoint Slide Deck Text Extractor</li>\n<li><a href=\"https://github.com/jeremytammik/TestIdlingUnsubscribe\">TestIdlingUnsubscribe</a> – Revit add-in to test unsubscribing from the Idling event.</li>\n<li><a href=\"https://github.com/jeremytammik/EstoreFile\">EstoreFile</a> – Revit Add-in storing a file in extensible storage.</li>\n<li><a href=\"https://github.com/jeremytammik/UserMepCalculation\">UserMepCalculation</a> – Revit MEP Calculation External Service Sample</li>\n<li><a href=\"https://github.com/jeremytammik/RevitLookup\">RevitLookup</a> – Interactive Revit BIM database exploration tool to view and navigate element properties and relationships.</li>\n<li><a href=\"https://github.com/jeremytammik/roomedit\">roomedit</a> – CouchDB application for 2D cloud-based room editor</li>\n<li><a href=\"https://github.com/jeremytammik/PostAddinCommand\">PostAddinCommand</a> – Test programmatic posting of an external command defined by a custom Revit add-in.</li>\n<li><a href=\"https://github.com/jeremytammik/PlaceInstances\">PlaceInstances</a> – Revit add-in to place family instances at locations read from selected text file.</li>\n<li><a href=\"https://github.com/jeremytammik/MoveDuctJoin\">MoveDuctJoin</a> – Revit MEP Add-in to Move Duct Join</li>\n<li><a href=\"https://github.com/jeremytammik/DisableMismatchWarning\">DisableMismatchWarning</a> – Disable Processor Architecture Mismatch Warning MSB3270 in Revit Projects</li>\n</ul>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Loading the Building Coder Samples",
    "local_header_href": "#loading-the-building-coder-samples",
    "chunk_text": "<h5>Loading the Building Coder Samples</h5><p>How do I load The Building Coder samples?</p><p>They are loaded by the RvtSamples SDK external application.\nYou first need to set up RvtSamples as usual to load all the standard Revit SDK samples.\nWhen that is working, you add the include file BcSamples.txt at the end of RvtSamples.txt as described in\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/11/loading-the-building-coder-samples.html\">\nloading The Building Coder samples</a> way back\n\nin the year 2008.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Worksharing and Add-ins",
    "local_header_href": "#worksharing-and-add-ins",
    "chunk_text": "<h5>Worksharing and Add-ins</h5><p>This is a really important topic.</p><p>If your users are using worksharing and worksets, you absolutely must look at Scott Conover's Autodesk University class on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/12/au-day-2-worksharing-and-revit-2014-api-roundtables.html#4\">\nRevit add-ins that cooperate with worksharing</a>.</p><p>Avoid using ProjectInfo to store data for your add-in, since that element is required by all users!</p><p>Place extensible storage on private DataStorage elements to minimize conflicts.</p><p>Understand best practice for worksharing and worksets from the product point of view, and ensure your add-in interferes as little as possible!</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Dynamic Update of Elements that Mutually Influence each Other",
    "local_header_href": "#dynamic-update-of-elements-that-mutually-influence-each-other",
    "chunk_text": "<h5>Dynamic Update of Elements that Mutually Influence each Other</h5><p>How can I implement relationships where one element influences another in the Revit BIM?</p><p>You can use a combination of extensible storage and DMU.\nStore the element ids of the relationship in estorage.\nExample: distributing trees along a model curve across a terrain model.\nExtensible storage stores the required rules and other parameters.\nThe model curve is the parent; each element stores its parent in estorage.\nOn modification, destroy the old instances and create new ones.\nStore the collection of child element ids in parent estorage.\nIn the add-in options, you can control DMU activity and toggle it on and off to reduce the performance impact.\nDMU does not allow element creation.\nSometimes the DMU updater Execute method needs to subscribe to another follow-up event, e.g. Idling or something, since it cannot commit all required changes in one single transaction.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Availability of a Solid Modeller Inside a Revit Project",
    "local_header_href": "#availability-of-a-solid-modeller-inside-a-revit-project",
    "chunk_text": "<h5>Availability of a Solid Modeller Inside a Revit Project</h5><p>How can I define an arbitrary solid shape out of the blue in the project, e.g. a box with a spherical hole?</p><p>In Revit 2014, you have to create a family and insert an instance.\nLook at the FreeFormElement SDK sample.\nThe solid to subtract can be an arbitrary geometry instance.\nPump them into the BooleanOperationsUtils class and e.g. its ExecuteBooleanOperation method.\nThe resulting volume is immediately accessible e.g. by querying the toSubtract.Volume property.\nThere are other possibilities as well, e.g. the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/06/boolean-operations-and-instancevoidcututils.html\">\ninstance void cut utils</a>.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Intersection Between Elements",
    "local_header_href": "#intersection-between-elements",
    "chunk_text": "<h5>Intersection Between Elements</h5><p>On one hand, all the aspects mentioned above regarding Boolean operations between elements apply.</p><p>On the other hand, you can also use the pure geometry memory-only\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/10/element-intersection.html\">BooleanOperationsUtils class ExecuteBooleanOperation method</a>.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Multi-language Shared Parameters",
    "local_header_href": "#multi-language-shared-parameters",
    "chunk_text": "<h5>Multi-language Shared Parameters</h5><p>We recently discussed an interesting workaround showing how to implement\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/11/translated-shared-parameter-guid-consolidation.html\">\nmulti-language shared parameter</a>.</p><p>To specify the parameter group, include the appropriate BuiltInParameterGroup PG_ enum value in the call to create the parameter definition.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Point Clouds",
    "local_header_href": "#point-clouds",
    "chunk_text": "<h5>Point Clouds</h5><p>How can I get more than a million points?</p><p>The point cloud itself was expanded from 1 to 20 million points in Revit 2014, but the API is still limited to 1 million.</p><p>For the point cloud engines, how can we retrieve the settings, e.g. the view options defining whether scans should be displayed or not?</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Access to CSV Files and Internal Data Defining Parameter Value Lookup Tables",
    "local_header_href": "#access-to-csv-files-and-internal-data-defining-parameter-value-lookup-tables",
    "chunk_text": "<h5>Access to CSV Files and Internal Data Defining Parameter Value Lookup Tables</h5><p>In Revit 2014, the CSV file family parameter value lookup tables can be moved from the project space to the family environment and embedded into the family definition.\nLoad it into the family and send the family to a customer in one single file.</p><p>How can we programmatically extract this CSV information back out of the family definition?</p><p>In family parameters, you can use the lookup function.\nE.g., look at Pipe fitting &gt; Edit family &gt; Types and properties:</p><pre>\n size_lookup(\n   Lookup Table Name, \"FOD\",\n   Nominal Diameter + 3.2 mm,\n   Nominal Diameter)\n</pre><ul>\n<li>M_Pipe Fitting - Generic</li>\n<li>C:\\ProgramData\\Autodesk\\RVT 2014\\Lookup Tables\\Pipe\\M_Pipe Fitting - Generic.csv</li>\n</ul><p>This functionality is usable in any kind of family.\nIt specifies all valid parameter combinations in individual rows.</p><p>Family instance &gt; Symbol &gt; Parameters &gt; Conduit Size Lookup &gt; Value filename.csv.</p><p>How to access this data from the API?</p><p>Look at the value of the 'Lookup Table Name' parameter in the family types and parameters.\nThis name may vary for different families, though.</p><ul>\n<li>Iterate over all family parameters.</li>\n<li>Search for 'size_lookup'.</li>\n<li>Extract the first argument.</li>\n<li>It names a parameter.</li>\n<li>Look up its value.</li>\n<li>It names the CSV file.</li>\n</ul><p>When the lookup table is loaded into the family, it may differ from the content of the external CSV file.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Analysis Visualisation Framework",
    "local_header_href": "#analysis-visualisation-framework",
    "chunk_text": "<h5>Analysis Visualisation Framework</h5><p>The Building Coder defines a whole category for the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/avf\">Analysis Visualisation Framework AVF</a>.</p><p>The\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/02/revit-webcam-2012.html\">Revit Webcam</a>\n\ndemonstrates grabbing real-time webcam images and using AVF to display a grey scale animated version on the surface of a building element.\nNote that it is a pretty old sample with an out-dated implementation of the handling of the Idling event.\nThe more recent RoomEditorApp provides a better example of that aspect, and better still how to\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/12/triggering-immediate-external-event-execute.html\">\nreplace Idling by an external event</a>.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Edit a Floor",
    "local_header_href": "#edit-a-floor",
    "chunk_text": "<h5>Edit a Floor</h5><p>We looked at how to\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/11/editing-a-floor-profile.html\">edit a floor profile</a> by\n\ncreating a new floor based on the existing floor's boundary edges.</p><p>How can we access the existing sketch elements?</p><p>You can use the temporary transaction hack to delete it and retrieve the sketch elements, then edit those as described by Joe Ye in\n\n<a href=\"http://adndevblog.typepad.com/aec/2013/10/change-the-boundary-of-floorsslabs.html\">\nchanging the boundary of floors and slabs</a>.</p><p>There is obviously the problem of losing hosted elements.</p><p>Another discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/creating-a-nonrectangular-slab.html\">\ncreating a nonrectangular slab</a> explains\n\nthe SlabShapeEditor and the SlabShapeEditing SDK sample.\nIt emulates the built-in command to pick supports, accessible by drawing a floor with no slope and picking Shape Editing &gt; Modify Subelements &gt; Add Point &gt; Add Spline &gt; Pick Supports.\nWhat we would need in this case, however, is the Edit Boundary command.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Preview Control",
    "local_header_href": "#preview-control",
    "chunk_text": "<h5>Preview Control</h5><p>Can I add my own navigation options to the preview control?</p><p>The only input to the preview control is via the constructor.</p><p>You could try to some widgets of your own on top of it via the Windows or .NET API, but how to get them to affect the view is another question.</p><p>One input to the constructor is the Revit view, which links to a real view element in the Revit model.\nYou might be able to change its settings via the Revit API, and that might update the preview control also.\nThere is some kind of link between the view in the preview and the original Revit view.\nOne may update the other, and vice versa, it seems.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Access to a Sketch Line in an Extrusion in a Family",
    "local_header_href": "#access-to-a-sketch-line-in-an-extrusion-in-a-family",
    "chunk_text": "<h5>Access to a Sketch Line in an Extrusion in a Family</h5><p>How can I determine the area of glass in a window in a family?</p><p>If rectangular, take width by height, but for the general case...</p><p>For the general case, the glass is represented by its own extrusion or solid.\nQuery that solid for its faces, identify the face in the correct plane, e.g. the front reference plane, and ask it for its area.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Load and Prompt for Placement of Group",
    "local_header_href": "#load-and-prompt-for-placement-of-group",
    "chunk_text": "<h5>Load and Prompt for Placement of Group</h5><p>The 'My First Revit Add-in' tutorial example shows how to place groups of elements:\nLesson 6: Working with Room Geometry.\nThe PlaceGroup method inserts a group.\nIf your group is defined in a separate RVT file, you can open that in the background and use the copy and paste API to bring in its elements into the current project, then group them if needed and place the group using the PlaceGroup method.\n\n<h5>Connect Pipe or Conduit to Junction Box</h5>\n<p>In the UI you can grab a junction box and add connectors to it, nota bene in the project, not the family environment.\nProduce reproducible sample and we'll take a look.</p>\n<h5>How to Determine the Area and Volume of a Hole Generated by a Window</h5>\n<p>Several different approaches, e.g.</p>\n<ul>\n<li>Query the wall for its solid with the window inserted; delete the window; query the solid; subtract the first from the second.</li>\n<li>Query the window for its solid; use the ExtrusionAnalyser to project it onto a plane parallel to the wall.</li>\n</ul>\n<h5>Programmatically Generate User Input to Revit Commands</h5>\n<p>How can I programmatically provide input to Revit built-in commands?</p>\n<p>The Revit journal file record and stores all user input. You can play back a Revit journal file, but only in its entirety.\nAnother approach to record and playback user input is to use the\n\n<a href=\"http://stackoverflow.com/questions/8718540/parsing-windows-journal-jnt-files\">\nWindows journal</a>.\n\nYou can subscribe to the Windows journaling mechanism, record all events that are of interest to you, and play them back.\nIf I want to input the start and end point of a wall, e.g. I may need to convert between Revit and Windows coordinate systems.\nThis is demonstrated by the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/10/uiview-windows-coordinates-referenceintersector-and-my-own-tooltip.html\">\ncustomised tooltip add-in</a>.\n\nThe Revit API UIView class provides the coordinates of the view corners in both Revit and Windows coordinate systems, and that enables you to define a transform between the two.</p>\n<p>That was that.\nA successful day!</p>\n<p>Now I have to go off and give my presentations here in Gothenburg.\nWish me luck!</p>\n<!--\n\n<h5>Managed C++ VDI 3805 MEP Family Generator</h5>\n\n<h5>Handling Complexity and Scalability, Jim Quanci Book Recommendations</h5>\n\nTrillions\nTalib, Anti-fragile etc.\nEverything needs an identifier\nHow does nature handle chaos?\n\nOverview and Participants\n\nJabir Ljazouli, fisa\n  Intersection between two element\n  Multi-language parameters\n  Load and prompt for placement of group\n  Prompt for family instance placement no access to ribbon: 2015\n\nRemy, icn solutions\n  banned.h\n  Hello world for an AppStore app\n  Python how to use that with Revit\n  How make a dockable tool palette\n  Access to a sketch line in an extrusion in a family\n\nChristian Tonn, kubit\n  point clouds\n  can i get more than a million points?\n  point cloud engines, retrieve settings the view options, e.g. scans should be displayed or not?\n  Preview Control\n  Programmatically generate user input to Revit commandsRecord and playback user input\n\nTim hoffeller, cad development\n  overview of the github examples\n  Managed C++ VDI 3805 MEP Family Generator\n  2d cloud-based room editor\n\nAlex, m. c. dean\n  Unit testing\n  csv file that defines the lookup tables for parameters\n  Junction box connect pipe of conduit, but it has no connectors\n\nvera, cad support\n  COM DLL calls autocad, and all drawings should be created automatically; the DLL should be copied to the Autodesk directory, requires admin rights, customer cannot accept that\n  intensive object generation within DLL, want to fetch the object by fence other means before committing the transaction\n\nrudolf honke, karten klempin, acadGraph Man & Machine\n  Revit MEP\n  extensible storage\n  flex pipes and ducts, get the paths, determine the axis, the spline followed by the pipe\n  xdata: add some fields to existing estorage schema: is not possible\n\nalar jost, henn architekten\n  aca topics\n  dimensions in referenced files\n  project navigator new plans file hierarchy\n  palette administration\n\nKris Riemslagh, HSBSoft\n  Dynamic update of elements, one influencing the other\n  Availability of a solid modeller inside Revit project: create a solid in order to create a direct shape\n\nJochen Reichert, BIMM\n  Room area with slanted walls and other issues and in-place families\n  Analytical visualisation framework\n  Edit a floor\n  How to determine the area and volume of a hole generated by a window\n\nArdian Ibrahimaj, CAD-Plan\n  AutoCAD export IFC and import into Revit incl. custom data Tekla BIM, DDS IFC\n\nTopics\n\nbanned.h\nnew in vs 2012\n*.h C header file\nuse #define to ensure that the compiler produces notifincation when using unsafe functions\nreplacements are provided\n\nHello world for an AppStore app\nhttp://thebuildingcoder.typepad.com/blog/2013/08/exchange-app-videos-and-devtv-youtube-channel.html\n\nPython how to use that with Revit\nhttp://thebuildingcoder.typepad.com/blog/2013/11/intimate-revit-database-exploration-with-the-python-shell.html\n\nHow make a dockable tool palette\nhttp://thebuildingcoder.typepad.com/blog/about-the-author.html#5.4\n\nUnit testing\nNUnit\n\n<ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/07/revit-add-in-unit-testing.html\">Revit Add-in Unit Testing</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/10/the-dynamo-revit-unit-test-framework.html\">The Dynamo Revit Unit Test Framework</a></li>\n</ul>\n\nOverview of the github examples\n<ul>\n<li>FramingXsecAnalyzer&ndash;Structural Framing Cross Section Analysis</li>\n<li>RoomEditorApp&ndash;Revit add-in part of cloud-based, real-time, round-trip, 2D Revit model editor</li>\n<li>ExportCncFab&ndash;Revit Add-In to export Revit wall parts to DXF or SAT for CNC fabrication</li>\n<li>the_building_coder_samples&ndash;The Building Coder Samples</li>\n<li>Ppt2txt&ndash;PowerPoint Slide Deck Text Extractor</li>\n<li>TestIdlingUnsubscribe&ndash;Revit add-in to test unsubscribing from the Idling event.</li>\n<li>EstoreFile&ndash;Revit Add-in storing a file in extensible storage.</li>\n<li>UserMepCalculation&ndash;Revit MEP Calculation External Service Sample</li>\n<li>RevitLookup&ndash;Interactive Revit BIM database exploration tool to view and navigate element properties and relationships.</li>\n<li>roomedit&ndash;CouchDB application for 2D cloud-based room editor</li>\n<li>PostAddinCommand&ndash;Test programmatic posting of an external command defined by a custom Revit add-in.</li>\n<li>PlaceInstances&ndash;Revit add-in to place family instances at locations read from selected text file.</li>\n<li>MoveDuctJoin&ndash;Revit MEP Add-in to Move Duct Join</li>\n<li>DisableMismatchWarning&ndash;Disable Processor Architecture Mismatch Warning MSB3270 in Revit Projects</li>\n</ul>\n\nThe Building Coder Samples\nLoaded by RvtSamples.txt, include file BcSample.txt\n\nWorksharing and Add-ins\nLook at Scott's AU class!\nDo not use ProjectInfo!\nUnderstand best practivce for worksharing and worksets from product point of view.\nEnsure your add-in does not interfere!\nPlace extensible storage on DataStorage elements to minimize conflicts.\n\nDynamic update of elements, one influencing the other\nCombination of extensible storage and DMU.\nDMU does not allow element creation.\nSometimes you need to register for another following transaction, or subscribe to Idling or something.\nExample: distributing trees along a model curve across a terrain model.\nEstensible storage stores the required rules and pther parameters.\nThe model curve is parent, each element stores its parent in estorage.\nOn modification, destroy old instances and create new.\nStore collection of child element ids in parent estorage.\nIn options, you can control DMU activity on off to reduce performance impact.\n\nAvailability of a solid modeller inside Revit project\nDefining an arbitrary solid shape out of the blue, e.g a box with a spherical hole.\nIn Revit 2014, you have to create a family and insert an instance.\nLook at the FreeFormElement SDK sample.\nThe solid to subtract can be an aritrary geometry instance.\nPump them into the BooleanOperationsUtils class and e.g. its ExecuteBooleanOperation method.\nThe resulting volume is immediatly accesible e.g. by querying the toSubtract.Volume property.\n\nIntersection between two element\ncf. above.\n\nManaged C++ VDI 3805 MEP Family Generator\n\nMulti-language parameters\nhttp://thebuildingcoder.typepad.com/blog/2013/11/translated-shared-parameter-guid-consolidation.html\nTo specify the group, include the appropriate PG_ enum value in the call to create the parameter definition.\n\nHandling Complexity and Scalability, Jim Quanci Book Recommendations\nTrillions\nTalib, Anti-fragile etc.\nEverything needs an identifier\nHow does nature handle chaos?\n\nPoint clouds\nCan i get more than a million points? Tim says maybe the point cloud itself was expanded from 1 to 20 million points in Revit 2014, but the API is still limited to 1 million.\nPoint cloud engines, retrieve settings the view options, e.g. scans should be displayed or not?\n\nCSV file that defines the lookup tables for parameters\nIn 2014 the lookup tables defined CSV file management for family parameter definitions was moved from the project space to the family environment.\nLoad it into the family, send family to customer, one single file.\nHow can we programmatically extract this CSV information back out of the family definition?\nIn family parameters you can use the lookup function.\nPipe fitting > edit family > Types and properties >\nsize_lookup(Lookup Table Name, \"FOD\", Nominal Diameter + 3.2 mm, Nominal Diameter)\nM_Pipe Fitting - Generic\nC:\\ProgramData\\Autodesk\\RVT 2014\\Lookup Tables\\Pipe\\M_Pipe Fitting - Generic.csv\nUsable in any kind of family.\nSpecifies all valid parameter combinations in individual rows.\nHow to access this data from the API?\nLook at the value of the 'Lookup Table Name' parameter in the family types and parameters.\nThis name may vary for different families, though.\nIterate over all family parameters. Search for 'size_lookup'. Extract the first argument. It names a parameter. Look up its value. It names the CSV file.\nMaybe the lookup table is loaded into the family, in which case it may differ from the content of the\nFamily instance > Symbol > PArameters > Conduit Size Lokkup > Value filename.csv.\nWhere is it if it has been loaded into the family?\nYou import the whole file content into the family.\nLook at the FamilySizeTableManager documentation in the Revit API help file RevitAPI.chm.\n\nAnalytical visualisation framework\nhttp://thebuildingcoder.typepad.com/blog/avf\nRevit Webcam demonstrates grabbing real-time webcam images and using AVF to display a greyscale animated version on the surface of a building element.\nhttp://thebuildingcoder.typepad.com/blog/2012/02/revit-webcam-2012.html\nBad Idling implementation, look at the RoomEditorApp on how to improve it.\n\nEdit a floor\nhttp://thebuildingcoder.typepad.com/blog/2008/11/editing-a-floor-profile.html\nAccess sketch elements?\nUse the temp trans hack to delete and retrieve sketch, then edit thos\nProblem losing hosted elements\nWish list item\nSlabShapeEditor\nhttp://thebuildingcoder.typepad.com/blog/2009/08/creating-a-nonrectangular-slab.html\nSlabShapeEditing SDK sample?\nEmulates the built-in commands: Draw a floor with no slope > Shape Editing > Modify Subelements, Add Point, Add Spline, Pick Supports\nWhat we need is Edit Boundary\n\nPreview Control\nAdd in your own navigation options?\nThe only input is in the constructor.\nOwn input options? You could some widgets on top of it, but how to get them to affect the view.\nOne input to the constructor is the view, a real view element in the Revit model. You might be able to change its settings, and that might update the preview control also.\nThere is some kind of link between the view in the preview and the original Revit view. One may update the other, possibly.\n\nAccess to a sketch line in an extrusion in a family\nIn a family, how to determine the area of glass in a window. If retangular, take width by height, but for the general case...\nThe glass is represented by its own extrusion or solid.\nQuery that solid for its faces, identify the face in the correct plane, e.g. front reference plane, and ask its area.\n\nLoad and prompt for placement of group\nIn the 'My First Revit Add-in' tutorial, the example shows how to place groups of elements.\nLesson 6: Working with Room Geometry\nPlaceGroup() method inserts a group\nIf your group is defined in a separate RVT file, you can open that in the background and use the copy and paste API to bring in its elements into the current project, then group them if needed and place the group using the PlaceGroup method.\n\nJunction box connect pipe of conduit, but it has no connectors\nIn the UI you can grab it and add connectors (in project, not family).\nProduce reproducible sample and we'll take a look.\n\nHow to determine the area and volume of a hole generated by a window\nSeveral different aporaches, e.g.\n1. Query the wall for its solid with the window inserted; delete the window; query the solid; subtract the first from the second\n2. Query the window for its solid; use the ExtrusionAnalyser to project it onto a plane parallell to the wall.\n\nProgrammatically generate user input to Revit commands\nHow can I progrmmatically provide input to Revit built-in commands?\nThe Revit journal file record and stores all user input. You can play back a Revit journal file, but only in its entirety.\nAnother approach to record and playback user input is to use the Windows journal\nhttp://stackoverflow.com/questions/8718540/parsing-windows-journal-jnt-files\nYou can subsribe to the Winodows journaling mechanis, record all events that are of interest to you, and play them back.\nIf I want to input the start and end point of a wall, e.g. I may need to convert between Revit and Windows coordinate systems.\nThis is demonstrated by the customised tooltip add-in\nhttp://thebuildingcoder.typepad.com/blog/2012/10/uiview-windows-coordinates-referenceintersector-and-my-own-tooltip.html\nThe Revit API UIView class provides the coordinates of the view corners in both Revit and Windows coordinate systems, e\n\n-->\n</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Connect Pipe or Conduit to Junction Box",
    "local_header_href": "#connect-pipe-or-conduit-to-junction-box",
    "chunk_text": "<h5>Connect Pipe or Conduit to Junction Box</h5><p>In the UI you can grab a junction box and add connectors to it, nota bene in the project, not the family environment.\nProduce reproducible sample and we'll take a look.</p>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "How to Determine the Area and Volume of a Hole Generated by a Window",
    "local_header_href": "#how-to-determine-the-area-and-volume-of-a-hole-generated-by-a-window",
    "chunk_text": "<h5>How to Determine the Area and Volume of a Hole Generated by a Window</h5><p>Several different approaches, e.g.</p><ul>\n<li>Query the wall for its solid with the window inserted; delete the window; query the solid; subtract the first from the second.</li>\n<li>Query the window for its solid; use the ExtrusionAnalyser to project it onto a plane parallel to the wall.</li>\n</ul>"
  },
  {
    "original_filename": "1078_devlab_muc",
    "header_text": "Programmatically Generate User Input to Revit Commands",
    "local_header_href": "#programmatically-generate-user-input-to-revit-commands",
    "chunk_text": "<h5>Programmatically Generate User Input to Revit Commands</h5><p>How can I programmatically provide input to Revit built-in commands?</p><p>The Revit journal file record and stores all user input. You can play back a Revit journal file, but only in its entirety.\nAnother approach to record and playback user input is to use the\n\n<a href=\"http://stackoverflow.com/questions/8718540/parsing-windows-journal-jnt-files\">\nWindows journal</a>.\n\nYou can subscribe to the Windows journaling mechanism, record all events that are of interest to you, and play them back.\nIf I want to input the start and end point of a wall, e.g. I may need to convert between Revit and Windows coordinate systems.\nThis is demonstrated by the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/10/uiview-windows-coordinates-referenceintersector-and-my-own-tooltip.html\">\ncustomised tooltip add-in</a>.\n\nThe Revit API UIView class provides the coordinates of the view corners in both Revit and Windows coordinate systems, and that enables you to define a transform between the two.</p><p>That was that.\nA successful day!</p><p>Now I have to go off and give my presentations here in Gothenburg.\nWish me luck!</p>"
  }
]