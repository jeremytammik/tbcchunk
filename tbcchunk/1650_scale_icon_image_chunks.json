[
  {
    "original_filename": "1650_scale_icon_image",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<!--\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\nScaling a bitmap for the #RevitAPI external application large and small image icons @AutodeskRevit #bim #dynamobim @AutodeskForge #ForgeDevCon http://bit.ly/scaleribbonicon\n\nEvery time I created a ribbon button, I was faced with the task of creating appropriately scaled icons for it to populate the <code>PushButton</code> large and small image icon properties <code>LargeImage</code> and <code>Image</code>.\nThey seem to expect a 32 x 32 and 16 x 16 icon, respectively.\nI finally solved that once and for all by implementing a couple of methods to perform automatic bitmap scaling\n&ndash; BitmapImageToBitmap &ndash; convert a <code>BitmapImage</code> to <code>Bitmap</code>\n&ndash; BitmapToBitmapSource &ndash; convert a <code>Bitmap</code> to a <code>BitmapSource</code>\n&ndash; ResizeImage &ndash; resize an image to the specified width and height\n&ndash; ScaledIcon &ndash; scale down large icon to desired size for Revit ribbon button\n&ndash; Usage sample &ndash; putting them together...\n\n--->"
  },
  {
    "original_filename": "1650_scale_icon_image",
    "header_text": "Scaling a Bitmap for the Large and Small Image Icons",
    "local_header_href": "#scaling-a-bitmap-for-the-large-and-small-image-icons",
    "chunk_text": "### Scaling a Bitmap for the Large and Small Image Icons\n\nEvery time I created a ribbon button, I was faced with the task of creating appropriately scaled icons for it to populate the `PushButton` large and small image icon properties `LargeImage` and `Image`.\n\nThey seem to expect a 32 x 32 and 16 x 16 icon, respectively.\n\nI finally solved that once and for all by implementing a couple of methods to perform automatic bitmap scaling:\n\n- [BitmapImageToBitmap](#3) &ndash; convert a `BitmapImage` to `Bitmap`\n- [BitmapToBitmapSource](#4) &ndash; convert a `Bitmap` to a `BitmapSource`\n- [ResizeImage](#5) &ndash; resize an image to the specified width and height\n- [ScaledIcon](#6) &ndash; return a scaled down icon of desired size for Revit ribbon button\n- [Usage sample](#7) &ndash; putting them together\n\nHere they are one by one:\n\n####<a name=\"3\"></a>BitmapImageToBitmap\n\n<pre class=\"code\">\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Convert&nbsp;a&nbsp;BitmapImage&nbsp;to&nbsp;Bitmap</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">Bitmap</span>&nbsp;BitmapImageToBitmap(&nbsp;\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">BitmapImage</span>&nbsp;bitmapImage&nbsp;)\n{\n&nbsp;&nbsp;<span style=\"color:green;\">//BitmapImage&nbsp;bitmapImage&nbsp;=&nbsp;new&nbsp;BitmapImage(</span>\n&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;new&nbsp;Uri(&quot;../Images/test.png&quot;,&nbsp;UriKind.Relative));</span>\n \n&nbsp;&nbsp;<span style=\"color:blue;\">using</span>(&nbsp;<span style=\"color:#2b91af;\">MemoryStream</span>&nbsp;outStream&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">MemoryStream</span>()&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BitmapEncoder</span>&nbsp;enc&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">BmpBitmapEncoder</span>();\n&nbsp;&nbsp;&nbsp;&nbsp;enc.Frames.Add(&nbsp;<span style=\"color:#2b91af;\">BitmapFrame</span>.Create(&nbsp;bitmapImage&nbsp;)&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;enc.Save(&nbsp;outStream&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Bitmap</span>&nbsp;bitmap&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Bitmap</span>(&nbsp;outStream&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Bitmap</span>(&nbsp;bitmap&nbsp;);\n&nbsp;&nbsp;}\n}\n</pre>\n\n\n####<a name=\"4\"></a>BitmapToBitmapSource\n\n<pre class=\"code\">\n[System.Runtime.InteropServices.<span style=\"color:#2b91af;\">DllImport</span>(&nbsp;<span style=\"color:#a31515;\">&quot;gdi32.dll&quot;</span>&nbsp;)]\n<span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:blue;\">extern</span>&nbsp;<span style=\"color:blue;\">bool</span>&nbsp;DeleteObject(&nbsp;<span style=\"color:#2b91af;\">IntPtr</span>&nbsp;hObject&nbsp;);\n \n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Convert&nbsp;a&nbsp;Bitmap&nbsp;to&nbsp;a&nbsp;BitmapSource</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">BitmapSource</span>&nbsp;BitmapToBitmapSource(&nbsp;<span style=\"color:#2b91af;\">Bitmap</span>&nbsp;bitmap&nbsp;)\n{\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">IntPtr</span>&nbsp;hBitmap&nbsp;=&nbsp;bitmap.GetHbitmap();\n \n&nbsp;&nbsp;<span style=\"color:#2b91af;\">BitmapSource</span>&nbsp;retval;\n \n&nbsp;&nbsp;<span style=\"color:blue;\">try</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;retval&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Imaging</span>.CreateBitmapSourceFromHBitmap(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hBitmap,&nbsp;<span style=\"color:#2b91af;\">IntPtr</span>.Zero,&nbsp;<span style=\"color:#2b91af;\">Int32Rect</span>.Empty,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BitmapSizeOptions</span>.FromEmptyOptions()&nbsp;);\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">finally</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject(&nbsp;hBitmap&nbsp;);\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;retval;\n}\n</pre>\n\n\n####<a name=\"5\"></a>ResizeImage\n\n<pre class=\"code\">\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Resize&nbsp;the&nbsp;image&nbsp;to&nbsp;the&nbsp;specified&nbsp;width&nbsp;and&nbsp;height.</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&nbsp;name</span><span style=\"color:gray;\">=</span><span style=\"color:gray;\">&quot;</span>image<span style=\"color:gray;\">&quot;</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">The&nbsp;image&nbsp;to&nbsp;resize.</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&nbsp;name</span><span style=\"color:gray;\">=</span><span style=\"color:gray;\">&quot;</span>width<span style=\"color:gray;\">&quot;</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">The&nbsp;width&nbsp;to&nbsp;resize&nbsp;to.</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&nbsp;name</span><span style=\"color:gray;\">=</span><span style=\"color:gray;\">&quot;</span>height<span style=\"color:gray;\">&quot;</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">The&nbsp;height&nbsp;to&nbsp;resize&nbsp;to.</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">The&nbsp;resized&nbsp;image.</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">Bitmap</span>&nbsp;ResizeImage(\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Image</span>&nbsp;image,&nbsp;\n&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;width,\n&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;height&nbsp;)\n{\n&nbsp;&nbsp;<span style=\"color:blue;\">var</span>&nbsp;destRect&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;System.Drawing.<span style=\"color:#2b91af;\">Rectangle</span>(&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;0,&nbsp;0,&nbsp;width,&nbsp;height&nbsp;);\n \n&nbsp;&nbsp;<span style=\"color:blue;\">var</span>&nbsp;destImage&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Bitmap</span>(&nbsp;width,&nbsp;height&nbsp;);\n \n&nbsp;&nbsp;destImage.SetResolution(&nbsp;image.HorizontalResolution,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;image.VerticalResolution&nbsp;);\n \n&nbsp;&nbsp;<span style=\"color:blue;\">using</span>(&nbsp;<span style=\"color:blue;\">var</span>&nbsp;g&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Graphics</span>.FromImage(&nbsp;destImage&nbsp;)&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;g.CompositingMode&nbsp;=&nbsp;<span style=\"color:#2b91af;\">CompositingMode</span>.SourceCopy;\n&nbsp;&nbsp;&nbsp;&nbsp;g.CompositingQuality&nbsp;=&nbsp;<span style=\"color:#2b91af;\">CompositingQuality</span>.HighQuality;\n&nbsp;&nbsp;&nbsp;&nbsp;g.InterpolationMode&nbsp;=&nbsp;<span style=\"color:#2b91af;\">InterpolationMode</span>.HighQualityBicubic;\n&nbsp;&nbsp;&nbsp;&nbsp;g.SmoothingMode&nbsp;=&nbsp;<span style=\"color:#2b91af;\">SmoothingMode</span>.HighQuality;\n&nbsp;&nbsp;&nbsp;&nbsp;g.PixelOffsetMode&nbsp;=&nbsp;<span style=\"color:#2b91af;\">PixelOffsetMode</span>.HighQuality;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">using</span>(&nbsp;<span style=\"color:blue;\">var</span>&nbsp;wrapMode&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ImageAttributes</span>()&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wrapMode.SetWrapMode(&nbsp;<span style=\"color:#2b91af;\">WrapMode</span>.TileFlipXY&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.DrawImage(&nbsp;image,&nbsp;destRect,&nbsp;0,&nbsp;0,&nbsp;image.Width,&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image.Height,&nbsp;<span style=\"color:#2b91af;\">GraphicsUnit</span>.Pixel,&nbsp;wrapMode&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;destImage;\n}\n</pre>\n\n\n####<a name=\"6\"></a>ScaledIcon\n\n`ScaledIcon` simply calls the three helper methods defined above to return a scaled version of the input image:\n\n<pre class=\"code\">\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Scale&nbsp;down&nbsp;large&nbsp;icon&nbsp;to&nbsp;desired&nbsp;size&nbsp;for&nbsp;Revit&nbsp;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;ribbon&nbsp;button,&nbsp;e.g.,&nbsp;32&nbsp;x&nbsp;32&nbsp;or&nbsp;16&nbsp;x&nbsp;16</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:#2b91af;\">BitmapSource</span>&nbsp;ScaledIcon(&nbsp;\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">BitmapImage</span>&nbsp;large_icon,\n&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;w,\n&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;h&nbsp;)\n{\n&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;BitmapToBitmapSource(&nbsp;ResizeImage(&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;BitmapImageToBitmap(&nbsp;large_icon&nbsp;),&nbsp;w,&nbsp;h&nbsp;)&nbsp;);\n}\n</pre>\n\n\n####<a name=\"7\"></a>Usage Sample\n\nWithin the external application `PopulatePanel` method, simply read the embedded resource icon image and apply `ScaledIcon` to it to populate the large and small image properties with appropriately scaled images:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">BitmapImage</span>&nbsp;bmi&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">BitmapImage</span>(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Uri</span>(&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;icons/cmdx.png&quot;</span>,&nbsp;<span style=\"color:#2b91af;\">UriKind</span>.Relative&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;<span style=\"color:#2b91af;\">PushButton</span>&nbsp;pb&nbsp;=&nbsp;p.AddItem(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">PushButtonData</span>(&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;Command&quot;</span>,&nbsp;<span style=\"color:#a31515;\">&quot;Command&quot;</span>,&nbsp;path,&nbsp;<span style=\"color:#a31515;\">&quot;CmdX&quot;</span>&nbsp;)&nbsp;)&nbsp;<span style=\"color:blue;\">as</span>&nbsp;<span style=\"color:#2b91af;\">PushButton</span>;\n \n&nbsp;&nbsp;pb.ToolTip&nbsp;=&nbsp;<span style=\"color:#a31515;\">&quot;Do&nbsp;something&nbsp;fantastic&quot;</span>;\n&nbsp;&nbsp;pb.LargeImage&nbsp;=&nbsp;ScaledIcon(&nbsp;bmi,&nbsp;32,&nbsp;32&nbsp;);\n&nbsp;&nbsp;pb.Image&nbsp;=&nbsp;ScaledIcon(&nbsp;bmi,&nbsp;16,&nbsp;16&nbsp;);\n</pre>\n\n<center>\n<img src=\"img/roomedit_2014_embedded_icon_resource.png\" alt=\"Embedded icon resource\" width=\"220\"/>\n</center>"
  }
]