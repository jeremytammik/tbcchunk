[
  {
    "original_filename": "1236_data_topo_building",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"http://thebuildingcoder.typepad.com/google-code-prettify/run_prettify.js\"></script>\n</head>"
  },
  {
    "original_filename": "1236_data_topo_building",
    "header_text": "Creating Topography Contours and Building Masses",
    "local_header_href": "#creating-topography-contours-and-building-masses",
    "chunk_text": "<h3>Creating Topography Contours and Building Masses</h3><p>After diving deep into both Revit\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/10/newcrossfitting-connection-order.html\">MEP</a> and\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/11/concrete-setout-points-for-revit-structure-2015.html\">Structure</a>\n\nAPI issues in the past few days, let's round it of with a GIS related topic:</p><p>I had an interesting discussion back in the spring of this year with\n\n<a href=\"https://sites.google.com/site/bimsimgroup/people/students/mohammad-rahmani-asl\">Mohammad Rahmani Asl</a>,\n\n<a href=\"https://sites.google.com/site/bimsimgroup/people/students/saied-zarrinmehr\">Saied Zarrinmehr</a> and\n\n<a href=\"https://sites.google.com/site/bimsimgroup/people/students/chengde-wu\">Chengde Wu</a>\n\nof the\n\n<a href=\"https://www.tamu.edu\">Texas A&amp;M University</a> in the Revit API discussion forum on the topic of\n\n<a href=\"http://forums.autodesk.com/t5/revit-api/creating-height-dimension-for-form/m-p/4886750\">\ncreating a height dimension for a form</a>.</p><p>I finally grabbed some time last weekend to document that discussion thread and publish their interesting application:\n\n<a href=\"https://github.com/jeremytammik/DataToBimCountoursAndBuildings\">DataToBim</a>,\n\na Revit add-in that creates topography, building outlines and solid conceptual mass extrusions from text file input data:</p><center>\n<img alt=\"Contours and masses\" src=\"img/datatobim_contour_and_mass.png\" width=\"400\"/>\n</center><p>Here is the\n\n<a href=\"http://vimeo.com/103487058\">five and a half minute video</a> describing\n\nthe final completed project:</p><center>\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"236\" mozallowfullscreen=\"\" src=\"http://player.vimeo.com/video/103487058\" webkitallowfullscreen=\"\" width=\"420\"></iframe>\n</center><p>The initial question from Mohammad was on creating the dimensioning required to extrude the building shape masses.</p><p>Later, Saied added background information and motivation on the application itself:</p><p><strong>Question:</strong> I am creating an application that needs to create dimension for height of a form.\nI read The Building Coder and the forum posts and used the sample in SDK folder (Window Wizard).\nI was able to manage everything well but the following error:</p><pre>\n  The direction of dimension is invalid.\n</pre><p>I tried a lot to solve this issue, but I could not find the solution.\nTwo other people had the same problem in the blog but there is no answer for their questions.\nI would appreciate if you could help me.</p><p>Here is <a href=\"zip/datatobim_saieds_program.zip\">saieds_program.zip</a> containing the complete source code and Visual Studio solution together plus some sample data text files.</p><p>This application imports data from GIS to Revit.\nWhen you run it from the add-in manager it creates the topography first and then adds the masses (using extrusion command) on the top of topography:</p><center>\n<img alt=\"Mass extrusion\" src=\"img/datatobim_img_masses.png\" width=\"390\"/>\n</center><p>Please follow these steps:</p><ol>\n<li>Copy the TextForPartialMap folder to your “C:/” drive or copy it to any folder and change paths in the MainClass.Cs for Buildings Road and Contours.</li>\n<li>Open and empty Revit Architecture Project and go to Level 1 View</li>\n<li>Run the application from add in manager</li>\n<li>The program creates the topography using the data in the text files included in the project folder (It takes a few seconds)</li>\n<li>It will ask for a folder to save the mass files (select a folder and click OK)</li>\n<li>Here comes the error:</li>\n</ol><center>\n<img alt=\"Error message\" src=\"img/datatobim_img_error.jpeg\" width=\"390\"/>\n</center><p>The code attempts to add height dimension to the mass and label it with the height parameter (please see the DataToBuilding.cs then CreateFamilyFile Function when we try to create the dimension).</p><p>The error that we receive is highlighted with a few stars in comment in the code.</p><p><strong>Answer:</strong> I had some trouble rebuilding your project.</p><p>I first tried to use the current version of the clipper library, clipper_ver6.1.3a.zip.</p><p>That no longer defines the AddPolygons method, but AddPaths instead.</p><p>I then reverted back to a version I had used previously, clipper_ver5.1.6.zip.</p><p>That does not yet define the StrictlySimple property.</p><p>After commenting out that in your code I was able to compile.</p><p>I tried running it, and encountered the error System.ArgumentException: \"Could not find the path!\"</p><p>That was due to your implementation of the familyTemplateAddress method, which only provides support for the imperial library.</p><p>I only have the metric library installed, so I added support for that.</p><p>I was able to reproduce the error that you run into, saying 'The direction of dimension is invalid. A transaction or sub-transaction was opened but not closed in document 'Family2'. All uncommitted changes to this document made by External Command will be discarded.'</p><p>Looking at the name of the view, I see 'RayTracer View', created by the CreateIsometric method your method createView3d.</p><p>Try adding a dimension to that view in the user interface and see what happens  :-)</p><p>As far as I know, adding dimensioning requires a 2D view, and the dimensioning must lie in the view plane.</p><p>I would therefore suggest that you search for or create a suitable such view, presumably an elevation view, and use that to create the dimensioning.</p><p>Some samples are available on the net, e.g. by searching for <a href=\"http://lmgtfy.com/?q=revit+api+NewDimension\">Revit API NewDimension</a>.</p><p><strong>Response</strong> I appreciate your attention and the time that you spent on the issue that Mohammad reported.\nAlthough I have never contacted you but I have read every single post of your blog.\nI owe you a lot.\nLet me know when you come over College Station, Texas to take you out to a restaurant :-)</p><p>Since you have spent quite a bit of time reading and trying to understand our code you might be curious to have an overview of the application. I am the main developer of an application in Revit that reads ArcGIS shape files and automatically creates a BIM model that contains GIS tabular information in the form of Revit parameters. Developing this application is only possible in Revit 2014 in which the API library includes constructors for SiteSubRegion and BuildingPadType.\nThis application is part of a research project in which the user interface also conducts queries in Revit to search, find and visualize building masses based on their parameter values. The UI also automates the creation of facades on the faces of a mass. The project is at its final steps.</p><p>My colleague, Mohammad, was working to connect the parameters to control the geometry of the mass. Since Mohammad and I were working on the same class \"DataToBuilding.cs\" we made some mistakes. The \"ray tracer\" view was created on the main project document to find the elevation of the building (which is not usually available in GIS). In this view rays will be shot vertically from the corners of the building footprint; the closet distances will be measured, and the average distances will be calculated to find the elevation of the building on the topography. Then we will create a new mass family and locate it on the topography. Here is where we used the address of the template family using imperial folder. We will create the new \"Conceptual Mass\" families in Revit API and that is where the issues are raised.</p><p>It is easy to create a new family document and create new extrusions using Revit API library. The corners of building footprints that are retrieved from GIS data are set according to the North American datum and the numbers might be big double values. As a result when you create a new extrusion in a mass family that is generated with API, the extrusion is very likely be placed far from the default visible range of the default view of a family. You can nonetheless load these families in the project and see their preview on the project browser when you want to place an instance of these families! Creating new dimensions also has the same view issue. A family document that is created by API does not have active view and manipulating the view properties to expand the range of visibility seems to be impossible maybe because there is not any view at all. I could solve the problem of family visibility by translating the building footprint to the canter of the family datum, creating the extrusion, saving the family, loading the family into the project file and finally translating the family back in its original location. This strategy worked to solve the problem of viewing the geometry of the family; however, it cannot be applied to take care of the dimension issue. Like many other geometric elements, dimensions in Revit are also view-dependent.</p><p>I can summarize our problem in this way, \"how could we create a 2D elevation view in a family that was generated by Revit API?\"</p><p>Thanks again for your attention. I would be happy to provide more detailed explanation of the application for your blog when the development is completed.</p><p>PS: In the previous model you can activate the visibility of masses to see the buildings.\nOur results will look like this image showing part of the Texas A&amp;M main campus:</p><center>\n<img alt=\"Texas A&amp;M campus\" src=\"img/datatobim_texas_a_m_campus.png\" width=\"390\"/>\n</center><p>The clipper library was used to perform polygon Boolean operations.\nWe also worked with a couple of other external libraries but when simplifying the application to send it to you we forgot to remove the clipper library.</p><p><u>Later:</u>\nTo address the problem at hand, I now found The Building Coder discussion on <a href=\"http://thebuildingcoder.typepad.com/blog/2011/07/section-view-creation.html\">section view creation</a>.</p><p>The Revit 2014 API doc.Create.NewViewSection method is now replaced by a static member of ViewSection class.\nI guess viewSection is what we need to use.\nIs that true?</p><p><u>Later still:</u>\nThe problem is solved.\nA new family document has a list of views that can be retrieved using a FilteredElementCollector and filtered to find views of type elevation, ViewType.Elevation.\nWe even did not need to generate any new views.</p><p><strong>Answer:</strong> I am very glad to hear that you solved it.</p><p>The approach searching for an existing elevation view and adding the dimensioning to that sounds perfect, as long as you do not care specifically which view it is added to.</p><p>Yes, you would use the static ViewSection.CreateSection method nowadays instead of NewViewSection.\nHere are some samples of using that:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/05/change-section-view-type-and-hide-cut-line.html\">Change Section View Type and Hide Cut Line</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/create-section-view-parallel-to-wall.html\">Create Section View Parallel to Wall</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/08/set-view-section-box-to-match-scope-box.html\">Set View Section Box to Match Scope Box</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/08/language-independent-view-type-id-retrieval.html\">Language Independent Section View Type Id Retrieval</a></li>\n</ul><p>I later put together dedicated topic lists on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.45\">creating dimensioning</a> and\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.38\">creating and setting up section views</a>.</p><p><strong>Response:</strong> Here is the updated and somewhat polished Visual Studio solution.</p><p>Unfortunately, I cannot release more from the on-going research that is not published yet.</p><p>I added the text files (data from GIS) to the resources of the VS project so that people do not get into the trouble of setting the folder names.</p><p>I also would like to add something about the method we used to create the TopographicSurface.\nThe static method to create an instance of TopographicSurface class asks for a list of XYZ points to create a mesh representing the topography in Revit. Unlike Revit, ArcGIS represents topography with contour curves. The contours in GIS can intersect with each other or be drawn on the top of each other, meaning that we may get points with identical X and Y values. The create method in TopographicSurface class will throw and exception when the list of points includes points with identical X and Y values. I followed two solutions to remove identical points: the geometric solution and the non-geometric solution.</p><p>In the geometric solution I recursively created rectangular subareas and in each subareas checked each pair of points to check if they have identical x and y values. This solution took days to implement and took hours to work on small topographic surface.\nI decided to use the non-geometric solution taking advantage of the internal structure of a dictionary.\nIn my dictionary each key-value pair includes a key that is uniquely defined based on the X and Y of each XYZ point and the point itself as the value. When adding new key-values to the dictionary, if the keys are the same, meaning that the points are on the top of each other, the dictionary will throw an exception. To create an appropriate key I converted the X and Y values of each point to strings and concatenated the string values to create one unique string.\nThis method worked elegantly – fast and accurate.</p><p><strong>Answer:</strong> I compiled and tested the original code on Revit 2014, publishing it in the\n\n<a href=\"https://github.com/jeremytammik/DataToBimCountoursAndBuildings\">\nDataToBimCountoursAndBuildings GitHub repository</a> as\n\n<a href=\"https://github.com/jeremytammik/DataToBimCountoursAndBuildings/releases/tag/2014.0.0.0\">\nrelease 2014.0.0.0</a>.</p><p>I migrated it to Revit 2015 and created\n\n<a href=\"https://github.com/jeremytammik/DataToBimCountoursAndBuildings/releases/tag/2015.0.0.0\">\nrelease 2015.0.0.0</a> as\n\na snapshot of that.</p><p>Finally, I cleaned it up a bit further, mainly by encapsulating all transactions in 'using' statements, because\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/using-using-automagically-disposes-and-rolls-back.html\">\nusing using automagically disposes and rolls back</a>,\n\nto create the current\n\n<a href=\"https://github.com/jeremytammik/DataToBimCountoursAndBuildings/releases/tag/2015.0.0.1\">\nrelease 2015.0.0.1</a>.</p><p>Don't forget to turn on visibility for Mass and Topography in the View &gt; Visibility/Graphics overrides when testing.</p><p>Many thanks to Saied, Mohammad and Chengde for all their work and research on this!</p>"
  }
]