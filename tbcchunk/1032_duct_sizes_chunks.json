[
  {
    "original_filename": "1032_duct_sizes",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1032_duct_sizes",
    "header_text": "Programmatic Access to Duct Sizes",
    "local_header_href": "#programmatic-access-to-duct-sizes",
    "chunk_text": "<h3>Programmatic Access to Duct Sizes</h3><p>Here is a nice little MEP related blog post on accessing duct sizes through the API to round off the week.</p><p>It was provided by our MEP expert Martin Schmid, who says:</p><blockquote>\n<p>I recently heard from a couple of developers that they had difficulties accessing the Duct Size settings in Revit.</p>\n<p>In the user interface, you can see them by selecting Manage &gt; MEP Settings &gt; Mechanical Settings &gt; Duct Settings &gt; Round/Oval/Rectangular.</p>\n<p>I threw together a macro to check for myself... maybe this would be helpful to publish so the results turn up in web searches...</p>\n</blockquote><p>I think this is a great idea and completely agree, so I implemented an external command ListDuctSizes calling Martin's method of the same name to share with you:</p><pre class=\"code\">\n  <span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;summary&gt;</span>\n  <span class=\"gray\">///</span><span class=\"green\"> List all duct sizes, thus proving that the duct </span>\n  <span class=\"gray\">///</span><span class=\"green\"> size settings available in the Revit UI through </span>\n  <span class=\"gray\">///</span><span class=\"green\"> Manage &gt; MEP Settings &gt; Mechanical Settings &gt; </span>\n  <span class=\"gray\">///</span><span class=\"green\"> Duct Settings &gt; Round/Oval/Rectangular are </span>\n  <span class=\"gray\">///</span><span class=\"green\"> indeed available via the API.</span>\n  <span class=\"gray\">///</span><span class=\"green\"> </span><span class=\"gray\">&lt;/summary&gt;</span>\n  <span class=\"blue\">void</span> ListDuctSizes( <span class=\"teal\">Document</span> doc )\n  {\n    <span class=\"teal\">DuctSizeSettings</span> settings\n      = <span class=\"teal\">DuctSizeSettings</span>.GetDuctSizeSettings( doc );\n \n    <span class=\"blue\">foreach</span>( <span class=\"teal\">KeyValuePair</span>&lt;<span class=\"teal\">DuctShape</span>, <span class=\"teal\">DuctSizes</span>&gt; pair\n      <span class=\"blue\">in</span> settings )\n    {\n      <span class=\"teal\">Debug</span>.Print( pair.Key.ToString() );\n \n      <span class=\"blue\">foreach</span>( <span class=\"teal\">MEPSize</span> size <span class=\"blue\">in</span> pair.Value )\n      {\n        <span class=\"blue\">string</span> value = <span class=\"teal\">FormatUtils</span>.Format( doc,\n          <span class=\"teal\">UnitType</span>.UT_HVAC_DuctSize,\n          size.NominalDiameter );\n \n        <span class=\"teal\">Debug</span>.Print(\n          <span class=\"maroon\">\"  {0}: used in size lists/sizing: {1}/{2}\"</span>,\n          value,\n          size.UsedInSizeLists.ToString(),\n          size.UsedInSizing.ToString() );\n      }\n    }\n  }\n</pre><p>Here is some of the output that it generates in the Visual Studio debug output window:</p><pre>\nRound\n  3\": used in size lists/sizing: True/True\n  4\": used in size lists/sizing: True/True\n  4\": used in size lists/sizing: True/True\n  ...\n  88\": used in size lists/sizing: True/True\n  90\": used in size lists/sizing: True/True\nRectangular\n  3\": used in size lists/sizing: True/True\n  4\": used in size lists/sizing: True/True\n  4\": used in size lists/sizing: True/True\n  ...\n  94\": used in size lists/sizing: True/True\n  96\": used in size lists/sizing: True/True\nOval\n  3\": used in size lists/sizing: True/True\n  4\": used in size lists/sizing: True/True\n  5\": used in size lists/sizing: True/True\n  ...\n  143\": used in size lists/sizing: True/True\n  144\": used in size lists/sizing: True/True\n</pre><p>For the sake of completeness, here is\n\n<a href=\"zip/ListDuctSizes.zip\">ListDuctSizes.zip</a> containing\n\nthe full source code, Visual Studio solution and add-in manifest for this simple command.</p><p>Many thanks to Martin for sharing this, and a happy weekend to all!</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "1032_duct_sizes",
    "header_text": "",
    "local_header_href": "#",
    "chunk_text": "<h4></h4><a href=\"\">\n</a>"
  }
]