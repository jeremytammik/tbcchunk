[
  {
    "original_filename": "0475_place_furniture",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0475_place_furniture",
    "header_text": "Place Furniture Instance",
    "local_header_href": "#place-furniture-instance",
    "chunk_text": "<h3>Place Furniture Instance</h3><p>The discussion on placing family instances and proper usage of the various overloads of the NewFamilyInstance method continues.\nAfter looking at the use of\n\n<!-- 402_place_family_instance.htm -->\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/06/place-family-instance.html\">\nPromptForFamilyInstancePlacement</a>, placing\n\n<!-- 450_place_detail_inst.htm -->\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/10/place-detail-instance.html\">\ndetail instances in 2D</a>, and\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/11/place-detail-instance.html\">\nsite components on a topo surface</a>,\n\nwe now turn to the everyday task of placing a furniture family instance, e.g. a chair into a room.\n\n<p>This\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/inserting-a-beam.html?cid=6a00e553e168978833013488b40382970c#comment-6a00e553e168978833013488b40382970c\">\nfurniture insertion question</a> was\n\nraised by Kristoffer Kvello of\n\n<a href=\"http://www.selvaag.no/Sider/default.aspx\">\nSelvaag</a> in Norway.\nHe also asks about the reference direction, i.e. the rotation of the family instance, and ends up providing the answer for himself:\n\n<p><strong>Question:</strong> I'm struggling with inserting a furniture component in my Revit 2011 model.\n\n<p>What I want to do is to insert a piece of furniture (a bed) onto the first floor (i.e., the first with elevation greater than zero).\nThe Revit 2011 API Developer Guide.pdf says on page 134 that \"Some FamilyInstance objects do not have host elements, such as tables and other furniture\".\nHowever, an example of \"Insert(ing) a new instance of a family into the document\" in the Revit 2011 API help doc uses this call:\n\n<pre class=\"code\">\n  <span class=\"teal\">FamilyInstance</span> instance\n    = doc.Create.NewFamilyInstance(\n      location, symbol, direction, floor,\n      <span class=\"teal\">StructuralType</span>.NonStructural );\n</pre>\n<p>This seems to be exactly what I want (the furniture in the example is even a \"bedbox\"), so I tried that.\nI have ensured that both the location (including the Z-coordinate) and the floor are correct.\nBut the bed is nevertheless located on the zeroeth floor.\nIn the Property dialogue I see that the bed has been assigned a host, which is a floor, but not a level.\nConfusingly, when I inspect the bed using the Snoop tool, the host property as shown there is null.\nIf I set a break point after the bed has been created and check its host property in the Immediate Window, it is also null.\n\n<p>When I place the bed manually, I see that it has both a host (although the Snoop tool still says it hasn't) and also a level.\nThe manually placed bed is on the correct floor, so my next thought was that I should use an overload that includes the Level argument.\nIn the guide-to-placing-family-instances-with-the-api.doc document I found an overload appropriate for furniture with this comment: \"If it is to be hosted on a wall, floor or ceiling and associated to a reference level\" which sounded good, so I tried:\n\n<pre class=\"code\">\n  <span class=\"teal\">FamilyInstance</span> revitBed =\n    doc.Create.NewFamilyInstance(\n      location,\n      bedFamilySymbol,\n      floorBedIsOn,\n      levelBedIsOn,\n      <span class=\"teal\">StructuralType</span>.NonStructural );\n</pre>\n<p>Now the bed is located on the correct floor; the property dialogue says its host is a floor; and it also has a Level (which is the correct level), just as when I insert the bed manually.\n\n<p>However, this overload doesn't include the reference direction argument, and I have so far not succeeded in finding a way of rotating the bed after it has been created.\n\n<p>Clearly there are many more things to try out (yet more overloads, using a Rotate method post-creation, etc.) but I suspect that there might be something not quite right here, and that the first overload I attempted \"should have worked\".\nCould you throw some light upon this?\nHave I misunderstood something?\n\n<p><strong>Answer:</strong> Yes, I found a solution to my furniture problem.\n\n<p>I solved the problem by using the NewFamilyInstance overload that specifies both a host and a level:\n\n<ul>\n<li>XYZ\n<li>FamilySymbol\n<li>Host Element\n<li>Level\n<li>StructuralType\n</li></li></li></li></li></ul>\n<p>I then rotate the furniture with the Document.Rotate method after it is created.\nThis works flawlessly, and this way, the property dialogue of the bed displays the same information when I put in the bed using the API as when I do it manually (i.e., both a host and a level) and the bed has the correct orientation.\n\n<p>I tried the overload with Level but no Host, and that seemed to work too, but the property dialogue in that case does not list a host (naturally), whereas it does when I position the bed manually.\nSo I think that the overload with both host and level is the one to use.\n\n<p>Regarding the Z-coordinate: I suspected that it possibly should be zero and I tried that as well with the first overload I thought should be correct (XYZ, FamilySymbol, XYZ (direction), Element (host), StructuralType) but I saw no difference in behaviour: the bed still ended up on the zeroeth floor, not the first.\n\n<p>Finally, I tried to set the offset parameter as you suggested (with location.Z = 0) just to see the effect, but with little luck: the bed seems to be positioned right at the top of the floor it's on and in the UI I cannot find the \"Offset\" parameter, neither on the instance nor the type. I do find it with the Snoop tool however, but the value is zero despite me setting it to 6.5.\n\n<!--\n\n<p>I presented some tools that can be used to explore the different NewFamilyInstance overloads in the discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/11/place-detail-instance.html\">\nplacing a site component</a>.\n\n<p>Also, I have the following theory, which I would like you to confirm:\n\nThe Z coordinate that you specify on the insertion point when calling NewFamilyInstance is ignored, and this is by design. You should specify zero there, even if you want the family instance to have a non-zero height later. The non-zero height is achieved by setting a parameter, maybe the built-in parameter INSTANCE_FREE_HOST_OFFSET_PARAM, which is displayed and editable in the user interface as 'Offset'.\n\nRemember, Revit manages a parametrically driven model, so the height is defined by a parameter as well. The insertion point is irrelevant; the relationship to the host is the important driving factor.\n\nMy favourite NewFamilyInstance overload candidate to choose for your case would probably be one of\n\nFamilyInstance NewFamilyInstance( XYZ location, FamilySymbol, Level, StructuralType );\n\nFamilyInstance NewFamilyInstance( XYZ location, FamilySymbol, Element host, Level, StructuralType );\n\nBut please test all of them and let us know what solves the issue.\n\nThe issue with the reference direction may need some additional functionality added to the API, or you may be able to solve this after inserting the family instance.\n\nPlease keep us up to date with your progress.\n\nThis looks like a very common problem to me, I have heard others struggling with similar issues, and it definitely looks like a candidate for another blog post. So please document you solution well, keep it general, and be ready to edit a guest blog post, if you don't mind sharing your results. Thank you!\n\n-->\n<p>Many thanks to Kristoffer for sharing these valuable results!\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  }
]