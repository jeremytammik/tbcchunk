[
  {
    "original_filename": "1977_cultureinfochanger",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- ricaun CultureInfoChanger with IDisposable \n  Unable to size MEP connectors with Revit 2021\n  https://forums.autodesk.com/t5/revit-api-forum/unable-to-size-mep-connectors-with-revit-2021/m-p/9609260\n  https://autodesk.slack.com/archives/C0SR6NAP8/p1671830340476069\n\n- Bulk reloading families in a template from a slightly different location\n  https://forums.autodesk.com/t5/revit-api-forum/bulk-reloading-families-in-a-template-from-a-slightly-different/td-p/11623721\n\n- RPS + APS\n  https://www.linkedin.com/posts/chuongmep_bim-python-ironpython3-activity-7009453448463077377-cQtY?utm_source=share&utm_medium=member_desktop\n  Chuong Ho\n  Ironpython 3.4 coming\n  I'm very excited because last week the Ironpython3 team released 3.4.0. And today I also quickly brought them to CadPythonShell and RevitPythonShell, which is a great expectation of Python-friendly engineers, and Python 3.4 is a big upgrade for engineers to get the most out of these features. new feature that python brings.\n  CadPythonShell : https://lnkd.in/gj6Bxqiq\n  RevitPythonShell: https://lnkd.in/g5-r5PWU\n\n- journal files au class\n  Journal - step by step\n  https://forums.autodesk.com/t5/revit-api-forum/journal-step-by-step/m-p/11625744\n  [Q] is any idea to run journal file step by step to debug where is e problem to run all journal file? \n  [A] Nope. It is all or nothing. For more info, please check The Building Coder articles: https://thebuildingcoder.typepad.com/blog/journal/\n  There is this Autodesk University class about Journal Files.\n  Revit Journal Files: They Aren’t Just for Autodesk Support:\n  https://www.autodesk.com/autodesk-university/class/Revit-Journal-Files-They-Arent-Just-Autodesk-Support-2018#video\n\ntwitter:\n\nHappy New Year 2023! Sizing MEP connectors, bulk reloading families and RevitPythonShell with IronPython3 in the #RevitAPI @AutodeskAPS @AutodeskRevit #bim https://autode.sk/sizeconnector\n\nHappy New Year 2023!\nTopics to begin \n&ndash; Copy as HTML 2022\n&ndash; Size MEP connector with <code>CultureInfoChanger</code>\n&ndash; Journal files AU class\n&ndash; Bulk reload families with <code>IFamilyLoadOptions</code>\n&ndash; IronPython3, APS and RPS...\n\nlinkedin:\n\nHappy New Year 2023!\n\nSizing MEP connectors, bulk reloading families and RevitPythonShell with IronPython3 in the #RevitAPI\n\nhttps://autode.sk/sizeconnector\n\n- Copy as HTML 2022\n- Size MEP connector with <code>CultureInfoChanger</code>\n- Journal files AU class\n- Bulk reload families with <code>IFamilyLoadOptions</code>\n- IronPython3, APS and RPS...\n\n#bim #DynamoBim #AutodeskAPS #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\" height=\"\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n<pre class=\"code\">\n</pre>\n\n-->"
  },
  {
    "original_filename": "1977_cultureinfochanger",
    "header_text": "CultureInfoChanger and IronPython3",
    "local_header_href": "#cultureinfochanger-and-ironpython3",
    "chunk_text": "### CultureInfoChanger and IronPython3\n\nHappy New Year 2023!\n\nTopics to begin the new year:\n\n- [Copy as HTML 2022](#2)\n- [Size MEP connector with `CultureInfoChanger`](#3)\n- [Journal files AU class](#4)\n- [Bulk reload families with `IFamilyLoadOptions`](#5)\n- [IronPython3, APS and RPS](#6)\n- [IronPython3 in pyRevit](#6.1)"
  },
  {
    "original_filename": "1977_cultureinfochanger",
    "header_text": "Copy as HTML 2022",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Copy as HTML 2022\n\nAfter [moving to the new Mac and switching to Visual Studio 2022](https://thebuildingcoder.typepad.com/blog/2022/12/exploring-arm-chatgpt-nairobi-and-the-tsp.html#11),\nI also needed to update my C# source code colouriser.\n\nThe last time was the\n[Copy as HTML update](https://thebuildingcoder.typepad.com/blog/2021/11/revit-20221-sdk-revitlookup-build-and-install.html#7) in November 2021 using the Productivity Power Tools 2017/2019.\n\nThis time around, I switched to a new extension, Copy as HTML 2022 by Tim Mathias:\n\n> Copy selected code in HTML format while preserving syntax highlighting, indentation, background colour and font.\nOptions: Max Height, Title Block, Alternating Lines, Line Numbers, Wrap Lines, Un-indent, Background Colour, Class Names.\nConverts RTF, outputted by VS, into HTML.\n\n<center>\n<img src=\"img/copyashtml2022.png\" alt=\"Copy As HTML 2022\" title=\"Copy As HTML 2022\" width=\"300\"/>  <!-- 586 × 1206 pixels -->\n</center>\n\nYou can see the results of using the new code colouriser immediately below to format the `CultureInfoChanger` sample.\n\nI also updated [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples) for VS 2022, in\n[release 2023.1.153.5](https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2023.1.153.5)."
  },
  {
    "original_filename": "1977_cultureinfochanger",
    "header_text": "Size MEP Connector with CultureInfoChanger",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Size MEP Connector with CultureInfoChanger\n\nLuiz Henrique [@ricaun](https://github.com/ricaun) Cassettari implemented a nice workaround to solve the problem raised in\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\nbeing [unable to size MEP connectors with Revit 2021](https://forums.autodesk.com/t5/revit-api-forum/unable-to-size-mep-connectors-with-revit-2021/m-p/9609260).\n\n<i>Ekaterina.kudelina.beam</i> noticed that switching the `CurrentCulture` from `de-DE` to `en-EN` makes it possible to change connector size in a project. <i>Ricaun</i> made use of this observation to implement a `CultureInfoChanger` derived from `IDisposable` that can be used to wrap the setting, temporarily changing `CultureInfo` to English and resetting it back to the original when disposed:\n\n<!--\n\n/// <summary>\n/// CultureInfoChanger\n/// </summary>\npublic class CultureInfoChanger : IDisposable\n{\n    private readonly CultureInfo CultureInfo;\n\n    /// <summary>\n    /// CultureInfoChanger\n    /// </summary>\n    /// <param name=\"name\"></param>\n    public CultureInfoChanger(string name = \"en\")\n    {\n        CultureInfo = CultureInfo.CurrentCulture;\n        CultureInfo.CurrentCulture = new CultureInfo(name);\n    }\n    /// <summary>\n    /// Dispose\n    /// </summary>\n    public void Dispose()\n    {\n        CultureInfo.CurrentCulture = CultureInfo;\n    }\n}\n\n-->\n\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Cascadia Mono', Consolas, 'Courier New', Courier, Monospace; font-size: 10pt\">\n<div style=\"background-color: #ffffff; color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px;\"><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;summary&gt;</span><br>\n<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> CultureInfoChanger</span><br>\n<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;/summary&gt;</span><br>\n<span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">class</span> <span style=\"color:#2b91af\">CultureInfoChanger</span> : IDisposable<br>\n{<br>\n&#160; <span style=\"color:#0000ff\">private</span> <span style=\"color:#0000ff\">readonly</span> CultureInfo CultureInfo;<br>\n<br>\n&#160; <span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;summary&gt;</span><br>\n&#160; <span style=\"color:#808080\">///</span><span style=\"color:#008000\"> CultureInfoChanger</span><br>\n&#160; <span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;/summary&gt;</span><br>\n&#160; <span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;param</span> <span style=\"color:#808080\">name=&quot;</span>name<span style=\"color:#808080\">&quot;&gt;&lt;/param&gt;</span><br>\n&#160; <span style=\"color:#0000ff\">public</span> <span style=\"color:#2b91af\">CultureInfoChanger</span>(<span style=\"color:#0000ff\">string</span> name = <span style=\"color:#a31515\">&quot;en&quot;</span>)<br>\n&#160; {<br>\n&#160;&#160;&#160; CultureInfo = CultureInfo.CurrentCulture;<br>\n&#160;&#160;&#160; CultureInfo.CurrentCulture = <span style=\"color:#0000ff\">new</span> CultureInfo(name);<br>\n&#160; }<br>\n&#160; <span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;summary&gt;</span><br>\n&#160; <span style=\"color:#808080\">///</span><span style=\"color:#008000\"> Dispose</span><br>\n&#160; <span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;/summary&gt;</span><br>\n&#160; <span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">void</span> Dispose()<br>\n&#160; {<br>\n&#160;&#160;&#160; CultureInfo.CurrentCulture = CultureInfo;<br>\n&#160; }<br>\n}</div>\n</div>\n\nThe code to use it could be something like this.\n\n<!--\n\n<pre class=\"code\">\nusing (new CultureInfoChanger())\n{\n    connector.Radius = 0.5;\n}\n</pre>\n\n-->\n\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Cascadia Mono', Consolas, 'Courier New', Courier, Monospace; font-size: 10pt\">\n<div style=\"background-color: #ffffff; color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px;\"><span style=\"color:#0000ff\">using</span> (<span style=\"color:#0000ff\">new</span> CultureInfoChanger())<br>\n{<br>\n&#160; connector.Radius = 0.5;<br>\n}</div>\n</div>\n\nAn extension should be perfect in this case, some `SetRadius`, `SetWidth`, and `SetHeight`.\n\n<!--\n\n<pre class=\"code\">\n  connector.SetRadius(0.5);\n  connector.SetHeight(0.5);\n  connector.SetWidth(0.5);\n\n/// <summary>\n/// Set the radius of the connector. \n/// </summary>\n/// <param name=\"connector\"></param>\n/// <param name=\"radius\"></param>\npublic static void SetRadius(this Connector connector, double radius)\n{\n    using (new CultureInfoChanger())\n    {\n        connector.Radius = radius;\n    }\n}\n</pre>\n\n-->\n\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Cascadia Mono', Consolas, 'Courier New', Courier, Monospace; font-size: 10pt\">\n<div style=\"background-color: #ffffff; color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px;\">\n&#160; connector.SetRadius(0.5);<br>\n&#160; connector.SetHeight(0.5);<br>\n&#160; connector.SetWidth(0.5);<br>\n<br>\n<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;summary&gt;</span><br>\n<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> Set the radius of the connector. </span><br>\n<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;/summary&gt;</span><br>\n<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;param</span> <span style=\"color:#808080\">name=&quot;</span>connector<span style=\"color:#808080\">&quot;&gt;&lt;/param&gt;</span><br>\n<span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;param</span> <span style=\"color:#808080\">name=&quot;</span>radius<span style=\"color:#808080\">&quot;&gt;&lt;/param&gt;</span><br>\n<span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">static</span> <span style=\"color:#0000ff\">void</span> SetRadius(<span style=\"color:#0000ff\">this</span> Connector connector, <span style=\"color:#0000ff\">double</span> radius)<br>\n{<br>\n&#160; <span style=\"color:#0000ff\">using</span> (<span style=\"color:#0000ff\">new</span> CultureInfoChanger())<br>\n&#160; {<br>\n&#160;&#160;&#160; connector.Radius = radius;<br>\n&#160; }<br>\n}</div>\n</div>\n\nThe source code for the full extension with a command sample is provided in\n[Ricaun's ConnectorSetValueExtension.cs gist](https://gist.github.com/ricaun/693470e914295786fa62a2be6c67e662):\n\n> Connector Set Value Extension for Revit to 'fix' the ArgumentOutOfRangeException when setting Radius, Width, and Height.\n\nMany thanks to Luiz Henrique for this nice solution!"
  },
  {
    "original_filename": "1977_cultureinfochanger",
    "header_text": "Journal Files AU Class",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> Journal Files AU Class\n\nLuiz Henrique also pointed out an interesting AU class on journal files in the thread\non [journal step by step](https://forums.autodesk.com/t5/revit-api-forum/journal-step-by-step/m-p/11625744):\n\n**Question:** Any idea how to run a journal file step by step to debug a problem running it?\n\n**Answer:** Nope. It is all or nothing.\nFor more info, please check The Building Coder articles in the [Journal category](https://thebuildingcoder.typepad.com/blog/journal).\n\nYou could look at the Autodesk University class \non [Revit Journal files: they aren’t just for Autodesk support](https://www.autodesk.com/autodesk-university/class/Revit-Journal-Files-They-Arent-Just-Autodesk-Support-2018#video)."
  },
  {
    "original_filename": "1977_cultureinfochanger",
    "header_text": "Bulk Reload Families with IFamilyLoadOptions",
    "local_header_href": "#5",
    "chunk_text": "####<a name=\"5\"></a> Bulk Reload Families with IFamilyLoadOptions\n\nBefore Christmas, I had a nice and fruitful conversation\nwith [@Eatrevitpoopcad](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/10364294)\non [bulk reloading families in a template from a slightly different location](https://forums.autodesk.com/t5/revit-api-forum/bulk-reloading-families-in-a-template-from-a-slightly-different/td-p/11623721),\nhelping to get started working on a macro to automate the execution of `LoadFamily` with an `IFamilyLoadOptions` handler and saving a large amount of manual labour."
  },
  {
    "original_filename": "1977_cultureinfochanger",
    "header_text": "IronPython3, APS and RPS",
    "local_header_href": "#6",
    "chunk_text": "####<a name=\"6\"></a> IronPython3, APS and RPS\n\nChuong Ho shared some exciting news on [IronPython3](https://ironpython.net), APS and RPS.\n\nRPS is the beloved [RevitPythonShell](ttps://github.com/architecture-building-systems/revitpythonshell) that\nadds an IronPython interpreter to Revit and lets you to write plugins for Revit in Python.\nEven better, it provides you with an interactive shell that lets you see the results of your code as you type it.\nThis is great for exploring the Revit API while writing your Revit Addins, especially in combination with\nthe [RevitLookup database exploration tool](https://github.com/jeremytammik/RevitLookup).\n\nAPS is the [CADPythonShell](https://github.com/chuongmep/CadPythonShell), a fork of RevitPythonShell, bringing an IronPython interpreter to AutoCAD as well.\n\nChuong Ho [announced](https://www.linkedin.com/posts/chuongmep_bim-python-ironpython3-activity-7009453448463077377-cQtY?utm_source=share&utm_medium=member_desktop) the\nadvent of IronPython 3.4:\n\n> I'm very excited because last week the IronPython3 team released 3.4.0.\nToday, I also quickly brought them to CadPythonShell and RevitPythonShell, which is a great expectation of Python-friendly engineers. Python 3.4 is a big upgrade for engineers to get the most out of the new features that Python brings.\n\nThe RevitPythonShell enhancement was submitted, discussed and merged in\nthe [PR 136 &ndash; support IronPython3.4](https://github.com/architecture-building-systems/revitpythonshell/pull/136).\n\nMany thanks to Chuong Ho for implementing this!\n\n####<a name=\"6.1\"></a> IronPython3 in pyRevit\n\nEhsan Iran Nejad added in his [comment below](https://thebuildingcoder.typepad.com/blog/2023/01/cultureinfochanger-and-ironpython3.html#comment-6080745754):\n\n> We added [IronPython3 to pyRevit work-in-progress](https://discourse.pyrevitlabs.io/t/ironpython-3-4-0/1310) as well..."
  }
]