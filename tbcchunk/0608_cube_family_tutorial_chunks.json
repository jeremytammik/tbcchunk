[
  {
    "original_filename": "0608_cube_family_tutorial",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0608_cube_family_tutorial",
    "header_text": "Basic Parametric Cube Family Tutorial",
    "local_header_href": "#basic-parametric-cube-family-tutorial",
    "chunk_text": "<h3>Basic Parametric Cube Family Tutorial</h3><p>I recently discussed the programmatic \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/06/creating-and-inserting-an-extrusion-family.html\">\ncreation of an extrusion family</a>.\n\nNow I just noticed that there is a new little eight and a half minute video showing how to do something similar through the user interface, just as a basic introduction to setting up constraints and parameters in the family definition context.\n\n<p>In his wonderful \n\n<a href=\"http://buildz.blogspot.com\">\nbuildz blog</a>,\n\nZach Kron recently presented a quick 'back to basics' demonstration of\n\n<a href=\"http://buildz.blogspot.com/2011/06/back-to-basics-making-parametric-cube.html\">\nmaking a parametric cube</a>, \n\ni.e. how to hook up geometry to dimensional parameters.\nHe says: \"This is a basic exercise for folks new to Revit and Vasari. \nI was explaining this to someone the other day and decided to just encapsulate the mini lesson here\":</p>\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"300\" src=\"http://www.youtube.com/embed/X0aCd57_jmc\" width=\"480\"></iframe>\n<p>There is a lot of powerful stuff and important hints in this short demo, so it is well worth watching for almost anybody interested in working with families in any way whatsoever, whether manually or programmatically.\nHighly recommended!\n\n\n<a name=\"2\"></a>\n<h4>Changing the Family Document Category</h4>\n<p>Here is another issue that frequently arises with programmatic family creation: you cannot change the family document category through the API, although it is possible to do so from the user interface, because the Document.OwnerFamily.FamilyCategory property is read-only.\nHere is a typical case:\n\n<p><strong>Question:</strong> How can I change the family category from 'Generic Model' to 'Air Terminal'?</p>\n<p>My goal is create a new Air Terminal family based on 'Metric Generic Model face based.rft':</p>\n<center>\n<img alt=\"Changing the family document category\" src=\"img/change_family_category.png\"/>\n</center>\n<p><strong>Answer:</strong> This is a currently a known limitation, and we have an open wish list item for it.\n\n<p>There is a simple workaround that you can use, though: manually create your own custom template file in advance, and then make use of that in your calls from the API. \n</p></p></p></p></p>"
  },
  {
    "original_filename": "0608_cube_family_tutorial",
    "header_text": "Changing the Family Document Category",
    "local_header_href": "#changing-the-family-document-category",
    "chunk_text": "<h4>Changing the Family Document Category</h4><p>Here is another issue that frequently arises with programmatic family creation: you cannot change the family document category through the API, although it is possible to do so from the user interface, because the Document.OwnerFamily.FamilyCategory property is read-only.\nHere is a typical case:\n\n<p><strong>Question:</strong> How can I change the family category from 'Generic Model' to 'Air Terminal'?</p>\n<p>My goal is create a new Air Terminal family based on 'Metric Generic Model face based.rft':</p>\n<center>\n<img alt=\"Changing the family document category\" src=\"img/change_family_category.png\"/>\n</center>\n<p><strong>Answer:</strong> This is a currently a known limitation, and we have an open wish list item for it.\n\n<p>There is a simple workaround that you can use, though: manually create your own custom template file in advance, and then make use of that in your calls from the API. \n</p></p></p>"
  }
]