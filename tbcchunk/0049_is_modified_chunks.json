[
  {
    "original_filename": "0049_is_modified",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<style>\n.blue { color: blue; }\n.teal { color: teal; }\n.maroon { color: maroon; }\n.green { color: green; }\n</style>"
  },
  {
    "original_filename": "0049_is_modified",
    "header_text": "Document IsModified Property",
    "local_header_href": "#document-ismodified-property",
    "chunk_text": "<h3>Document IsModified Property</h3><p>Looking at the Document.IsModified property, one quickly notices that it is frequently set, even if no real modifications have been applied to a document. One reason for this is that every execution of an external command returning IExternalCommand.Result.Succeeded will cause this property to return True. To explore this in detail, we can use the following minimal command implementation:</p><pre class=\"code\">\n<span class=\"blue\">public</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span> Execute(\n  <span class=\"teal\">ExternalCommandData</span> commandData,\n  <span class=\"blue\">ref</span> <span class=\"blue\">string</span> message,\n  <span class=\"teal\">ElementSet</span> elements )\n{\n  <span class=\"teal\">Application</span> app = commandData.Application;\n  <span class=\"teal\">Document</span> doc = app.ActiveDocument;\n  <span class=\"teal\">Debug</span>.WriteLine( <span class=\"blue\">string</span>.Format(\n    <span class=\"maroon\">\"Document.IsModified {0}\"</span>, doc.IsModified ) );\n  <span class=\"blue\">return</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span>.Succeeded;\n}\n</pre><p>The result of running this command twice in a newly opened document is:</p><pre>\nDocument.IsModified False\nDocument.IsModified True\n</pre><p>According to the Revit API help, the Document.IsModified property reports whether the document has been modified since it was last saved.\nSince the command returned Succeeded, Revit assumes that the execution did modify it, and the result is as expected.\nIf you do not want this property to be modified, for instance by a simple external command displaying a Help &gt; About... dialogue which has no interaction at all with the Revit model, it should return Cancelled or Failed.\nTo test this, I modified my little test command as follows:</p><pre class=\"code\">\n<span class=\"blue\">public</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span> Execute(\n  <span class=\"teal\">ExternalCommandData</span> commandData,\n  <span class=\"blue\">ref</span> <span class=\"blue\">string</span> message,\n  <span class=\"teal\">ElementSet</span> elements )\n{\n  <span class=\"teal\">Application</span> app = commandData.Application;\n  <span class=\"teal\">Document</span> doc = app.ActiveDocument;\n  <span class=\"teal\">Debug</span>.WriteLine( <span class=\"blue\">string</span>.Format(\n    <span class=\"maroon\">\"Document.IsModified {0}\"</span>, doc.IsModified ) );\n \n  <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span> rc;\n  rc = <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span>.Failed;\n  <span class=\"blue\">return</span> rc;\n}\n</pre><p>The result of running the modified code twice in a newly opened document is:</p><pre>\nDocument.IsModified False\nDocument.IsModified False\n</pre><p>Many thanks to\n\n<a href=\"http://cadappdev.blogspot.com\">\nMatt Mason</a>\n\nof \n\n<a href=\"http://www.avatech.com\">\nAvatech Solutions</a>\n\nfor raising this issue!</p><p>Matt performed some additional analysis and suggests noting the following implications of the results above:</p><ul>\n<li>Returning Succeeded commits a transaction to the Revit model, even if that transaction is empty.</li>\n<li>If it is important to the add-in to not \"modify\" the model inadvertently, you need to keep track of whether you have made modifications, return Succeeded if you did, and Cancelled or Failed if you did not.</li>\n</ul><p>Most sample applications always return Succeeded. \nMatt also discovered that simply opening a transaction will immediately set this flag.\nBecause \n\n<a href=\"http://download.autodesk.com/media/adn/RvtMgdDbg2009_0429_2008.zip\">\nRvtMgdDbg</a>\n\nimmediately opens a transaction, the flag is always set when debugging into its code.</p>"
  }
]