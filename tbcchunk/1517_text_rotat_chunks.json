[
  {
    "original_filename": "1517_text_rotat",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<!--\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\n- set text note rotation\n12550175 [Textnote - how to set rotation in Revit 2016]\nhttp://forums.autodesk.com/t5/revit-api-forum/textnote-how-to-set-rotation-in-revit-2016/m-p/6800468\n\n#RevitAPI @AutodeskRevit #aec #bim #dynamobim @AutodeskForge\n\nThe Forge DevCon developer conference has been happily united with Autodesk University, text note rotation is easy, and I continued my deep learning exploration for implementing a Revit API question answering system\n&ndash; Forge DevCon at AU\n&ndash; Setting <code>TextNote</code> rotation\n&ndash; TensorFlow and Keras\n&ndash; Updating restricted Python packages\n&ndash; Rules of machine learning...\n\n#AULondon, #UI, #innovation, #RevitAPI, @AutodeskRevit bit.ly/2j7Sxkb\n\n-->"
  },
  {
    "original_filename": "1517_text_rotat",
    "header_text": "TextNote Rotation, Forge DevCon, TensorFlow and Keras",
    "local_header_href": "#textnote-rotation-forge-devcon-tensorflow-and-keras",
    "chunk_text": "### TextNote Rotation, Forge DevCon, TensorFlow and Keras\n\nThe Forge DevCon developer conference has been happily united with Autodesk University, text note rotation is easy, and I continued my deep learning exploration for implementing a Revit API question answering system:\n\n- [Forge DevCon at AU](#2)\n- [Setting `TextNote` rotation](#3)\n- [TensorFlow and Keras](#4)\n- [Updating restricted Python packages](#5)\n- [Rules of machine learning](#6)\n\n\n####<a name=\"2\"></a>Forge DevCon at AU\n\nA match made in heaven:\nthe [Forge DevCon](https://forge.autodesk.com/DevCon) developer\nconference has been happily united\nwith [Autodesk University](http://au.autodesk.com/las-vegas)\n\nA lot of synergy is gained connecting the two.\n\n<center>\n<img src=\"img/forge_devcon_at_au.png\" alt=\"Forge DevCon at AU\" width=\"500\"/>\n</center>\n\nThe last DevCon in 2016 was held in San Francisco and was a great success.\n\nWe plan to make it bigger and better still this year, and moving it to Las Vegas for 2017 will help.\n\nIt will take place on November 13-14,\ni.e., [Monday and Tuesday of the Autodesk University week](http://adndevblog.typepad.com/cloud_and_mobile/2017/01/forge-devcon-change-of-date-and-venue.html).\n\nIn previous years, these were the days on which we hosted the DevDay and DevLab conference and open house support hackathon for application developers.\n\nThis is a good thing.\n\nSomewhat selfishly, it means less travel for those of us coming across from Europe.\n\nIt will also make AU a more compelling, developer-centric event.\n\nNow nobody has to choose between DevCon and DevDays + AU. Itâ€™s all together in one place.\n\n\n\n\n####<a name=\"3\"></a>Setting TextNote Rotation\n\nRotating a text note is very easy, both during creation and when modifying existing elements.\n\nOne little complication for existing add-ins is introduced by fact that the approach changed with\nthe [`TextNote` API overhaul in Revit 2016](http://thebuildingcoder.typepad.com/blog/2015/04/whats-new-in-the-revit-2016-api.html#4.02):\n\n**Question:** In Revit 2015, I used the method:\n\n<pre class=\"code\">\n  <span style=\"color:#2b91af;\">TextNote</span>&nbsp;text&nbsp;=&nbsp;doc.Create.NewTextNote(&nbsp;\n  &nbsp;&nbsp;view,&nbsp;origin,&nbsp;baseVec,&nbsp;upVec,&nbsp;lineWidth,\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">TextAlignFlags</span>.TEF_ALIGN_CENTER&nbsp;\n  &nbsp;&nbsp;|&nbsp;<span style=\"color:#2b91af;\">TextAlignFlags</span>.TEF_ALIGN_MIDDLE,\n  &nbsp;&nbsp;strText&nbsp;);\n</pre>\n\nfor creating a text note.\n \nAs this method has been replaced with `TextNote.Create`, I can create a text note using:\n\n<pre class=\"code\">\n  <span style=\"color:#2b91af;\">TextNote</span>&nbsp;text&nbsp;=&nbsp;<span style=\"color:#2b91af;\">TextNote</span>.Create(&nbsp;doc,&nbsp;\n  &nbsp;&nbsp;view.Id,&nbsp;&nbsp;origin,&nbsp;strText,&nbsp;texttypeID&nbsp;);\n</pre>\n\nBut how do I set its rotation when creating it?\n \nAlso, how do I change the rotation of existing text notes?\n\n**Answer:** To rotate the `TextNote` as it is placed, one of the overloads for `TextNote.Create` uses `TextNoteOptions` and its `Rotation` option:\n \n<pre class=\"code\">\n  <span style=\"color:#2b91af;\">TextNoteOptions</span>&nbsp;tno&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">TextNoteOptions</span>();\n  tno.Rotation&nbsp;=&nbsp;0.5&nbsp;*&nbsp;<span style=\"color:#2b91af;\">Math</span>.PI;&nbsp;<span style=\"color:green;\">//&nbsp;in&nbsp;Radians</span>\n  tno.TypeId&nbsp;=&nbsp;texttypeID;&nbsp;<span style=\"color:green;\">//&nbsp;need&nbsp;to&nbsp;include&nbsp;text&nbsp;type</span>\n   \n  <span style=\"color:#2b91af;\">TextNote</span>&nbsp;text&nbsp;=&nbsp;<span style=\"color:#2b91af;\">TextNote</span>.Create(&nbsp;doc,&nbsp;\n  &nbsp;&nbsp;view.Id,&nbsp;origin,&nbsp;strText,&nbsp;tno&nbsp;);\n</pre>\n\n**Response:** This is how I managed to create the rotated text aligned with existing curve based elements:\n \n<pre class=\"code\">\n  <span style=\"color:green;\">//&nbsp;get&nbsp;the&nbsp;curve&nbsp;of&nbsp;the&nbsp;element</span>\n  <span style=\"color:#2b91af;\">Curve</span>&nbsp;curve&nbsp;=&nbsp;(&nbsp;(<span style=\"color:#2b91af;\">LocationCurve</span>)&nbsp;elem.Location&nbsp;)\n  &nbsp;&nbsp;.Curve;\n   \n  <span style=\"color:green;\">//&nbsp;get&nbsp;start&nbsp;and&nbsp;end&nbsp;point&nbsp;of&nbsp;pipe</span>\n  <span style=\"color:#2b91af;\">XYZ</span>&nbsp;PipeEnd&nbsp;=&nbsp;curve.GetEndPoint(&nbsp;1&nbsp;);\n  <span style=\"color:#2b91af;\">XYZ</span>&nbsp;PipeStart&nbsp;=&nbsp;curve.GetEndPoint(&nbsp;0&nbsp;);\n   \n  <span style=\"color:green;\">//&nbsp;get&nbsp;vector&nbsp;representing&nbsp;the&nbsp;pipe</span>\n  <span style=\"color:#2b91af;\">XYZ</span>&nbsp;v&nbsp;=&nbsp;PipeEnd&nbsp;-&nbsp;PipeStart;\n   \n  <span style=\"color:blue;\">double</span>&nbsp;angle&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Math</span>.Atan2(&nbsp;v.Y,&nbsp;v.X&nbsp;);\n\n  <span style=\"color:blue;\">var</span>&nbsp;testOptions&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">TextNoteOptions</span>()\n  {\n  &nbsp;&nbsp;HorizontalAlignment&nbsp;=&nbsp;<span style=\"color:#2b91af;\">HorizontalTextAlignment</span>.Center,\n  &nbsp;&nbsp;Rotation&nbsp;=&nbsp;angle,\n  &nbsp;&nbsp;TypeId&nbsp;=&nbsp;texttypeID\n  };\n   \n  <span style=\"color:blue;\">var</span>&nbsp;text&nbsp;=&nbsp;<span style=\"color:#2b91af;\">TextNote</span>.Create(&nbsp;doc,&nbsp;view.Id,\n  &nbsp;&nbsp;origin,&nbsp;strText,&nbsp;testOptions&nbsp;);\n</pre>\n\n<center>\n<img src=\"img/rotate_text.png\" alt=\"Rotate text\" width=\"377\"/>\n</center>\n\n\n\n####<a name=\"4\"></a>TensorFlow and Keras\n\nContinuing my superficial browsing of various open source possibilities on which to base a question answering system for the Revit API add-in programming, I now bumped\ninto [TensorFlow](https://en.wikipedia.org/wiki/TensorFlow)\n([web site](https://www.tensorflow.org/),\n[GitHub repo](https://github.com/tensorflow/tensorflow)).\n\nIt converts the learning matter to vectors and computes similarities, learning best matches by assigning weight using various algorithms.\n\nHere are a bunch of interesting TensorFlow tutorial and other related texts that I would all like to work through in greater depth anon:\n\n- [MNIST tutorial for beginners](https://www.tensorflow.org/tutorials/mnist/beginners/index) and [advanced](https://www.tensorflow.org/tutorials/mnist/pros/index)\n- [Vector Representations of Words](https://www.tensorflow.org/tutorials/word2vec/)\n- [Recurrent Neural Networks](https://www.tensorflow.org/tutorials/recurrent/)\n- [Sequence-to-Sequence Models](https://www.tensorflow.org/tutorials/seq2seq/)\n- [TensorKart: self-driving MarioKart with TensorFlow](http://kevinhughes.ca/blog/tensor-kart)\n\nThey also led to further papers and the [Keras](https://keras.io) system built on top of it:\n\n- [SyntaxNet](https://www.tensorflow.org/tutorials/syntaxnet/) is a neural-network Natural Language Processing framework for TensorFlow.\n- [Question Answering Using Deep Learning](https://cs224d.stanford.edu/reports/StrohMathur.pdf) &ndash; neural network variants are becoming the dominant architecture for many NLP tasks. This project applies several deep learning approaches to question answering, with a focus on the bAbI dataset, including TensorFlow.\n- [Keras: Deep Learning library for Theano and TensorFlow](https://keras.io/) &ndash; paper on [Deep Language Modelling for Question Answering using Keras](http://benjaminbolte.com/blog/2016/keras-language-modeling.html) with [GitHub repo](https://github.com/fchollet/keras/blob/master/examples/babi_rnn.py)\n- [Question answering on the Facebook bAbi dataset using recurrent neural networks and 175 lines of Python + Keras](http://smerity.com/articles/2015/keras_qa.html)\n- [The Facebook bAbI tasks](https://research.fb.com/downloads/babi/)\n\nI decided to install these packages, which led to an interesting problem that took a while to sort out and seems worthwhile documenting for future reference.\n\n\n####<a name=\"5\"></a>Updating Restricted Python Packages\n\nTensorFlow and Keras are Python based.\n\nInstallation is very straightforward and easy.\n\nTensorFlow requires several other base packages: `six`, `funcsigs`, `pbr`, `mock`, `numpy`, `protobuf`.\n\nUnfortunately, on my system, some of these were out of date and the system refused to allow me to update them.\n\nFor instance, calling `$ pip install tensorflow` led to a conflict due to the existence of prior versions of `six` and `numpy`.\n\nAfter some research, I determined that I could resolve the issues by simply deleting the associated files.\n\nUnfortunately, this is not permitted by the system, as described in the question\non [why `chown` reports `operation not permitted` on OS X](http://superuser.com/questions/279235/why-does-chown-report-operation-not-permitted-on-os-x).\n\nThe short description of the solution for this is given there:\n\n> System Integrity Protection (rootless) ... boot into Recovery Mode (Cmd-R), run `csrutil disable`, then restart; to reenable, use `csrutil enable`.\n\nIt is explained in greater detail in the StackOverflow question\non [restricted folder and files in OS X El Capitan](http://stackoverflow.com/questions/30768087/restricted-folder-files-in-os-x-el-capitan):\n\nTo temporarily disable SIP (System Integrity Protection):\n\n- Reboot\n- As soon as you hear the \"Mac sound\" on the grey screen, press Cmd+R to enter Recovery mode\n- Open Utilities &gt; Terminal\n- Run the command `csrutil disable`\n- Reboot, you'll land in the normal OS with SIP disabled\n- Do all the changes you'd like to do\n- Reboot again\n- As soon as you hear the \"Mac sound\" on the grey screen, press Cmd+R to enter Recovery mode\n- Enable SIP with `csrutil enable`\n- Reboot again\n- Done\n\nOn my system, the problematic packages live in the folder\n\n- `System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python`\n\nYou can examine their restricted status using `ls`:\n\n<pre>\n&#36; &#108;s -lhdO num*\ndrwxr-xr-x  36 root  wheel  restricted             1.2K May 25  2016 numpy\n-rw-r--r--   1 root  wheel  restricted,compressed  1.6K Aug  1  2015 numpy-1.8.0rc1-py2.7.egg-info\n</pre>\n\nBy temporarily disabling SIP, I was finally able to move them out of the way and continue normal installation:\n\n<pre>\n&#36; sudo -H pip install tensorflow\n</pre>\n\nWith TensorFlow in place, I successfully ran the standard Python install in the `keras` folder and immediately executed one of its interesting examples:\n\n<pre>\n/a/src/deep_learning &#36; cd kears\n/a/src/deep_learning/keras &#36; sudo python setup.py install\n/a/src/deep_learning/keras &#36; cd examples\n/a/src/deep_learning/keras/examples &#36; python babi_rnn.py\n</pre>\n\n\n<!----\n  problem installing due to prior package 'six'\n  /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python\n  /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/six-1.4.1-py2.7.egg-info\n  http://superuser.com/questions/214004/how-to-add-user-to-a-group-from-mac-os-x-command-line\n  sudo dseditgroup -o edit -a tammikj -t user wheel\n  http://superuser.com/questions/279235/why-does-chown-report-operation-not-permitted-on-os-x\n  sudo chmod -N file        # Remove ACLs from file\n  sudo chmod ugo+rw file    # Give everyone read-write permission to file\n  sudo chflags nouchg file  # Clear the user immutable flag from file\n  start up with Cmd-S for single user mode \n  # root ... read-only file system\n  System Integrity Protection (rootless) ... boot into Recovery Mode (Cmd-R), run csrutil disable, then restart (to reenable, use csrutil enable).\n  finally got six removed\n  $ sudo -H pip install tensorflow\n  Installing collected packages: six, funcsigs, pbr, mock, numpy, protobuf, tensorflow\n\nSystem/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python $ ls -d num*\nnumpy\t\t\t\tnumpy-1.8.0rc1-py2.7.egg-info\n/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python $ sudo mv numpy numpy-1.8.0rc1-py2.7.egg-info /j/tmp/python_package_backup/numpy\nPassword:\nmv: rename numpy to /j/tmp/python_package_backup/numpy/numpy: Operation not permitted\nmv: rename numpy-1.8.0rc1-py2.7.egg-info to /j/tmp/python_package_backup/numpy/numpy-1.8.0rc1-py2.7.egg-info: Operation not permitted\n\nSystem/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python $ ls -lhdO num*\ndrwxr-xr-x  36 root  wheel  restricted             1.2K May 25  2016 numpy\n-rw-r--r--   1 root  wheel  restricted,compressed  1.6K Aug  1  2015 numpy-1.8.0rc1-py2.7.egg-info\n\nCmd-R\n\ncsrutil disable\n\n/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python $ sudo mv numpy numpy-1.8.0rc1-py2.7.egg-info /j/tmp/python_package_backup/\nPassword:\n\nCmd-R\n\ncsrutil enable\n\nUsers/tammikj $ sudo -H pip install tensorflow\nPassword:\n\n/a/src/deep_learning/keras $ sudo python setup.py install\n\na/src/deep_learning/keras/examples $ python babi_rnn.py\nUsing TensorFlow backend.\nRNN / Embed / Sent / Query = <class 'keras.layers.recurrent.LSTM'>, 50, 100, 100\nDownloading data from https://s3.amazonaws.com/text-datasets/babi_tasks_1-20_v1-2.tar.gz\nvocab = [u'.', u'?', u'Daniel', u'John', u'Mary', u'Sandra', u'Where', u'apple', u'back', u'bathroom', u'bedroom', u'discarded', u'down', u'dropped', u'football', u'garden', u'got', u'grabbed', u'hallway', u'is', u'journeyed', u'kitchen', u'left', u'milk', u'moved', u'office', u'picked', u'put', u'the', u'there', u'to', u'took', u'travelled', u'up', u'went']\nX.shape = (1000, 552)\nXq.shape = (1000, 5)\nY.shape = (1000, 36)\nstory_maxlen, query_maxlen = 552, 5\nBuild model...\nTraining\nTrain on 950 samples, validate on 50 samples\nEpoch 1/40\n544/950 [================>.............] - ETA: 13s - loss: 3.2671 - acc: 0.0460\n\nEpoch 1/40\n950/950 [==============================] - 32s - loss: 2.9663 - acc: 0.1200 - val_loss: 2.2771 - val_acc: 0.3000\nEpoch 2/40\n288/950 [========>.....................] - ETA: 23s - loss: 2.2930 - acc: 0.2049\n\nEpoch 40/40\n950/950 [==============================] - 29s - loss: 1.6535 - acc: 0.3474 - val_loss: 1.6400 - val_acc: 0.4000\n1000/1000 [==============================] - 5s\nTest loss / test accuracy = 1.6902 / 0.3270\n\n\n- single-user mode\n  Shut down your Mac.\n  Press the power button to start up your Mac.\n  Immediately hold down the following keys:\n  Hold down Command-S for single-user mode.\n  Hold down Command-V for verbose mode.\n\n--->\n\nKeras is up and running now.\n\nWhat shall I do next?\n\nHere are two descriptions of successful experiments implementing minimal question answering systems with it that I am taking a deeper look at:\n\n- [Deep Language Modelling for Question Answering using Keras](http://benjaminbolte.com/blog/2016/keras-language-modeling.html)\n  ([^](/a/doc/deep_learning/keras/Deep_Language_Modeling_for_Question_Answering_using_Keras.pdf)),\n  [GitHub repo](https://github.com/codekansas/keras-language-modeling)\n- [Question Answering Using Deep Learning](https://cs224d.stanford.edu/reports/StrohMathur.pdf)\n  ([^](/a/doc/deep_learning/keras/Question_Answering_Using_Deep_Learning_by_Stroh_Mathur.pdf)),\n  [GitHub repo](https://github.com/priyank87/memn2n)\n  \nTime for me to get going putting together some Revit API related tests?\n\n\n####<a name=\"6\"></a>Rules of Machine Learning\n\nBy the way, before doing anything else, I and everybody else interested in machine learning ought to read and ponder\nMartin Zinkevich's 43 [Rules of Machine Learning](http://martin.zinkevich.org/rules_of_ml/rules_of_ml.pdf),\nsplit up into useful consecutive phases:\n\n- Before Machine Learning\n- Phase I: Your First Pipeline\n    - Monitoring\n    - Your First Objective\n- Phase II: Feature Engineering\n    - Human Analysis of the System\n    - Training-Â­Serving Skew\n- Phase III: Slowed Growth, Optimization Refinement, and Complex Models\n\nTo quote Martin:\n\nThe document is arranged in four parts:\n\n- The first part should help you understand whether the time is right for building a machine learning system.\n- The second part is about deploying your first pipeline.\n- The third part is about launching and iterating while adding new features to your pipeline, how to evaluate models and training-Â­serving skew.\n- The final part is about what to do when you reach a plateau.\n- Afterwards, there is a list of related work and an appendix with some background on the systems commonly used as examples in this document.\n\nIt is strongly geared towards ranking."
  }
]