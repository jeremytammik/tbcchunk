[
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "Copy and Paste API Applications and New Modeless Assertion",
    "local_header_href": "#copy-and-paste-api-applications-and-new-modeless-assertion",
    "chunk_text": "<h3>Copy and Paste API Applications and New Modeless Assertion</h3><p>Here is a detailed description of one of the most exciting Revit 2014 API features that you should have heard about by now and promises numerous uses, prompted by a question from a developer on duplicating views from one document to another.\nAnother couple of uses of it cropped up in the past, so it seems like an overview is called for:</p><ul>\n<li><a href=\"#2\">Duplicating a view from one document to another</a></li>\n<li><a href=\"#3\">Solving the non-unique unique id problem</a></li>\n<li><a href=\"#4\">Managing materials in adsklib or template files</a></li>\n<li><a href=\"#5\">Transferring groups between projects</a></li>\n<li><a href=\"#5.2\">Copy family symbols to another project</a></li>\n<li><a href=\"#6\">Revit API use in modeless form throws an exception</a></li>\n</ul><a name=\"2\"></a>"
  },
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "Duplicating a View from one Document to Another",
    "local_header_href": "#duplicating-a-view-from-one-document-to-another",
    "chunk_text": "<h4>Duplicating a View from one Document to Another</h4><p><strong>Question:</strong> I need to perform the following action programmatically:</p><p>Insert Tab &gt; Insert from File &gt; Insert view from file &gt; Select File &gt; Select view in this file.</p><p>Is there some way to achieve this via API in Revit?</p><p><strong>Answer:</strong> Yes, you are in luck, this is covered by the new Revit 2014 API.</p><p>And even more luckily, the development team selected very good and suitable API samples, so the exact workflow you describe is covered by the new Revit 2014 DuplicateViews SDK sample illustrating the new copy and paste API.</p><p>Look at the second bullet item in the overview of\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/03/revit-2014-api-and-room-plan-view-boundary-polygon-loops.html\">\nRevit 2014 API news</a>,\n\nmentioning the new copy and paste API.</p><p>Here is the description from the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/04/whats-new-in-the-revit-2014-api.html\">\nWhat's New section</a> of\n\nthe Revit API help file RevitAPI.chm, reproduced here:</p><span style=\"color: darkblue\">\n<h4>Copy &amp; paste elements</h4>\n<p>The new methods:</p>\n<ul></ul>\n<li>ElementTransformUtils.CopyElements(Document, ICollection&lt;ElementId&gt;, Document, Transform)</li>\n<li>ElementTransformUtils.CopyElements(View, ICollection&lt;ElementId&gt;, View, Transform)</li>\n<li>Transform ElementTransformUtils.GetTransformFromViewToView(View, View)</li>\n\n<p>support copy and paste of arbitrary elements.  The first overload supports copy within documents, or from document to document.  The second overload also support copying within one document or between two documents, but specifically supports copy and paste of view-specific elements.</p>\n</span><a name=\"2.1\"></a>"
  },
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "Copy & paste elements",
    "local_header_href": "#copy-paste-elements",
    "chunk_text": "<h4>Copy &amp; paste elements</h4><p>The new methods:</p><ul></ul><li>ElementTransformUtils.CopyElements(Document, ICollection&lt;ElementId&gt;, Document, Transform)</li><li>ElementTransformUtils.CopyElements(View, ICollection&lt;ElementId&gt;, View, Transform)</li><li>Transform ElementTransformUtils.GetTransformFromViewToView(View, View)</li><p>support copy and paste of arbitrary elements.  The first overload supports copy within documents, or from document to document.  The second overload also support copying within one document or between two documents, but specifically supports copy and paste of view-specific elements.</p>"
  },
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "The DuplicateViews SDK Sample",
    "local_header_href": "#the-duplicateviews-sdk-sample",
    "chunk_text": "<h4>The DuplicateViews SDK Sample</h4><p>DuplicateViews copies and pastes drafting views and schedules from one document to anotherâ€¨, demonstrating use of the CopyPasteOptions, ElementTransformUtils, FilteredElementCollector, IDuplicateTypeNamesHandler and IFailuresPreprocessor classes. The drafting view contents are also copied.</p><p>The DuplicateAcrossDocumentsCommand.cs module implements an external command to copy schedules and drafting views across documents and makes use of a number of useful utility classes defined in DuplicateViewUtils.cs.</p><p>In detail, DuplicateViews copies all drafting views, image views, and schedules from the currently active document into another document that is currently in memory. All drafting elements in the non-schedule views are also copied, as is all schedule formatting and filtering.  It uses API tools to hide any duplicate types warnings that typically arise when doing this from the user interface.</p><p>To test this, open any two project documents in Revit. Set the active document to be the document from which you wish to copy views. Launch Add-ins &gt; CopyPaste &gt; Duplicate across documents and enjoy. A popup message will appear listing the number of schedules, drafting views and drafting elements copied by the command.</p><p>If you prefer to watch someone else run this sample rather than trying it yourself, it is also demonstrated live in the\n\n<a href=\"http://thebuildingcoder.typepad.com/revit_2014_api/index.html\">\nRevit 2014 DevDays presentation recording</a>.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "Solving the Non-unique Unique Id Problem",
    "local_header_href": "#solving-the-non-unique-unique-id-problem",
    "chunk_text": "<h4>Solving the Non-unique Unique Id Problem</h4><p>A couple of times, people mentioned issues caused by copied files, resulting in copied unique ids on certain elements, e.g. thus:</p><p><strong>Question:</strong> Do you have any recommendation on how to handle unique ids in copied files?</p><p>We cannot tell people 'do not copy the files', because they sometimes put in a large effort to create a file that is used as a basic starting point for multiple projects.</p><p><strong>Answer:</strong> Yes, you are in luck again. The copy and paste API should solve this.</p><p>Documents that are copied obviously contain exact copies the ids of their elements.\nThis also can happen when using a document as a template to create another document.</p><p>Elements created by copying them through the copy and paste API obviously are assigned new unique ids.\nThat should solve the issue.\n\n<p>Of course, there is no way to change the unique id of an element that already exists.</p>\n<a name=\"4\"></a>\n<h4>Managing Materials in Adsklib or Template Files</h4>\n<p><strong>Question:</strong> I would like to know if it is possible to access data stored in adsklib files through API functions.\nThe desired functionality would be to load materials, appearance, physical and thermal assets from an external adsklib file to the current active project document.\n\n<p>The aim is to implement a custom materials library with our application using an adsklib file instead of a project template,\nas described in the Autodesk wiki on\n\n<a href=\"http://wikihelp.autodesk.com/Revit/enu/community/videos/Customize_Revit/Managing_Materials_Libraries_(2013)\">\nmanaging material libraries</a>,\n\nso only the required materials are included and not all, to decrease the project template size and speed up the material browser.\n\n<p>Is this possible? If so, how?\n\n<p><strong>Answer:</strong> Nope, sorry, as far as I know, there is no API support for this.\n\n<p>From my naive grass roots perspective, the adsklib idea was born quite a few years back and has since been displaced by visions of cloud and mobile.\n\n<p>The file formats have died, and long live the new format, ubiquitous JSON or whatever.\n\n<p>You say you \"have been looking into this subject for some time already\" ... maybe it is time to start looking into something new?\n\nI see two possibilities for moving forward, besides the solution that you mention of including all materials in the template file:\n\n<ol>\n<li>Store the materials in several separate adsklib files, and only load the ones you really need.</li>\n<li>Use the new Revit 2014 copy and paste API functionality to copy and paste only the required materials from your or some other project.</li>\n</ol>\n<p><strong>Response:</strong> Thank you for thinking of other solutions.\n\n<p>Option 1 probably still requires API access to the adsklib file to programmatically transfer the material assets from the adsklib into the project.\n\n<p>I had a quick look at the copy and paste functionality and think this would be a good solution.\nWe could use a separate project or template file as our material library instead of the adsklib one and copy/paste the required materials into the current project.\n\n\n<a name=\"5\"></a>\n<h4>Transferring Groups Between Projects</h4>\n<p>I have been working with the Revit API to create a Revit application that can transfer a group type from one project file to another. I am working on a very large project, so we have to separate it into several project files due to performance. We are using groups to ensure that rooms having the same characteristics always are the same and can be updated quickly. But the model separation creates a problem to ensure that all group types in all project files are updated. We tried to use the link functionality instead of groups, but when there are many instances of a link Revit become very slow. We also considered using family nesting to solve the problem, but we want to be able to include system families as well, so that solution won't work.</p>\n<p>We have one project file where we create the Groups, use 'Save Group' to create a project file, then 'Load Group' or 'Reload Group' to get it in to the actual project file (we have 21 project files). So what I want is to create a Revit application that optimizes this workflow by transferring groups from one project file to another. But working with the API has raised a couple of questions:</p>\n<ul>\n<li>Why are the user interface functions 'Load Group', 'Save Group', 'Reload group' not accessible from the API? Are there any plans to make them accessible?</li>\n<li>If I want to transfer a group type from one project file to another, is the only way to do this to create every group member in the receiving project file using the API functions for every member, e.g. Wall.Create and then group the members?</li>\n<li>Is there a way to transfer system families from one project file to another using the API? The user interface function transfer project standards is not available, are there any plans to make it available?</li>\n<li>It seems like Revit is more appropriate for small projects, there are some plans to make Revit better for larger projects? For instance by sharing families (system and loadable) and groups across project files?</li>\n</ul>\n<p><strong>Answer:</strong> I am surprised that you say that Revit is more appropriate for small projects. I was under the impression that the opposite is true.</p>\n<p>You may be surprised to hear that the answer to all your questions is <b>yes</b>.</p>\n<p>You will be glad to hear that a number of improvements in Revit 2014 are specifically targeted at supporting still larger projects, and many of these improvements specifically target the family management and loading performance.</p>\n<p>Regarding all of your other questions, I have one single big suggestion to make to you: please take a look at Revit 2014, and especially at the new copy and paste API functionality it provides.\nI think that may meet your needs exactly and efficiently.</p>\n<p><strong>Response:</strong> I took a look at the Revit 2014 API and I must say that the copyElement method is just what I need ;-)</p>\n<p>It is a much safer way to transfer groups from one project file to another.</p>\n<a name=\"5.2\"></a>\n<h4>Copy Family Symbols to Another Project</h4>\n<p>Joe Ye presents source code demonstrating how to\n\n<a href=\"http://adndevblog.typepad.com/aec/2013/05/copy-family-between-documents-via-api.html\">\ncopy all symbols of a selected family</a> from\n\nthe current project to another.</p>\n<a name=\"6\"></a>\n<h4>Revit API use in Modeless Form Throws an Exception</h4>\n<p>Finally, on a completely different topic, several people making illegal use of the Revit API from an invalid context in Revit 2013, e.g. in a modeless form, are now running into a problem.\nDavid Rock describes it in his\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/06/revit-parent-window.html?cid=6a00e553e168978833017eeae9657f970d#comment-6a00e553e168978833017eeae9657f970d\">\ncomment</a> on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/06/revit-parent-window.html\">\naccessing the Revit main window handle</a>:</p>\n<p><strong>Question:</strong> In Revit 2014 I'm having trouble showing a modeless form and calling a transaction whilst inside the form. It is producing an error stating that \"starting a transaction from an external application running outside of API context is not allowed\".\n\n<p><strong>Answer:</strong> Yes, it looks as if you are calling the Revit API directly from your modeless dialogue running in another thread.\n\n<p>As you should know, actually, that was never supported.\n\n<p>Now, in Revit 2014, an exception is raised when you make such an attempt.\n\n<p>You are lucky that it worked so far without corrupting anything.\n\n<p>The solution is described in depth here on the blog: simply google for \"modeless site:thebuildingcoder.typepad.com\", or look at the discussions in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/idling\">\nIdling</a> category.\n\n<p>In short, make use of the Idling event, or implement an external event, which is a simplified wrapper around that, and base you application on the ModelessForm_ExternalEvent and ModelessForm_IdlingEvent SDK samples.\n\n<p>Do not call the Revit API directly, ever.</p>\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "Managing Materials in Adsklib or Template Files",
    "local_header_href": "#managing-materials-in-adsklib-or-template-files",
    "chunk_text": "<h4>Managing Materials in Adsklib or Template Files</h4><p><strong>Question:</strong> I would like to know if it is possible to access data stored in adsklib files through API functions.\nThe desired functionality would be to load materials, appearance, physical and thermal assets from an external adsklib file to the current active project document.\n\n<p>The aim is to implement a custom materials library with our application using an adsklib file instead of a project template,\nas described in the Autodesk wiki on\n\n<a href=\"http://wikihelp.autodesk.com/Revit/enu/community/videos/Customize_Revit/Managing_Materials_Libraries_(2013)\">\nmanaging material libraries</a>,\n\nso only the required materials are included and not all, to decrease the project template size and speed up the material browser.\n\n<p>Is this possible? If so, how?\n\n<p><strong>Answer:</strong> Nope, sorry, as far as I know, there is no API support for this.\n\n<p>From my naive grass roots perspective, the adsklib idea was born quite a few years back and has since been displaced by visions of cloud and mobile.\n\n<p>The file formats have died, and long live the new format, ubiquitous JSON or whatever.\n\n<p>You say you \"have been looking into this subject for some time already\" ... maybe it is time to start looking into something new?\n\nI see two possibilities for moving forward, besides the solution that you mention of including all materials in the template file:\n\n<ol>\n<li>Store the materials in several separate adsklib files, and only load the ones you really need.</li>\n<li>Use the new Revit 2014 copy and paste API functionality to copy and paste only the required materials from your or some other project.</li>\n</ol>\n<p><strong>Response:</strong> Thank you for thinking of other solutions.\n\n<p>Option 1 probably still requires API access to the adsklib file to programmatically transfer the material assets from the adsklib into the project.\n\n<p>I had a quick look at the copy and paste functionality and think this would be a good solution.\nWe could use a separate project or template file as our material library instead of the adsklib one and copy/paste the required materials into the current project.\n\n\n<a name=\"5\"></a>\n<h4>Transferring Groups Between Projects</h4>\n<p>I have been working with the Revit API to create a Revit application that can transfer a group type from one project file to another. I am working on a very large project, so we have to separate it into several project files due to performance. We are using groups to ensure that rooms having the same characteristics always are the same and can be updated quickly. But the model separation creates a problem to ensure that all group types in all project files are updated. We tried to use the link functionality instead of groups, but when there are many instances of a link Revit become very slow. We also considered using family nesting to solve the problem, but we want to be able to include system families as well, so that solution won't work.</p>\n<p>We have one project file where we create the Groups, use 'Save Group' to create a project file, then 'Load Group' or 'Reload Group' to get it in to the actual project file (we have 21 project files). So what I want is to create a Revit application that optimizes this workflow by transferring groups from one project file to another. But working with the API has raised a couple of questions:</p>\n<ul>\n<li>Why are the user interface functions 'Load Group', 'Save Group', 'Reload group' not accessible from the API? Are there any plans to make them accessible?</li>\n<li>If I want to transfer a group type from one project file to another, is the only way to do this to create every group member in the receiving project file using the API functions for every member, e.g. Wall.Create and then group the members?</li>\n<li>Is there a way to transfer system families from one project file to another using the API? The user interface function transfer project standards is not available, are there any plans to make it available?</li>\n<li>It seems like Revit is more appropriate for small projects, there are some plans to make Revit better for larger projects? For instance by sharing families (system and loadable) and groups across project files?</li>\n</ul>\n<p><strong>Answer:</strong> I am surprised that you say that Revit is more appropriate for small projects. I was under the impression that the opposite is true.</p>\n<p>You may be surprised to hear that the answer to all your questions is <b>yes</b>.</p>\n<p>You will be glad to hear that a number of improvements in Revit 2014 are specifically targeted at supporting still larger projects, and many of these improvements specifically target the family management and loading performance.</p>\n<p>Regarding all of your other questions, I have one single big suggestion to make to you: please take a look at Revit 2014, and especially at the new copy and paste API functionality it provides.\nI think that may meet your needs exactly and efficiently.</p>\n<p><strong>Response:</strong> I took a look at the Revit 2014 API and I must say that the copyElement method is just what I need ;-)</p>\n<p>It is a much safer way to transfer groups from one project file to another.</p>\n<a name=\"5.2\"></a>\n<h4>Copy Family Symbols to Another Project</h4>\n<p>Joe Ye presents source code demonstrating how to\n\n<a href=\"http://adndevblog.typepad.com/aec/2013/05/copy-family-between-documents-via-api.html\">\ncopy all symbols of a selected family</a> from\n\nthe current project to another.</p>\n<a name=\"6\"></a>\n<h4>Revit API use in Modeless Form Throws an Exception</h4>\n<p>Finally, on a completely different topic, several people making illegal use of the Revit API from an invalid context in Revit 2013, e.g. in a modeless form, are now running into a problem.\nDavid Rock describes it in his\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/06/revit-parent-window.html?cid=6a00e553e168978833017eeae9657f970d#comment-6a00e553e168978833017eeae9657f970d\">\ncomment</a> on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/06/revit-parent-window.html\">\naccessing the Revit main window handle</a>:</p>\n<p><strong>Question:</strong> In Revit 2014 I'm having trouble showing a modeless form and calling a transaction whilst inside the form. It is producing an error stating that \"starting a transaction from an external application running outside of API context is not allowed\".\n\n<p><strong>Answer:</strong> Yes, it looks as if you are calling the Revit API directly from your modeless dialogue running in another thread.\n\n<p>As you should know, actually, that was never supported.\n\n<p>Now, in Revit 2014, an exception is raised when you make such an attempt.\n\n<p>You are lucky that it worked so far without corrupting anything.\n\n<p>The solution is described in depth here on the blog: simply google for \"modeless site:thebuildingcoder.typepad.com\", or look at the discussions in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/idling\">\nIdling</a> category.\n\n<p>In short, make use of the Idling event, or implement an external event, which is a simplified wrapper around that, and base you application on the ModelessForm_ExternalEvent and ModelessForm_IdlingEvent SDK samples.\n\n<p>Do not call the Revit API directly, ever.</p>\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "Transferring Groups Between Projects",
    "local_header_href": "#transferring-groups-between-projects",
    "chunk_text": "<h4>Transferring Groups Between Projects</h4><p>I have been working with the Revit API to create a Revit application that can transfer a group type from one project file to another. I am working on a very large project, so we have to separate it into several project files due to performance. We are using groups to ensure that rooms having the same characteristics always are the same and can be updated quickly. But the model separation creates a problem to ensure that all group types in all project files are updated. We tried to use the link functionality instead of groups, but when there are many instances of a link Revit become very slow. We also considered using family nesting to solve the problem, but we want to be able to include system families as well, so that solution won't work.</p><p>We have one project file where we create the Groups, use 'Save Group' to create a project file, then 'Load Group' or 'Reload Group' to get it in to the actual project file (we have 21 project files). So what I want is to create a Revit application that optimizes this workflow by transferring groups from one project file to another. But working with the API has raised a couple of questions:</p><ul>\n<li>Why are the user interface functions 'Load Group', 'Save Group', 'Reload group' not accessible from the API? Are there any plans to make them accessible?</li>\n<li>If I want to transfer a group type from one project file to another, is the only way to do this to create every group member in the receiving project file using the API functions for every member, e.g. Wall.Create and then group the members?</li>\n<li>Is there a way to transfer system families from one project file to another using the API? The user interface function transfer project standards is not available, are there any plans to make it available?</li>\n<li>It seems like Revit is more appropriate for small projects, there are some plans to make Revit better for larger projects? For instance by sharing families (system and loadable) and groups across project files?</li>\n</ul><p><strong>Answer:</strong> I am surprised that you say that Revit is more appropriate for small projects. I was under the impression that the opposite is true.</p><p>You may be surprised to hear that the answer to all your questions is <b>yes</b>.</p><p>You will be glad to hear that a number of improvements in Revit 2014 are specifically targeted at supporting still larger projects, and many of these improvements specifically target the family management and loading performance.</p><p>Regarding all of your other questions, I have one single big suggestion to make to you: please take a look at Revit 2014, and especially at the new copy and paste API functionality it provides.\nI think that may meet your needs exactly and efficiently.</p><p><strong>Response:</strong> I took a look at the Revit 2014 API and I must say that the copyElement method is just what I need ;-)</p><p>It is a much safer way to transfer groups from one project file to another.</p><a name=\"5.2\"></a>"
  },
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "Copy Family Symbols to Another Project",
    "local_header_href": "#copy-family-symbols-to-another-project",
    "chunk_text": "<h4>Copy Family Symbols to Another Project</h4><p>Joe Ye presents source code demonstrating how to\n\n<a href=\"http://adndevblog.typepad.com/aec/2013/05/copy-family-between-documents-via-api.html\">\ncopy all symbols of a selected family</a> from\n\nthe current project to another.</p><a name=\"6\"></a>"
  },
  {
    "original_filename": "0943_duplicate_views",
    "header_text": "Revit API use in Modeless Form Throws an Exception",
    "local_header_href": "#revit-api-use-in-modeless-form-throws-an-exception",
    "chunk_text": "<h4>Revit API use in Modeless Form Throws an Exception</h4><p>Finally, on a completely different topic, several people making illegal use of the Revit API from an invalid context in Revit 2013, e.g. in a modeless form, are now running into a problem.\nDavid Rock describes it in his\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/06/revit-parent-window.html?cid=6a00e553e168978833017eeae9657f970d#comment-6a00e553e168978833017eeae9657f970d\">\ncomment</a> on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/06/revit-parent-window.html\">\naccessing the Revit main window handle</a>:</p><p><strong>Question:</strong> In Revit 2014 I'm having trouble showing a modeless form and calling a transaction whilst inside the form. It is producing an error stating that \"starting a transaction from an external application running outside of API context is not allowed\".\n\n<p><strong>Answer:</strong> Yes, it looks as if you are calling the Revit API directly from your modeless dialogue running in another thread.\n\n<p>As you should know, actually, that was never supported.\n\n<p>Now, in Revit 2014, an exception is raised when you make such an attempt.\n\n<p>You are lucky that it worked so far without corrupting anything.\n\n<p>The solution is described in depth here on the blog: simply google for \"modeless site:thebuildingcoder.typepad.com\", or look at the discussions in the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/idling\">\nIdling</a> category.\n\n<p>In short, make use of the Idling event, or implement an external event, which is a simplified wrapper around that, and base you application on the ModelessForm_ExternalEvent and ModelessForm_IdlingEvent SDK samples.\n\n<p>Do not call the Revit API directly, ever.</p>\n</p></p></p></p></p></p></p>"
  }
]