[
  {
    "original_filename": "1652_revit_wcf_service",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<!--\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\n- [Access to Revit from an external application](http://adn-cis.org/forum/index.php?topic=745)\n  [Community of Autodesk programmers in the CIS](http://adn-cis.org)\n  [Community of Autodesk programmers in the CIS forum](http://adn-cis.org/forum)\n  [Revit API board](http://adn-cis.org/forum/index.php?board=24.0)\n  [CADBIMDeveloper version of RevitExternalAccessDemo](https://github.com/CADBIMDeveloper/RevitExternalAccessDemo)\n  [Victor's original RevitExternalAccessDemo](https://github.com/chekalin-v/RevitExternalAccessDemo)\n  0853_revit_wcf_service.htm\n\n- https://forums.autodesk.com/t5/revit-api-forum/room-walls-direction/m-p/7995914\n\n- https://forums.autodesk.com/t5/revit-api-forum/how-do-i-get-all-the-outermost-walls-in-the-model/m-p/7998948\n\n- https://stackoverflow.com/questions/50285764/how-to-get-the-value-a-room-parameter-which-was-defined-by-a-third-party\n\nDrive Revit via a WCF service, wall directions and parameters in the #RevitAPI @AutodeskRevit #bim #dynamobim @AutodeskForge #ForgeDevCon http://bit.ly/rvtwcfwalls\n\nExciting news from Russia and some mundane updates on other repetitive topics\n&ndash; Driving Revit from a modeless context via a WCF service \n&ndash; Room walls' directions \n&ndash; Retrieving all exterior walls \n&ndash; Getting and setting a shared parameter value...\n\n--->"
  },
  {
    "original_filename": "1652_revit_wcf_service",
    "header_text": "Drive Revit via a WCF Service, Wall Directions and Parameters",
    "local_header_href": "#drive-revit-via-a-wcf-service-wall-directions-and-parameters",
    "chunk_text": "### Drive Revit via a WCF Service, Wall Directions and Parameters\n\nExciting news from Russia, and some mundane updates on other repetitive topics:\n\n- [Driving Revit from a modeless context via a WCF service](#2) \n    - [В собственных словах Александра](#3) \n    - [How to host a WCF service in Revit](#4) \n    - [Content](#5) \n    - [Starting the WCF service in Revit](#6) \n- [Room walls' directions](#7) \n- [Retrieving all exterior walls](#8) \n- [Getting and setting a shared parameter value](#9) \n\n\n####<a name=\"2\"></a>Driving Revit from a Modeless Context via a WCF Service\n\nOver the years, we explored numerous different ways\nto [drive Revit from outside, from a modeless context, via the `Idling` and external events](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.28).\n\nThe need for this kind of approach is diminishing as\nthe [Forge platform](https://autodesk-forge.github.io) gets closer towards adding support for Revit to\nits [Design Automation API](https://developer.autodesk.com/en/docs/design-automation/v2/overview),\nsometimes referred to\nas [Revit I/O](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.28b).\n\nOne popular method, widely used in Russian-speaking areas of the world, is\nVictor Chekalin's solution\nto [drive Revit through a WCF service](http://thebuildingcoder.typepad.com/blog/2012/11/drive-revit-through-a-wcf-service.html),\ncf. his [RevitExternalAccessDemo on GitHub](https://github.com/chekalin-v/RevitExternalAccessDemo),\noriginally implemented for Revit 2013.\n\nUnfortunately, it stopped working in the Revit 2018 or 2019 timeframe.\n\nThe problem was extensively debated in\nthe [community of Autodesk programmers in the CIS](http://adn-cis.org) and\nits [discussion forum](http://adn-cis.org/forum), which includes\na lively [Revit API board](http://adn-cis.org/forum/index.php?board=24.0),\nin the thread\non [access to Revit from an external application](http://adn-cis.org/forum/index.php?topic=745).\n\nNow Alexander [@aignatovich](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/1257478) Ignatovich, aka Александр Игнатович,\nstepped in and fixed the problem in\nhis [CADBIMDeveloper fork of RevitExternalAccessDemo](https://github.com/CADBIMDeveloper/RevitExternalAccessDemo).\n\nIn Alexander's own words:\n\n\n####<a name=\"3\"></a>В Собственных Словах Александра\n\nI recently started to answer queries in the Russian ADN forum.\n\nThere was a discussion about driving Revit from outside.\n\nSeveral years ago, Victor developed a sample that starts a WCF service in Revit.\n\nIt stopped working in Revit 2019.\n \nThis is my exploration of the problem:\n \nThe source code relies on independent calling of WCF service methods processing an `OnIdling` event, e.g., in this service method:\n \n<pre class=\"code\">\n  lock (Locker)\n  {\n    // Enque GetDocumentPath task:\n    \n    TaskContainer.Instance.EnqueueTask(GetDocumentPath); \n   \n    // Waiting for invoking Monitor.Pulse(Locker)\n    // somewhere in desired time interval\n    \n    Monitor.Wait(Locker, WaitTimeout);\n  }\n  return currentDocumentPath;\n</pre>\n\nThe calling of `Monitor.Pulse` in task processing method:\n \n<pre class=\"code\">\n  private void GetDocumentPath(UIApplication uiapp)\n  {\n    try\n    {\n      currentDocumentPath = uiapp.ActiveUIDocument.Document.PathName;\n    }\n    finally\n    {\n      lock (Locker)\n      {\n        Monitor.Pulse(Locker); // <- HERE!\n      }\n    }\n  }\n</pre>\n\nActually, this code branch is invoked in the `OnIdling` event handler.\n \nThis worked for years and still works fine in Revit 2017.\n\nHowever, since Revit 2019 (or maybe Revit 2018), we are waiting forever at the call to `Monitor.Wait` in the line:\n \n<pre class=\"code\">\n  Monitor.Wait(Locker, WaitTimeout);\n</pre>\n\nWithin the `Wait` timeout period, there is no `OnIdling` event handler call.\n \nSo, I let the service host be opened in another thread:\n \n<pre class=\"code\">\nprivate const string ServiceUrlHttp = \"http://localhost:9001/RevitExternalService\";\nprivate const string ServiceUrlTcp = \"net.tcp://localhost:9002/RevitExternalService\";\n\n// ...\n \npublic Result OnStartup(UIControlledApplication application)\n{\n  application.Idling += OnIdling;\n  \n  try\n  {\n    Task.Factory.StartNew(() =>\n      {\n        var serviceHost = new ServiceHost(\n          typeof(RevitExternalService),\n          new Uri(ServiceUrlHttp),\n          new Uri(ServiceUrlTcp));\n \n        serviceHost.Description.Behaviors.Add(\n          new ServiceMetadataBehavior());\n          \n        serviceHost.AddServiceEndpoint(\n          typeof(IRevitExternalService),\n          new BasicHttpBinding(),\n          ServiceUrlHttp);\n          \n        serviceHost.AddServiceEndpoint(\n          typeof(IRevitExternalService),\n          new NetTcpBinding(),\n          ServiceUrlTcp);\n          \n        serviceHost.AddServiceEndpoint(\n          typeof(IMetadataExchange),\n          MetadataExchangeBindings.CreateMexHttpBinding(),\n          \"mex\");\n          \n        serviceHost.Open();\n        \n      }, TaskCreationOptions.LongRunning);\n  }\n  catch (Exception ex)\n  {\n    //....\n  }\n  return Result.Succeeded;\n}\n</pre>\n\nWith that, it started working again.\n\nI use `http` binding, so Revit should be started as administrator, or you should use\nthe [`ServiceModel` registration tool](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodelreg-exe) to register WCF service for specific application.\n \nLook at my [forked RevitExternalAccessDemo repository](https://github.com/CADBIMDeveloper/RevitExternalAccessDemo).\n \nI also was interested in why it stopped working.\n\nWas it due to some Revit mechanism change or due to changes in .Net 4.7 framework?\n\nI created a simple application that starts a WCF service, but real request processing is in separate thread\n(I use the same `TaskContainer`):\n\n<pre class=\"code\">\npublic partial class Form1 : Form\n{\n  private const string ServiceUrlHttp\n    = \"http://localhost:9001/ExternalService\";\n    \n  private const string ServiceUrlTcp\n    = \"net.tcp://localhost:9002/ExternalService\";\n \n  public Form1()\n  {\n    InitializeComponent();\n  }\n \n  private void Form1_Load(object sender, EventArgs e)\n  {\n    Task.Factory.StartNew(() =>\n      {\n        while (true)\n        {\n          OnIdling();\n \n          Thread.Sleep(TimeSpan.FromSeconds(1));\n        }\n      }, TaskCreationOptions.LongRunning);\n \n    var serviceHost = new ServiceHost(\n      typeof(ExternalService),\n      new Uri(ServiceUrlHttp),\n      new Uri(ServiceUrlTcp));\n \n    serviceHost.Description.Behaviors.Add(\n      new ServiceMetadataBehavior());\n      \n    serviceHost.AddServiceEndpoint(\n      typeof(IExternalService),\n      new BasicHttpBinding(),\n      ServiceUrlHttp);\n      \n    serviceHost.AddServiceEndpoint(\n      typeof(IExternalService),\n      new NetTcpBinding(),\n      ServiceUrlTcp);\n      \n    serviceHost.AddServiceEndpoint(\n      typeof(IMetadataExchange),\n      MetadataExchangeBindings.CreateMexHttpBinding(),\n      \"mex\");\n      \n    serviceHost.Open();\n  }\n \n  private static void OnIdling()\n  {\n    if (!TaskContainer.Instance.HasTaskToPerform)\n      return;\n \n    var task = TaskContainer.Instance.DequeueTask();\n    task();\n  }\n}\n</pre>\n\nIt works as expected, so this change is probably a side effect of some changes in Revit itself.\n\nI forked Victor's repository and made this thing work again in Revit 2019.\n\nFor the sake of completeness, here is also the CADBIMDeveloper/RevitExternalAccessDemo GitHub repo documentation:\n\n\n####<a name=\"4\"></a>How to Host a WCF Service in Revit\n\nThis code shows how to deploy a WCF service in Autodesk Revit and call it from an external application.\n\nThis code initially was written by Victor Chekalin\nfor [Revit 2013](https://github.com/chekalin-v/RevitExternalAccessDemo).\n\nHowever, it does not work in Revit 2019. There is a discussion in\nthe [adn-cis](http://adn-cis.org/forum/index.php?topic=745.new;topicseen#new) forum.\n\nThe latest changes make it work again.\n\n####<a name=\"5\"></a>Content\n\nThis solution contains 2 projects:\n\n- RevitExternalAccessDemo &ndash; an external application for Autodesk Revit 2019\n- RevitExternalAccessClient &ndash; client application,  a console app that calls WCF service methods\n\n####<a name=\"6\"></a>Starting the WCF Service in Revit\n\nYou should start Revit as administrator or use\nthe [ServiceModel Registration Tool](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodelreg-exe) to\nregister WCF.\n\n\n\n####<a name=\"7\"></a>Room Walls' Directions\n\nSeveral similar questions on determining the direction that walls are facing have cropped up in the last few weeks.\n\nHere is a recent one from\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [room walls direction](https://forums.autodesk.com/t5/revit-api-forum/room-walls-direction/m-p/7995914):\n\n**Question:** How to get the direction of the walls of a room?\nI mean the interior side of wall is facing in what direction?\nEast, West, North, South, Northeast, Northwest, Southeast, Southwest, etc.\n\nYou can assume I am inside the room and I am looking at the wall.\nI need to get this direction.\n\n**Answer:** To start with, you can look at the `DirectionCalculation` Revit SDK sample and The Building Coder discussion of it \non [south facing walls](http://thebuildingcoder.typepad.com/blog/2010/01/south-facing-walls.html).\n\nBenoit provides some further suggestions on:\n\n- Determining whether you are inside the room versus outside\n- Determining each wall's angle to north\n\nFor the first, he suggests using the most simple solution: draw a semi-infinite line &ndash; a ray &ndash; from the point you are checking to a point on the face of the wall. Determine the number of times it crosses the walls of the room. If you cross them an even number, you are inside the room. Elseway, you are outside.\n\nFor the direction you need, draw a line between your position and a point of the face of the wall.\nThen, compute the angle to the North. You have your direction.\n\n\n####<a name=\"8\"></a>Retrieving All Exterior Walls\n\nWhile I am writing this, another related question popped up,\non [how to get all the outermost walls in the model](https://forums.autodesk.com/t5/revit-api-forum/how-do-i-get-all-the-outermost-walls-in-the-model/m-p/7998948):\n\n**Question:** How do I get all the outermost walls in the model?\n\nHere is a picture showing what I mean:\n\n<center>\n<img src=\"img/exterior_walls.png\" alt=\"Exterior walls\" width=\"434\"/>\n</center>\n\n**Answer:** Just as in the previous answer, the `DirectionCalculation` Revit SDK sample and The Building Coder discussion of it \non [south facing walls](http://thebuildingcoder.typepad.com/blog/2010/01/south-facing-walls.html) will\nprovide a good starting point for you.\n\nIt uses the built-in wall function parameter `FUNCTION_PARAM` to filter for exterior walls.\n\nI updated the code presented there and added it\nto [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples) for you,\nin the [CmdCollectorPerformance.cs module lines L293-L323](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdCollectorPerformance.cs#L293-L323).\n\nFirst, we implement a predicate method `IsExterior` that checks this parameter value to determine whether a wall type is exterior or not:\n\n<pre class=\"code\">\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Wall&nbsp;type&nbsp;predicate&nbsp;for&nbsp;exterior&nbsp;wall&nbsp;function</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:blue;\">bool</span>&nbsp;IsExterior(&nbsp;<span style=\"color:#2b91af;\">WallType</span>&nbsp;wallType&nbsp;)\n  {\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">Parameter</span>&nbsp;p&nbsp;=&nbsp;wallType.get_Parameter(\n  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.FUNCTION_PARAM&nbsp;);\n   \n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Assert(&nbsp;<span style=\"color:blue;\">null</span>&nbsp;!=&nbsp;p,&nbsp;<span style=\"color:#a31515;\">&quot;expected&nbsp;wall&nbsp;type&nbsp;&quot;</span>\n  &nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;to&nbsp;have&nbsp;wall&nbsp;function&nbsp;parameter&quot;</span>&nbsp;);\n   \n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">WallFunction</span>&nbsp;f&nbsp;=&nbsp;(<span style=\"color:#2b91af;\">WallFunction</span>)&nbsp;p.AsInteger();\n   \n  &nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:#2b91af;\">WallFunction</span>.Exterior&nbsp;==&nbsp;f;\n  }\n</pre>\n\nWith that, you can retrieve all exterior walls with a filtered element collector like this:\n\n<pre class=\"code\">\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Return&nbsp;all&nbsp;exterior&nbsp;walls</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:#2b91af;\">IEnumerable</span>&lt;<span style=\"color:#2b91af;\">Element</span>&gt;&nbsp;GetAllExteriorWalls(\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;)\n  {\n  &nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">Wall</span>&nbsp;)&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.Cast&lt;<span style=\"color:#2b91af;\">Wall</span>&gt;()\n  &nbsp;&nbsp;&nbsp;&nbsp;.Where&lt;<span style=\"color:#2b91af;\">Wall</span>&gt;(&nbsp;w&nbsp;=&gt;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IsExterior(&nbsp;w.WallType&nbsp;)&nbsp;);\n  }\n</pre>\n\nSince the wall function filter is just checking a parameter value, the performance of this filtering process could be significantly enhanced by using\na [parameter filter](http://thebuildingcoder.typepad.com/blog/2010/06/parameter-filter.html) instead\nof the slow .NET based `IsExterior` method post-processing.\n\nUnfortunately, the wall function parameter is not always correctly set. In that case, of course, the GIGO principle applies:\n[Garbage in, garbage out](https://en.wikipedia.org/wiki/Garbage_in,_garbage_out).\n\nIf you wish to avoid the dependency on the wall type and its parameters, you can try to judge whether a wall is exterior based on geometrical analysis instead.\n\nThe Revit API also provides a `BuildingEnvelopeAnalyzer` class that should help with this, but there seem to be problems using it, cf.:\n\n- [Finding exterior walls by `BuildingEnvelopeAnalyzer`](https://forums.autodesk.com/t5/revit-api-forum/finding-exterior-walls-by-buildingenvelopeanalyzer/m-p/5647404)\n- [Filtering exterior walls](https://forums.autodesk.com/t5/revit-api-forum/filtering-exterior-walls/m-p/5677706)\n\nSome related challenges and solutions that might help here are discussed in The Building Coder topic group\non [2D Booleans and adjacent areas](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.2).\n\nYet another workaround was suggested: Place some room separation lines outside the building envelope and create a huge room around the entire building.\nThen, it’s just a matter of getting room boundaries, filtering out the RSLs, appending the remaining elements to your list, deleting the room and RSLs, and moving up to the next level.\nIt may not work for some bad modelling cases, but catches most.\n\nAfter further discussion with the development team, they asked:\nIs the building model enclosed?\nIt needs to be in order for the analyzer to work.\nIn other words, do you have Roof and Floor elements to form enclosed spaces in the model?\n\n####<a name=\"9\"></a>Getting and Setting a Shared parameter Value\n\nLet's end for today with a very basic question asked on StackOverflow,\non [how to get the value a room parameter defined by a third party](https://stackoverflow.com/questions/50285764/how-to-get-the-value-a-room-parameter-which-was-defined-by-a-third-party):\n\n**Question:** How to get the value a room parameter, which was defined by a third party?\n\nI am working on a shared project with many other people. One defined a custom parameter, which we must fill. I now want to fill that custom parameter with values from my database. But I can figure out, how to access this custom parameter which was created by a third party, since I don`t have a GUID...\n\nHere is a screenshot of the parameter I want to change:\n\n<center>\n<img src=\"img/third_party_shared_parameter.png\" alt=\"Third party shared parameter\" width=\"260\"/>\n</center>\n\n**Answer:** Reading and writing to a shared parameter is a very basic operation and is covered by\nthe [Revit API getting started material](http://thebuildingcoder.typepad.com/blog/about-the-author.html#2).\nPlease work through the video tutorials first of all, so you get an understanding of the basics.\n\nAfter that, you can also take a look at\nthe [AdnRevitApiLabsXtra on GitHub](https://github.com/jeremytammik/AdnRevitApiLabsXtra).\nIt includes many examples of reading and writing parameters, both shared and built-in. \n\nFinally, the [FireRating and FireRatingCloud samples](https://github.com/jeremytammik/FireRatingCloud) both\ndemonstrate one single simple workflow that illustrates all aspects of what you need to know: \n\n- Create and bind a new shared parameter\n- Export shared parameter values from Revit model to external database\n- Import shared parameter values from external database to Revit model"
  }
]