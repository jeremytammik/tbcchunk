[
  {
    "original_filename": "1963_point_cloud",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- Using different material on each face of a tessellated shape\n  https://forums.autodesk.com/t5/revit-api-forum/using-different-material-on-each-face-of-a-tessellated-shape/m-p/11359278#M65249\n  + assign different material to each face of direct shape\n  Using different material on each face of a tessellated shape\n  https://forums.autodesk.com/t5/revit-api-forum/using-different-material-on-each-face-of-a-tessellated-shape/m-p/10550191\n\n- DirectContext3D Colorized Triangles\n  https://forums.autodesk.com/t5/revit-api-forum/directcontext3d-colorized-triangles/td-p/10567609\n\n- pick point in cloud point\n  https://forums.autodesk.com/t5/revit-api-forum/definition-of-work-plane-for-picking-point-of-point-cloud-in/td-p/11366329\n\n- rpthomas explains\n  https://forums.autodesk.com/t5/revit-api-forum/access-point-cloud-points-through-api/m-p/11374437#M65416\n\n- 8125 [Carla Ferreyra: Link Point Cloud with BIM] \n  open source point cloud engine https://github.com/potree/potree\n  Here are two point cloud demos with the Forge viewer using potree.js\n  by [Petr Broz](https://github.com/petrbroz) and [Michael Beale](https://github.com/wallabyway):\n  - [Pointcloud with Revit](https://github.com/wallabyway/forge-pointcloud-with-revit)\n  - [forge-potree-demo](https://github.com/petrbroz/forge-potree-demo)\n  According to Michaelâ€™s slide deck, you need to convert your point cloud files to the potree supported format via `PotreeConverter` before using the potree viewer extension. A `.pts` file requires conversion to `.las`, `.zlas`, or `.bin` file before passing to `PotreeConverter`.\n\n- https://forums.autodesk.com/t5/revit-api-forum/highlight-100-000-nodes-xyz-coordinates-at-once-in-revit/m-p/9349258\n  search todo_tbc.txt for 'point cloud api'\n\n- https://forums.autodesk.com/t5/revit-api-forum/sdk-sample-pointcloudengine-crash-for-revit-2018-and-2019/m-p/8580174\n\ntwitter:\n\nAccessing point cloud points and colouring individual DirectShape and DirectContext3D triangles and faces in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon https://bit.ly/coloringfaces\n\nLet's look at accessing point cloud points and colouring individual triangles and faces\n&ndash; Assigning material to each face\n&ndash; DirectContext3D colorized triangles\n&ndash; Pick and access point cloud points...\n\nlinkedin:\n\nAccessing point cloud points and colouring individual DirectShape and DirectContext3D triangles and faces in the #RevitAPI:\n\nhttps://bit.ly/coloringfaces\n\n- Assigning material to each face\n- DirectContext3D colorized triangles\n- Pick and access point cloud points...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\" height=\"\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n<pre class=\"code\">\n</pre>\n\n-->"
  },
  {
    "original_filename": "1963_point_cloud",
    "header_text": "Point Clouds, Coloured Triangles and Faces",
    "local_header_href": "#point-clouds-coloured-triangles-and-faces",
    "chunk_text": "### Point Clouds, Coloured Triangles and Faces\n\nLet's look at accessing point cloud points and colouring individual triangles and faces:\n\n- [Assigning material to each face](#2)\n- [DirectContext3D colorized triangles](#3)\n- [Pick and access point cloud points](#4)"
  },
  {
    "original_filename": "1963_point_cloud",
    "header_text": "Assigning Material to Each Face",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Assigning Material to Each Face\n\nRichard [RPThomas108](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/1035859) Thomas\nhas been solving the majority of tricky questions in \nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) for\nquite some time.\n\nAmong many others, he addressed [using different material on each face of a tessellated shape](https://forums.autodesk.com/t5/revit-api-forum/using-different-material-on-each-face-of-a-tessellated-shape/m-p/10550191):\n\n**Question:** I am creating a complex tessellated shape, in which I am trying to use more than one material.\nEssentially, I am trying to paint each face with its own colour.\n\nHowever, the end result seems to use just one material for the entire shape (I think it's the material that I've used for the first face). \n\nThe API allows me to specify the material id on a face level &ndash; the TesselatedFace constructor accepts the vertices and the material.\n\nI am currently trying to specify the colour of each face by creating a new material.\n\nIs there a more straightforward way to paint individual faces of a tessellated shape?\n\n**Answer:** I don't see the same issue in Revit 2022:\n\n<center>\n<img src=\"img/tesselated_shape_face_color.png\" alt=\"Tessellated shape face colour\" title=\"Tessellated shape face colour\" width=\"400\"/> <!-- 622 x 485 -->\n</center>\n\n<pre class=\"code\">\n<span style=\"color:blue;\">Private</span>&nbsp;<span style=\"color:blue;\">Function</span>&nbsp;<span style=\"color:#74531f;\">Obj_210816c</span>(\n&nbsp;&nbsp;<span style=\"color:blue;\">ByVal</span>&nbsp;<span style=\"color:#1f377f;\">commandData</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;Autodesk.Revit.UI.ExternalCommandData,\n&nbsp;&nbsp;<span style=\"color:blue;\">ByRef</span>&nbsp;<span style=\"color:#1f377f;\">message</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">String</span>,\n&nbsp;&nbsp;<span style=\"color:blue;\">ByVal</span>&nbsp;<span style=\"color:#1f377f;\">elements</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;Autodesk.Revit.DB.ElementSet)&nbsp;<span style=\"color:blue;\">As</span>&nbsp;Result\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">UIDoc</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;UIDocument&nbsp;=&nbsp;commandData.Application.ActiveUIDocument\n&nbsp;&nbsp;<span style=\"color:#8f08c4;\">If</span>&nbsp;UIDoc&nbsp;<span style=\"color:blue;\">Is</span>&nbsp;<span style=\"color:blue;\">Nothing</span>&nbsp;<span style=\"color:#8f08c4;\">Then</span>&nbsp;<span style=\"color:#8f08c4;\">Return</span>&nbsp;Result.Cancelled&nbsp;<span style=\"color:blue;\">Else</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">IntDoc</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;Document&nbsp;=&nbsp;UIDoc.Document\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">Mats</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;List(<span style=\"color:blue;\">Of</span>&nbsp;<span style=\"color:blue;\">String</span>)\n&nbsp;&nbsp;Mats.Add(<span style=\"color:#a31515;\">&quot;RT_Red,255,0,0&quot;</span>)\n&nbsp;&nbsp;Mats.Add(<span style=\"color:#a31515;\">&quot;RT_Green,0,255,0&quot;</span>)\n&nbsp;&nbsp;Mats.Add(<span style=\"color:#a31515;\">&quot;RT_Blue,0,0,255&quot;</span>)\n&nbsp;&nbsp;Mats.Add(<span style=\"color:#a31515;\">&quot;RT_Cyan,0,255,255&quot;</span>)\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">FEC</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;FilteredElementCollector(IntDoc)\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">ECF</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;ElementClassFilter(<span style=\"color:blue;\">GetType</span>(Material))\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">MatsFound</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;List(<span style=\"color:blue;\">Of</span>&nbsp;Element)&nbsp;=&nbsp;FEC.WherePasses(ECF)&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;.ToElements.Where(<span style=\"color:blue;\">Function</span>(<span style=\"color:#1f377f;\">n</span>)&nbsp;n.Name.StartsWith(<span style=\"color:#a31515;\">&quot;RT_&quot;</span>))&nbsp;_\n&nbsp;&nbsp;&nbsp;&nbsp;.ToList\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">NewMats</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;ElementId()&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;ElementId(3)&nbsp;{}\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Using</span>&nbsp;tx&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;Transaction(IntDoc,&nbsp;<span style=\"color:#a31515;\">&quot;Add&nbsp;materials&quot;</span>)\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">If</span>&nbsp;tx.Start&nbsp;=&nbsp;TransactionStatus.Started&nbsp;<span style=\"color:#8f08c4;\">Then</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">Commit</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">Boolean</span>&nbsp;=&nbsp;<span style=\"color:blue;\">False</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">Ix</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">Integer</span>&nbsp;=&nbsp;0\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">For</span>&nbsp;<span style=\"color:#8f08c4;\">Each</span>&nbsp;item&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">String</span>&nbsp;<span style=\"color:#8f08c4;\">In</span>&nbsp;Mats\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">Str</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">String</span>()&nbsp;=&nbsp;item.Split(<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:blue;\">Char</span>()&nbsp;{<span style=\"color:#a31515;\">&quot;,&quot;</span>},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringSplitOptions.None)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">M</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;Element&nbsp;=&nbsp;MatsFound.FirstOrDefault(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Function</span>(<span style=\"color:#1f377f;\">x</span>)&nbsp;x.Name&nbsp;=&nbsp;Str(0))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">If</span>&nbsp;M&nbsp;<span style=\"color:blue;\">Is</span>&nbsp;<span style=\"color:blue;\">Nothing</span>&nbsp;<span style=\"color:#8f08c4;\">Then</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NewMats(Ix)&nbsp;=&nbsp;Material.Create(IntDoc,&nbsp;Str(0))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Commit&nbsp;=&nbsp;<span style=\"color:blue;\">True</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IntDoc.Regenerate()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">M1</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;Material&nbsp;=&nbsp;IntDoc.GetElement(NewMats(Ix))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;M1.Color&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;Color(<span style=\"color:blue;\">CByte</span>(Str(1)),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">CByte</span>(Str(2)),&nbsp;<span style=\"color:blue;\">CByte</span>(Str(3)))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">Else</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NewMats(Ix)&nbsp;=&nbsp;M.Id\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">End</span>&nbsp;<span style=\"color:#8f08c4;\">If</span>\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ix&nbsp;+=&nbsp;1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">Next</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">If</span>&nbsp;Commit&nbsp;<span style=\"color:#8f08c4;\">Then</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx.Commit()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">Else</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx.RollBack()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">End</span>&nbsp;<span style=\"color:#8f08c4;\">If</span>\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">End</span>&nbsp;<span style=\"color:#8f08c4;\">If</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">Using</span>\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">Size</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">Double</span>&nbsp;=&nbsp;1\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">v1</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;XYZ((8&nbsp;/&nbsp;9)&nbsp;^&nbsp;0.5,&nbsp;0,&nbsp;-1&nbsp;/&nbsp;3)\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">v2</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;XYZ(-(2&nbsp;/&nbsp;9)&nbsp;^&nbsp;0.5,&nbsp;(2&nbsp;/&nbsp;3)&nbsp;^&nbsp;0.5,&nbsp;-1&nbsp;/&nbsp;3)\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">v3</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;XYZ(-(2&nbsp;/&nbsp;9)&nbsp;^&nbsp;0.5,&nbsp;-(2&nbsp;/&nbsp;3)&nbsp;^&nbsp;0.5,&nbsp;-1&nbsp;/&nbsp;3)\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">v4</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;XYZ(0,&nbsp;0,&nbsp;1)\n \n&nbsp;&nbsp;v1&nbsp;*=&nbsp;Size\n&nbsp;&nbsp;v2&nbsp;*=&nbsp;Size\n&nbsp;&nbsp;v3&nbsp;*=&nbsp;Size\n&nbsp;&nbsp;v4&nbsp;*=&nbsp;Size\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">F</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;XYZ(,)&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;XYZ(3,&nbsp;2)&nbsp;{{v4,&nbsp;v1,&nbsp;v2},\n&nbsp;&nbsp;&nbsp;&nbsp;{v4,&nbsp;v2,&nbsp;v3},&nbsp;{v4,&nbsp;v3,&nbsp;v1},&nbsp;{v1,&nbsp;v2,&nbsp;v3}}\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">TSB</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;TessellatedShapeBuilder()\n&nbsp;&nbsp;TSB.OpenConnectedFaceSet(<span style=\"color:blue;\">True</span>)\n&nbsp;&nbsp;<span style=\"color:#8f08c4;\">For</span>&nbsp;i&nbsp;=&nbsp;0&nbsp;<span style=\"color:#8f08c4;\">To</span>&nbsp;3\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">EID</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;ElementId&nbsp;=&nbsp;NewMats(i)\n&nbsp;&nbsp;&nbsp;&nbsp;TSB.AddFace(<span style=\"color:blue;\">New</span>&nbsp;TessellatedFace(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{F(i,&nbsp;0),&nbsp;F(i,&nbsp;1),&nbsp;F(i,&nbsp;2)}.ToList,&nbsp;EID))\n&nbsp;&nbsp;<span style=\"color:#8f08c4;\">Next</span>\n&nbsp;&nbsp;TSB.CloseConnectedFaceSet()\n&nbsp;&nbsp;TSB.Build()\n \n&nbsp;&nbsp;<span style=\"color:blue;\">Using</span>&nbsp;tx&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;Transaction(IntDoc,&nbsp;<span style=\"color:#a31515;\">&quot;Tetrahedron&quot;</span>)\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">If</span>&nbsp;tx.Start&nbsp;=&nbsp;TransactionStatus.Started&nbsp;<span style=\"color:#8f08c4;\">Then</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;<span style=\"color:#1f377f;\">DS</span>&nbsp;<span style=\"color:blue;\">As</span>&nbsp;DirectShape&nbsp;=&nbsp;DirectShape.CreateElement(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IntDoc,&nbsp;<span style=\"color:blue;\">New</span>&nbsp;ElementId(BuiltInCategory.OST_GenericModel))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DS.AppendShape(TSB)\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx.Commit()\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#8f08c4;\">End</span>&nbsp;<span style=\"color:#8f08c4;\">If</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">Using</span>\n&nbsp;&nbsp;<span style=\"color:#8f08c4;\">Return</span>&nbsp;Result.Succeeded\n \n<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">Function</span>\n</pre>\n\nTessellatedShapeBuilder.GraphicsStyleId will be set for the whole shape, i.e., it can have Category with Material.\n\nThis code sets a material per face, originally for Revit 2022, and still works in Revit 2023.\n\nIn realistic visual style, the colour is taken from the Appearance Asset Colour which has not been set for the four materials created above (this can be changed via the assets of the material).\nHowever, each face is set to a different material.\nThis can also be seen in RevitLookup:\n\n<center>\n<img src=\"img/tesselated_shape_face_color_snoop1.png\" alt=\"Snooping tessellated shape face colour\" title=\"Snooping tessellated shape face colour\" width=\"600\"/> <!-- 802 x 524 -->\n<br/>\n<img src=\"img/tesselated_shape_face_color_snoop2.png\" alt=\"Snooping tessellated shape face colour\" title=\"Snooping tessellated shape face colour\" width=\"600\"/> <!-- 802 x 524 -->\n</center>\n\nThank you, Richard, for the useful sample code and explanation!"
  },
  {
    "original_filename": "1963_point_cloud",
    "header_text": "DirectContext3D Colorized Triangles",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> DirectContext3D Colorized Triangles\n\nTamas Deri explored and answered his own question of how to\ncreate [DirectContext3D colorized triangles](https://forums.autodesk.com/t5/revit-api-forum/directcontext3d-colorized-triangles/td-p/10567609):\n\n**Question:** I'm having trouble applying colors to triangles that are shown via a `DirectContext3DServer`.\nI use a `ColorWithTransparency` object as a basis.\nLines working fine, but here is the issue with triangles:\n\nI can apply the color via the `EffectInstance`, but only if I set it's Emissive Color through `SetEmissiveColor`.\nIf I set all its other colors like, Color, DiffuseColor, SpecularColor or AmbientColor, it stays black.\nChanging transparency works fine.\nThe biggest issue if I'd like to apply the colors per vertices it won't work.\nI'm using VertexFormatBits.PositionNormalColored, and set for instance ColorWithTransparency(255,0,0,200) as it's color, but all triangles will be transparent black.\nAny idea what could be the issue? No exceptions thrown, all buffers are valid, the geometries are being shown, but without the right color applied.\n\n**Answer:** I tried to put together a reproducible case, and I've just found out what the issue was.\nI left a line in the code which set the EffectInstance's transparency, and I think if any property of the EffectInstance is set, then it overrides all vertex properties.\nThat's why the vertex colors got ignored, and it falled back to transparent black.\nOnce I removed that line and kept only the just-constructed EffectInstance it worked as intended.\n\nHere is a partial code that updates the buffers if it is neccessary.\nThe rest is similar to what is available from other sources regarding DirectContext3D.\n\n<pre class=\"prettyprint\">\ndef update_buffer(self):\n  if self.penetrations is None: return False\n  try:\n    lines = []\n    triangles = []\n    colors = []\n    for pen_item in self.penetrations:\n      if pen_item.proposed:\n        primitives = pen_item.proposed.get_wireframe()\n      else:\n        primitives = pen_item.current.get_wireframe()\n      lines.extend(primitives[0])\n      triangles.extend(primitives[1])\n      colors.append(pen_item.status_color)\n\n    tri_f_bits = dc.VertexFormatBits.PositionNormalColored\n    tri_vertex_format = dc.VertexFormat(tri_f_bits)\n\n    tri_effect_instance = dc.EffectInstance(tri_f_bits)\n\n    # If you try to handle transparency globally it will also \n    # overrides vertex colors, and overrides them to black\n    \n    # tri_effect_instance.SetTransparency(0.8)\n\n    tri_vertex_buffer_size = \\\n      dc.VertexPositionNormalColored.GetSizeInFloats() \\\n      * len(triangles) * 3\n    tri_vertex_buffer = dc.VertexBuffer(tri_vertex_buffer_size)\n\n    tri_index_buffer_size = \\\n      dc.IndexTriangle.GetSizeInShortInts() * len(triangles)\n    tri_index_buffer = dc.IndexBuffer(tri_index_buffer_size)\n\n    tri_vertex_buffer.Map(tri_vertex_buffer_size)\n    tri_index_buffer.Map(tri_index_buffer_size)\n    tri_vertex_stream_p = \\\n      tri_vertex_buffer.GetVertexStreamPositionNormalColored()\n    tri_index_stream_p = tri_index_buffer.GetIndexStreamTriangle()\n    for triangle in triangles:\n      triangle_index = triangles.index(triangle)\n      first_idx = triangle_index * 3\n      tri_vertex_stream_p.AddVertex(dc.VertexPositionNormalColored(\n        triangle[1], triangle[0], colors[triangle_index / 12]\n      ))\n      tri_vertex_stream_p.AddVertex(dc.VertexPositionNormalColored(\n        triangle[2], triangle[0], colors[triangle_index / 12]\n      ))\n      tri_vertex_stream_p.AddVertex(dc.VertexPositionNormalColored(\n        triangle[3], triangle[0], colors[triangle_index / 12]\n      ))\n      tri_index_stream_p.AddTriangle(dc.IndexTriangle(\n        first_idx,\n        first_idx + 1,\n        first_idx + 2\n      ))\n    tri_vertex_buffer.Unmap()\n    tri_index_buffer.Unmap()\n\n    self.triangle_buffer = (\n      tri_vertex_buffer,\n      tri_vertex_buffer_size,\n      tri_index_buffer,\n      tri_index_buffer_size,\n      tri_vertex_format,\n      tri_effect_instance,\n      dc.PrimitiveType.TriangleList,\n      0,\n      len(triangles)\n    )\n\n    line_f_bits = dc.VertexFormatBits.PositionColored\n    line_vertex_format = dc.VertexFormat(line_f_bits)\n\n    line_effect_instance = dc.EffectInstance(line_f_bits)\n\n    line_vertex_buffer_size = \\\n      dc.VertexPositionColored.GetSizeInFloats() * len(lines) * 2\n    line_vertex_buffer = dc.VertexBuffer(line_vertex_buffer_size)\n\n    line_index_buffer_size = \\\n      dc.IndexLine.GetSizeInShortInts() * len(lines)\n    line_index_buffer = dc.IndexBuffer(line_index_buffer_size)\n\n    line_vertex_buffer.Map(line_vertex_buffer_size)\n    line_index_buffer.Map(line_index_buffer_size)\n    line_vertex_stream_p = \\\n      line_vertex_buffer.GetVertexStreamPositionColored()\n    line_index_stream_p = line_index_buffer.GetIndexStreamLine()\n    for line in lines:\n      line_index = lines.index(line)\n      first_idx = line_index * 2\n      line_vertex_stream_p.AddVertex(dc.VertexPositionColored(\n        line.GetEndPoint(0), colors[line_index / 12]\n      ))\n      line_vertex_stream_p.AddVertex(dc.VertexPositionColored(\n        line.GetEndPoint(1), colors[line_index / 12]\n      ))\n      line_index_stream_p.AddLine(dc.IndexLine(\n        first_idx,\n        first_idx + 1\n      ))\n    line_vertex_buffer.Unmap()\n    line_index_buffer.Unmap()\n\n    self.line_buffer = (\n      line_vertex_buffer,\n      line_vertex_buffer_size,\n      line_index_buffer,\n      line_index_buffer_size,\n      line_vertex_format,\n      line_effect_instance,\n      dc.PrimitiveType.LineList,\n      0,\n      len(lines)\n    )\n    self.update_flag = False\n    return True\n  except:\n    return False\n</pre>\n\nAt least there is some python example of DirectContext3D :-)\n\nI also managed to figure out why the vertex colors were not applied.\nIt is related to the EffectInstance, but it has nothing to do with its colors.\nThe problem was that I've been using an EffectInstance created as *EffectInstance (VertexFormatBits.PositionNormalColored)*, even though my display style was not shaded.\nThis made all my triangles black on non-shaded views, but they did work fine on shaded views.\nSo I added the following lines:\n\n<pre class=\"prettyprint\">\n      if any([\n          display_style == DB.DisplayStyle.Shading,\n          display_style == DB.DisplayStyle.ShadingWithEdges\n      ]):\n        tri_effect_instance = dc.EffectInstance(\n          dc.VertexFormatBits.PositionNormalColored\n        )\n      else:\n        tri_effect_instance = dc.EffectInstance(\n          dc.VertexFormatBits.PositionColored\n        )\n</pre>\n\nNow it works on all views as expected, and I was able to keep the vertices as VertexPositionNormalColored in all cases.\nThe EffectInstance did the trick by itself.\n\nMany thanks to Tamas for the good research and sample code!"
  },
  {
    "original_filename": "1963_point_cloud",
    "header_text": "Pick and Access Point Cloud Points",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> Pick and Access Point Cloud Points\n\nRichard [RPThomas108](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/1035859) Thomas\nsolved two more tricky point cloud related questions as well.\n\nThe latest explains how to address \nthe [definition of work plane for picking point of point cloud in orthographic 3D view](https://forums.autodesk.com/t5/revit-api-forum/definition-of-work-plane-for-picking-point-of-point-cloud-in/td-p/11366329).\nIn summary, Richard recommends using the `Selection.PickObject` method specifying `ObjectType.PointOnElement` and shares code to:\n\n- Get the minimum point of the UIView from UIView.GetZoomCorners\n- Set up a work plane using view direction and min point from above;\n  note that since the user can rotate the view during selection of points, this invalidates the work plane position for point selection.\n  So, I'm locking the view orientation after the projection plane is set.\n- Pick the point on the plane\n- Filter the cloud by creating a box aligned with the view direction around the picked point\n- Transform the filtered cloud points to model space and project them onto plane and find nearest to original picked point\n \nThere is a lot more to it than it sounds, though...\n\nBefore that, he also addressed\nhow to [access point cloud points through API](https://forums.autodesk.com/t5/revit-api-forum/access-point-cloud-points-through-api/m-p/11374437):\n\n**Question:** I imported an `.rcs` point cloud to Revit 2022 using Insert &gt; Point Cloud.\nI would like to access its points and colors through Revit API.\nFor that, I found the `PointCloudInstance.GetPoints` method.\nIts third input is `numPoints`, representing the number of points which should be extracted from the point cloud.\nHowever, this input cannot be larger than 1 million.\nAnd if I try to make it larger, it raises an error message: 'It can be from 1 to 1000000.'\nDoes this mean that for any point cloud we import to Revit, we can only access its first 1 million points through Revit API, and those beyond are inaccessible?\n\n**Answer:** I think the statement regarding how many points you can access is incorrect.\n\nYes, there is a limit, but you can process the cloud in blocks by adjusting the filter limits and thus access all the points, not just the limit of one block.\n\nA confusing aspect is the `averageDistance`:\n\n> Desired average distance between \"adjacent\" cloud points (Revit units of length). The smaller the averageDistance the larger number of points will be returned up to the numPoints limit. Specifying this parameter makes actual number of points returned for a given filter independent of the density of coverage produced by the scanner.\n\nWhat is the lowest number I can set this to, the limit of the scanner or smallest possible +ve double value? I think it should be an optional parameter whereby it just returns all the points for an area up to the max number of points limit. It says: \"Specifying this parameter...\", making it sound like it is optional, but it doesn't tell me it can be null for example.\n\nI would probably split the cloud up into blocks and test the number of points has not reached the limit for each.\nIf it has reached the limit for a given block, then subdivide that block up into more blocks.\n\nNote:\n\n> If there are more points in the cloud passing the filter than the number requested in this function, the results may not be consistent if the same call is made again.\n\nSo, if the amount of points is less than the max number then I assume you have all the points for that block.\n\nAdditionally the `PointCollection` has the member `GetpointBufferPointer`; this could then provide a faster way to count the points in each block to establish if the block needs further subdividing.\n\nMany thanks again to Richard for his helpful advice and great expertise!"
  }
]