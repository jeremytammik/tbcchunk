[
  {
    "original_filename": "1707_filter_intersect",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- [How to use the ElementIntersectsElementFilter from the RevitLinkInstance?](https://forums.autodesk.com/t5/revit-api-forum/how-to-use-the-elementintersectselementfilter-from-the/m-p/8440333)\n\n- [Get all associated Rebars which attach to the Structural Element](https://forums.autodesk.com/t5/revit-api-forum/get-all-associated-rebars-which-attach-to-the-structural-element/m-p/8446328)\n\nUsing an intersection filter for linked elements in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/linkedintersectionfilter\n\nIntersecting elements has always been a hot topic, cf. various previous discussions on 3D Booleans, cutting and joining elements;\nintersecting with elements in a linked file is even more challenging.\nHappily, the Revit API provides tools to support that as well\n&ndash; Intersecting linked elements with current project ones\n&ndash; Retrieving rebars intersecting a structural element...\n\n-->"
  },
  {
    "original_filename": "1707_filter_intersect",
    "header_text": "Using an Intersection Filter for Linked Elements",
    "local_header_href": "#using-an-intersection-filter-for-linked-elements",
    "chunk_text": "### Using an Intersection Filter for Linked Elements\n\nIntersecting elements has always been a hot topic, cf. various previous discussions\non [3D Booleans, cutting and joining elements](https://thebuildingcoder.typepad.com/blog/about-the-author.html#5.30);\nintersecting with elements in a linked file is even more challenging.\n\nHappily, the Revit API provides tools to support that as well:\n\n- [Intersecting linked elements with current project ones](#2) \n- [Retrieving rebars intersecting a structural element](#3) \n\n<center>\n<img src=\"img/rebar_intersect_column.png\" alt=\"Rebar intersecting column\" width=\"103\">\n</center>"
  },
  {
    "original_filename": "1707_filter_intersect",
    "header_text": "<a name=\"2\"></a> Intersecting Linked Elements with Current Project Ones",
    "local_header_href": "#a-name2a-intersecting-linked-elements-with-current-project-ones",
    "chunk_text": "#### <a name=\"2\"></a> Intersecting Linked Elements with Current Project Ones\n\nYongyu [@wlmsingle](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/6363417) Deng raised and answered an interesting question in \nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [how to use the `ElementIntersectsElementFilter` from the `RevitLinkInstance`](https://forums.autodesk.com/t5/revit-api-forum/how-to-use-the-elementintersectselementfilter-from-the/m-p/8440333) to\nretrieve MEP elements from a linked file and intersect them with structural elements in the current project:\n\n**Question:** I need to get the MEP elements from a linked file and intersect them with some structural elements in the current project.\n\nI succeeded with this using the `ElementIntersectsElementFilter` and the `ElementIntersectsSolidFilter`.\n\nThe filters are both works fine if there is no transform (i.e., identity) between the `RevitLinkInstance` and the current project.\n\nHowever, if the `RevitLinkInstance` is moved or rotated after importing, the calculation result of the filters is incorrect.\n\nAre there any tricks to solve a case like that?\n\nFor example, a method for passing a transform to the filter?\n\nIf not, please share a good algorithm to get the intersection result between two solid elements.\n\n**Answer:** Retrieve solids from the elements of interest and use\nthe [`SolidUtils.CreateTransformed` method](https://apidocs.co/apps/revit/2019/22592761-f39c-4f53-d33b-6c21a4fa9d2d.htm) on them.\n\n**Response:** Thanks a lot!\n\nYou inspired me to develop a new solution.\n\nIf there is a non-identity transform on the `RevitLinkInstance`, the key point to use the `ElementIntersectsSolidFilter` correctly is simply to transform the element in the current project to the linked file project coordinate system:\n\nHere is a slightly cleaned up version of Yongyu Deng's code that I added to\n[The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples)\n[release 2019.0.144.4](https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2019.0.144.4):\n\n<pre class=\"code\">\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Collect&nbsp;the&nbsp;element&nbsp;ids&nbsp;of&nbsp;all&nbsp;elements&nbsp;in&nbsp;the&nbsp;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;linked&nbsp;documents&nbsp;intersecting&nbsp;the&nbsp;given&nbsp;element.</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&nbsp;name</span><span style=\"color:gray;\">=</span><span style=\"color:gray;\">&quot;</span>e<span style=\"color:gray;\">&quot;</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">Target&nbsp;element</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&nbsp;name</span><span style=\"color:gray;\">=</span><span style=\"color:gray;\">&quot;</span>links<span style=\"color:gray;\">&quot;</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">Linked&nbsp;documents</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&nbsp;name</span><span style=\"color:gray;\">=</span><span style=\"color:gray;\">&quot;</span>ids<span style=\"color:gray;\">&quot;</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">Return&nbsp;intersecting&nbsp;element&nbsp;ids</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">Number&nbsp;of&nbsp;intersecting&nbsp;elements&nbsp;found</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:blue;\">int</span>&nbsp;GetIntersectingLinkedElementIds(&nbsp;\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;e,\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">IList</span>&lt;<span style=\"color:#2b91af;\">RevitLinkInstance</span>&gt;&nbsp;links,\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">List</span>&lt;<span style=\"color:#2b91af;\">ElementId</span>&gt;&nbsp;ids&nbsp;)\n  {\n  &nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;count&nbsp;=&nbsp;ids.Count();\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">Solid</span>&nbsp;solid&nbsp;=&nbsp;GetSolid(&nbsp;e&nbsp;);\n   \n  &nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;<span style=\"color:#2b91af;\">RevitLinkInstance</span>&nbsp;i&nbsp;<span style=\"color:blue;\">in</span>&nbsp;links&nbsp;)\n  &nbsp;&nbsp;{\n  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green;\">//&nbsp;GetTransform&nbsp;or&nbsp;GetTotalTransform&nbsp;or&nbsp;what?</span>\n  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Transform</span>&nbsp;transform&nbsp;=&nbsp;i.GetTransform();&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;!transform.AlmostEqual(&nbsp;<span style=\"color:#2b91af;\">Transform</span>.Identity)&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;{\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid&nbsp;=&nbsp;<span style=\"color:#2b91af;\">SolidUtils</span>.CreateTransformed(&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid,&nbsp;transform.Inverse&nbsp;);\n  &nbsp;&nbsp;&nbsp;&nbsp;}\n  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsSolidFilter</span>&nbsp;filter&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsSolidFilter</span>(&nbsp;solid&nbsp;);\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;intersecting&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;i.GetLinkDocument()&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(&nbsp;filter&nbsp;);\n   \n  &nbsp;&nbsp;&nbsp;&nbsp;ids.AddRange(&nbsp;intersecting.ToElementIds()&nbsp;);\n  &nbsp;&nbsp;}\n  &nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;ids.Count&nbsp;-&nbsp;count;\n  }\n</pre>"
  },
  {
    "original_filename": "1707_filter_intersect",
    "header_text": "<a name=\"3\"></a> Retrieving Rebars Intersecting a Structural Element",
    "local_header_href": "#a-name3a-retrieving-rebars-intersecting-a-structural-element",
    "chunk_text": "#### <a name=\"3\"></a> Retrieving Rebars Intersecting a Structural Element\n\nAnother [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\ndeals with [getting all associated rebars that attach to a structural element](https://forums.autodesk.com/t5/revit-api-forum/get-all-associated-rebars-which-attach-to-the-structural-element/m-p/8446328):\n\n**Question:** How can I get all associated rebars which attach to a structural element such as a column by picking that?\n\n**Answer:** Picking an element is described in\nthe [Revit API getting started material](https://thebuildingcoder.typepad.com/blog/about-the-author.html#2) and\nalso demonstrated in [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples).\n\nFor instance, in the latter, you can check out\nthe [various element selection utility methods](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/Util.cs#L1227-L1365) and\nexamine how they are used in the sample commands.\n\nOnce you have found a usage pattern that you like in some sample command, search for the description of it\nin [The Building Coder blog](https://thebuildingcoder.typepad.com).\n\nOnce you have picked your structural element, use a filtered element collector to retrieve the intersecting rebar.\n\nSet it up to retrieve rebar elements only, and add a filter for the column solid:\n\n- [Bounding box filter is always axis aligned](https://thebuildingcoder.typepad.com/blog/2018/04/bounding-box-filter-always-axis-aligned.html)\n- [Using intersection filter with linked file](https://thebuildingcoder.typepad.com/blog/2018/04/using-intersection-filter-with-linked-file.html)\n\n[The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples)\nincludes some examples of using a solid intersection filter, e.g., the [`GetInstancesIntersectingElement` method](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdCollectorPerformance.cs#L1294-L1430) showing\nhow to retrieve family instances intersecting a given BIM element:\n\n<pre class=\"code\">\n&nbsp;&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Retrieve&nbsp;all&nbsp;family&nbsp;instances&nbsp;intersecting&nbsp;a</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;given&nbsp;BIM&nbsp;element,&nbsp;e.g.&nbsp;all&nbsp;columns&nbsp;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;intersecting&nbsp;a&nbsp;wall.</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">void</span>&nbsp;GetInstancesIntersectingElement(&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;e&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;e.Document;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Solid</span>&nbsp;solid&nbsp;=&nbsp;e.get_Geometry(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Options</span>()&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfType&lt;<span style=\"color:#2b91af;\">Solid</span>&gt;()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Where&lt;<span style=\"color:#2b91af;\">Solid</span>&gt;(&nbsp;s&nbsp;=&gt;&nbsp;<span style=\"color:blue;\">null</span>&nbsp;!=&nbsp;s&nbsp;&amp;&amp;&nbsp;!s.Edges.IsEmpty&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.FirstOrDefault();\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;intersectingInstances\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsSolidFilter</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;n1&nbsp;=&nbsp;intersectingInstances.Count&lt;<span style=\"color:#2b91af;\">Element</span>&gt;();\n \n&nbsp;&nbsp;&nbsp;&nbsp;intersectingInstances\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsElementFilter</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;n&nbsp;=&nbsp;intersectingInstances.Count&lt;<span style=\"color:#2b91af;\">Element</span>&gt;();\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Assert(&nbsp;n.Equals(&nbsp;n1&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;expected&nbsp;solid&nbsp;intersection&nbsp;to&nbsp;equal&nbsp;element&nbsp;intersection&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;result&nbsp;=&nbsp;<span style=\"color:blue;\">string</span>.Format(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;{0}&nbsp;family&nbsp;instance{1}&nbsp;intersect{2}&nbsp;the&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;selected&nbsp;element&nbsp;{3}{4}&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n,&nbsp;<span style=\"color:#2b91af;\">Util</span>.PluralSuffix(&nbsp;n&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;1&nbsp;==&nbsp;n&nbsp;?&nbsp;<span style=\"color:#a31515;\">&quot;s&quot;</span>&nbsp;:&nbsp;<span style=\"color:#a31515;\">&quot;&quot;</span>&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Util</span>.ElementDescription(&nbsp;e&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Util</span>.DotOrColon(&nbsp;n&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;id_list&nbsp;=&nbsp;0&nbsp;==&nbsp;n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?&nbsp;<span style=\"color:blue;\">string</span>.Empty\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;<span style=\"color:blue;\">string</span>.Join(&nbsp;<span style=\"color:#a31515;\">&quot;,&nbsp;&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;intersectingInstances\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Select&lt;<span style=\"color:#2b91af;\">Element</span>,&nbsp;<span style=\"color:blue;\">string</span>&gt;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&gt;&nbsp;x.Id.IntegerValue.ToString()&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;.&quot;</span>;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Util</span>.InfoMsg2(&nbsp;result,&nbsp;id_list&nbsp;);\n&nbsp;&nbsp;}\n \n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Retrieve&nbsp;all&nbsp;beam&nbsp;family&nbsp;instances&nbsp;</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;intersecting&nbsp;two&nbsp;columns,&nbsp;cf.</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;http://forums.autodesk.com/t5/revit-api/check-to-see-if-beam-exists/m-p/6223562</span>\n&nbsp;&nbsp;<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>\n&nbsp;&nbsp;&nbsp;&nbsp;GetBeamsIntersectingTwoColumns(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;column1,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Element</span>&nbsp;column2&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;column1.Document;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;column2.Document.GetHashCode()&nbsp;!=&nbsp;doc.GetHashCode()&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">throw</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ArgumentException</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;Expected&nbsp;two&nbsp;columns&nbsp;from&nbsp;same&nbsp;document.&quot;</span>&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>&nbsp;intersectingStructuralFramingElements\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;doc&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfClass(&nbsp;<span style=\"color:blue;\">typeof</span>(&nbsp;<span style=\"color:#2b91af;\">FamilyInstance</span>&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.OfCategory(&nbsp;<span style=\"color:#2b91af;\">BuiltInCategory</span>.OST_StructuralFraming&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsElementFilter</span>(&nbsp;column1&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementIntersectsElementFilter</span>(&nbsp;column2&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;n&nbsp;=&nbsp;intersectingStructuralFramingElements.Count&lt;<span style=\"color:#2b91af;\">Element</span>&gt;();\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;result&nbsp;=&nbsp;<span style=\"color:blue;\">string</span>.Format(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#a31515;\">&quot;{0}&nbsp;structural&nbsp;framing&nbsp;family&nbsp;instance{1}&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;intersect{2}&nbsp;the&nbsp;two&nbsp;beams{3}&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n,&nbsp;<span style=\"color:#2b91af;\">Util</span>.PluralSuffix(&nbsp;n&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;1&nbsp;==&nbsp;n&nbsp;?&nbsp;<span style=\"color:#a31515;\">&quot;s&quot;</span>&nbsp;:&nbsp;<span style=\"color:#a31515;\">&quot;&quot;</span>&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Util</span>.DotOrColon(&nbsp;n&nbsp;)&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;id_list&nbsp;=&nbsp;0&nbsp;==&nbsp;n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?&nbsp;<span style=\"color:blue;\">string</span>.Empty\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;<span style=\"color:blue;\">string</span>.Join(&nbsp;<span style=\"color:#a31515;\">&quot;,&nbsp;&quot;</span>,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;intersectingStructuralFramingElements\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Select&lt;<span style=\"color:#2b91af;\">Element</span>,&nbsp;<span style=\"color:blue;\">string</span>&gt;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&gt;&nbsp;x.Id.IntegerValue.ToString()&nbsp;)&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span style=\"color:#a31515;\">&quot;.&quot;</span>;\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Util</span>.InfoMsg2(&nbsp;result,&nbsp;id_list&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;intersectingStructuralFramingElements;\n&nbsp;&nbsp;}\n</pre>"
  }
]