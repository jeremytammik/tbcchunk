[
  {
    "original_filename": "1410_delete_print_setup",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<!---\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\n- 11556999 [Export to DWF / PrintSetup]\n\n- delete print setup:\n  http://forums.autodesk.com/t5/revit-api/delete-printsetup-and-viewsheetsettings/m-p/6063449\n\n- reload dll for debugging without restart\n  http://stackoverflow.com/questions/33525908/revit-api-load-command-auto-reload\n\n- draw a curve:\n  http://forums.autodesk.com/t5/revit-api/draw-curve-in-activeuidocument-document-using-ilist-lt-xyz-gt/td-p/6063446\n\n- distance from family instance to floor or elevation\n  http://forums.autodesk.com/t5/revit-api/elevation-of-family-instance-from-floor-or-level-below-it/m-p/6058148\n\n#dotnet #csharp\n#fsharp #python\n#grevit\n#responsivedesign #typepad\n#ah8 #augi #dotnet\n#stingray #rendering\n#3dweb #3dviewAPI #html5 #threejs #webgl #3d #mobile #vr #ecommerce\n#Markdown #Fusion360 #Fusion360Hackathon\n#javascript\n#RestSharp #restAPI\n#mongoosejs #mongodb #nodejs\n#rtceur\n#xaml\n#3dweb #a360 #3dwebaccel #webgl @adskForge\n@AutodeskReCap @Adsk3dsMax\n#revitAPI #bim #aec #3dwebcoder #adsk #adskdevnetwrk @jimquanci @keanw\n#au2015 #rtceur\n#eraofconnection\n#RMS @researchdigisus\n@adskForge #3dwebaccel\n#a360\n @github\n\nRevit API, Jeremy Tammik, akn_include\n\nIndex, Debug, Curves, Distance, Deleting PrintSetup #revitAPI #3dwebcoder @AutodeskRevit #bim #aec #adsk #adskdevnetwrk\n\nHere is another bunch of issues addressed in\nthe Revit API discussion forum and\nelsewhere in the past day or two\n&ndash; The Building Coder blog source text and index\n&ndash; Reloading add-in DLL for debugging without restart\n&ndash; Drawing curves from a list of points\n&ndash; Determining the distance of a family instance to the floor or elevation\n&ndash; Deleting a PrintSetup or ViewSheetSetting...\n\n-->"
  },
  {
    "original_filename": "1410_delete_print_setup",
    "header_text": "Index, Debug, Curves, Distance, Deleting PrintSetup",
    "local_header_href": "#index-debug-curves-distance-deleting-printsetup",
    "chunk_text": "### Index, Debug, Curves, Distance, Deleting PrintSetup\n\nHere is another bunch of issues addressed in\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api/bd-p/160) and\nelsewhere in the past day or two:\n\n- [The Building Coder blog source text and index](#2)\n- [Reloading add-in DLL for debugging without restart](#3)\n- [Drawing curves from a list of points](#4)\n- [Determining the distance of a family instance to the floor or elevation](#5)\n- [Deleting a PrintSetup or ViewSheetSetting](#6)"
  },
  {
    "original_filename": "1410_delete_print_setup",
    "header_text": "<a name=\"2\"></a>The Building Coder Blog Source Text and Index",
    "local_header_href": "#a-name2athe-building-coder-blog-source-text-and-index",
    "chunk_text": "#### <a name=\"2\"></a>The Building Coder Blog Source Text and Index\n\nAs you may have noticed, I published\n[The Building Coder entire source text and complete index on GitHub](http://thebuildingcoder.typepad.com/blog/2016/02/tbc-the-building-coder-source-and-index-on-github.html) last week.\n\nIf you look now at the right hand side bar or the navigation bar at the bottom, you will see the two new\nentries [index](https://jeremytammik.github.io/tbc/a)\nand [source](https://github.com/jeremytammik/tbc) that take you straight there.\n\n<center>\n<img src=\"img/index_finger.jpg\" alt=\"Index finger\" width=\"360\">\n</center>\n\nI hope you find the complete index and full source text access useful!"
  },
  {
    "original_filename": "1410_delete_print_setup",
    "header_text": "<a name=\"3\"></a>Reloading Add-in DLL for Debugging Without Restart",
    "local_header_href": "#a-name3areloading-add-in-dll-for-debugging-without-restart",
    "chunk_text": "#### <a name=\"3\"></a>Reloading Add-in DLL for Debugging Without Restart\n\nWe have often dealt here with topics\naround [edit and continue, debug without restart and 'live development'](http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.49).\n\nThis note is just to point out another contribution to that series, a StackOverflow question\non [Revit API load command &ndash; auto reload](http://stackoverflow.com/questions/33525908/revit-api-load-command-auto-reload),\nin case you are interested in this too."
  },
  {
    "original_filename": "1410_delete_print_setup",
    "header_text": "<a name=\"4\"></a>Drawing Curves from a List of Points",
    "local_header_href": "#a-name4adrawing-curves-from-a-list-of-points",
    "chunk_text": "#### <a name=\"4\"></a>Drawing Curves from a List of Points\n\nThis is a very common need, brought up again by Dirk Neethling in the thread\non [drawing a curve in ActiveUIDocument.Document using IList&lt;XYZ&gt;](http://forums.autodesk.com/t5/revit-api/draw-curve-in-activeuidocument-document-using-ilist-lt-xyz-gt/td-p/6063446):\n\n**Question:** I'm trying to draw a contiguous curve in an ActiveUIDocument.Document, using a List of `XYZ` objects.\nMost examples draw a curve in a FamilyDocument, and I could not adapt it for an ActiveUIDocument.Document.\nIs it necessary to create a plane for such a curve?\n\n**Answer:** Yes, it is.\n\nYou can create a model curve or a detail curve, and both reside on a sketch plane.\n\nIf you care about efficiency, you might care to reuse the sketch planes as much as possible.\n\nNote that some existing samples create a new sketch plane for each individual curve, which is not a nice thing to do.\n\nThe Building Coder provides a number of samples, e.g.:\n\n- [Model and Detail Curve Colour](http://thebuildingcoder.typepad.com/blog/2010/01/model-and-detail-curve-colour.html)\n- [Detail Curve Must Indeed lie in Plane](http://thebuildingcoder.typepad.com/blog/2010/05/detail-curve-must-indeed-lie-in-plane.html)\n- [Model Curve Creator](http://thebuildingcoder.typepad.com/blog/2010/05/model-curve-creator.html)\n- [Generating a MidCurve Between Two Curve Elements](http://thebuildingcoder.typepad.com/blog/2013/08/generating-a-midcurve-between-two-curve-elements.html)\n\nA `Creator` model curve helper class is also included in [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples),\nin the module [Creator.cs](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/Creator.cs).\n\nFurthermore, the `CmdDetailCurves` sample command shows how to create detail lines, in the\nmodule [CmdDetailCurves.cs](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdDetailCurves.cs).\n\nThe GitHub repository master branch is always up to date, and previous versions of the Revit API are supported by\ndifferent [releases](https://github.com/jeremytammik/the_building_coder_samples/releases).\n\nAs you should probably know if you are reading this, detail lines can only be created and viewed in a plan view.\n\nAlso, it is useful to know that the view graphics and visibility settings enable you to control the model line appearance, e.g. colour and line type."
  },
  {
    "original_filename": "1410_delete_print_setup",
    "header_text": "<a name=\"5\"></a>Determining the Distance of a Family Instance to the Floor or Elevation",
    "local_header_href": "#a-name5adetermining-the-distance-of-a-family-instance-to-the-floor-or-elevation",
    "chunk_text": "#### <a name=\"5\"></a>Determining the Distance of a Family Instance to the Floor or Elevation\n\nHere is another common need, to determine\nthe [distance from family instance to the floor or elevation below](http://forums.autodesk.com/t5/revit-api/elevation-of-family-instance-from-floor-or-level-below-it/m-p/6058148),\nraised by Kailash Kute:\n\n**Question:** I want to calculate the elevation (distance) of a selected family instance with respect to the Floor or Level below it.\n\nHow to get the floor or level which is below the selected family instance?\n\nHow to get the elevation of the instance with respect to that level?\n\nLater:\n\nThe help text\non [finding geometry by ray projection](http://help.autodesk.com/view/RVT/2016/ENU/?guid=GUID-B3EE488D-2287-49A2-A772-C7164B84A648)\n([Revit 2014 Czech](http://forums.autodesk.com/t5/revit-api/elevation-of-family-instance-from-floor-or-level-below-it/m-p/6057571),\n[Revit 2015 English](http://help.autodesk.com/view/RVT/2014/CSY/?guid=GUID-B3EE488D-2287-49A2-A772-C7164B84A648)) provides\npart of the answer, but is valid only if there is a Floor below the family instance.\n\nIf I only have a Level below it, the ray passing through does not return any distance (proximity).\n\nNow my question gets filtered down to: How to find Intersection with Level?\n\n**Answer:** If all you need is the distance between the family instance and the level, I see a possibility for a MUCH easier approach:\n\nAsk the family instance for its bounding box and determine its bottom Z coordinate `Z1`.\n\nDetermine the elevation `Z0` of the level.\n\nThe distance you seek is `Z1 - Z0`.\n\n**Response:** A little bit of work around with points got from bounding box and done.\n\nWow, really a MUCH easier approach."
  },
  {
    "original_filename": "1410_delete_print_setup",
    "header_text": "<a name=\"6\"></a>Deleting a PrintSetup or ViewSheetSetting",
    "local_header_href": "#a-name6adeleting-a-printsetup-or-viewsheetsetting",
    "chunk_text": "#### <a name=\"6\"></a>Deleting a PrintSetup or ViewSheetSetting\n\nEirik Aasved Holst yesterday brought up and solved the question that regularly comes up on how\nto [delete PrintSetup and ViewSheetSettings](http://forums.autodesk.com/t5/revit-api/delete-printsetup-and-viewsheetsettings/m-p/6063449):\n\n**Question:** [TL;DR](https://en.wikipedia.org/wiki/TL;DR): Is there a way of deleting a specific PrintSetup and ViewSheetSetting programmatically if I know its name?\n\nLong version:\n\nI'm writing a function that can print a large set of sheets in various paper sizes to separate/combined PDFs.\n\nTo be able to apply the PrintSetup, it needs to be set in an \"in-session\" state and saved using `SaveAs()` (to my knowledge).\n\nBut after saving an \"in-session\"-PrintSetup to a new PrintSetup, I cannot find a way of deleting said new PrintSetup.\n\nAfter the PrintManager has printed the sheets, I'm stuck with lots of temporary PrintSetups. The same goes for ViewSheetSettings.\n\n<pre class=\"code\">\n  try\n  {\n    pMgr.PrintSetup.Delete();\n    pMgr.ViewSheetSetting.Delete();\n  }\n  catch (Exception ex)\n  {\n    //Shows 'The <in-session> print setup cannot be deleted'\n    TaskDialog.Show(\"REVIT\", ex.Message);\n  }\n</pre>\n\nSo the problem is: I'm not able to apply the PrintSetup and ViewSheetSettings unless I'm using them \"in-session\" and saving them using SaveAs, and I'm not able to delete the PrintSetup and ViewSheetSettings afterwards.\n\nHas anyone experienced similar issues, or found a way to solve it?\n\n**Answer:** This discussion\non [setting the ViewSheetSetting.InSession.Views property](http://stackoverflow.com/questions/14946217/setting-viewsheetsetting-insession-views-property) makes\none brief mention of deleting a print setting, afaik can tell.\n\nThis other one\non [PrinterManager PrintSetup not applying settings](http://forums.autodesk.com/t5/revit-api/printermanager-printsetup-do-not-apply-settings/td-p/3676618) appears\nto suggest a similar approach.\n\n**Response:** These links unfortunately do not help much.\n\nIt would be nice if it was possible to loop through the saved PrintSetup's, or at least get a PrintSetup if you knew it's name, so that you can delete it.\n\nIn the thread\non [PrinterManager PrintSetup not applying settings](http://forums.autodesk.com/t5/revit-api/printermanager-printsetup-do-not-apply-settings/td-p/3676618),\nthe user aricke mentions:\n\n> Note that once you have done the SaveAs, you can then delete the newly saved PrintSetup.\n\nI cannot seem to get that to work; even the following code raises an exception:\n\n<pre class=\"code\">\n  pSetup.SaveAs(\"tmp\");\n  pSetup.Delete();\n</pre>\n\n**Solution:** I finally managed to create a CleanUp-method that works. If others are interested, here it goes:\n\n<pre class=\"code\">\n&nbsp; <span class=\"blue\">private</span> <span class=\"blue\">void</span> CleanUp( <span class=\"teal\">Document</span> doc )\n&nbsp; {\n&nbsp; &nbsp; <span class=\"blue\">var</span> pMgr = doc.PrintManager;\n&nbsp; &nbsp; <span class=\"blue\">using</span>( <span class=\"blue\">var</span> trans = <span class=\"blue\">new</span> <span class=\"teal\">Transaction</span>( doc ) )\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; trans.Start( <span class=\"maroon\">&quot;CleanUp&quot;</span> );\n&nbsp; &nbsp; &nbsp; CleanUpTemporaryViewSheets( doc, pMgr );\n&nbsp; &nbsp; &nbsp; CleanUpTemporaryPrintSettings( doc, pMgr );\n&nbsp; &nbsp; &nbsp; trans.Commit();\n&nbsp; &nbsp; }\n&nbsp; }\n&nbsp;\n&nbsp; <span class=\"blue\">private</span> <span class=\"blue\">void</span> CleanUpTemporaryPrintSettings(\n&nbsp; &nbsp; <span class=\"teal\">Document</span> doc, <span class=\"teal\">PrintManager</span> pMgr )\n&nbsp; {\n&nbsp; &nbsp; <span class=\"blue\">var</span> printSetup = pMgr.PrintSetup;\n&nbsp; &nbsp; <span class=\"blue\">foreach</span>( <span class=\"blue\">var</span> printSettingsToDelete\n&nbsp; &nbsp; &nbsp; <span class=\"blue\">in</span> ( <span class=\"blue\">from</span> element\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"blue\">in</span> <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc )\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .OfClass( <span class=\"blue\">typeof</span>( <span class=\"teal\">PrintSetting</span> ) )\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .ToElements()\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"blue\">where</span> element.Name.Contains( _tmpName )\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; element.IsValidObject\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"blue\">select</span> element <span class=\"blue\">as</span> <span class=\"teal\">PrintSetting</span> )\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .ToList()\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .Distinct( <span class=\"blue\">new</span> EqualElementId() ) )\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; printSetup.CurrentPrintSetting\n&nbsp; &nbsp; &nbsp; &nbsp; = pMgr.PrintSetup.InSession;\n&nbsp;\n&nbsp; &nbsp; &nbsp; printSetup.CurrentPrintSetting\n&nbsp; &nbsp; &nbsp; &nbsp; = printSettingsToDelete <span class=\"blue\">as</span> <span class=\"teal\">PrintSetting</span>;\n&nbsp;\n&nbsp; &nbsp; &nbsp; pMgr.PrintSetup.Delete();\n&nbsp; &nbsp; }\n&nbsp; }\n&nbsp;\n&nbsp; <span class=\"blue\">private</span> <span class=\"blue\">void</span> CleanUpTemporaryViewSheets(\n&nbsp; &nbsp; <span class=\"teal\">Document</span> doc, <span class=\"teal\">PrintManager</span> pMgr )\n&nbsp; {\n&nbsp; &nbsp; <span class=\"blue\">var</span> viewSheetSettings = pMgr.ViewSheetSetting;\n&nbsp; &nbsp; <span class=\"blue\">foreach</span>( <span class=\"blue\">var</span> viewSheetSetToDelete\n&nbsp; &nbsp; &nbsp; <span class=\"blue\">in</span> ( <span class=\"blue\">from</span> element\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"blue\">in</span> <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc )\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .OfClass( <span class=\"blue\">typeof</span>( <span class=\"teal\">ViewSheetSet</span> ) )\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .ToElements()\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"blue\">where</span> element.Name.Contains( _tmpName )\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; element.IsValidObject\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"blue\">select</span> element <span class=\"blue\">as</span> <span class=\"teal\">ViewSheetSet</span> )\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .ToList()\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .Distinct( <span class=\"blue\">new</span> EqualElementId() ) )\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; viewSheetSettings.CurrentViewSheetSet\n&nbsp; &nbsp; &nbsp; &nbsp; = pMgr.ViewSheetSetting.InSession;\n&nbsp;\n&nbsp; &nbsp; &nbsp; viewSheetSettings.CurrentViewSheetSet\n&nbsp; &nbsp; &nbsp; &nbsp; = viewSheetSetToDelete <span class=\"blue\">as</span> <span class=\"teal\">ViewSheetSet</span>;\n&nbsp;\n&nbsp; &nbsp; &nbsp; pMgr.ViewSheetSetting.Delete();\n&nbsp; &nbsp; }\n&nbsp; }\n</pre>\n\nMany thanks to Eirik for discovering and sharing this solution!"
  }
]