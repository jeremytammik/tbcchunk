[
  {
    "original_filename": "1640_part_atom_direct",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<!--\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n\n#RevitAPI @AutodeskRevit #bim #dynamobim @AutodeskForge #ForgeDevCon \n\nA discussion with H책vard Dagsvik on the use of <code>TransmissionData</code>, standalone access to the <code>BasicFileInfo</code> without the need for a valid Revit API context, and a Revit-independent method replacing\n<code>Family</code> <code>ExtractPartAtom</code>\n&ndash; No document required for <code>TransmissionData</code> access\n&ndash; <code>TransmissionData</code> requires a valid Revit API context\n&ndash; Standalone <code>GetFamilyXmlData</code> method replacing <code>ExtractPartAtom</code>\n&ndash; Windows explorer <code>BasicFileInfo</code> right click utility...\n\n--->"
  },
  {
    "original_filename": "1640_part_atom_direct",
    "header_text": "Standalone BasicFileInfo and ExtractPartAtom",
    "local_header_href": "#standalone-basicfileinfo-and-extractpartatom",
    "chunk_text": "### Standalone BasicFileInfo and ExtractPartAtom\n\nI had an interesting discussion with\nH책vard Dagsvik of [Symetri](https://www.symetri.com) on\nthe use of `TransmissionData` and standalone access to the `BasicFileInfo`, without the need for a valid Revit API context, in the course of which H책vard shared his Revit-independent `GetFamilyXMLData` method implementation, replacing\nthe Revit API [`Family` `ExtractPartAtom` method](http://www.revitapidocs.com/2018.1/d477cf8f-0dfe-4055-a787-315c84ef5530.htm):\n\n- [No document required for `TransmissionData` access](#2) \n- [`TransmissionData` requires a valid Revit API context](#3) \n- [Standalone `GetFamilyXmlData` method replacing `ExtractPartAtom`](#4) \n- [Windows explorer `BasicFileInfo` right click utility](#5) \n\n####<a name=\"2\"></a>No Document Required for TransmissionData Access\n\n**Question:** I fear I know the answer to this one already, but I will try to ask you anyway &nbsp; :-)\n \nWhen reading `TransmissionData` or `BasicFileInfo`, you don't need a document:\n\n<center>\n<img src=\"img/hd_link_manager.jpg\" alt=\"Link Manager\" width=\"292\"/>\n</center>\n \nFrom the `TransmissionData`, I can access the `ExternalFileReference` via `GetLastSavedReferenceData`, etc.\n\nThis works fine:\n \n<center>\n<img src=\"img/hd_external_file_reference.png\" alt=\"ExternalFileReference\" width=\"500\"/>\n</center>\n \nBut, if I implement the same functionality in a standalone executable and use my own TransmissionData function...\n\n<center>\n<img src=\"img/hd_transmissiondata.png\" alt=\"Standalone TransmissionData\" width=\"430\"/>\n</center>\n \nIt throws this exception on the first method that uses the Revit API:\n\n<center>\n<img src=\"img/hd_requires_revit_api.png\" alt=\"Revit API required\" width=\"361\"/>\n</center>\n \nNo Revit process involved here, of course.\n\nIt's most probably as you have written before:\n \n> In general, as noted in both there and in the summary above, it is not possible to access Revit data or make any use whatsoever of the Revit API from outside of Revit.\n\n> Moreover, you need to be in a valid Revit API context to make any Revit API calls.\n\nMaybe these methods still need the Revit `Application` or `UIApplication` in some way &ndash; or they are just locked for some other reason.\n \nOr, should this work and it is just as the message says:\n\n> ... one of the dependencies to RevitAPI.dll is not found?\n\nI'm 99% sure it finds RevitAPI.dll.\n \nAfter all, this seems like metadata that logically could be available without Revit.\n\n\n####<a name=\"3\"></a>TransmissionData Requires a Valid Revit API Context\n\n**Answer:** Yes indeed, you do know the answer: use of the Revit API `TransmissionData` object requires a valid Revit API context.\n \nIn other words, you can read data from an unopened Revit document, but you can only do so from within a valid Revit session.\n \nHowever, there are many ways of getting at the basic file info without use of the Revit API, e.g.,\n[determining RVT file version using Python](http://thebuildingcoder.typepad.com/blog/2017/06/determining-rvt-file-version-using-python.html), or\none of the other approaches discussed there.\n\n\n####<a name=\"4\"></a>Standalone GetFamilyXmlData Method Replacing ExtractPartAtom\n\n**Response:** That's great; I will definitely try to make use of Victor's raw data approach on `BasicFileInfo`.\n \nIs it thinkable that `TransmissionData` and `BasicFileInfo` doesn't really need Revit?\n\nThat they just happen to be packaged within a larger library that overall can`t be used without Revit?\n\nMaybe it is a just licensing policy decision, even though users always have a license.\n\nMeaning, if those methods where refactored out, it could have worked, technically?\n \nIf so, let me be the first one who makes the request to get them refactored &nbsp; :-)\n \nFor example, take the `Family.ExtractPartAtom` method.\n\nIt exports an XML file with all family types, including parameters and values for each type.\n\nBut we don't use it.\n\nFirst, because I (luckily) didn't realize that the Revit API provides this method.\n\nSecondly, because my own custom method is much faster than `ExtractPartAtom`.\n\nMore importantly, it can be used without Revit, and it doesn't save to an external XML file that we don't need anyway.\n\nIt just returns the raw XML string that is parsed to JSON before it enters a database.\n\nMethod here:\n \n<pre class=\"code\">\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Faster&nbsp;ExtractPartAtom&nbsp;reimplementation,</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;independent&nbsp;of&nbsp;Revit&nbsp;API,&nbsp;for&nbsp;standalone&nbsp;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;external&nbsp;use.&nbsp;By&nbsp;H책vard&nbsp;Dagsvik,&nbsp;Symetri.</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&nbsp;name</span><span style=\"color:gray;\">=</span><span style=\"color:gray;\">&quot;</span>family_file_path<span style=\"color:gray;\">&quot;</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">Family&nbsp;file&nbsp;path</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">param</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span><span style=\"color:green;\">XML&nbsp;data</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">returns</span><span style=\"color:gray;\">&gt;</span>\n<span style=\"color:blue;\">static</span>&nbsp;<span style=\"color:blue;\">string</span>&nbsp;GetFamilyXmlData(\n&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;family_file_path&nbsp;)\n{\n&nbsp;&nbsp;<span style=\"color:blue;\">byte</span>[]&nbsp;array&nbsp;=&nbsp;<span style=\"color:#2b91af;\">File</span>.ReadAllBytes(&nbsp;family_file_path&nbsp;);\n \n&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;string_file&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Encoding</span>.UTF8.GetString(&nbsp;array&nbsp;);\n \n&nbsp;&nbsp;<span style=\"color:blue;\">string</span>&nbsp;xml_data&nbsp;=&nbsp;<span style=\"color:blue;\">null</span>;\n \n&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;start&nbsp;=&nbsp;string_file.IndexOf(&nbsp;<span style=\"color:#a31515;\">&quot;&lt;entry&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;start&nbsp;==&nbsp;-1&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Print(&nbsp;<span style=\"color:#a31515;\">&quot;XML&nbsp;start&nbsp;not&nbsp;detected:&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;family_file_path&nbsp;);\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">else</span>\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;end&nbsp;=&nbsp;string_file.IndexOf(&nbsp;<span style=\"color:#a31515;\">&quot;/entry&gt;&quot;</span>&nbsp;);\n \n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;end&nbsp;==&nbsp;-1&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Print(&nbsp;<span style=\"color:#a31515;\">&quot;XML&nbsp;end&nbsp;not&nbsp;detected:&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;family_file_path&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">else</span>\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;=&nbsp;end&nbsp;+&nbsp;7;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">int</span>&nbsp;length&nbsp;=&nbsp;end&nbsp;-&nbsp;start;\n \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">if</span>(&nbsp;length&nbsp;&lt;=&nbsp;0&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Debug</span>.Print(&nbsp;<span style=\"color:#a31515;\">&quot;XML&nbsp;length&nbsp;is&nbsp;0&nbsp;or&nbsp;less:&nbsp;&quot;</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;family_file_path&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">else</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xml_data&nbsp;=&nbsp;string_file.Substring(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start,&nbsp;length&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n&nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;xml_data;\n}\n</pre>\n\nI added H책vard's method to the existing external\ncommand [CmdPartAtom](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdPartAtom.cs)\nin [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples) to try this out, in\n[release 2018.0.138.4](httpshttps://github.com/jeremytammik/the_building_coder_samples/releases/tag/2018.0.138.4), and cleaned up the existing code calling the built-in Revit API method `ExtractPartAtomFromFamilyFile` at the same time.\n\n\n####<a name=\"5\"></a>Windows Explorer BasicFileInfo Right Click Utility\n\nH책vard also used Victor's code as a base to implement his\nown [Windows Explorer `BasicFileInfo` right click utility](https://www.screencast.com/t/o78ugUUwY), cf.\nthe [20-second recording of his RVT BasicFileInfo in Windows Explorer](https://youtu.be/WJCsNywPMVU)\n[^](zip/ExplorerBasicFileInfo.mp4):\n\n<!---\n<center>\n <object id=\"scPlayer\"  width=\"480\" height=\"389\" type=\"application/x-shockwave-flash\" data=\"https://content.screencast.com/users/HD12310/folders/Jing/media/0d7dc04f-2085-44ab-8b4b-e98d53f91f2d/jingswfplayer.swf\" >\n <param name=\"movie\" value=\"https://content.screencast.com/users/HD12310/folders/Jing/media/0d7dc04f-2085-44ab-8b4b-e98d53f91f2d/jingswfplayer.swf\" />\n <param name=\"quality\" value=\"high\" />\n <param name=\"bgcolor\" value=\"#FFFFFF\" />\n <param name=\"flashVars\" value=\"thumb=https://content.screencast.com/users/HD12310/folders/Jing/media/0d7dc04f-2085-44ab-8b4b-e98d53f91f2d/FirstFrame.jpg&containerwidth=1161&containerheight=941&content=https://content.screencast.com/users/HD12310/folders/Jing/media/0d7dc04f-2085-44ab-8b4b-e98d53f91f2d/2018-04-04_2315.swf&blurover=false\" />\n <param name=\"allowFullScreen\" value=\"true\" />\n <param name=\"scale\" value=\"showall\" />\n <param name=\"allowScriptAccess\" value=\"always\" />\n <param name=\"base\" value=\"https://content.screencast.com/users/HD12310/folders/Jing/media/0d7dc04f-2085-44ab-8b4b-e98d53f91f2d/\" />\n Unable to display content. Adobe Flash is required.\n</object>\n</center>\n--->\n\n<center>\n<iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/WJCsNywPMVU?rel=0\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n</center>\n\nWorks nicely &nbsp; :-)\n\nNot on all Revit files, though.\n\nWorkshared files seem to not work, and a few others.\n\nThe data is probably there, just have to tweak it a bit more.\n \nMany thanks to H책vard for raising this question and sharing his standalone implementation!"
  }
]