[
  {
    "original_filename": "1009_revit_server_soap_vbs",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"http://thebuildingcoder.typepad.com/google-code-prettify/run_prettify.js\"></script>\n</head>"
  },
  {
    "original_filename": "1009_revit_server_soap_vbs",
    "header_text": "Revit Server API Access and VBScript",
    "local_header_href": "#revit-server-api-access-and-vbscript",
    "chunk_text": "<h3>Revit Server API Access and VBScript</h3><p>I recently summarised the material describing the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/08/the-revit-server-rest-api.html\">\nRevit Server API</a>.</p><p>Apparently, that still does not cover everything.</p><p>You want more? Well, here is more!</p><p>It led to the following two new queries and further clarification of this topic:</p><ul>\n<li><a href=\"#2\">SOAP API and no access to Admin service</a></li>\n<li><a href=\"#3\">Accessing Revit Server using VBScript</a></li>\n</ul><p>Here are the gory details in all their glory:</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "1009_revit_server_soap_vbs",
    "header_text": "SOAP API and No Access to Admin Service",
    "local_header_href": "#soap-api-and-no-access-to-admin-service",
    "chunk_text": "<h4>SOAP API and No Access to Admin Service</h4><p><strong>Question:</strong> Can you please let me know the cause for the 'Endpoint not found' error message?</p><p>I'm trying to browse the AdminRestService.Svc through IIS(7.0):</p><center>\n<img alt=\"AdminRestService\" src=\"img/rs_AdminRestServices.jpg\" width=\"600\"/>\n</center><p>It always reports 'Endpoint not found':</p><center>\n<img alt=\"Endpoint Not Found\" src=\"img/rs_ep_not_found.png\" width=\"600\"/>\n</center><p>Am I missing some configuration setting?</p><p>I tried both ways, using the Web request method in .NET and also through IIS.</p><p>I searched the blog and Internet but couldn't find any resolution or articles on any Revit 2014 AdminRestService 'Endpoint not found' issues.</p><p>Am I right in assuming that the Application.CopyModel method is one of the methods on the above AdminRestService.svc service?</p><p>By browsing to\n\n<a href=\"http://localhost/RevitServerAdmin2014/default.aspx\">\nhttp://localhost/RevitServerAdmin2014/default.aspx</a>,\n\nI am able to connect successfully through the user interface and can even see all the models available on the server:</p><center>\n<img alt=\"AdminRestService\" src=\"img/rs_revit_server_admin.png\" width=\"600\"/>\n</center><p>As said, I'm just unable to use the\n\n<a href=\"http://Localhost/RevitServerAdminRESTService/AdminRESTService.svc\">\nhttp://Localhost/RevitServerAdminRESTService/AdminRESTService.svc</a> URL.\n\nIt always replies with 'Endpoint not found.'</p><p>Currently I'm trying to use the RevitserverTool.exe utility and its createLocalRvt command to copy the Revit model to a different location within the server.\nI hope this works.</p><p>My goal is to programmatically copy the model, e.g. Project-X.Rvt in the screen shot above, to a different location, open the file in a Revit MEP client and start the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/08/the-revit-server-rest-api.html\">\nextraction process using the add-in</a> I\n\ndeveloped.</p><p><strong>Answer:</strong> Did you connect successfully through the user interface?</p><p>Did you look at\n\n<a href=\"http://wikihelp.autodesk.com/Revit/enu/2013/Help/00005-More_Inf0/0315-Administ315/0319-Revit_Se319/0325-Revit_Se325/0326-Connecti326\">\nConnecting to the Revit Server Administrator</a>?</p><p>Have you implemented it along the lines of the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/11/revit-server-rest-api.html\">revitserverviewer.zip sample</a>?</p><p>Does that sample work correctly for you, adapted to your server context?</p><p>Good.\nThat is all you have to worry about.</p><p>The behaviour you are seeing where the admin service endpoint cannot be browsed is as expected.</p><p>However, other endpoints, such as those available for the model service, should be just fine.</p><p>Why did you try to access the admin service?</p><p>The easiest and most efficient path for you will probably be to base your use of this API on the existing sample applications.</p><p>If they have no need of the admin service, the you presumably will not either.</p><p>Are you seeing any functional failures that lead you to believe there is an issue with your server?</p><p>Or were you just surprised to note the behaviour described below?</p><p>If you are running into some kind of blocking problem, it is not related to the inability to browse the admin service.\nThis has never been possible.</p><p>The Revit Server admin UI uses AdminService and not AdminRESTService.\nIt is possible that the REST service is not working on your machine but AdminService is.</p><p>Here are some important points to clarify about Revit Server:</p><ol>\n<li>REST service:</li>\n<ul>\n<li>It is RevitServerAdminRESTService2014.</li>\n<li>As said, it is <b>not</b> used by the admin UI.</li>\n<li>It is normal that you see 'Endpoint Not Found' when you access its base address\n\n<a href=\"http://localhost/RevitServerAdminRESTService2014/AdminRESTService.svc\">\nhttp://localhost/RevitServerAdminRESTService2014/AdminRESTService.svc</a>,\n\nbecause no resource corresponds to this base address.</li>\n<li>You can refer to the REST API help documentation for the detailed use.</li>\n</ul>\n<li>The RevitserverTool.exe tool also does <b>not</b> connect to the REST service; instead it communicates with the Model service, which is a SOAP service.</li>\n<li>Similarly, the Revit API call Application.CopyModel (as part of Revit) talks with the model service.</li>\n</ol><p>That should take care of that issue.</p><p>Next:</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1009_revit_server_soap_vbs",
    "header_text": "VBScript Access to the Revit Server REST API",
    "local_header_href": "#vbscript-access-to-the-revit-server-rest-api",
    "chunk_text": "<h4>VBScript Access to the Revit Server REST API</h4><p>Here is an example by Jeff Campbell of\n\n<a href=\"http://www.burnsmcd.com\">Burns &amp; McDonnell</a> showing\n\nhow to access Revit Server and download project files using both VBScript and AutoIT:</p><p><strong>Question:</strong> Is it possible to access the REST API with VBScript?\nI tried running a small script using the Microsoft.XMLHTTP method but am unable to get a valid return.</p><p><strong>Answer:</strong> The Revit Server API is simple, and so is REST.</p><p>Basically, everything there is to say about it is listed (or pointed to) in the previous discussion of the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/08/the-revit-server-rest-api.html\">\nRevit Server REST API</a>.</p><p>Regarding the use of REST from VBScript, I would suggest a simple Google search, e.g. for\n\n<a href=\"http://lmgtfy.com/?q=rest+VBScript\">'rest VBScript'</a>.</p><p>I just tried it out, and the results look promising, so I think you are in luck.</p><p><strong>Response:</strong> Thank you!\nI got it worked out last night.</p><p>I was having an issue passing the headers after my initial open statement but I now have it working.</p><p>I started with your blog post, and that gave me the idea to try this with REST.</p><p>Here is the base that I am working from in both AutoIT and VBScript.</p><p>First, the VBS version, RESTCall.vbs:</p><pre class=\"prettyprint\">\n'======================================================\n' NAME: RESTCall.vbs\n'\n' AUTHOR: Jeff Campbell , Burns and McDonnell\n' DATE  : 8/22/2013\n'\n' COMMENT:\n'  Proof of concept testing for using REST API\n'  calls to Revit server for addition\n'  into the BMCD local copy tool.\n'======================================================\n\nOption Explicit\n\n'Declare variable section\n\nDim restReq\nDim url\nDim userName\nDim userMachine\nDim GUID\nDim outData\nDim StatusCode\nDim CleanGUID\nDim WshNetwork\n\n'Enviromental sets\n\nSet restReq = CreateObject (\"Microsoft.XMLHTTP\")\nSet WshNetwork = WScript.CreateObject(\"WScript.Network\")\n\n'Setup header section\n\nuserName = WshNetwork.UserName\nMsgBox userName,0,\"This is the logged on user\"\nuserMachine = WshNetwork.ComputerName\nMsgBox userMachine,0,\"This is the computer name\"\nGUID = GetGuid\n\n'MsgBox GUID,0,\"This is my GUID\"\n\nGUID = Replace(GUID,\"{\",\"\")\nGUID = Replace (GUID,\"}\",\"\")\nMsgBox GUID,40,\"This is me clean GUID\"\nSet WshNetwork = Nothing\n\n'Create the headers that we will need to make the request\n\nurl = \"http://.../RevitServerAdminRESTService2013/AdminRESTService.svc/ /Contents\"\n\nrestReq.open \"GET\", url, False\n\nrestReq.setRequestHeader \"User-Name\", userName\nrestReq.setRequestHeader \"User-Machine-Name\", userMachine\nrestReq.setRequestHeader \"Operation-GUID\", GUID\n\nrestReq.send(\"\")\n\noutData = restReq.ResponseText\nStatusCode = restReq.Status\n\nMsgBox StatusCode,0,\"Status\"\nMsgBox outData,0,\"My Data\"\nSet restReq = Nothing\n\n'------------User Function Section---------------------\n'GUID generator\n\nFunction GetGuid()\nSet restGUID = CreateObject (\"Scriptlet.TypeLib\")\n\tGetGuid = Left(CStr(restGUID.Guid), 38)\n\tSet restGUID = Nothing\nEnd Function\n</pre><p>I was originally headed down the VBScript path but once I figured out how to use the REST calls there, I applied the same principles in AutoIT and it worked fine for me.</p><p>Here is that version, RESTcall.au3:</p><pre class=\"prettyprint\">\n;Includes\n\n#Include &lt;WinAPI.au3&gt;\n#include &lt;Array.au3&gt;\n#include \"JSON.au3\"\n#include \"JSON_Translate.au3\"\n\n$restReq = ObjCreate(\"winhttp.winhttprequest.5.1\")\n$restGuid = _CreateGuid()\n\n;Dialogs for testing remark out for production use\n\nMsgBox (4096,\"My Computer Name\",@ComputerName)\nMsgBox (4096,\"My Name\",@UserName)\nMsgBox(4096, \"Generate Guid\", $restGuid)\n\n;REST Request Section\n\n$restReq.Open(\"GET\", \"http://.../RevitServerAdminRESTService2013/AdminRESTService.svc/ /Contents\", False)\n\n$restReq.setRequestHeader (\"User-Name\", @UserName)\n$restReq.setRequestHeader (\"User-Machine-Name\", @ComputerName)\n$restReq.setRequestHeader (\"Operation-GUID\", $restGuid)\n\n$restReq.Send()\n\n$oReceived = $restReq.ResponseText\n$oStatusCode = $restReq.Status\n\n;Dialog box of status code for troubleshooting\n\nMsgBox(4096, \"Status Code\", $oStatusCode())\n\nIf $oStatusCode == 200 then\n  ; The value of 2 overwrites the file if it already exists\n  $file = FileOpen(\"Received.txt\", 2)\n  FileWrite($file, $oReceived)\n  FileClose($file)\n  MsgBox(4096, \"My test for Nolan\", $oReceived ())\nEndIf\n\n;-------Section for called functions-------------------\n\nFunc _CreateGuid()\n  Local $Guid = DllStructCreate($tagGUID)\n\n  $Result = DllCall(\"OLE32.DLL\", \"dword\", \"CoCreateGuid\", \"ptr\", DllStructGetPtr($Guid))\n  $Result = _WinAPI_StringFromGUID(DllStructGetPtr($Guid))\n\n  $strresult = StringTrimLeft($Result, 1)\n  $strresult = StringTrimRight($strresult, 1)\n\n  Return $strresult\nEndFunc\n</pre><p>This is getting added to a 'copy down' tool that we created in AutoIT for our local copy creation.\nThe original tool was based on INI files that we keyed around each office file server.\nWhen I moved to Revit Server I simply modified it and continued using the INI files.\nThis has proven rather cumbersome since we need to track each filename for our projects.\nUsing some of the information in your blog and an AU presentation from Rob Howarth I decided to make some improvements for our 2014 roll out.\nThe new copy down tool will use the REST API to generate all of the information needed off of Revit Server.\nThis eliminates the need for the INI files and streamlines the amount of time it was taking to manage the system.</p><p>I am also using it to create various CMD files that we then use to automate some of our other processes.</p><p>Many thanks to Jeff for sharing this!</p>"
  }
]