[
  {
    "original_filename": "1622_get_crop_box_for_view",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<!--\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- get crop box for a given view\n  http://thebuildingcoder.typepad.com/blog/2013/09/rotating-a-plan-view.html#comment-3734421721\n\nEfficiently retrieve crop box for given view using #RevitAPI parameter filter @AutodeskRevit #bim #dynamobim @AutodeskForge #ForgeDevCon http://bit.ly/getcropboxforview\n\nKonrads Samulis shared a very nice solution to retrieve the crop box for a given view using a highly efficient parameter filter in\nhis comment on rotating a plan view.\nIn digging up this old thread, I found something quite curious in the API in 18.1, that I'm not sure was there before.\nThe method of using a temporary transaction (with rollback) to find the element id of the crop box was taking a very long time on a large model, so I did a bit of digging to see how I could improve it.\nI noticed that in the built-in parameter <code>ID_PARAM</code> of the crop box contains the element id of the view it's in.\nE.g., the crop box 'points' to the id of the view it is in using <code>ID_PARAM</code>...\n\n--->"
  },
  {
    "original_filename": "1622_get_crop_box_for_view",
    "header_text": "Efficiently Retrieve Crop Box for Given View",
    "local_header_href": "#efficiently-retrieve-crop-box-for-given-view",
    "chunk_text": "### Efficiently Retrieve Crop Box for Given View\n\nKonrads Samulis shared a very nice solution to retrieve the crop box for a given view using a highly efficient parameter filter in\nhis [comment](http://thebuildingcoder.typepad.com/blog/2013/09/rotating-a-plan-view.html#comment-3734421721)\non [rotating a plan view](http://thebuildingcoder.typepad.com/blog/2013/09/rotating-a-plan-view.html).\n\nIn his own words:\n\nIn digging up this old thread, I found something quite curious in the API in 18.1, that I'm not sure was there before.\n\nThe method of using a temporary transaction (with rollback) to find the element id of the crop box was taking a very long time on a large model, so I did a bit of digging to see how I could improve it.\n\nI noticed that in the built-in parameter `ID_PARAM` of the crop box contains the element id of the view it's in.\nE.g., the crop box 'points' to the id of the view it is in using `ID_PARAM`.\n\nThat got me thinking... why not use a parameter filter to retrieve it?\n\nSo... in VB.NET (because I'm an old school vber):\n\n<pre class=\"code\">\n<span style=\"color:blue;\">Public</span>&nbsp;<span style=\"color:blue;\">Function</span>&nbsp;GetELementIDOfCropBox(activeView&nbsp;<span style=\"color:blue;\">As</span>&nbsp;View,&nbsp;revDoc&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Document</span>)&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;provider&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">ParameterValueProvider</span>&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ParameterValueProvider</span>(<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>(<span style=\"color:blue;\">CInt</span>(<span style=\"color:#2b91af;\">BuiltInParameter</span>.ID_PARAM)))\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;ruleID_PARAM&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">FilterElementIdRule</span>&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilterElementIdRule</span>(provider,&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilterNumericEquals</span>(),&nbsp;activeView.Id)\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;filter&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">ElementParameterFilter</span>&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ElementParameterFilter</span>(ruleID_PARAM)\n&nbsp;&nbsp;<span style=\"color:blue;\">Dim</span>&nbsp;collector&nbsp;=&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(revDoc).WherePasses(filter).ToElementIds().Except(<span style=\"color:blue;\">New</span>&nbsp;List(<span style=\"color:blue;\">Of</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>)(<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>()&nbsp;{activeView.Id}))\n&nbsp;&nbsp;<span style=\"color:blue;\">Return</span>&nbsp;collector.FirstOrDefault\n<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">Function</span>\n</pre>\n\nThis can all be stuffed into one single statement:\n\n<pre class=\"code\">\n<span style=\"color:blue;\">Public</span>&nbsp;<span style=\"color:blue;\">Function</span>&nbsp;GetELementIDOfCropBoxShortened(activeView&nbsp;<span style=\"color:blue;\">As</span>&nbsp;View,&nbsp;revDoc&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">Document</span>)&nbsp;<span style=\"color:blue;\">As</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>\n&nbsp;&nbsp;<span style=\"color:blue;\">Return</span>&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(revDoc)\n&nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ElementParameterFilter</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilterElementIdRule</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ParameterValueProvider</span>(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>(<span style=\"color:blue;\">CInt</span>(<span style=\"color:#2b91af;\">BuiltInParameter</span>.ID_PARAM))),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">FilterNumericEquals</span>(),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;activeView.Id)))\n&nbsp;&nbsp;&nbsp;&nbsp;.ToElementIds()\n&nbsp;&nbsp;&nbsp;&nbsp;.Except(<span style=\"color:blue;\">New</span>&nbsp;List(<span style=\"color:blue;\">Of</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>)(<span style=\"color:blue;\">New</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>()&nbsp;{activeView.Id})).FirstOrDefault\n<span style=\"color:blue;\">End</span>&nbsp;<span style=\"color:blue;\">Function</span>\n</pre>\n\nMuch like your original, I had to exclude the element id of the view, as it also returns its own id from `ID_PARAM`.\n\nHope that this may help someone &ndash; I'm sure the Dynamo people who come here for inspiration will want to know this as well...\n\nMany thanks to Konrads for sharing this nice efficient solution!\n\nI ported it to C# and added it \nto [The Building Coder Samples](https://github.com/jeremytammik/the_building_coder_samples) \n[release 2018.0.135.2](https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2018.0.135.2) and\nthe extensive collection of filtered element examples in \nthe [module CmdCollectorPerformance.cs](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdCollectorPerformance.cs):\n\n<pre class=\"code\">\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;Return&nbsp;element&nbsp;id&nbsp;of&nbsp;crop&nbsp;box&nbsp;for&nbsp;a&nbsp;given&nbsp;view.</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;The&nbsp;built-in&nbsp;parameter&nbsp;ID_PARAM&nbsp;of&nbsp;the&nbsp;crop&nbsp;box&nbsp;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;contains&nbsp;the&nbsp;element&nbsp;id&nbsp;of&nbsp;the&nbsp;view&nbsp;it&nbsp;is&nbsp;used&nbsp;in;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;e.g.,&nbsp;the&nbsp;crop&nbsp;box&nbsp;&#39;points&#39;&nbsp;to&nbsp;the&nbsp;view&nbsp;using&nbsp;it&nbsp;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;via&nbsp;ID_PARAM.&nbsp;Therefore,&nbsp;we&nbsp;can&nbsp;use&nbsp;a&nbsp;parameter&nbsp;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;filter&nbsp;to&nbsp;retrieve&nbsp;all&nbsp;crop&nbsp;boxes&nbsp;with&nbsp;the&nbsp;</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;view&#39;s&nbsp;element&nbsp;id&nbsp;in&nbsp;that&nbsp;parameter.</span>\n  <span style=\"color:gray;\">///</span><span style=\"color:green;\">&nbsp;</span><span style=\"color:gray;\">&lt;/</span><span style=\"color:gray;\">summary</span><span style=\"color:gray;\">&gt;</span>\n  <span style=\"color:#2b91af;\">ElementId</span>&nbsp;GetCropBoxFor(&nbsp;<span style=\"color:#2b91af;\">View</span>&nbsp;view&nbsp;)\n  {\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">ParameterValueProvider</span>&nbsp;provider\n  &nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ParameterValueProvider</span>(&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementId</span>(&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<span style=\"color:blue;\">int</span>)&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.ID_PARAM&nbsp;)&nbsp;);\n   \n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">FilterElementIdRule</span>&nbsp;rule&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilterElementIdRule</span>(&nbsp;provider,&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilterNumericEquals</span>(),&nbsp;view.Id&nbsp;);\n   \n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">ElementParameterFilter</span>&nbsp;filter\n  &nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">ElementParameterFilter</span>(&nbsp;rule&nbsp;);\n   \n  &nbsp;&nbsp;<span style=\"color:blue;\">return</span>&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">FilteredElementCollector</span>(&nbsp;view.Document&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.WherePasses(&nbsp;filter&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.ToElementIds()\n  &nbsp;&nbsp;&nbsp;&nbsp;.Where&lt;<span style=\"color:#2b91af;\">ElementId</span>&gt;(&nbsp;a&nbsp;=&gt;&nbsp;a.IntegerValue&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!=&nbsp;view.Id.IntegerValue&nbsp;)\n  &nbsp;&nbsp;&nbsp;&nbsp;.FirstOrDefault&lt;<span style=\"color:#2b91af;\">ElementId</span>&gt;();\n  }\n</pre>\n\n<center>\n<img src=\"img/3d_view_section_box.png\" alt=\"3D view section box\" width=\"400\"/>\n</center>"
  }
]