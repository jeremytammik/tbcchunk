[
  {
    "original_filename": "1017_location_att_key_sched",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1017_location_att_key_sched",
    "header_text": "Determining Location Attributes and Retrieving Key Elements",
    "local_header_href": "#determining-location-attributes-and-retrieving-key-elements",
    "chunk_text": "<h3>Determining Location Attributes and Retrieving Key Elements</h3><p>Here are two issues that we have visited in the past and seem to be worth recapitulating and summarising, on determining the\n\n<a href=\"#2\">location attributes</a> of\n\nan element and retrieving all\n\n<a href=\"#3\">key elements in a key schedule</a>.</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "1017_location_att_key_sched",
    "header_text": "Determining the Location Attributes of a Component Element",
    "local_header_href": "#determining-the-location-attributes-of-a-component-element",
    "chunk_text": "<h4>Determining the Location Attributes of a Component Element</h4><p><strong>Question:</strong> I have extracted data from a Revit model via DBLink.</p><p>Now I would like to establish a relation between a component element and its location-centric attributes, specifically its Level, Space, and the Room it is located in.</p><p>For example, for a CAV Terminal Unit component, I can determine the building that it is in and the Level that it is on, but not the Space or Room containing it.</p><p>Can you provide any insight on how to properly identify these attributes?</p><p><strong>Answer:</strong> There are a number of different possibilities.</p><p>The simplest and most common one is to use the FamilyInstance Room and Space properties.</p><p>All elements that can be cast into FamilyInstance can be queried for their Level, Zone, Space, Room Name and Room Number properties.</p><p>You need to ensure that your models are correctly constructed, of course, or these properties may be unreliable.\nIf you find that to be the case, consult with an application engineer and product experts on how to fix it and ensure that this is avoided in the future.</p><p>If these properties do not fulfil your needs, or your element is not a family instance, there are several other ways as well.</p><p>Basically, all you need is some central point on the element of interest that can be passed in to the Document GetRoomAtPoint or GetSpaceAtPoint methods.</p><p>Such a point can be determined from the element Location property, bounding box, or from the element geometry.</p><p>We just recently looked at another example of using the GetRoomAtPoint method to\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/09/room-neighbours.html\">\ndetermine the neighbours of a room</a>.</p><p>For more complex queries, you can also use a filtered element collector in conjunction with the element location or bounding box.</p><p>In general, all search for and access to Revit database elements works through filtered element collectors.\nIt is the most efficient way, and in fact the only way.</p><p>I see you also mention DBLink.\nI cannot say much about that, since it is a closed subscription product.\nYou would have to ask product support whether you can customise it or include additional properties in the output it generates.\nWhat you certainly can do is use DBLink on its own as is, run your custom add-in generating additional data in parallel with it, and unite the two data streams in your analysis database.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1017_location_att_key_sched",
    "header_text": "Retrieving the Key Elements Used in a Key Schedule",
    "local_header_href": "#retrieving-the-key-elements-used-in-a-key-schedule",
    "chunk_text": "<h4>Retrieving the Key Elements Used in a Key Schedule</h4><p><strong>Question:</strong> Is it possible to get all key elements used in a key schedule?</p><p>For example, I have a room and create a room style schedule.\nThe parameter that is added to rooms is of storage type ElementId.\nI can then get that element from the document and it has parameters for each other parameter used in the key schedule that can be read or set.\nThis is great and gets me most of what I want.</p><p>However, what if there are keys that are not used anywhere in the model at present?\nI don't have a room to get the objects from.\nThe category on the key objects is null so I can't filter that way.\nI tried to use an ElementParameterFilter even though it is a slow filter to find the key value parameter (and just made it a numeric greater than -1 filter), but this returned no elements to me at all.</p><p>Is it possible to get the unused keys?</p><p><strong>Answer:</strong> To provide some basic understanding on this topic, you can start by looking at the Revit user interface Wikihelp on\n\n<a href=\"http://wikihelp.autodesk.com/Revit/enu/2012/Help/Revit_User%27s_Guide/1394-Document1394/1476-Schedule1476/1479-Key_Sche1479\">\nkey schedules</a> and\n\nthe further explanations provided by this article on\n\n<a href=\"http://knowingwhatyoudontknow.blogspot.ch/2009/01/understanding-schedule-keys-in-revit.html\">\nunderstanding schedule keys</a>.\n\nThe comments on the latter discussion may be of interest for you and your issue as well.</p><p>A surprisingly simple method to access the set of all elements listed in a schedule is to instantiate a filtered element collector providing the schedule view as an initial input argument.\nThat returns exactly the desired elements.\nThis works for key schedules as well.</p>"
  }
]