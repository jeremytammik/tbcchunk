[
  {
    "original_filename": "0330_port_bc_2011",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0330_port_bc_2011",
    "header_text": "Porting the Building Coder Samples to Revit 2011",
    "local_header_href": "#porting-the-building-coder-samples-to-revit-2011",
    "chunk_text": "<h3>Porting the Building Coder Samples to Revit 2011</h3><p>Last year, I postponed the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/05/porting-the-building-coder-samples.html\">\nporting of The Building Coder samples to Revit 2010</a> until\n\npretty late, because I wanted to avoid forcing anyone to update.\n\n<p>This time around, I am doing it pretty early, and have a good reason for that as well.\nThe migration from the Revit 2010 to the 2011 API is not quite as painless as in previous updates, because the whole Revit API has been significantly restructured and future-proofed.\nFor details, please refer to the Revit 2011 beta SDK documentation, which includes ample explanations of all aspects.\n\n<p>Therefore, it is important to get some information and examples of the modifications required out there pretty early on, so that others can make use of the new samples for their own migration efforts.\n\n<p>I spent several days migrating The Building Coder samples.\nThis may seem like a huge amount of time, and compared to the previous cycle it is, too.\n\n<p>On the other hand, I did have over sixty commands to migrate, and a lot of the migration effort has to do with the command registration and setup.\nOnce you are past the command definition itself, the Execute method entry point, and the initial element selection or user interaction, there are much less changes in the real meat of an application.\nAnd I would assume that no other application out there defines sixty separate commands.\n\n<p>So without further ado, first of all let me present the new\n\n<a href=\"zip/bc_11_62.zip\">\nRevit 2011 version 2011.0.0.62</a>\n\nof The Building Coder sample code.\nTo make it easier to compare with the 2010 version, here is an updated\n\n<a href=\"zip/bc11065.zip\">\nlast Revit 2010 version 1.1.0.65</a>.\n\n<p>I hope you are aware of the Unix\n\n<a href=\"http://en.wikipedia.org/wiki/Diff\">\ndiff</a>,\n\nVisual Studio\n\n<a href=\"http://en.wikipedia.org/wiki/WinDiff\">\nWindiff</a>,\n\nand the numerous other tools\nfor comparing files and directory structures.\n\n<p>Note that every single source file differs.\nMany of the differences are systematic, however, and are the same for all, such as the transaction mode and regeneration option settings.\nI did go through and try to identify commands which do not modify the database at all, so I could explicitly set their transaction mode to read-only.\n\n<p>I also introduced a new version numbering system.\nPreviously the major revision number was always 1.\nThe minor revision number 0 corresponded to Revit 2009, and 1 to Revit 2010.\nNow I bumped the major revision to 2011, so that the correspondence to Revit 2011 is more obvious.\nI may use the minor revision to indicate intermediate updates of the Revit API, if any appear.\nThe last number is currently set to 62 and indicates the number of commands defined, at the moment, at least.\n\n<p>I dropped one or two commands during the migration process, notably the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/10/filter-performa.html\">\nfilter performance</a> one.\n\nIt was targeted specifically at benchmarking the Revit 2009 and 2010 filtering mechanism, which has been totally revamped in 2011.\nObviously, a new filter performance test for 2011 would be very interesting to implement and evaluate.\n\n<p>I am still using RvtSamples to load and launch all The Building Coder samples, as well as all the other ADN samples that I work with.\nThe BcSamples.txt include file read by RvtSamples is included in the zip file and provides all the details required.\nThat data can also be used to define alternative loading mechanisms, e.g. using the old Revit.ini or the new add-in manifest approach.\n\n<p>More about the issues I encountered by and by.\nMuch more!\n\n<p>Good luck in your own porting efforts!\n</p></p></p></p></p></p></p></p></p></p></p></p></p>"
  }
]