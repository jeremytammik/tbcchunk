[
  {
    "original_filename": "0370_revitlookup",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0370_revitlookup",
    "header_text": "RevitLookup Update",
    "local_header_href": "#revitlookup-update",
    "chunk_text": "<h3>RevitLookup Update</h3><p>I recently mentioned\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/04/revitlookup-and-textnote-alignment.html\">\nRevitLookup</a>,\n\nthe new incarnation of\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/rvtmgddbg.html\">\nRvtMgdDbg</a>,\n\nwhich is now included in the Revit SDK, and so did\n\n<a href=\"http://cadappdev.blogspot.com/2010/04/revit-2011-api-series-revitlookup-new.html\">\nMatt Mason</a>.\n\n<p>The version provided in the initial release of the Revit 2011 SDK had several pretty fundamental problems.\nWe are in a continuous process of improving it, and now have a version available with the following enhancements:</p>\n<ul>\n<li>ElementType instances\n<li>Revit MEP connectors\n<li>Revit Structure analytical model\n</li></li></li></ul>\n<h4>Retrieving all Revit Database Elements</h4>\n<p>Regarding the ElementType instances, the initial version for Revit 2011 employed the FilteredElementCollector method WhereElementIsNotElementType, so no ElementType instances were displayed, including all family symbols.\nThis has now been fixed by using the following algorithm to retrieve all Revit database elements by creating a Boolean union of the non-element-type instances with the element type ones:\n\n<pre class=\"code\">\n  <span class=\"teal\">FilteredElementCollector</span> elemTypeCtor\n    = ( <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc ) )\n      .WhereElementIsElementType();\n \n  <span class=\"teal\">FilteredElementCollector</span> notElemTypeCtor\n    = ( <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc ) )\n      .WhereElementIsNotElementType();\n \n  <span class=\"teal\">FilteredElementCollector</span> allElementCtor\n    = elemTypeCtor.UnionWith( notElemTypeCtor );\n \n  <span class=\"teal\">ICollection</span>&lt;<span class=\"teal\">Element</span>&gt; founds\n    = allElementCtor.ToElements();\n</pre>\n<p>Please be aware that RevitLookup is always distributed including the full source code, so you can easily fix any problem that you run into yourself.\n\n<p>I did that and described the detailed procedure for some\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/fixing-rvtmgddbg-for-mep-connectors.html\">\nMEP specific properties</a>\n\nback in the Revit 2010 timeframe.\n\n<p>Here is today's snapshot of the\n\n<a href=\"zip/RevitLookup_2010-05-19.zip\">\nupdated RevitLookup</a>,\n\nincluding its full source code and Visual Studio solution.\n</p></p></p></p></p>"
  },
  {
    "original_filename": "0370_revitlookup",
    "header_text": "Retrieving all Revit Database Elements",
    "local_header_href": "#retrieving-all-revit-database-elements",
    "chunk_text": "<h4>Retrieving all Revit Database Elements</h4><p>Regarding the ElementType instances, the initial version for Revit 2011 employed the FilteredElementCollector method WhereElementIsNotElementType, so no ElementType instances were displayed, including all family symbols.\nThis has now been fixed by using the following algorithm to retrieve all Revit database elements by creating a Boolean union of the non-element-type instances with the element type ones:\n\n<pre class=\"code\">\n  <span class=\"teal\">FilteredElementCollector</span> elemTypeCtor\n    = ( <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc ) )\n      .WhereElementIsElementType();\n \n  <span class=\"teal\">FilteredElementCollector</span> notElemTypeCtor\n    = ( <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc ) )\n      .WhereElementIsNotElementType();\n \n  <span class=\"teal\">FilteredElementCollector</span> allElementCtor\n    = elemTypeCtor.UnionWith( notElemTypeCtor );\n \n  <span class=\"teal\">ICollection</span>&lt;<span class=\"teal\">Element</span>&gt; founds\n    = allElementCtor.ToElements();\n</pre>\n<p>Please be aware that RevitLookup is always distributed including the full source code, so you can easily fix any problem that you run into yourself.\n\n<p>I did that and described the detailed procedure for some\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/fixing-rvtmgddbg-for-mep-connectors.html\">\nMEP specific properties</a>\n\nback in the Revit 2010 timeframe.\n\n<p>Here is today's snapshot of the\n\n<a href=\"zip/RevitLookup_2010-05-19.zip\">\nupdated RevitLookup</a>,\n\nincluding its full source code and Visual Studio solution.\n</p></p></p></p>"
  }
]