[
  {
    "original_filename": "0363_rst_2011_api",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0363_rst_2011_api",
    "header_text": "The Revit Structure 2011 API",
    "local_header_href": "#the-revit-structure-2011-api",
    "chunk_text": "<h3>The Revit Structure 2011 API</h3><p>Since I talked about the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/05/the-revit-mep-2011-api.html\">\nRevit MEP API</a> yesterday, \n\nI should be fair and mention the Revit Structure API as well, shouldn't I?\n\n<p>Last year, we provided an overview over a number of\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/04/revit-structure-resources.html\">\nRevit Structure resources</a>,\n\nincluding pointers to the structure related webcasts, samples, trainings and Autodesk University classes available in the Revit 2010 timeframe.\n\n<p>Here is a quick tour by Joe Ye of what has changed in the Revit Structure 2011 API as well as new enhancements.\n\n<h4>Changes in the Revit Structure API</h4>\n<p>The main change in this version is the reorganization of Revit Structure API classes.  This change has two main aspects: renaming of namespaces and the consolidation of the different analytical model related classes to one single class. You can find the detailed description of the Revit Structure API changes in the topic 'Replacement for AnalyticalModel' in the 'Revit Platform API Changes and Additions.doc' documentation.\n\n<p>Structure related API classes were previously located in the Autodesk.Revit.Elements namespace. They have now been moved to the new Autodesk.Revit.DB.Structure namespace, which makes the relationship of classes and namespace clear.\n\n<p>The following analytical model classes have been consolidated into one single class AnalyticalModel:\n\n<ul>\n<li>AnalyticalModel3D\n<li>AnalyticalModelFloor\n<li>AnalyticalModelFrame\n<li>AnalyticalModelLocation\n<li>AnalyticalModelWall\n</li></li></li></li></li></ul>\n<p>The new class offers a more streamlined interface and more capabilities to read data and modify analytical model settings.\n\n<p>A couple of new methods are added to the AnalyticalModel class:\n\n<ul>\n<li>Get support priority by AnalyticalModel.GetPriority().\n<li>Get adjustment information both manual and automatic by GetManualAdjustmentMatchedElements() method.\n<li>Get and set the structure analytical offset.\n<li>Get parameter information, including projection information, hard points, approximation, and rigid links.\n</li></li></li></li></ul>\n<p>Other changes that have been made include renaming of classes, properties, methods and enumerations.\nThis was done to make them easier to understand and avoid the confusion of having two classes with the same name in different namespaces.\n\n<p>The method to retrieve the analytical model, previously accessible through the Element.AnalyticalModel property, is replaced by Element.GetAnalyticalModel(). The AnalyticalModelProfile class was renamed to AnalyticalModelSweptProfile.\n\n<p>The following enumerated types were available in previous releases of the API:\n\n<ul>\n<li>Autodesk.Revit.Structural.Enums.InstanceUsage\n<li>Autodesk.Revit.Structural.Enums.Material\n<li>Autodesk.Revit.Structural.Enums.WallUsage\n</li></li></li></ul>\n<p>They have now been replaced with new enumerations:\n\n<ul>\n<li>Autodesk.Revit.DB.Structure.StructuralInstanceUsage\n<li>Autodesk.Revit.DB.Structure.StructuralMaterialType\n<li>Autodesk.Revit.DB.Structure.StructuralWallUsage\n</li></li></li></ul>\n<h4>Enhancements in the Revit Structure API</h4>\n<p>There are also some new APIs and classes added to provide more functionality.\n\n<p>AnalyticalConsistencyChecking, AnalyticalSupportChecking and StructuralSettings classes were added.\nWe can start analytical consistency checking by calling the AnalyticalConsistencyChecking CheckAnalyticalConsistency method for the specified document, and begin analytical support checking by calling the AnalyticalSupportChecking CheckMemberSupports method.\n\n<p>The StructuralSettings class provides 29 methods to read and write almost all structural settings displayed in the structural settings dialogue.\n\n<p>The rebar related API is greatly enhanced. The following three new methods were introduced to create new types, which replace the previous way to create new types by calling the Duplicate method:\n\n<ul>\n<li>NewRebarBarType()\n<li>NewRebarHookType()\n<li>NewRebarCoverType()\n</li></li></li></ul>\n<p>To make it easy to access the properties of RebarBarType, this class exposes nine properties and methods to access corresponding parameters.  Rebar has an enhanced interface, which has extra eleven methods and properties to access its array functionality. These properties were previously only available through parameters. Six properties and methods have been introduced to work with spiral rebar:\n\n<ul>\n<li>Rebar.Height\n<li>Rebar.Pitch\n<li>Rebar.BaseFinishingTurns\n<li>Rebar.TopFinishingTurns\n<li>Rebar.ScaleToBoxForSpiral()\n<li>RebarShapeDefinitionByArc.SetArcTypeSpiral()\n</li></li></li></li></li></li></ul>\n<p>The following filter classes were introduced to help quickly retrieve specific structural elements using the new element filtering:\n\n<ul>\n<li>FamilyStructuralMaterialTypeFilter\n<li>StructuralInstanceUsageFilter\n<li>StructuralWallUsageFilter\n<li>StructuralMaterialTypeFilter\n</li></li></li></li></ul>\n<p>The Truss class has more functionality: the AttachTopChord and DetachTopChord methods have been replaced by AttachChord and DetachChord methods. The new methods operate on both top and bottom chords. The new method Truss.DropTruss() was introduced to disassociate all members from the truss and delete the truss.\n\n<p>Some small enhancements and new features are not mentioned here. Once again, 'Revit Platform API Changes and Additions.doc' summarizes those changes.\nComplete information is available from chapter 23 of the Revit 2011 API developer guide.pdf, which is dedicated to the Revit Structure API.\n\n<p>Thank you very much, Joe, for this overview!\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0363_rst_2011_api",
    "header_text": "Changes in the Revit Structure API",
    "local_header_href": "#changes-in-the-revit-structure-api",
    "chunk_text": "<h4>Changes in the Revit Structure API</h4><p>The main change in this version is the reorganization of Revit Structure API classes.  This change has two main aspects: renaming of namespaces and the consolidation of the different analytical model related classes to one single class. You can find the detailed description of the Revit Structure API changes in the topic 'Replacement for AnalyticalModel' in the 'Revit Platform API Changes and Additions.doc' documentation.\n\n<p>Structure related API classes were previously located in the Autodesk.Revit.Elements namespace. They have now been moved to the new Autodesk.Revit.DB.Structure namespace, which makes the relationship of classes and namespace clear.\n\n<p>The following analytical model classes have been consolidated into one single class AnalyticalModel:\n\n<ul>\n<li>AnalyticalModel3D\n<li>AnalyticalModelFloor\n<li>AnalyticalModelFrame\n<li>AnalyticalModelLocation\n<li>AnalyticalModelWall\n</li></li></li></li></li></ul>\n<p>The new class offers a more streamlined interface and more capabilities to read data and modify analytical model settings.\n\n<p>A couple of new methods are added to the AnalyticalModel class:\n\n<ul>\n<li>Get support priority by AnalyticalModel.GetPriority().\n<li>Get adjustment information both manual and automatic by GetManualAdjustmentMatchedElements() method.\n<li>Get and set the structure analytical offset.\n<li>Get parameter information, including projection information, hard points, approximation, and rigid links.\n</li></li></li></li></ul>\n<p>Other changes that have been made include renaming of classes, properties, methods and enumerations.\nThis was done to make them easier to understand and avoid the confusion of having two classes with the same name in different namespaces.\n\n<p>The method to retrieve the analytical model, previously accessible through the Element.AnalyticalModel property, is replaced by Element.GetAnalyticalModel(). The AnalyticalModelProfile class was renamed to AnalyticalModelSweptProfile.\n\n<p>The following enumerated types were available in previous releases of the API:\n\n<ul>\n<li>Autodesk.Revit.Structural.Enums.InstanceUsage\n<li>Autodesk.Revit.Structural.Enums.Material\n<li>Autodesk.Revit.Structural.Enums.WallUsage\n</li></li></li></ul>\n<p>They have now been replaced with new enumerations:\n\n<ul>\n<li>Autodesk.Revit.DB.Structure.StructuralInstanceUsage\n<li>Autodesk.Revit.DB.Structure.StructuralMaterialType\n<li>Autodesk.Revit.DB.Structure.StructuralWallUsage\n</li></li></li></ul>\n<h4>Enhancements in the Revit Structure API</h4>\n<p>There are also some new APIs and classes added to provide more functionality.\n\n<p>AnalyticalConsistencyChecking, AnalyticalSupportChecking and StructuralSettings classes were added.\nWe can start analytical consistency checking by calling the AnalyticalConsistencyChecking CheckAnalyticalConsistency method for the specified document, and begin analytical support checking by calling the AnalyticalSupportChecking CheckMemberSupports method.\n\n<p>The StructuralSettings class provides 29 methods to read and write almost all structural settings displayed in the structural settings dialogue.\n\n<p>The rebar related API is greatly enhanced. The following three new methods were introduced to create new types, which replace the previous way to create new types by calling the Duplicate method:\n\n<ul>\n<li>NewRebarBarType()\n<li>NewRebarHookType()\n<li>NewRebarCoverType()\n</li></li></li></ul>\n<p>To make it easy to access the properties of RebarBarType, this class exposes nine properties and methods to access corresponding parameters.  Rebar has an enhanced interface, which has extra eleven methods and properties to access its array functionality. These properties were previously only available through parameters. Six properties and methods have been introduced to work with spiral rebar:\n\n<ul>\n<li>Rebar.Height\n<li>Rebar.Pitch\n<li>Rebar.BaseFinishingTurns\n<li>Rebar.TopFinishingTurns\n<li>Rebar.ScaleToBoxForSpiral()\n<li>RebarShapeDefinitionByArc.SetArcTypeSpiral()\n</li></li></li></li></li></li></ul>\n<p>The following filter classes were introduced to help quickly retrieve specific structural elements using the new element filtering:\n\n<ul>\n<li>FamilyStructuralMaterialTypeFilter\n<li>StructuralInstanceUsageFilter\n<li>StructuralWallUsageFilter\n<li>StructuralMaterialTypeFilter\n</li></li></li></li></ul>\n<p>The Truss class has more functionality: the AttachTopChord and DetachTopChord methods have been replaced by AttachChord and DetachChord methods. The new methods operate on both top and bottom chords. The new method Truss.DropTruss() was introduced to disassociate all members from the truss and delete the truss.\n\n<p>Some small enhancements and new features are not mentioned here. Once again, 'Revit Platform API Changes and Additions.doc' summarizes those changes.\nComplete information is available from chapter 23 of the Revit 2011 API developer guide.pdf, which is dedicated to the Revit Structure API.\n\n<p>Thank you very much, Joe, for this overview!\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0363_rst_2011_api",
    "header_text": "Enhancements in the Revit Structure API",
    "local_header_href": "#enhancements-in-the-revit-structure-api",
    "chunk_text": "<h4>Enhancements in the Revit Structure API</h4><p>There are also some new APIs and classes added to provide more functionality.\n\n<p>AnalyticalConsistencyChecking, AnalyticalSupportChecking and StructuralSettings classes were added.\nWe can start analytical consistency checking by calling the AnalyticalConsistencyChecking CheckAnalyticalConsistency method for the specified document, and begin analytical support checking by calling the AnalyticalSupportChecking CheckMemberSupports method.\n\n<p>The StructuralSettings class provides 29 methods to read and write almost all structural settings displayed in the structural settings dialogue.\n\n<p>The rebar related API is greatly enhanced. The following three new methods were introduced to create new types, which replace the previous way to create new types by calling the Duplicate method:\n\n<ul>\n<li>NewRebarBarType()\n<li>NewRebarHookType()\n<li>NewRebarCoverType()\n</li></li></li></ul>\n<p>To make it easy to access the properties of RebarBarType, this class exposes nine properties and methods to access corresponding parameters.  Rebar has an enhanced interface, which has extra eleven methods and properties to access its array functionality. These properties were previously only available through parameters. Six properties and methods have been introduced to work with spiral rebar:\n\n<ul>\n<li>Rebar.Height\n<li>Rebar.Pitch\n<li>Rebar.BaseFinishingTurns\n<li>Rebar.TopFinishingTurns\n<li>Rebar.ScaleToBoxForSpiral()\n<li>RebarShapeDefinitionByArc.SetArcTypeSpiral()\n</li></li></li></li></li></li></ul>\n<p>The following filter classes were introduced to help quickly retrieve specific structural elements using the new element filtering:\n\n<ul>\n<li>FamilyStructuralMaterialTypeFilter\n<li>StructuralInstanceUsageFilter\n<li>StructuralWallUsageFilter\n<li>StructuralMaterialTypeFilter\n</li></li></li></li></ul>\n<p>The Truss class has more functionality: the AttachTopChord and DetachTopChord methods have been replaced by AttachChord and DetachChord methods. The new methods operate on both top and bottom chords. The new method Truss.DropTruss() was introduced to disassociate all members from the truss and delete the truss.\n\n<p>Some small enhancements and new features are not mentioned here. Once again, 'Revit Platform API Changes and Additions.doc' summarizes those changes.\nComplete information is available from chapter 23 of the Revit 2011 API developer guide.pdf, which is dedicated to the Revit Structure API.\n\n<p>Thank you very much, Joe, for this overview!\n</p></p></p></p></p></p></p></p></p>"
  }
]