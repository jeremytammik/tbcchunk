[
  {
    "original_filename": "1737_ipc",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- What is Forge?\n  https://labs.blogs.com/its_alive_in_the_lab/2019/04/what-is-autodesk-forge.html\n  Scott Sheppard shares a presentation by\n  - Jim Quanci, Senior Director for the Autodesk Developer Network\n  - Stephen Preston, Senior Manager of Business Development for Autodesk Forge\n  - Chuck Mies, Sales Development Education Executive\n  Summary\n  The Era of Connection is upon us.\n  - An interface is a point where two systems, subjects, organizations, etc. meet and interact.\n  - Forge APIs are like LEGO bricks, but your feet don't hurt when you step on them.\n  - Forge is more than just APIs.\n  - Forge is an ecosystem.\n  - It's about developers, developers, developers.\n  - Autodesk developers and non-Autodesk developers use the same APIs.\n  - Customization is commonplace.\n  - Forge is an industrial strength solution.\n  For details, read the full story in [It's Alive in the Lab](https://labs.blogs.com/its_alive_in_the_lab/2019/04/what-is-autodesk-forge.html).\n\n- change level of floor\n  https://forums.autodesk.com/t5/revit-api-forum/changing-the-level-id-and-offset-height-of-floors/m-p/8714247\n\timg/floor_set_level_0.png\n\timg/floor_set_level_1.png\n  https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2019.0.145.17\n  https://github.com/jeremytammik/the_building_coder_samples/compare/2019.0.145.16...2019.0.145.17\n  \n- /a/doc/revit/tbc/git/a/zip/IPC_test_revit_plugin.zip\n  [Revit 2019.1 add-in and CEFsharp library]\n  https://forums.autodesk.com/t5/revit-api-forum/revit-2019-1-add-in-and-cefsharp-library/td-p/8205740\n  Kim Sivonen\n  [Revit Add-Ins using the CEFsharp Library]\n  https://thebuildingcoder.typepad.com/blog/2018/08/revit-20191-cefsharp-forge-accelerator-in-rome.html#3\n  15238813 [CefSharp files, to copy or not to copy?]\n  https://forums.autodesk.com/t5/revit-api-forum/cefsharp-files-to-copy-or-not-to-copy/m-p/8709285\n\ntwitter:\n\nSet floor level and use IPC for disentanglement in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/ipcdisentangle\n\nToday, yet another introduction to Forge, a simple issue of setting the level of a floor element, and the much more complex one of gaining freedom and total independence via IPC\n&ndash; What is Forge?\n&ndash; Changing the level of a floor\n&ndash; Entanglement can be hell\n&ndash; CefSharp entanglement\n&ndash; Disentanglement and independence via IPC\n&ndash; Beer-ware license...\n\nlinkedin:\n\nSet floor level and use IPC for disentanglement in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://bit.ly/ipcdisentangle\n\nToday, yet another introduction to Forge, a simple issue of setting the level of a floor element, and the much more complex one of gaining freedom and total independence via IPC:\n\n- What is Forge?\n- Changing the level of a floor\n- Entanglement can be hell\n- CefSharp entanglement\n- Disentanglement and independence via IPC\n- Beer-ware license...\n\n-->"
  },
  {
    "original_filename": "1737_ipc",
    "header_text": "Set Floor Level and Use IPC for Disentanglement",
    "local_header_href": "#set-floor-level-and-use-ipc-for-disentanglement",
    "chunk_text": "### Set Floor Level and Use IPC for Disentanglement\n\nToday, yet another introduction to Forge, a simple issue of setting the level of a floor element, and the much more complex one of gaining freedom and total independence via IPC:\n\n- [What is Forge?](#2) \n- [Changing the level of a floor](#3) \n- [Entanglement can be hell](#4) \n- [CefSharp entanglement](#5) \n- [Disentanglement and independence via IPC](#6) \n- [Beer-ware license](#7) \n\n<center>\n<img src=\"img/entanglement.jpg\" alt=\"Entanglement\" width=\"400\">\n</center>"
  },
  {
    "original_filename": "1737_ipc",
    "header_text": "<a name=\"2\"></a> What is Forge?",
    "local_header_href": "#a-name2a-what-is-forge",
    "chunk_text": "#### <a name=\"2\"></a> What is Forge?\n\nWould you like to quickly understand\nwhat [Forge](https://forge.autodesk.com) is all about?\n\nWell, on one hand, you can check out\nthe [high-level picture of Forge](https://thebuildingcoder.typepad.com/blog/2019/03/-architecture-edit-and-continue-snooping-appearance-assets.html#2) shared\nScott Sheppard two weeks ago.\n\nNow he added to that in a new article\non [what Forge is](https://labs.blogs.com/its_alive_in_the_lab/2019/04/what-is-autodesk-forge.html),\nin which he summarises a presentation and shares the slide deck of three deeply knowledgeable colleagues:\n\n  - Jim Quanci, Senior Director for the Autodesk Developer Network\n  - Stephen Preston, Senior Manager of Business Development for Autodesk Forge\n  - Chuck Mies, Sales Development Education Executive\n  \nHere is a quick summary of his summary:\n\n- The era of connection is upon us\n- An interface is a point where two systems, subjects, organizations, etc meet and interact\n- Forge APIs are like LEGO bricks, but your feet don't hurt when you step on them\n- Forge is more than just APIs\n- Forge is an ecosystem\n- It's about developers, developers, developers\n- Autodesk developers and non-Autodesk developers use the same APIs\n- Customization is commonplace\n- Forge is an industrial strength solution\n\nFor the details, read the full story in [It's Alive in the Lab](https://labs.blogs.com/its_alive_in_the_lab/2019/04/what-is-autodesk-forge.html).\n\n<center>\n<img src=\"img/what_is_forge.jpg\" alt=\"What is Forge?\" width=\"400\">\n</center>"
  },
  {
    "original_filename": "1737_ipc",
    "header_text": "<a name=\"3\"></a> Changing the Level of a Floor",
    "local_header_href": "#a-name3a-changing-the-level-of-a-floor",
    "chunk_text": "#### <a name=\"3\"></a> Changing the Level of a Floor\n\nReturning to the Revit API, one nice little discussion in\nthe [Revit API forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160)\naddresses [changing the `Level.Id` and offset height of floors](https://forums.autodesk.com/t5/revit-api-forum/changing-the-level-id-and-offset-height-of-floors/m-p/8714247):\n\n**Question:** I have a Revit building project with 5-6 floors.\nSome of the floors don't have a right level associated with them.\nFor example, the floor element of the 4th floor is linked to the 3rd level with a big offset height.\nI want to have a well-organized Revit file to export a well-organized IFC file from it.\nTherefore, I want to change the associated level (`level.ID`) and height offset of some of the floor elements.\nAs `level.Id` is not a property providing `get` and `set` accessors, I have no idea how to do it.\nDoes anyone here have experience?\n\n**Answer by [Fair59](https://forums.autodesk.com/t5/user/viewprofilepage/user-id/2083518):**\n\nYou can set the built-in parameters `LEVEL_PARAM` and `FLOOR_HEIGHTABOVELEVEL_PARAM` like this:\n\n<pre class=\"code\">\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Parameter</span>&nbsp;p&nbsp;=&nbsp;floor.get_Parameter(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.LEVEL_PARAM&nbsp;);\n \n&nbsp;&nbsp;<span style=\"color:#2b91af;\">Parameter</span>&nbsp;p1&nbsp;=&nbsp;floor.get_Parameter(\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">BuiltInParameter</span>.FLOOR_HEIGHTABOVELEVEL_PARAM&nbsp;);\n \n&nbsp;&nbsp;<span style=\"color:blue;\">using</span>(&nbsp;<span style=\"color:#2b91af;\">Transaction</span>&nbsp;tx&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Transaction</span>(&nbsp;doc&nbsp;)&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;tx.Start(&nbsp;<span style=\"color:#a31515;\">&quot;Set&nbsp;Floor&nbsp;Level&quot;</span>&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;p.Set(&nbsp;level.Id&nbsp;);&nbsp;<span style=\"color:green;\">//&nbsp;set&nbsp;new&nbsp;level&nbsp;Id</span>\n&nbsp;&nbsp;&nbsp;&nbsp;p1.Set(&nbsp;2&nbsp;);&nbsp;<span style=\"color:green;\">//&nbsp;set&nbsp;new&nbsp;offset&nbsp;from&nbsp;level</span>\n&nbsp;&nbsp;&nbsp;&nbsp;tx.Commit();\n&nbsp;&nbsp;}\n</pre>\n\nJeremy added a framework around this code snippet to pick the first (or only) floor in a sample model and the first level that differs from its current level to test it.\n\nHere is a really minimal model before running the test external command:\n\n<center>\n<img src=\"img/floor_set_level_0.png\" alt=\"Before running add-in\" width=\"447\">\n</center>\n\nModel after running add-in:\n\n<center>\n<img src=\"img/floor_set_level_1.png\" alt=\"After running add-in\" width=\"448\">\n</center>\n\nSaved for posterity in the method `SetFloorLevelAndOffset` in\nthe [module CmdEditFloor.cs](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdEditFloor.cs)\nof [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples)\n[release 2019.0.145.17](https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2019.0.145.17), cf.\nthe [diff from the previous release](https://github.com/jeremytammik/the_building_coder_samples/compare/2019.0.145.16...2019.0.145.17)."
  },
  {
    "original_filename": "1737_ipc",
    "header_text": "<a name=\"4\"></a> Entanglement can be Hell",
    "local_header_href": "#a-name4a-entanglement-can-be-hell",
    "chunk_text": "#### <a name=\"4\"></a> Entanglement can be Hell\n\nNow for the main topic, an important decoupling technique that you should be aware of and have ready for use in your toolkit in case of need.\n\nProem:\n\nSometimes, things get messed up due to entanglement.\n\nOne dreadful and common example that we've presumably all run into at one time or another is [DLL hell](https://en.wikipedia.org/wiki/DLL_Hell).\n\nDisentanglement helps.\n\nMaking components as independent of each other as possible.\n\nWay back then, that was actually one of the main motivations for [object-oriented programming](https://en.wikipedia.org/wiki/Object-oriented_programming).\n\nEvery Revit add-in is pretty heavily entangled with Revit itself, since it is loaded into the same process, and, worse still, the one and only [.NET AppDomain](https://en.wikipedia.org/wiki/Application_domain) it provides.\n\nThis can cause problems for people trying to make use of certain other third-party components, especially if their add-in and Revit disagree on the exact version and other component details."
  },
  {
    "original_filename": "1737_ipc",
    "header_text": "<a name=\"5\"></a> CefSharp Entanglement",
    "local_header_href": "#a-name5a-cefsharp-entanglement",
    "chunk_text": "#### <a name=\"5\"></a> CefSharp Entanglement\n\nThis exact problem occurred\nwith [Revit 2019.1 and the CefSharp library](https://forums.autodesk.com/t5/revit-api-forum/revit-2019-1-add-in-and-cefsharp-library/td-p/8205740).\n\nIn that discussion, Autodesk points out that:\n\n> Revit 2019.1 and other Autodesk add-ins use the CEFsharp library for several features.\nSome 3rd party add-ins also use this library.\nUnfortunately, simultaneous use of different versions of the library leads to instability issues.\nIn order to avoid version conflicts, we make it clear that Revit uses CEFsharp version 57.0.0.\nIn addition, Revit 2019.1 forcibly loads a version of CEFsharp prior to add-in initialization.\nThis means that add-ins that load a different version of the CEFsharp library may not function.\nWe recommend realigning add-ins to use the version provided by and loaded by Revit. \n\nWe discussed this issue\nof [Revit add-ins using the CEFsharp library](https://thebuildingcoder.typepad.com/blog/2018/08/revit-20191-cefsharp-forge-accelerator-in-rome.html#3) here\nlast year."
  },
  {
    "original_filename": "1737_ipc",
    "header_text": "<a name=\"6\"></a> Disentanglement and Independence via IPC",
    "local_header_href": "#a-name6a-disentanglement-and-independence-via-ipc",
    "chunk_text": "#### <a name=\"6\"></a> Disentanglement and Independence via IPC\n\nLater, [Kim Sivonen](https://www.linkedin.com/in/kim-sivonen-0594aa2), partner at [ProdLib Oy](https://www.prodlib.com),\nvery kindly shared a much more radical and effective solution to the problem, showing how to completely disentangle a Revit add-in or some part of the functionality it relies on from the main Revit process\nusing [IPC, inter-process communication](https://en.wikipedia.org/wiki/Inter-process_communication).\n\nIn his own words:\n\nWe chose to study the possibility of running CEF in another process. After some headache, it actually turned out to be a decent alternative.\n\nI attached a sample solution source code if someone is interested:\n\n- [IPC_test_revit_plugin.zip](zip/IPC_test_revit_plugin.zip)\n\nThe solution consists of two projects; one Revit plugin and one Forms application. All CEF-specific is isolated in the Forms application, which is launched from the Revit plugin as an own process. The code was written very quickly just to prove that the functionality can be done, so please try to tolerate the sloppy code. There's probably many ways how the functionality can fail in different situations, but I believe everything can be handled.\n\nSome comments:\n\n- There's only a minimal amount of code and the technology can be used also for plugins on other platforms. \n- Forms form/window was used in the browser window, but the same technology can be used for WPF.\n- A few Windows API calls are used to handle Window behaviour and messaging.\n- The sample uses Window Messages as the IPC technology. The actual data between the Revit plugin and the browser window was done using `WM_COPYDATA` of the Windows API `SendMessage` call. The two apps exchange their window handles in the start, which enables sending the messages.\n- One of the most important things to make the solution work was to make Revit behave as the owner of the window in the other process. This functionality is provided by the `SetWindowLongPtr-method` in `user32.dll`. Setting the owner makes Windows handle some of the Window operations automatically: the window stays always on top of the owner window, minimizes with it, etc.\n\nPlease note that this software is BEER-WARE. [Description of the license below](#7).\n\nKim Sivonen, ProdLib Oy"
  },
  {
    "original_filename": "1737_ipc",
    "header_text": "<a name=\"7\"></a> Beer-Ware License",
    "local_header_href": "#a-name7a-beer-ware-license",
    "chunk_text": "#### <a name=\"7\"></a> Beer-Ware License\n\n<pre>\n/*\n* ----------------------------------------------------------------------------\n* \"THE BEER-WARE LICENSE\" (Revision 42):\n* <phk@FreeBSD.ORG> wrote this file. As long as you retain this notice you\n* can do whatever you want with this stuff. If we meet some day, and you think\n* this stuff is worth it, you can buy me a beer in return. Poul-Henning Kamp\n* ----------------------------------------------------------------------------\n*/\n</pre>\n \nMany thanks to Kim for researching, implementing and sharing this powerful solution!\n\nIt may come in handy in many other entangled situations as well.\n\nFor instance, try IPC if you ever run into any kind of relationship problem."
  }
]