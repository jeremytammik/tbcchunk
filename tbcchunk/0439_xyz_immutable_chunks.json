[
  {
    "original_filename": "0439_xyz_immutable",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0439_xyz_immutable",
    "header_text": "Immutable PointLoad Force",
    "local_header_href": "#immutable-pointload-force",
    "chunk_text": "<h3>Immutable PointLoad Force</h3><p>Today we crossed the \n\n<a href=\"http://en.wikipedia.org/wiki/Kattegat\">\nKattegat</a> from \n\n<a href=\"http://en.wikipedia.org/wiki/L%C3%A6s%C3%B8\">\nLæsø</a> in Denmark to \n\n<a href=\"http://en.wikipedia.org/wiki/R%C3%B6r%C3%B6\">\nRörö</a> in Sweden, \n\nnorth of Göteborg, so we have finally arrived in the archipelago on the west coast of Sweden.\nAs said, you can follow our exact route on the \n\n<a href=\"http://share.findmespot.com/shared/faces/viewspots.jsp?glId=0fQEu0hRkYX5FQpeMDEj8hms84EuXOsRl\">\nPantagruel tracker</a>.\n\n<p>We spent more than 48 hours at sea when going from Norway to Denmark, with some very beautiful moments, among others the night watches with more stars than you can imagine.\nI saw four shooting stars the first night.\nAnd fluorescent \n\n<a href=\"http://en.wikipedia.org/wiki/Plankton\">\nplankton</a> in our wake.\n\n<p>Today we had quite strong winds and made more than ten knots several times, which was nice.\n\n<p>Looking at the Revit API again, we already discussed the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/04/xyz-immutable.html\">\nimmutability of the XYZ class</a> in\n\nthe Revit 2011 API.\nHere is another aspect of that modification, from a case handled by \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/08/edit-wall-length.html\">\nAugusto Gonçalves</a> and Scott Conover:\n\n<p><strong>Question:</strong> Using the Revit 2010 API, I was able to modify the X, Y and Z components of the PointLoad Force and Moment properties, e.g.\n\n<pre class=\"code\">\n  PointLoad.Force.X \n  PointLoad.Force.Y \n  PointLoad.Force.Z \n  PointLoad.Moment.X \n  PointLoad.Moment.Y \n  PointLoad.Moment.Z \n</pre>\n\nIn the Revit 2011 API, these values are read-only.\nHow can I modify this data in Revit 2011?\n\n<p><strong>Answer:</strong> Actually, even in the Revit 2010 API, changing the value of the X, Y and Z components of the PointLoad Force and Moment properties never had any effect on the underlying Revit model.\nThe XYZ data returned by these properties is and always has been a copy of the underlying data, so changing it does not affect and never has affected the actual force or moment value inside the point load.\n\n<p>One of the main reasons why the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/04/xyz-immutable.html\">\nXYZ class is now immutable</a> is \n\nto ensure that this mistake cannot be assumed to work anymore.\n\n<p>If the PointLoad Force and Moment properties were not read-only properties, you would be able to change their values by assigning a new XYZ value to the PointLoad element property, e.g.\n\n<pre class=\"code\">\n  pointLoad.Force = new XYZ( 1.0, 2.0, 3.0 );\n</pre>\n<p>Unfortunately they are read-only, so this obvious approach cannot be used in this case. \nIt would however work for other, similar, examples.\n\n<p>In this case, the modification can be achieved via the parameter associated with the appropriate built-in parameter enum, e.g. BuiltInParameter.LOAD_FORCE_FY:\n\n<pre class=\"code\">\n  Parameter p = pointLoad.get_Parameter(\n    BuiltInParameter.LOAD_FORCE_FY );\n  p.Set( 10.00 );\n</pre>\n<p>Many thanks to Scott and Augusto for the explanation!</p>\n</p></p></p></p></p></p></p></p></p></p>"
  }
]