[
  {
    "original_filename": "1424_wall_opening_areas",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<!--\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\nMore on Wall Opening Areas per Room #revitAPI #3dwebcoder @AutodeskRevit #adsk #aec #bim @AutodeskLabs\n\n\nHåvard added some clarifications and background information on his sample code to determine wall opening areas per room: I have some questions on Håvard's initial approaches. Using a Boolean subtraction between transient solids from the actual wall and the family symbol sounds like the right track, but I don’t understand the need for the family instance, because the wall already provides the net geometry...\n\n-->"
  },
  {
    "original_filename": "1424_wall_opening_areas",
    "header_text": "More on Wall Opening Areas per Room",
    "local_header_href": "#more-on-wall-opening-areas-per-room",
    "chunk_text": "### More on Wall Opening Areas per Room\n\nHåvard added some clarifications and background information on his sample code\nto [determine wall opening areas per room](http://thebuildingcoder.typepad.com/blog/2016/04/determining-wall-opening-areas-per-room.html):\n\n**Question:** I have some questions on [Håvard's initial approaches](http://thebuildingcoder.typepad.com/blog/2016/04/determining-wall-cut-area-for-a-specific-room.html).\n\nUsing a Boolean subtraction between transient solids from the actual wall and the family symbol sounds like the right track, but I don’t understand the need for the family instance, because the wall already provides the net geometry.\n\nRegarding the real solution, which IMHO applies to ANY wall, not just curtain walls, you say, 'intersect a curtain wall solid with the room solid, where the intersected solid holds the opening area for that specific room'. However, they won’t intersect, will they, as they are just touching. Further work is needed to achieve an intersection. That’s why I said that some complex geometrical manipulation based on the full wall geometry and the subfaces retrieved via `SpatialElement*` is needed.\n\n**Answer:** Regarding activating the correct family symbol first:\n\nWhat I mean is to use the Opening Cut element in the Door family.\nI could not find any reference to that element in the project.\nShort of finding it I used the IFC utils instead, which returns the same curve loop, as far as I can tell.\n\n<pre class=\"code\">\n&nbsp; <span class=\"teal\">CurveLoop</span> curveLoop\n&nbsp; &nbsp; = <span class=\"teal\">ExporterIFCUtils</span>.GetInstanceCutoutFromWall(\n&nbsp; &nbsp; &nbsp; fi.Document, wall, fi, <span class=\"blue\">out</span> cutDir );\n&nbsp;\n&nbsp; <span class=\"teal\">IList</span>&lt;<span class=\"teal\">CurveLoop</span>&gt; loops = <span class=\"blue\">new</span> <span class=\"teal\">List</span>&lt;<span class=\"teal\">CurveLoop</span>&gt;( 1 );\n&nbsp; loops.Add( curveLoop );\n&nbsp;\n&nbsp; <span class=\"blue\">return</span> <span class=\"teal\">ExporterIFCUtils</span>.ComputeAreaOfCurveLoops( loops );\n</pre>\n\nWith stacked walls, it’s a little different story.\n\nInstead of returning `ExporterIFCUtils.ComputeAreaOfCurveLoops`, I create an 'opening' solid from the curve loop using `out cutDir` and intersect that with the stacked wall member solid, returning the 'opening' solid for just that member.\n\nAlmost the same thing with embedded curtain walls but I intersect the room instead of the host wall.\n\nEmbedded curtain walls in stacked walls might be yet another story J\nBut it's probably the same or a combination.\n\nHere is an embedded curtain wall in stacked wall:\n\n<center>\n<img src=\"img/SpatialElementGeometryCalculator91.png\" alt=\"Curtain wall embedded in stacked wall\" width=\"186\">\n</center>\n\nHere we see the real challenge using `SpatialElementBoundarySubface` in the first place.\nIt will only pick up elements that have 'touching' surfaces.\n\nSo if there was a room in this side of the pictured stacked wall, the top stacked member will not be detected.\n\nAt AU2014, I remember Scott Conover did a demo of Revit API news.\nHe had a slide where a room extended up, and then sideways.\nEither I'm mis-remembering this or I just haven't been able to recreate it yet.\n\nOne could also get the bounding box of the curtain wall, rotate the box to the wall and intersect the room or host.\n\nThis bounding box will be wider than the host wall due to this:\n\n<center>\n<img src=\"img/SpatialElementGeometryCalculator92.png\" alt=\"Wider bounding box\" width=\"250\">\n</center>\n\nUnless the host wall is unusually wide...\n\nSo I guess the best thing is still what we do now done, get the profile and use a sufficient solid depth.\n\n**Response:** Now I understand.\nI found the same &ndash; basically the Room volume seems like a '2.5D object' with the 'profile' detected at the specified bottom elevation and it does NOT then detect any elements which may start 'higher'. I can understand why it may be so as it is hard to 'close' the volume in all cases w/o making some kind of simplification assumption.\n\n**Comment:** Arif Hanif added another [comment](http://thebuildingcoder.typepad.com/blog/2016/04/determining-wall-opening-areas-per-room.html#comment-2622637976) to the post, saying, 'Very elegant; I was post processing with clipper. I will adapt my code for spaces in linked models. Håvard, awesome job!'\n\n**Answer:** Thanks Arif.\nLinked models is on my todo-list as well.\nI would include the document of the subface element in the SpatialDataCache.\nSo when you postprocess the cache ids to get names you have the correct document readily available.\nOther than that there are still improvements to be made.\nAs I remember, the method for getting the elevation profile from a curtain wall will not get an edited profile.\nThis is used to create the opening solid which intersects the room solid.\nAnd the `GetLargestFaceArea` method could use a `face.Normal` check, though you would have to have really thick wall, like 7 feet or so, for it to fail.\n\n**Response:** That is what I did store the document of the subface, as I am primarily working on spaces with linked room data to translate over to energy modelling tool.\n\nMany thanks again to Miroslav, Arif and above all Håvard for your contributions!"
  }
]