[
  {
    "original_filename": "1153_bipchecker_2015_git",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1153_bipchecker_2015_git",
    "header_text": "Project Solon and BipChecker for Revit 2015 on GitHub",
    "local_header_href": "#project-solon-and-bipchecker-for-revit-2015-on-github",
    "chunk_text": "<h3>Project Solon and BipChecker for Revit 2015 on GitHub</h3><p>One of the handful of Revit database exploration tools that I use on a regular basis is\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.34\">\nBipChecker</a>,\n\nthe Revit built-in parameter checker, so that is a pretty obvious candidate for migration to Revit 2015... <a href=\"#3\">see below</a>.</p><p>Before I get to that, let me mention some new Revit energy analysis functionality that you might want to check out:</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "1153_bipchecker_2015_git",
    "header_text": "Simple Interactive Energy Analysis in Revit with Project Solon",
    "local_header_href": "#simple-interactive-energy-analysis-in-revit-with-project-solon",
    "chunk_text": "<h4>Simple Interactive Energy Analysis in Revit with Project Solon</h4><p><a href=\"http://autodesk.typepad.com/bpa/2014/04/project-solon-beta-arrives-in-revit-get-more-interactive-energy-analysis-results-create-your-own-and-publish-them-to-revit.html\">\nProject Solon beta arrives in Revit</a>,\n\nproviding more interactive energy analysis results, the ability to create your own and publish them to Revit.</p><p><a href=\"https://gbs.autodesk.com/GBS\">Autodesk Green Building Studio</a> (GBS) has released the Beta version of Analysis Application Dashboard in\n\n<a href=\"http://help.autodesk.com/view/BUILDING_PERFORMANCE_ANALYSIS/ENU/?guid=GUID-80C2B132-8472-4C0B-A711-699AB22A4B90\">\nProject Solon</a>:\n\nYou can now author your Revit model once and deliver energy analysis results to your software application, web, and mobile device. Project Solon delivers responsive results designs for your energy analysis, with customized dynamic charts of energy results.</p><p>Read all about it on the\n\n<a href=\"http://autodesk.typepad.com/bpa/2014/04/project-solon-beta-arrives-in-revit-get-more-interactive-energy-analysis-results-create-your-own-and-publish-them-to-revit.html\">\nBuilding Perfomance Analysis blog</a>.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1153_bipchecker_2015_git",
    "header_text": "BipChecker GitHub Repository and Migration to Revit 2015",
    "local_header_href": "#bipchecker-github-repository-and-migration-to-revit-2015",
    "chunk_text": "<h4>BipChecker GitHub Repository and Migration to Revit 2015</h4><p>Back to the BipChecker migration: while I was at it, I also created the\n\n<a href=\"https://github.com/jeremytammik/BipChecker\">\nBipChecker GitHub repository</a> to\n\nhost it, and the initial\n\n<a href=\"https://github.com/jeremytammik/BipChecker/releases/tag/2014.0.0.3\">\nrelease 2014.0.0.3</a> based\n\non the existing Revit 2014 code.</p><p>Once again, the migration was very straightforward: change the .NET framework and update the Revit API assembly reference paths.</p><p>The initial flat migration is available as\n\n<a href=\"https://github.com/jeremytammik/BipChecker/releases/tag/2015.0.0.3\">\nrelease 2015.0.0.3</a> and generates just\n\n<a href=\"zip/BipChecker_2015a.txt\">\ntwo compilation warnings</a> concerning\n\nthe use of the UIDocument.Selection.Elements property:</p><ul><li>Warning CS0618: 'Autodesk.Revit.UI.Selection.Selection.Elements' is obsolete: 'This property is deprecated in Revit 2015. Use GetElementIds() and SetElementIds instead.'\n</li></ul><p>Here is one example of the Revit 2014 code causing the warning, from the GetSingleSelectedElementOrPrompt method:</p><pre class=\"code\">\n  <span class=\"blue\">public</span> <span class=\"blue\">static</span> <span class=\"teal\">Element</span>\n    GetSingleSelectedElementOrPrompt(\n      <span class=\"teal\">UIDocument</span> uidoc )\n  {\n    <span class=\"teal\">Element</span> e = <span class=\"blue\">null</span>;\n    <span class=\"teal\">ElementSet</span> ss = uidoc.Selection.Elements;\n \n    <span class=\"blue\">if</span>( 1 == ss.Size )\n    {\n      <span class=\"teal\">ElementSetIterator</span> iter = ss.ForwardIterator();\n      iter.MoveNext();\n      e = iter.Current <span class=\"blue\">as</span> <span class=\"teal\">Element</span>;\n    }\n \n    <span class=\"green\">// . . .</span>\n</pre><p>Moving this to Revit 2015 to eliminate the warning is straightforward – and the result looks better   :-)</p><pre class=\"code\">\n    <span class=\"teal\">ICollection</span>&lt;<span class=\"teal\">ElementId</span>&gt; ids\n      = uidoc.Selection.GetElementIds();\n \n    <span class=\"blue\">if</span>( 1 == ids.Count )\n    {\n      <span class=\"blue\">foreach</span>( <span class=\"teal\">ElementId</span> id <span class=\"blue\">in</span> ids )\n      {\n        e = uidoc.Document.GetElement( id );\n      }\n    }\n</pre><p>I fixed that and published the result as\n\n<a href=\"https://github.com/jeremytammik/BipChecker/releases/tag/2015.0.0.4\">\nBipChecker release 2015.0.0.4</a>,\n\nwhich now compiles with zero wrnings.</p><p>Of course, you should normally always go for the most up-to-date master branch, though, to pick up possible later enhancements as well.</p>"
  }
]