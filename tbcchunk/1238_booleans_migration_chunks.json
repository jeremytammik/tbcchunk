[
  {
    "original_filename": "1238_booleans_migration",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script src=\"http://thebuildingcoder.typepad.com/google-code-prettify/run_prettify.js\"></script>\n</head>"
  },
  {
    "original_filename": "1238_booleans_migration",
    "header_text": "Migrating Deprecated API and 2D Boolean Operations",
    "local_header_href": "#migrating-deprecated-api-and-2d-boolean-operations",
    "chunk_text": "<h3>Migrating Deprecated API and 2D Boolean Operations</h3><p>While my colleagues are busy with the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/11/the-devdays-2014-conferences-have-started.html\">\nDevDays in Asia</a>,\n\nLet me mention two little questions that I addressed in the past few hours:</p><ul>\n<li><a href=\"#2\">2D Boolean operations</a></li>\n<li><a href=\"#3\">Getting started migrating deprecated API</a></li>\n</ul><a name=\"2\"></a>"
  },
  {
    "original_filename": "1238_booleans_migration",
    "header_text": "2D Boolean Operations",
    "local_header_href": "#2d-boolean-operations",
    "chunk_text": "<h4>2D Boolean Operations</h4><p><strong>Question:</strong> In AutoCAD development, the ObjectARX AcGe library provides powerful tools such as the AcDbRegion::booleanOper computational geometry unions and differences.</p><p>Does the Revit API provide anything similar for surfaces?\nIs there any way to calculate and display the difference between two areas?</p><p>Revit is a great three-dimensional software, the above function is a common operation, but I did not find the relevant API.</p><p>Please help, thank you!</p><p><strong>Answer:</strong> The Revit API does not provide any general-purpose geometric engine like the AutoCAD ARX AcGe library, because it is highly specialised and purely dedicated to BIM.</p><p>If you have a requirement for additional geometric functionality such as 2D Boolean operations, you will need to implement it yourself or make use of some additional external libraries. Numerous such libraries exist.</p><p>The Building Coder has implemented and presented several examples making use of 2D Boolean operations using external libraries.</p><p>They can be found through the topic list 5.2. on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/about-the-author.html#5.2\">\n2D Booleans and Adjacent Areas</a>,\n\nwhich I just updated for you, adding a couple of new recent posts.</p><p>I hope this helps.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1238_booleans_migration",
    "header_text": "Getting Started Migrating Deprecated API",
    "local_header_href": "#getting-started-migrating-deprecated-api",
    "chunk_text": "<h4>Getting Started Migrating Deprecated API</h4><p>Raised by Fimo in a\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/11/functional-programming-view-and-data-api-demos.html?cid=6a00e553e16897883301b7c70196b9970b#comment-6a00e553e16897883301b7c70196b9970b\">comment</a> or\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/11/functional-programming-view-and-data-api-demos.html?cid=6a00e553e16897883301b8d08c17c0970c#comment-6a00e553e16897883301b8d08c17c0970c\">two</a> on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/11/functional-programming-view-and-data-api-demos.html\">\nfunctional programming, View and Data API demos</a>:</p><p><strong>Question:</strong> I am new to this blog and new to the Revit 2015 API, still not really knowing what I am doing and struggling through the examples here and in other places.</p><p>There are lots of useful examples and many of them are based on using \"ElementSet\". So I create an element set, like \"ElementSet elems = selection.Elements;\" That produces a message saying \"don't use Selection.Elements, it's deprecated, use GetElementIds() instead.\" Of course I want to be a good guy, so I use \"GetElementIds\", only to find out that this does not work for \"ElementSet\".</p><p>Okay, so I abandon \"ElementSet\" and use \"ICollectionElems\" which is (grammatically) fine and produces no compiler errors. But now I have an ICollection and all the loads of code which I had found in the web so far do not work for me any more, as they were based on \"ElementSet\".</p><p>So here are my questions: is there a way to cast/convert \"ICollection\" to \"ElementSet\"? Am I the first one to come across this problem? What would be the professional approach to deal with this?</p><p>Many thanks for you advice...</p><p><strong>Answer:</strong> Thank you for a very valid question.</p><p>ElementSet is deprecated in Revit 2015, just as the message tells you.\nI guess the main change is caused by the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/04/whats-new-in-the-revit-2015-api.html#2.10\">\nSelection API changes</a>.\n\n<p>However, as long as it has not been removed, you can still use it and ignore the warning.</p>\n<p>All new code should avoid making use of it, since it will probably no longer work (and be removed) in the next release.</p>\n<p>In most cases, you can replace it by a collection of ElementId objects.\nHowever, its members are element ids and not Element instances, so there will be some differences in usage.</p>\n<p>That is the issue you are encountering. Basically, the old code needs to be rewritten to take the collection of ids instead of the set of elements.</p>\n<p>The Revit API used to define quite a number of custom collections.</p>\n<p>They are all being replaced by generic .NET collections, by and by.</p>\n<p>Also, a number of methods are now using ElementId arguments instead of straight Element ones.</p>\n<p>This is part of a multi-year transition.</p>\n<p>I hope this explains.</p>\n<p><strong>Response:</strong> Thanks for your detailed response.</p>\n<p>Yes, it does explain...</p>\n<p>But, alas, my personal conclusion is supposed to be the following: as there are mostly old style code snippets available and I do not know how to convert them into new style, I have to stick to the obsolete variants in order to get some results. That means I am now learning the old style. I hope Autodesk will wait a little longer before removing the old code... :-)</p>\n<p>Anyway thanks a lot for your explanation.</p>\n<p><strong>Answer:</strong> Please do not jump to the wrong conclusion.</p>\n<p>My personal conclusion from that is to learn the new style and convert to old snippets to the new style.</p>\n<p>The conversion is mostly trivial. Here is an example: the\n\n<a href=\"https://github.com/jeremytammik/DataToBimCountoursAndBuildings/commit/88637e90dfa984ae424d655304e9e0a43f6b19c7\">\nDataToBimCountoursAndBuildings migration from Revit 2014 to 2015</a>.</p>\n<p>Look specifically at the modification of the file DataToBim/DataToBuilding.cs:</p>\n<pre>\n    Family family = null;\n    this.document.LoadFamily( path, out family );\n    FamilySymbol symbol = null;\n<span class=\"red\">-   foreach( FamilySymbol s in family.Symbols )</span>\n<span class=\"green\">+   //foreach( FamilySymbol s in family.Symbols ) // 2014\n+   foreach( ElementId id in family.GetFamilySymbolIds() ) // 2015</span>\n    {\n<span class=\"red\">-     symbol = s;</span>\n<span class=\"green\">+     symbol = document.GetElement( id ) as FamilySymbol;</span>\n      break;\n    }\n    symbols.Add( symbol );\n</pre>\n<p>I have migrated dozens of projects on The Building Coder and often documented the migration steps in great detail.</p>\n<p>Simply look at The Building Coder category on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/migration\">\nMigration</a>.</p>\n<p>Actually, I went one step further, just for your sake, and fixed some of the numerous deprecated API usage warnings still present in The Building Coder samples until I hit the exact one you are encountering and struggling with.</p>\n<p>I started out with these\n\n<a href=\"zip/bc_migr_2015_b.txt\">65 warnings</a>.</p>\n<p>I then globally replaced <code>sel.Elements.Size</code> by <code>sel.GetElementIds().Count</code>, reducing the count to\n\n<a href=\"zip/bc_migr_2015_c.txt\">46 warnings</a>.</p>\n<p>Now I fixed just one of the warnings about iterating over the selection elements, in the module CmdListMarks.cs, by replacing the <code>Selection.Elements</code> iteration by a call to GetElementIds and iterating over the element ids instead, afterwards producing\n\n<a href=\"zip/bc_migr_2015_d.txt\">45 remaining warnings</a>.</p>\n<p>Here is the new code, marked with '// 2015', and the old code, commented out and marked with '// 2014':</p>\n<pre class=\"code\">\n  <span class=\"blue\">if</span>( _modify_existing_marks )\n  {\n    <span class=\"green\">//ElementSet els = uidoc.Selection.Elements; // 2014</span>\n \n    <span class=\"teal\">ICollection</span>&lt;<span class=\"teal\">ElementId</span>&gt; ids = uidoc.Selection.GetElementIds(); <span class=\"green\">// 2015</span>\n \n    <span class=\"green\">//foreach( Element e in els ) // 2014</span>\n \n    <span class=\"blue\">foreach</span>( <span class=\"teal\">ElementId</span> id <span class=\"blue\">in</span> ids ) <span class=\"green\">// 2015</span>\n    {\n      <span class=\"teal\">Element</span> e = doc.GetElement( id ); <span class=\"green\">// 2015</span>\n \n      <span class=\"blue\">if</span>( e <span class=\"blue\">is</span> <span class=\"teal\">FamilyInstance</span>\n        &amp;&amp; <span class=\"blue\">null</span> != e.Category\n        &amp;&amp; (<span class=\"blue\">int</span>) <span class=\"teal\">BuiltInCategory</span>.OST_Doors\n          == e.Category.Id.IntegerValue )\n      {\n        e.get_Parameter(\n          <span class=\"teal\">BuiltInParameter</span>.ALL_MODEL_MARK )\n          .Set( _the_answer );\n \n        ++n;\n      }\n    }\n  }\n</pre>\n<p>I very much hope that this suffices to convince you to fix the warnings you encounter.</p>\n<p>As always, the most up to date version of The Building Coder samples is provided in\n\n<a href=\"https://github.com/jeremytammik/the_building_coder_samples\">its GitHub repository</a>,\n\nand the version described above is\n\n<a href=\"https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2015.0.115.1\">\nrelease 2015.0.115.1</a>.</p>\n<p>I hope this helps.</p>\n</p>"
  }
]