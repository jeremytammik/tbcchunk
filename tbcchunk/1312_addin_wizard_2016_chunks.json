[
  {
    "original_filename": "1312_addin_wizard_2016",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1312_addin_wizard_2016",
    "header_text": "Add-in Migration to Revit 2016 and Updated Wizards",
    "local_header_href": "#add-in-migration-to-revit-2016-and-updated-wizards",
    "chunk_text": "<h3>Add-in Migration to Revit 2016 and Updated Wizards</h3><p>I updated my Visual Studio Revit C# and VB add-in wizards for Revit 2016.</p><p>Before presenting them, a quick important note on how to approach resolving issues that you may encounter migrating your existing add-ins:</p><ul>\n<li><a href=\"#2\">Please read What's New in the Revit 2016 API!</a></li>\n<li><a href=\"#3\">Revit add-in wizards for Revit 2016</a></li>\n<li><a href=\"#4\">Revit add-in wizard customisation</a></li>\n<li><a href=\"#5\">Revit add-in wizard usage</a></li>\n<li><a href=\"#6\">Download and installation</a></li>\n</ul><a name=\"2\"></a>"
  },
  {
    "original_filename": "1312_addin_wizard_2016",
    "header_text": "Please Read What's New in the Revit 2016 API!",
    "local_header_href": "#please-read-whats-new-in-the-revit-2016-api",
    "chunk_text": "<h4>Please Read What's New in the Revit 2016 API!</h4><p>Every major Revit API release so far enhanced the existing interfaces in various ways.</p><p>In order to optimise the developer experience, some of the improvements introduce incompatibilities; for instance, previously deprecated classes and interfaces are removed, and obsolete functionality may be marked as deprecated for removal in a future version.</p><p>Whenever you run into an issue migrating your code to newer versions of the API, the first place to look for a solution is in the What's New section of the Revit API help file RevitAPI.chm.</p><p>This information is also published in a separate document in the Revit SDK, 'Revit Platform API Changes and Additions.docx'.</p><p>To ensure that it is also picked up by web searches, I published it here on The Building Coder, together with the analogue information for previous releases:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/02/whats-new-in-the-revit-2010-api.html\">What's New in the Revit 2010 API</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/02/whats-new-in-the-revit-2011-api.html\">What's New in the Revit 2011 API</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/02/whats-new-in-the-revit-2012-api.html\">What's New in the Revit 2012 API</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/03/whats-new-in-the-revit-2013-api.html\">What's New in the Revit 2013 API</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/04/whats-new-in-the-revit-2014-api.html\">What's New in the Revit 2014 API</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2014/04/whats-new-in-the-revit-2015-api.html\">What's New in the Revit 2015 API</a></li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2015/04/whats-new-in-the-revit-2016-api.html\">What's New in the Revit 2016 API</a></li>\n</ul><p>I hope this helps you tackle any issues you may run into migrating your add-in to the new release.</p><p>Good luck and have fun!</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1312_addin_wizard_2016",
    "header_text": "Revit Add-in Wizards for Revit 2016",
    "local_header_href": "#revit-add-in-wizards-for-revit-2016",
    "chunk_text": "<h4>Revit Add-in Wizards for Revit 2016</h4><p>On the other hand, if you are not migrating an existing Revit add-in, but creating a new one from scratch, the add-in wizards can be of use.</p><p>As said, I migrated my Visual Studio Revit add-in wizards to generate skeleton code for Revit 2016.</p><center>\n<img alt=\"Visual Studio Revit add-in wizard for Revit 2016\" src=\"img/Revit2016AddinWizardCs0.png\" width=\"600\"/>\n</center><p>The 2016 versions generate the same boilerplate snippets as the reliable old\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/add-in-wizards-for-revit-2014-1.html\">\nRevit 2014</a>\n(<a href=\"http://thebuildingcoder.typepad.com/blog/2013/06/sun-direction-shadow-calculation-and-wizard-update.html#2\">updated</a>)\nand\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/05/add-in-wizards-for-revit-2015.html\">\nRevit 2015</a> ones did.\nSimply delete the parts that you do not need.</p><p>Since I am still using the pre-release version codenamed Copernicus, the Revit executable folder name targeted by the wizards is 'Revit Copernicus'.</p><p>You may have to change that to something appropriate for your system, e.g. 'Revit 2016', 'Revit 2016 Architecture', etc.</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "1312_addin_wizard_2016",
    "header_text": "Revit Add-in Wizard Customisation",
    "local_header_href": "#revit-add-in-wizard-customisation",
    "chunk_text": "<h4>Revit Add-in Wizard Customisation</h4><p>It is important to understand how easy it is to modify the wizards for your own needs, and make copies with variations to support different requirements.</p><p>Here is an overview of previous explanations showing how to create your own flavours for various uses:</p><ul>\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/07/devtv-addin-templates.html\">\nOriginal introduction, benefits, and usage example</a> for C# and VB.\n\n<li>Personalised\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/10/revit-2011-devtv.html#2\">\nminimal C# version</a> for Revit 2011.\n\n<li>A short additional\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/12/snow-and-woe-with-manifest-files.html\">\nusage note</a>.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/01/automate-designoption-and-64-bit-add-in-templates.html#2\">\n64-bit versions</a> for C# and VB.\n\n<li>Support for the\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/visual-studio-add-in-wizards-for-revit-2012.html\">\nRevit 2012 API</a> for\n\nC# and VB.\n\n<li>Updated C# and VB versions placing the\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/product-and-add-in-wizard-updates.html#3\">\nassembly DLL alongside the add-in manifest</a>.\n\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/add-in-wizard-for-revit-2013.html\">\nRevit 2013 C#</a> version including more skeleton code.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/update-api-assembly-references-and-wizards.html#4\">\nRevit 2013 VB</a> version.</li>\n<li>C# and VB\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/add-in-wizards-for-revit-2014-1.html\">\nadd-in wizards for Revit 2014</a>.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/06/sun-direction-shadow-calculation-and-wizard-update.html#2\">\nWizard update</a>\n\nsuppressing the processor architecture mismatch warning and referring to Revit Onebox instead of the architectural flavour.</li>\n<li>Wizard generating a\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/11/multi-version-visual-studio-revit-add-in-wizard.html\">\nmulti-version add-in</a>  supporting\n\nboth Revit 2013 and 2014.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2014/05/add-in-wizards-for-revit-2015.html\">\nAdd-in wizards for Revit 2015</a>.</li>\n</li></li></li></li></li></li></ul><a name=\"5\"></a>"
  },
  {
    "original_filename": "1312_addin_wizard_2016",
    "header_text": "Revit Add-in Wizard Usage",
    "local_header_href": "#revit-add-in-wizard-usage",
    "chunk_text": "<h4>Revit Add-in Wizard Usage</h4><p>Simply install the wizard zip files you need in the locations specified <a href=\"#6\">below</a>, start up or restart Visual Studio, create a new C# or VB Revit add-in project using the wizard default settings.</p><p>The wizards fulfil the following tasks for C# and VB, respectively:</p><ul>\n<li>Generate the skeleton source code, Visual Studio solution and add-in manifest.</li>\n<li>On successful build, copy the add-in assembly DLL and add-in manifest to the Revit add-in folder, thus automatically installing it for Revit to pick up and load.</li>\n<li>Define the add-in debugging settings to start up the Revit.exe program.</li>\n</ul><p>Therefore, right after the initial single-click add-in creation, you can immediately launch the debugger.\nThe add-in is compiled, Revit is started up, the add-in is loaded, you can select the new external command in the External Tools menu, launch and test it without entering one single further keystroke yourself.</p><p>The new command even executes in zero document state, although the default external command skeleton implementation throws an exception trying to access a property on the current UI document, which is null.\nThis is easy to fix in case you need a\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/02/enable-ribbon-items-in-zero-document-state.html\">\nzero document state external command</a>.\nYou can use this anyway to immediately check that everything is working correctly.</p><a name=\"6\"></a>"
  },
  {
    "original_filename": "1312_addin_wizard_2016",
    "header_text": "Download and Installation",
    "local_header_href": "#download-and-installation",
    "chunk_text": "<h4>Download and Installation</h4><p>The proper locations to install the wizards for Visual Studio to pick them up are language dependent.</p><p>Copy the zip file of your choice to the matching Visual Studio project template folder in your local file system:\n\n<ul>\n<li>C# – copy <a href=\"zip/Revit2016AddinWizardCs0.zip\">Revit2016AddinWizardCs0.zip</a> to\n<br/>[My Documents]\\Visual Studio 2012\\Templates\\ProjectTemplates\\Visual C#\n<li>Visual Basic – copy <a href=\"zip/Revit2016AddinWizardVb0.zip\">Revit2016AddinWizardVb0.zip</a> to\n<br/>[My Documents]\\Visual Studio 2012\\Templates\\ProjectTemplates\\Visual Basic\n</li></li></ul>\n<p>Or, in other words:</p>\n<pre>\n  $ cp /a/doc/revit/tbc/zip/Revit2016AddinWizardCs0.zip \\\n  \"/v/C/Users/tammikj/Documents/Visual Studio \\\n  2012/Templates/ProjectTemplates/Visual C#\"\n\n  $ cp /a/doc/revit/tbc/zip/Revit2016AddinWizardVb0.zip \\\n  \"/v/C/Users/tammikj/Documents/Visual Studio \\\n  2012/Templates/ProjectTemplates/Visual Basic\"\n</pre>\n<p>I hope you find this useful and look forward to hearing any suggestions for improvements you come up with.</p>\n<p>Better still, implement them yourself and let us know where to pick them up  :-)</p>\n</p>"
  }
]