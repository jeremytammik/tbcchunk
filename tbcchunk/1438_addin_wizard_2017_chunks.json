[
  {
    "original_filename": "1438_addin_wizard_2017",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<!--\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\nVisual Studio 2015 Revit 2017 Add-in Wizards #revitAPI #3dwebcoder @AutodeskRevit #adsk #aec #bim #dynamobim\n\nI updated the Visual Studio Revit C# and VB add-in wizards for Revit 2017. They enable you to create a new C# or VB Revit add-in in Visual Studio with one single click on File &gt; New &gt; Project... &gt; Installed &gt; Templates &gt; Visual Basic/Visual C# &gt; Revit 2017 Addin. The wizard creates a complete Revit add-in skeleton, ready to immediately compile and run. Just hit F5 to start debugging; the add-in manifest is automatically created, copied to the proper location, Revit launched in the debugger, and your shiny new add-in is available in the external tools menu...\n\n-->"
  },
  {
    "original_filename": "1438_addin_wizard_2017",
    "header_text": "Visual Studio 2015 Revit 2017 Add-in Wizards",
    "local_header_href": "#visual-studio-2015-revit-2017-add-in-wizards",
    "chunk_text": "### Visual Studio 2015 Revit 2017 Add-in Wizards\n\nFriday the thirteenth!\n\nWatch out; I certainly will. Well, I guess I always do, or try to &nbsp; :-)\n\nI updated the Visual Studio Revit C# and VB add-in wizards for Revit 2017.\n\nThey enable you to create a new C# or VB Revit add-in in Visual Studio with one single click on File &gt; New &gt; Project... &gt; Installed &gt; Templates &gt; Visual Basic/Visual C# &gt; Revit 2017 Addin:\n\n<center>\n<img src=\"img/addin_wizard_2017.png\" alt=\"Revit 2017 Add-in Wizards\" width=\"800\">\n</center>\n\nThe wizard creates a complete Revit add-in skeleton, ready to immediately compile and run.\n\nJust hit `F5` to start debugging; the add-in manifest is automatically created, copied to the proper location, Revit launched in the debugger, and your shiny new add-in is available in the external tools menu.\n\nHere are the corresponding notes on the migration, customisation, usage and installation from the analogue task previous year:\n\n- [Revit add-in wizards for Revit 2016](http://thebuildingcoder.typepad.com/blog/2015/04/add-in-migration-to-revit-2016-and-updated-wizards.html#3)\n- [Revit add-in wizard customisation](http://thebuildingcoder.typepad.com/blog/2015/04/add-in-migration-to-revit-2016-and-updated-wizards.html#4)\n- [Revit add-in wizard usage](http://thebuildingcoder.typepad.com/blog/2015/04/add-in-migration-to-revit-2016-and-updated-wizards.html#5)\n- [Download and installation](http://thebuildingcoder.typepad.com/blog/2015/04/add-in-migration-to-revit-2016-and-updated-wizards.html#6)\n- [Revit add-in wizards on GitHub and installer](http://thebuildingcoder.typepad.com/blog/2015/08/revit-add-in-wizard-github-installer.html)\n\nPlease refer to those for all further background information, since I will not repeat it here.\n\nSome notes on new aspects not mentioned previously follow."
  },
  {
    "original_filename": "1438_addin_wizard_2017",
    "header_text": "<a name=\"2\"></a>Changes &ndash; Debug Target and Icon Update",
    "local_header_href": "#a-name2achanges-ndash-debug-target-and-icon-update",
    "chunk_text": "#### <a name=\"2\"></a>Changes &ndash; Debug Target and Icon Update\n\nI was unable to specify the debug target in the Visual Studio 2015 `.csproj` file, so I added a `.csproj.user` for that.\n\nFunnily enough, the debug target in the VB project works like before, so no need for that change there.\n\nI also updated the obsolete icon file to the Revit 2017 one provided with Revit.exe."
  },
  {
    "original_filename": "1438_addin_wizard_2017",
    "header_text": "<a name=\"3\"></a>Download",
    "local_header_href": "#a-name3adownload",
    "chunk_text": "#### <a name=\"3\"></a>Download\n\nThe current version discussed above\nis [release 2017.0.0.0](https://github.com/jeremytammik/VisualStudioRevitAddinWizard/releases/tag/2017.0.0.0).\n\nThe newest version is always available from\nthe [VisualStudioRevitAddinWizard GitHub repository](https://github.com/jeremytammik/VisualStudioRevitAddinWizard)."
  },
  {
    "original_filename": "1438_addin_wizard_2017",
    "header_text": "<a name=\"4\"></a>Installation",
    "local_header_href": "#a-name4ainstallation",
    "chunk_text": "#### <a name=\"4\"></a>Installation\n\nThe exact locations to install the wizards for Visual Studio are language dependent.\n\nYou install them by simply copying the zip file of your choice &ndash; for C#, VB, or both &ndash; to the appropriate Visual Studio project template folder in your local file system:\n\n- C# – copy [Revit2016AddinWizardCs0.zip](zip/Revit2017AddinWizardCs0.zip)\nto [My Documents]\\Visual Studio 2015\\Templates\\ProjectTemplates\\Visual C#\n- Visual Basic – copy [Revit2016AddinWizardVb0](zip/Revit2017AddinWizardVb0.zip)\nto [My Documents]\\Visual Studio 2015\\Templates\\ProjectTemplates\\Visual Basic\n\nOr, in other words:\n\n<pre>\n  $ cp Revit2017AddinWizardCs0.zip \\\n  \"/v/C/Users/tammikj/Documents/Visual Studio \\\n  2015/Templates/ProjectTemplates/Visual C#/\"\n\n  $ cp Revit2017AddinWizardVb0.zip \\\n  \"/v/C/Users/tammikj/Documents/Visual Studio \\\n  2015/Templates/ProjectTemplates/Visual Basic/\"\n</pre>\n\nI implemented a batch file `install.bat` to automate this process:\n\n<pre class=\"prettyprint\">\n@echo off\nif exist cs (goto okcs) else (echo \"No cs folder found.\" && goto exit)\n:okcs\nif exist vb (goto okvb) else (echo \"No vb folder found.\" && goto exit)\n:okvb\nset \"D=C:\\Users\\%USERNAME%\\Documents\\Visual Studio 2015\\Templates\\ProjectTemplates\"\nset \"F=%TEMP%\\Revit2017AddinWizardCs0.zip\"\necho Creating C# wizard archive %F%...\ncd cs\nzip -r \"%F%\" *\ncd ..\necho Copying C# wizard archive to %D%\\Visual C#...\ncopy \"%F%\" \"%D%\\Visual C#\"\nset \"F=%TEMP%\\Revit2017AddinWizardVb0.zip\"\necho Creating VB wizard archive %F%...\ncd vb\nzip -r \"%F%\" *\ncd ..\necho Copying VB wizard archive to %D%\\Visual Basic...\ncopy \"%F%\" \"%D%\\Visual Basic\"\n:exit\n</pre>\n\nIt assumes that you cloned the VisualStudioRevitAddinWizard to your local file system and call it from that directory, e.g., like this:\n\n<pre>\nY:\\VisualStudioRevitAddinWizard &gt; install.bat\n\nCreating C# wizard archive C:\\Users\\tammikj\\AppData\\Local\\Temp\\Revit2017AddinWizardCs0.zip...\nupdating: App.cs (deflated 54%)\nupdating: Command.cs (deflated 59%)\nupdating: Properties/ (stored 0%)\nupdating: Properties/AssemblyInfo.cs (deflated 56%)\nupdating: RegisterAddin.addin (deflated 66%)\nupdating: TemplateIcon.ico (deflated 67%)\nupdating: TemplateRevitCs.csproj (deflated 68%)\nupdating: TemplateRevitCs.csproj.user (deflated 30%)\nupdating: TemplateRevitCs.vstemplate (deflated 65%)\nCopying C# wizard archive to C:\\Users\\tammikj\\Documents\\Visual Studio 2015\\Templates\\ProjectTemplates\\Visual C#...\n        1 file(s) copied.\n\nCreating VB wizard archive C:\\Users\\tammikj\\AppData\\Local\\Temp\\Revit2017AddinWizardVb0.zip...\nupdating: AdskApplication.vb (deflated 68%)\nupdating: AdskCommand.vb (deflated 58%)\nupdating: My Project/ (stored 0%)\nupdating: My Project/AssemblyInfo.vb (deflated 54%)\nupdating: RegisterAddin.addin (deflated 66%)\nupdating: TemplateIcon.ico (deflated 67%)\nupdating: TemplateRevitVb.vbproj (deflated 72%)\nupdating: TemplateRevitVb.vstemplate (deflated 62%)\nCopying VB wizard archive to C:\\Users\\tammikj\\Documents\\Visual Studio 2015\\Templates\\ProjectTemplates\\Visual Basic...\n        1 file(s) copied.\n\nY:\\VisualStudioRevitAddinWizard &gt;\n</pre>\n\nI hope you find this useful and look forward to hearing about your customisations and suggestions for other enhancements.\n\nHave fun!"
  }
]