[
  {
    "original_filename": "0115_filter_for_family",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<style>\n.blue { color: blue; }\n.teal { color: teal; }\n.maroon { color: maroon; }\n.green { color: green; }\n.gray { color: gray; }\n</style>"
  },
  {
    "original_filename": "0115_filter_for_family",
    "header_text": "Filter for a Family",
    "local_header_href": "#filter-for-a-family",
    "chunk_text": "<h3>Filter for a Family</h3><p>We already discussed the topic of\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/01/family-category-and-filtering.html\">\nfamily category and filtering</a>\n\npreviously, but this question keeps cropping up anyway, so here is a repetition from a slightly different point of view by Saikat Bhattacharya.</p><p><strong>Question:</strong>\nI am trying to get the loaded families with a LightingFixtures category.\nHowever, I am not getting the results I expected.\nI used the following code:</p><pre class=\"code\">\nAutodesk.Revit.Creation.<span class=\"teal\">Filter</span> cf\n  = app.Create.Filter;\n \n<span class=\"teal\">Filter</span> f1 = cf.NewTypeFilter(\n  <span class=\"blue\">typeof</span>( <span class=\"teal\">Family</span> ) );\n \n<span class=\"teal\">Filter</span> f2 = cf.NewCategoryFilter(\n  <span class=\"teal\">BuiltInCategory</span>.OST_LightingFixtures );\n \n<span class=\"teal\">LogicAndFilter</span> f3 = cf.NewLogicAndFilter(\n  f1, f2 );\n \n<span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt; a = <span class=\"blue\">new</span> <span class=\"teal\">List</span>&lt;<span class=\"teal\">Element</span>&gt;();\n\ndoc.get_Elements( f3, a );\n\n<span class=\"blue\">foreach</span>( <span class=\"teal\">Family</span> f <span class=\"blue\">in</span> a )\n{\n  <span class=\"teal\">Util</span>.InfoMsg( f.Name );\n}\n</pre><p>No elements are returned from the Document using this filter.\nSo, I retrieved all the families instead and checked if the category name of the family is \"Lighting Fixtures\".\nThis is language dependant and consumes long time.\nHow can I achieve this using filters?</p><p><strong>Answer:</strong>\nAs mentioned in the discussion on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/01/family-category-and-filtering.html\">\nfamily category and filtering</a>,\n\nthe Family class does not implement the Category property for all family files.\nTherefore, you cannot use a category filter to identify family files.</p><p>If you retrieve all family files and check their category using some other means, like in you the workaround you describe, you can enhance performance and avoid the language dependence by comparing the category element id instead of its name string.</p><p>By the way, you can always manually test and interactively simulate the result of any API filter by using the Revit SDK sample ElementsFilter.\nFor a quick test, load a lighting fixture family into a new Revit document and run this sample with a family filter selecting the lighting fixture family.\nThe following results show the Category as blank for the Family element:</p><img alt=\"ElementsFilter results filtering for a family\" src=\"img/filter_for_family.gif\"/><p>Instead of creating a filter using Family and Category, you can also change it to FamilySymbol and Category to obtain the symbols instead of the family elements.\nThe Category property is always defined for family symbols.\nIf you need the families, they are accessible from the symbols as well.\nIf you simply replace typeof( Family ) by typeof( FamilySymbol ) in the definition of the filter f1 in the code above, it works fine.</p>"
  }
]