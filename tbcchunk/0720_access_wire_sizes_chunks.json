[
  {
    "original_filename": "0720_access_wire_sizes",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0720_access_wire_sizes",
    "header_text": "Access Wire Sizes",
    "local_header_href": "#access-wire-sizes",
    "chunk_text": "<h3>Access Wire Sizes</h3><p>Here is an interesting question that came up regarding the access to wire sizes.\nUsing a filtered element collector to retrieve a TemperatureRatingType instance and attempting to read its wire sizes produces a problem that is in fact documented in the Revit API help file RevitAPI.chm, but the workaround is still worth pointing out.\n\n<p><strong>Question:</strong> I'm trying to access the wire size settings in a Revit model without success. \n\n<p>The following code throws an exception saying \"Object reference not set to an instance of an object\" from the call to the TemperatureRatingType WireSizes property:\n\n<pre class=\"code\">\n  <span class=\"teal\">FilteredElementCollector</span> col \n    = <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc )\n      .OfClass( <span class=\"blue\">typeof</span>( <span class=\"teal\">TemperatureRatingType</span> ) );\n \n  <span class=\"teal\">IEnumerable</span>&lt;<span class=\"teal\">TemperatureRatingType</span>&gt; trEnumerable \n    = col.ToElements().Cast&lt;<span class=\"teal\">TemperatureRatingType</span>&gt;();\n \n  <span class=\"blue\">var</span> TempRatingReturn \n    = <span class=\"blue\">from</span> rtelement <span class=\"blue\">in</span> trEnumerable\n      <span class=\"blue\">where</span> rtelement.Name == <span class=\"maroon\">\"60\"</span>\n      <span class=\"blue\">select</span> rtelement;\n \n  <span class=\"blue\">foreach</span>( <span class=\"teal\">TemperatureRatingType</span> rt \n    <span class=\"blue\">in</span> TempRatingReturn )\n  {\n    <span class=\"teal\">WireSizeSet</span> wsset = rt.WireSizes;\n  }\n</pre>\n<p><strong>Answer:</strong> You are absolutely right, and this is actually the documented and expected behaviour, although it may not be completely obvious from the API documentation.\nThe description of the TemperatureRatingType class states the following:\n\n<p style=\"color:darkblue\">Temperature rating type is defined based on corresponding wire material type. \nIt includes type information such as wire size, insulation type, correction factor, etc. \nOnly the temperature rating types which are retrieved from WireMaterialType can work well, so don't retrieve it from Revit document directly.\n\n<p>What this actually means is that the TemperatureRatingType object is not supported when retrieved through an ElementFilter. \nIt can be retrieved from the document electrical settings WireMaterialTypes collection instead.\nIn fact, you <b>must</b> retrieve it from there in able to access the wire sizes.\nThis may seem odd, but is currently a fact. \nThe workaround is thus very simple:\n\n<pre class=\"code\">\n  <span class=\"blue\">foreach</span>( <span class=\"teal\">WireMaterialType</span> wt <span class=\"blue\">in</span> doc.Settings\n    .ElectricalSetting.WireMaterialTypes )\n  {\n    <span class=\"blue\">foreach</span>( <span class=\"teal\">TemperatureRatingType</span> trt <span class=\"blue\">in</span> \n      wt.TemperatureRatings )\n    {\n      <span class=\"teal\">WireSizeSet</span> ws = trt.WireSizes;\n    }\n  }\n</pre>\n<p>I implemented an add-in named ReadWireSizes which demonstrates both the exception being thrown and the workaround to retrieve the desired wire size settings from the electrical settings instead.\n\n<p>Here is the complete implementation of the external command Execute method:\n\n<pre class=\"code\">\n  <span class=\"teal\">UIApplication</span> uiapp = commandData.Application;\n  <span class=\"teal\">UIDocument</span> uidoc = uiapp.ActiveUIDocument;\n  <span class=\"teal\">Document</span> doc = uidoc.Document;\n \n  <span class=\"green\">// Retrieve TemperatureRatingType from</span>\n  <span class=\"green\">// filtered element collector; their</span>\n  <span class=\"green\">// wire sizes cannot be accessed:</span>\n \n  <span class=\"teal\">FilteredElementCollector</span> col \n    = <span class=\"blue\">new</span> <span class=\"teal\">FilteredElementCollector</span>( doc )\n      .OfClass( <span class=\"blue\">typeof</span>( <span class=\"teal\">TemperatureRatingType</span> ) );\n \n  <span class=\"teal\">IEnumerable</span>&lt;<span class=\"teal\">TemperatureRatingType</span>&gt; trEnumerable \n    = col.ToElements().Cast&lt;<span class=\"teal\">TemperatureRatingType</span>&gt;();\n \n  <span class=\"blue\">var</span> TempRatingReturn \n    = <span class=\"blue\">from</span> rtelement <span class=\"blue\">in</span> trEnumerable\n      <span class=\"blue\">where</span> rtelement.Name == <span class=\"maroon\">\"60\"</span>\n      <span class=\"blue\">select</span> rtelement;\n \n  <span class=\"green\">// The wire sizes we are searching for:</span>\n \n  <span class=\"teal\">WireSizeSet</span> wsset = <span class=\"blue\">null</span>;\n \n  <span class=\"green\">// Keep track of the target TemperatureRatingType:</span>\n \n  <span class=\"teal\">ElementId</span> rtId = <span class=\"blue\">null</span>;\n \n  <span class=\"blue\">foreach</span>( <span class=\"teal\">TemperatureRatingType</span> rt \n    <span class=\"blue\">in</span> TempRatingReturn )\n  {\n    <span class=\"blue\">try</span>\n    {\n      rtId = rt.Id;\n \n      <span class=\"green\">// This call fails:</span>\n \n      wsset = rt.WireSizes;\n    }\n    <span class=\"blue\">catch</span>( <span class=\"teal\">NullReferenceException</span> ex )\n    {\n      <span class=\"teal\">Debug</span>.Print( ex.GetType().ToString() \n        + <span class=\"maroon\">\": \"</span> + ex.Message );\n \n      <span class=\"teal\">Debug</span>.Assert( ex.Message.Equals( \n        <span class=\"maroon\">\"Object reference not set to an instance of an object.\"</span> ), \n        <span class=\"maroon\">\"expected null reference exception\"</span> );\n    }\n  }\n \n  <span class=\"green\">// Iterate over the electrical settings </span>\n  <span class=\"green\">// wire material types and use the target </span>\n  <span class=\"green\">// element id to identify the proper</span>\n  <span class=\"green\">// TemperatureRatingType:</span>\n \n  <span class=\"teal\">WireMaterialTypeSet</span> wts = doc.Settings\n    .ElectricalSetting.WireMaterialTypes;\n \n  <span class=\"blue\">foreach</span>( <span class=\"teal\">WireMaterialType</span> wt <span class=\"blue\">in</span> wts )\n  {\n    <span class=\"blue\">foreach</span>( <span class=\"teal\">TemperatureRatingType</span> rt \n      <span class=\"blue\">in</span> wt.TemperatureRatings )\n    {\n      <span class=\"blue\">if</span>( rtId == rt.Id )\n      {\n        wsset = rt.WireSizes;\n      }\n    }\n  }\n \n  <span class=\"blue\">int</span> n = wsset.Size;\n \n  <span class=\"teal\">Debug</span>.Print( <span class=\"blue\">string</span>.Format(\n    <span class=\"maroon\">\"{0} wire size{1} stored on temperature \"</span>\n    + <span class=\"maroon\">\"rating type with element id {2}\"</span>,\n    n, ( 1 == n ? <span class=\"maroon\">\"\"</span> : <span class=\"maroon\">\"s\"</span> ), rtId ) );\n \n  <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Succeeded;\n</pre>\n<p>Running this command in the rme_advanced_sample_project.rvt sample project provided with Revit 2012 MEP generates the following output in the Visual Studio debug output window:\n\n<pre>\nA first chance exception of type 'System\n  .NullReferenceException' occurred in RevitAPI.dll\nSystem.NullReferenceException: Object reference \n  not set to an instance of an object.\n28 wire sizes stored on temperature rating type \n  with element id 293221\n</pre>\n<p>Here is \n\n<a href=\"zip/ReadWireSizes.zip\">\nReadWireSizes.zip</a> containing\n\nthe complete source code, Visual Studio solution and add-in manifest for this external command.\n</p></p></p></p></p></p></p></p></p></p>"
  }
]