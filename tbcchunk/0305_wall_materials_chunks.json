[
  {
    "original_filename": "0305_wall_materials",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0305_wall_materials",
    "header_text": "Wall Solid versus Face Materials",
    "local_header_href": "#wall-solid-versus-face-materials",
    "chunk_text": "<h3>Wall Solid versus Face Materials</h3><p>Still away on holiday in Andalusia, here is another little item that I am posting ahead of time.\n\n<p>We looked at various aspects of materials in the past, such as the materials assigned to an \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/10/element-materials.html\">\nelement and its solid faces</a> and to a\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/10/family-instance-materials.html\">\nfamily instance</a>,\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/02/material-quantity-extraction.html\">\nmaterial quantity extraction</a>, creating a\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/05/new-material.html\">\nnew material</a>, \n\nand the fact that in the general case, there is no\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/11/solid-material.html\">\nsolid material</a>.\n\nThere are exceptions to the last statement, though, as we see from the answer to the following question:\n\n<p><strong>Question:</strong> I created a single wall and assigned different materials to several of its faces. \nI have no problem determining the different materials based on the face, but I can't get the material that is initially assigned to the wall itself.\n\n<p>If I do nothing to change the material of the wall, it appears as the first material item at the object. \nIf I do change it, though, it appears at the end of the list. \nSo I cannot rely on the position in the list.\n\n<p>Is there some way to get the material from the entire wall, based on the solid? \nWe want to assign the material to the solid, and create additional surfaces for materials which differ from the material of the wall itself. \nTo do this, we need to determine the material of the wall itself.\n\n<p><strong>Answer:</strong> You can obtain the material of the entire wall from its \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/11/wall-compound-layers.html\">\ncompound structure</a>, \n\nwhich includes material information for each of its layers.\n\nWe also looked at the issue of calculating the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/02/compound-wall-layer-volumes.html\">\ncompound wall layer volumes</a>.\n\n<p>By the way, it might be interesting to compare the results of the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/02/material-quantity-extraction.html\">\nGetMaterialArea and GetMaterialVolume</a> methods \n\nwith the face-based area calculation mentioned above and the volume calculation based on the compound layer structure volumes.\n\n<p>Many thanks to Steffen Rabe of \n\n<a href=\"http://www.rib-software.com\">\nRIB Software AG</a> \n\nfor this solution!\n</p></p></p></p></p></p></p></p>"
  }
]