[
  {
    "original_filename": "0637_vs_express",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0637_vs_express",
    "header_text": "Visual Studio, C# and VB Express",
    "local_header_href": "#visual-studio-c-and-vb-express",
    "chunk_text": "<h3>Visual Studio, C# and VB Express</h3><p>Yesterday Kean mentioned that\n\n<a href=\"http://through-the-interface.typepad.com/through_the_interface/2011/08/debugging-autocad-net-projects-using-express-editions.html\">\ndebugging AutoCAD.NET projects using the Visual C# and VB Express editions</a> is\n\nnow directly supported by the\n\n<a href=\"http://images.autodesk.com/adsk/files/AutoCAD_2010-2012_dotNET_Wizards.zip\">\nlatest version of the AutoCAD .NET Wizard</a>.\n\n<p>That prompted me to have a look and see what the current situation is with Revit add-ins.\n\n<p>Obviously, we poor Revit developers do not have such a sophisticated wizard available ... or so I thought!\n\n<p>I installed\n\n<a href=\"http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-csharp-express\">\nVisual C# Express</a> and started my experiment:\n\n<p>I launched the new installation and selected New Project &gt; Visual C#.\n\n<p>My intention was to select 'Class Library' next and manually set up the Revit API references and all that stuff, then move on to explore how to define appropriate debug settings.\n\n<p>However, guess my surprise to see the Revit Add-in option already listed:</p>\n<center>\n<img alt=\"Visual C# Express 2010 New Project dialogue\" src=\"img/vcs_exp_new_project.png\"/>\n</center>\n<p>Apparently, the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/visual-studio-add-in-wizards-for-revit-2012.html\">\nVisual Studio Add-In Wizards for Revit 2012</a> that\n\nI have installed for the full version of Visual Studio are also picked up by Visual C# Express.\n\n<p>Well, that simplifies matters a lot, doesn't it?\n\n<p>There is actually nothing else whatsoever to do.\n\n<p>Debugging is already set up by the add-in wizard, and Revit has been specified as the start-up project, although it is not displayed in the Visual C# Express debug properties:</p>\n<center>\n<img alt=\"Visual C# Express debug properties\" src=\"img/vcs_exp_properties_debug.png\"/>\n</center>\n<p>Simply hitting F5 to start debugging launches Revit, and on opening a project and looking at the Add-Ins tab external tools, I see my new Visual C# Express add-in loaded and raring to go:</p>\n<center>\n<img alt=\"Visual C# Express add-in loaded\" src=\"img/vcs_exp_add-in_loaded.png\"/>\n</center>\n<p>After setting a breakpoint using F9 in Visual C# Express and picking the external command in Revit, the breakpoint is hit and full debugging functionality is available in Visual C#:</p>\n<center>\n<img alt=\"Visual C# Express debugging the Revit add-in\" src=\"img/vcs_exp_debugging.png\"/>\n</center>\n<p>Wow.\nI expected this exploration and blog post to take an hour or two, but I was done after fifteen minutes.\n\n<p>I am assuming that all of the above remains valid analogously for \n\n<a href=\"http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-basic-express\">\nVisual Basic 2010 Express</a> as well.\n\nPlease let me know if you can verify this, or have any problems with either that or the C# version.\n\n<p>So the short and sweet message is: all you need to do is install Visual C# or Visual VB Express and the appropriate\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/visual-studio-add-in-wizards-for-revit-2012.html\">\nVisual Studio add-in wizard for Revit</a>,\n\nand you will be all set to create stand-alone add-ins and develop and debug them using the Express tools.\nI hope you have fun!\n\n<p><strong>Addendum:</strong> Here are some additonal notes on this by Augusto Gon√ßalves of Autodesk Brazil, the original implementer of the Revit add-in wizards:\n\n<ul>\n<li>One issue with Express is that the project is initially created under \\Temp\\, and therefore the add-in manifest file is also configured to use this path. \nUsually on my trainings (with Express), I recommend immediately saving the project after creating it by clicking on 'Save All', selecting a folder, and then updating the path in the add-in manifest file &lt;Assembly&gt; tag.\n\n<li>Also, keep in mind that Express builds the Debug version when you press F5 (or Star Debugging), and the Release version when you select the command in the Build menu.\n</li></li></ul>\n<p>Thank you, Augusto, for pointing this out!\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  }
]