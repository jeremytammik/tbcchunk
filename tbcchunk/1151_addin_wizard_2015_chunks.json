[
  {
    "original_filename": "1151_addin_wizard_2015",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "1151_addin_wizard_2015",
    "header_text": "Add-In Wizards for Revit 2015",
    "local_header_href": "#add-in-wizards-for-revit-2015",
    "chunk_text": "<h3>Add-In Wizards for Revit 2015</h3><p>I updated my Visual Studio Revit add-in wizards for Revit 2015.</p><p>The 2015 version generates the same boilerplate code as the reliable old\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/add-in-wizards-for-revit-2014-1.html\">\nRevit 2014</a> one and its\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/06/sun-direction-shadow-calculation-and-wizard-update.html#2\">\nupdate</a> did,\n\nwhich can be simply deleted if not needed.</p><p>I selflessly also implemented and tested the Visual Basic version right away.</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "1151_addin_wizard_2015",
    "header_text": "Revit Add-in Wizard Customisation",
    "local_header_href": "#revit-add-in-wizard-customisation",
    "chunk_text": "<h4>Revit Add-in Wizard Customisation</h4><p>As I keep pointing out, it is important to understand how easy it is to modify the wizards for your own needs, and make copies with variations to support different requirements.</p><p>Here is an overview of previous explanations of various aspects that also show how to create your own flavours:</p><ul>\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/07/devtv-addin-templates.html\">\nOriginal introduction, benefits, and usage example</a> for C# and VB.\n\n<li>Personalised\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/10/revit-2011-devtv.html#2\">\nminimal C# version</a> for Revit 2011.\n\n<li>A short additional\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/12/snow-and-woe-with-manifest-files.html\">\nusage note</a>.\n\n<li>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/01/automate-designoption-and-64-bit-add-in-templates.html#2\">\n64-bit versions</a> for C# and VB.\n\n<li>Support for the\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/04/visual-studio-add-in-wizards-for-revit-2012.html\">\nRevit 2012 API</a> for\n\nC# and VB.\n\n<li>Updated C# and VB versions placing\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/product-and-add-in-wizard-updates.html#3\">\nassembly DLL alongside add-in manifest</a>.\n\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/add-in-wizard-for-revit-2013.html\">\nRevit 2013 C#</a> version including more skeleton code.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/update-api-assembly-references-and-wizards.html#4\">\nRevit 2013 VB</a> version.</li>\n<li>C# and VB\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/add-in-wizards-for-revit-2014-1.html\">\nadd-in wizards for Revit 2014</a>.</li>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2013/06/sun-direction-shadow-calculation-and-wizard-update.html#2\">\nWizard update</a>\n\nsuppressing the processor architecture mismatch warning and referring to Revit Onebox instead of the architectural flavour.</li>\n<li>Wizard generating a\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/11/multi-version-visual-studio-revit-add-in-wizard.html\">\nmulti-version add-in</a>  supporting\n\nboth Revit 2013 and 2014.</li>\n</li></li></li></li></li></li></ul><p>Just like for Revit 2014, the Revit 2015 add-in wizard uses the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/05/add-in-wizards-for-revit-2014-1.html#2\">\n$(ProgramW6432)</a> Visual Studio project template variable to determine where to locate the Revit API assembly files for referencing and the Revit.exe executable for debugging.</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "1151_addin_wizard_2015",
    "header_text": "Revit Add-in Wizard Usage",
    "local_header_href": "#revit-add-in-wizard-usage",
    "chunk_text": "<h4>Revit Add-in Wizard Usage</h4><p>Simply install the wizard zip files you need in the appropriate locations, start up Visual Studio, create a new C# or VB Revit add-in project using the wizard default settings, and immediately hit F5 to start up Revit.exe in the debugger.\n\n<p>The wizards perform the following functions for C# and VB, respectively:</p>\n<ul>\n<li>Generate the skeleton source code, Visual Studio solution and add-in manifest.</li>\n<li>On successful build, copy the add-in assembly DLL and add-in manifest to the Revit add-in folder, thus automatically installing it for Revit to pick up and load.</li>\n<li>Define the add-in debugging settings to start up the Revit.exe program.</li>\n</ul>\n<p>Therefore, immediately after the initial add-in creation, you can immediately launch the debugger.\nThe add-in is compiled, Revit is started up, the add-in is loaded, you can select the new external command in the External Tools menu, launch and test it immediately without entering one single further keystroke yourself.</p>\n<p>The new command even executes in zero document state, although the default external command skeleton implementation throws an exception trying to access a property on the current UI document, which is null.\nIt shows you that everything is working correctly right away, though.</p>\n<a name=\"4\"></a>\n<h4>Wizard Download and Installation</h4>\n<p>The appropriate locations to install the wizards for Visual Studio to pick them up are language dependent.</p>\n<p>Copy the zip file of your choice to the matching Visual Studio project template folder in your local file system:\n\n<ul>\n<li>C# – copy <a href=\"zip/Revit2015AddinWizardCs1.zip\">Revit2015AddinWizardCs1.zip</a> to\n<br/>[My Documents]\\Visual Studio 2012\\Templates\\ProjectTemplates\\Visual C#\n<li>Visual Basic – copy <a href=\"zip/Revit2015AddinWizardVb1.zip\">Revit2015AddinWizardVb1.zip</a> to\n<br/>[My Documents]\\Visual Studio 2012\\Templates\\ProjectTemplates\\Visual Basic\n</li></li></ul>\n<p>I hope you find this useful and look forward to hearing any suggestions for improvement you come up with.</p>\n<p>Better still, implement them yourself and let us know where to pick them up  :-)</p>\n</p></p>"
  },
  {
    "original_filename": "1151_addin_wizard_2015",
    "header_text": "Wizard Download and Installation",
    "local_header_href": "#wizard-download-and-installation",
    "chunk_text": "<h4>Wizard Download and Installation</h4><p>The appropriate locations to install the wizards for Visual Studio to pick them up are language dependent.</p><p>Copy the zip file of your choice to the matching Visual Studio project template folder in your local file system:\n\n<ul>\n<li>C# – copy <a href=\"zip/Revit2015AddinWizardCs1.zip\">Revit2015AddinWizardCs1.zip</a> to\n<br/>[My Documents]\\Visual Studio 2012\\Templates\\ProjectTemplates\\Visual C#\n<li>Visual Basic – copy <a href=\"zip/Revit2015AddinWizardVb1.zip\">Revit2015AddinWizardVb1.zip</a> to\n<br/>[My Documents]\\Visual Studio 2012\\Templates\\ProjectTemplates\\Visual Basic\n</li></li></ul>\n<p>I hope you find this useful and look forward to hearing any suggestions for improvement you come up with.</p>\n<p>Better still, implement them yourself and let us know where to pick them up  :-)</p>\n</p>"
  }
]