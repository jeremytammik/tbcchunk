[
  {
    "original_filename": "0714_no_class_diagram",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0714_no_class_diagram",
    "header_text": "No Revit API Class Diagram",
    "local_header_href": "#no-revit-api-class-diagram",
    "chunk_text": "<h3>No Revit API Class Diagram</h3><p>Quite a few people have asked for a Revit API class diagram in the past, and the request continues to pop up every now and then, so here is a post that I can point to in future when that happens.\n\n<p><strong>Question:</strong> I am looking for a graphical diagram of the Revit API object model, because I cannot find it in the SDK. \nWhere can I obtain that, please?\n\n<p><strong>Answer:</strong> Unfortunately, I do not have any very satisfying answer for you.\n\n<p>Once upon a time, the Revit SDK included a class diagram such as you are looking for. \nThe last version was the \n\n<a href=\"zip/\">\nRevit API Class Diagram.png</a> provided \n\nin the Revit 2010 SDK:</p>\n<center>\n<img alt=\"Revit 2010 API Class Diagram\" src=\"file:///C:/a/lib/revit/2010/SDK/Revit API Class Diagram.png\" width=\"400\"/>\n</center>\n\nThat is of course rather outdated by now.\n\n<p>The class diagram has not been updated for the Revit 2011 or 2012 API, nor are there currently any plans to do so. \n\n<p>I personally find the interactive navigation in the Visual Studio object browser and the runtime code analysis and Intellisense more useful for my everyday needs, anyway.\n\n<p>Here is what the development team responded regarding the current situation:\n\n<p>Our tools for creating this diagram would have needed extensive updating to work with the new version and we did not think it was worth the effort. \nWe also questioned how useful this diagram was to our customers. \nIf you file a request for this to be reinstated, please include an explanation of you plan to use it, as there might be other ways for us to provide the needed information.\n\n<p>The most reliable browsable information on the Revit object model is available by using the object browser built into Visual Studio: \n\n<p>In the solution explorer, open the 'References' node of your project and right click on 'RevitAPI', then select 'View in Object Browser'.\n\n<p>You can also open the class view node Project References &gt; RevitAPI, navigate to various classes, right click on them and select 'View Class Diagram'. Doing this step by step assembles a partial class diagram for you.\n\n<p>It would theoretically also be possible to use .NET reflection to automatically generate a complete diagram of all classes defined by the Revit API. \n\n<p>An example of such a tool including complete source code is presented in the Code Project article on the <i>100% Reflective Class Diagram Creation Tool</i>\n<a href=\"http://www.codeproject.com/csharp/AutoDiagrammer.asp\">\nAutoDiagrammer</a> and \n\nits updated version\n\n<a href=\"http://www.codeproject.com/KB/WPF/AutoDiagrammerII.aspx\">\nAutoDiagrammerII</a>.\n\n<p>I tried to apply this tool to RevitAPI.dll years ago, and it did not work right out of the box back then.\nOn the other hand, it has been updated since then.\nIn any case, it might be possible to adapt the source code provided so that it works and completes. \nI am sure there are many other solutions out there to try, as well.\n\n<p>Regarding the relationship of object types to one another, the derivation relationships of all classes are explicitly noted in the Revit API help file RevitAPI.chm, and the Visual Studio object browser can provide them to you as well.\nThe developer guide is a good source of background information including other dependencies between the different classes.\n\n<p>What I myself use most of all is the F12 key in the Visual Studio IDE.\nIt takes me to the definition source code of any variable, method or class, and from there I can continue using F12 to navigate further upwards through the hierarchy graph to its parent and more distant ancestors.\n\n\n<h4>Happy Birthday, Autodesk!</h4>\n<p>Autodesk is 30 years old this month!\n\n<p><a href=\"http://www.fourmilab.ch\">Fourmilab</a> provides \n\nall the information from the horse's mouth, sorry, from the founder John Walker, and here is some \n\n<a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/happy-nfy.html\">\nmore detailed info on it from Kean</a>.\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0714_no_class_diagram",
    "header_text": "Happy Birthday, Autodesk!",
    "local_header_href": "#happy-birthday-autodesk",
    "chunk_text": "<h4>Happy Birthday, Autodesk!</h4><p>Autodesk is 30 years old this month!\n\n<p><a href=\"http://www.fourmilab.ch\">Fourmilab</a> provides \n\nall the information from the horse's mouth, sorry, from the founder John Walker, and here is some \n\n<a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/happy-nfy.html\">\nmore detailed info on it from Kean</a>.\n</p></p>"
  }
]