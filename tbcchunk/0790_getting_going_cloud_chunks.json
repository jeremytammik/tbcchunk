[
  {
    "original_filename": "0790_getting_going_cloud",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0790_getting_going_cloud",
    "header_text": "Getting Going with the Cloud",
    "local_header_href": "#getting-going-with-the-cloud",
    "chunk_text": "<h3>Getting Going with the Cloud</h3><p>I am now the proud owner of an Android tablet and happily thinking about things to do with it.\nThe first idea that comes to mind is working through something similar to Adam's \n\n<a href=\"http://adndevblog.typepad.com/aec/2012/06/revit-model-viewer-for-ios-part-1.html\">\nRevit model viewer for iOS</a> that\n\nJim Quanci showed at the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-one.html\">\nAEC DevCamp</a>.\n\n<p>Before getting into that, though, I should address some of the issues brought up by Senthil in \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/serviceoriented-architecture.html?cid=6a00e553e1689788330168ebd5548e970c#comment-6a00e553e1689788330168ebd5548e970c\">\nhis</a>\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/serviceoriented-architecture.html?cid=6a00e553e168978833016767cacd01970b#comment-6a00e553e168978833016767cacd01970b\">\ncomment</a> \n\non the discussion on \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/08/serviceoriented-architecture.html\">\nservice-oriented architecture</a>, \n\nasking for information about Revit cloud development, e.g. a step by step process for cloud beginners.\nSenthil also mentions the \n\n<a href=\"http://download.autodesk.com/media/adn/cloudcomputing/3_DevTV_Cloud_Computing_Revit_Demo/DevTV_Cloud_Computing_Revit_Demo.html\">\ncloud computing Revit demo</a> on the\n\n<a href=\"http://usa.autodesk.com/adsk/servlet/item?siteID=123112&amp;id=17136545\">\nADN cloud computing page</a>,\n\nits add-in manifest, assembly DLL file location, how to deploy it, how to interact with Revit through web services, and developing a service application in general.\n\n<p>Here are a couple of starting points for addressing these issues:\n\n<ul>\n<li><a href=\"#2\">DevCamp cloud and mobile track</a>\n<li><a href=\"#3\">The Apollonian gasket cloud service</a>\n<li><a href=\"#4\">The AEC cloud demo</a>\n<li><a href=\"#5\">Revit model viewer</a>\n</li></li></li></li></ul>\n<a name=\"2\"></a>\n<h4>DevCamp Cloud and Mobile Track</h4>\n<p>All of these topics are addressed in depth by Gopinath Taget's cloud and mobile presentation, both at Autodesk University last year and most recently at the AEC and Manufacturing DevCamps earlier this month, each of which boasted a separate track on cloud and mobile technologies.\nGopi's four sessions at the AEC DevCamp covered:\n\n<ul>\n<li><strong>An Overview of Cloud Computing:</strong>\nLearn what cloud computing is all about, what kind of applications can be written for and run on the cloud, when it is suitable to use the cloud, when it is not. Learn about the popular commercial cloud service providers including Amazon Web Services (AWS), Microsoft Azure and Google App Engine and how to use them. Learn the similarities and differences between the cloud services they provide, the advantages of using one over the others and the coverage and sophistication of the APIs provided to use their cloud services. The class includes demonstrations and code review of sample cloud applications for Autodesk Revit, AutoCAD Civil 3D, AutoCAD and AutoCAD WS.\n\n<li><strong>State of the Art of Autodesk Cloud and Mobile Apps:</strong>\nLearn about current Autodesk cloud services, their capabilities and APIs. We will talk about and demonstrate AutoCAD WS, Autodesk 360, and Autodesk Photofly web services in depth. Demonstrations and instruction will be based on Microsoft Windows, Apple's iOS and Google's Android. The class will end on an exploration where these web services are going and - at a high level - where Autodesk\u0019s web services are headed.\n\n<li><strong>Introduction to Mobile app development – Apple's iOS:</strong>\nLearn about programming on iOS devices. Learn where you need to go and what you need to do to start programming on iOS. Learn about the SDKs important for graphics intensive software development including WebGL and OpenGL ES and how to get started working with them. This class includes a detailed \"start to finish\" look at development of a simple iOS mobile App with a basic user interface.\n\n<li><strong>Introduction to Mobile app development – Google's Android:</strong>\nLearn about programming on Android devices. Learn where you need to go and what you need to do to start programming on Android. Learn about the SDKs that would be important to a CAD developer like WebGL and OpenGL ES and how to get started on them. This class will also demonstrate creating a simple Android mobile App with simple user interface from start to finish.\n</li></li></li></li></ul>\n<p>Gopi's presentations and samples are currently publicly available from Buzzsaw together with all the rest of the AEC and Manufacturing\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/aec-devcamp-2012-material.html\">\nDevCamp 2012 material</a>.\n\n\n\n<a name=\"3\"></a>\n<h4>The Apollonian Gasket Cloud Service</h4>\n<p>Probably the greatest and deepest exploration of using cloud services over a wide variety of technologies and devices was created by Kean Walmsley. \nHe explores making use of just about all imaginable combinations of cloud service providers and clients.\nThe \n\n<a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/06/cloud-mobile-series-summary.html\">\nApollonian gasket cloud &amp; mobile series summary</a> boasts\n\nthe following impressive table of contents:\n\n<h5>Creating the core desktop functionality</h5>\n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/circle-packing-in-autocad-creating-an-apollonian-gasket-using-f-part-1.html\">\nCircle packing in AutoCAD: creating an Apollonian gasket using F# – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/circle-packing-in-autocad-creating-an-apollonian-gasket-using-f-part-2.html\">\nCircle packing in AutoCAD: creating an Apollonian gasket using F# – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/sphere-packing-in-autocad-creating-an-apollonian-packing-using-f-part-1.html\">\nSphere packing in AutoCAD: creating an Apollonian packing using F# – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/sphere-packing-in-autocad-creating-an-apollonian-packing-using-f-part-2.html\">\nSphere packing in AutoCAD: creating an Apollonian packing using F# – Part 2</a> </li>\n</ul>\n<h5>Moving it to the cloud</h5>\n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/03/moving-to-the-cloud.html\">Moving to the Cloud</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/exposing-a-restful-web-service-for-use-inside-autocad-using-the-aspnet-web-api-part-1.html\">\nExposing a RESTful web service for use inside AutoCAD using the ASP.NET Web API – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/exposing-a-restful-web-service-for-use-inside-autocad-using-the-aspnet-web-api-part-2.html\">\nExposing a RESTful web service for use inside AutoCAD using the ASP.NET Web API – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/architecting-for-the-cloud.html\"><span style=\"font-family: calibri;\">\nArchitecting for the Cloud</span></a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/consuming-data-from-a-restful-web-service-inside-autocad-using-net.html\">\nConsuming data from a RESTful web-service inside AutoCAD using .NET</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/hosting-our-aspnet-web-api-project-on-windows-azure-part-1.html\">\nHosting our ASP.NET Web API project on Windows Azure – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/hosting-our-aspnet-web-api-project-on-windows-azure-part-2.html\">\nHosting our ASP.NET Web API project on Windows Azure – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/using-windows-azure-caching-with-our-aspnet-web-api-project.html\">\nUsing Windows Azure Caching with our ASP.NET Web API project</a> </li>\n</ul>\n<h5>Using the web-service from various clients</h5>\n<ul>\n<li>AutoCAD       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/calling-a-cloud-based-web-service-from-autocad-using-net.html\">\nCalling a cloud-based web-service from AutoCAD using .NET</a> </li>\n</ul>\n</li>\n<li>Unity3D       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/calling-a-web-service-from-a-unity3d-scene.html\">\nCalling a web-service from a Unity3D scene</a> </li>\n</ul>\n</li>\n<li>Android       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-1.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-2.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-3.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 3</a> </li>\n</ul>\n</li>\n<li>iOS       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-1.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-2.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/06/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-3-1.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 3</a> </li>\n</ul>\n</li>\n<li>HTML5/WebGL       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5-part-2.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5-part-3.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 3</a> </li>\n</ul>\n</li>\n<li>WinRT       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-winrt-part-1.html\">\nCreating a 3D viewer for our Apollonian service using WinRT – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-winrt-part-2.html\">\nCreating a 3D viewer for our Apollonian service using WinRT – Part 2</a>\n</li></ul>\n</li></ul>\n<p>This really is a huge wealth of material and should provide ample words of wisdom for any brave seeker venturing out on these now no longer unmapped paths.</p>\n<a name=\"4\"></a>\n<h4>AEC Cloud Demo</h4>\n<p>Returning to my own much more modest efforts in this realm so far based on the Revit API, Senthil mentions the \n\n<a href=\"http://download.autodesk.com/media/adn/cloudcomputing/3_DevTV_Cloud_Computing_Revit_Demo/DevTV_Cloud_Computing_Revit_Demo.html\">\nAEC cloud demo</a> on the\n\n<a href=\"http://usa.autodesk.com/adsk/servlet/item?siteID=123112&amp;id=17136545\">\nADN cloud computing page</a>.\n\nThat is an eleven minute recording of a very simple add-in running on Revit 2012, originally created for the DevDays conferences in the end of 2010.\n\n<p>I recently migrated the sample add-in to Revit 2013.\nHere is \n\n<a href=\"zip/AecMatInfoClientRevit2013.zip\">\nAecMatInfoClientRevit2013.zip</a> containing \n\nits entire source code, Visual Studio solution and add-in manifest.\n\n<p>As explained in the recording, it simply defines two commands to read data from certain Revit element parameters and store them in a simple cloud-hosted database, and vice versa to read data from the database and populate it back into the Revit parameters again.\n\n\n<a name=\"5\"></a>\n<h4>Revit Viewer via OBJ</h4>\n<p>As said, the next thing I would like to look at is a Revit model viewer.\n\n<p>Instead of using Adam's approach via a custom geometry file format, I thought I might make use of the \n\n<a href=\"http://en.wikipedia.org/wiki/Wavefront_.obj_file\">\nWavefront OBJ</a> file\n\nformat, which seems to be pretty standard and compact.\n\n<p>My current tentative outline looks like this:\n\n<ol>\n<li>Describe Adam's Revit cloud and mobile demo (well, Adam is doing this himself): \n<ol type=\"a\">\n<li>\n<a href=\"http://adndevblog.typepad.com/aec/2012/06/revit-model-viewer-for-ios-part-1.html\">\nRVT add-in</a> exporting triangulated geometry faces via custom ASCII file format, uploading to cloud\n<li>Mobile device accessing cloud data, custom iOS viewer reading and displaying 3D view of custom format\n</li></li></ol>\n<li>Implement a RVT add-in that exports OBJ file format instead\n<ol type=\"a\">\n<li>Standard format, can be used ubiquitously\n<li>Optimise that file format to significantly reduce file size and increase speed and efficiency\n</li></li></ol>\n<li>View OBJ file format on mobile\n<ol type=\"a\">\n<li>Using standard viewer\n<li>Implement custom Android viewer\n</li></li></ol>\n</li></li></li></ol>\n<p>It will be interesting to see how I do during the next few days... especially for me  :-)\n</p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0790_getting_going_cloud",
    "header_text": "DevCamp Cloud and Mobile Track",
    "local_header_href": "#devcamp-cloud-and-mobile-track",
    "chunk_text": "<h4>DevCamp Cloud and Mobile Track</h4><p>All of these topics are addressed in depth by Gopinath Taget's cloud and mobile presentation, both at Autodesk University last year and most recently at the AEC and Manufacturing DevCamps earlier this month, each of which boasted a separate track on cloud and mobile technologies.\nGopi's four sessions at the AEC DevCamp covered:\n\n<ul>\n<li><strong>An Overview of Cloud Computing:</strong>\nLearn what cloud computing is all about, what kind of applications can be written for and run on the cloud, when it is suitable to use the cloud, when it is not. Learn about the popular commercial cloud service providers including Amazon Web Services (AWS), Microsoft Azure and Google App Engine and how to use them. Learn the similarities and differences between the cloud services they provide, the advantages of using one over the others and the coverage and sophistication of the APIs provided to use their cloud services. The class includes demonstrations and code review of sample cloud applications for Autodesk Revit, AutoCAD Civil 3D, AutoCAD and AutoCAD WS.\n\n<li><strong>State of the Art of Autodesk Cloud and Mobile Apps:</strong>\nLearn about current Autodesk cloud services, their capabilities and APIs. We will talk about and demonstrate AutoCAD WS, Autodesk 360, and Autodesk Photofly web services in depth. Demonstrations and instruction will be based on Microsoft Windows, Apple's iOS and Google's Android. The class will end on an exploration where these web services are going and - at a high level - where Autodesk\u0019s web services are headed.\n\n<li><strong>Introduction to Mobile app development – Apple's iOS:</strong>\nLearn about programming on iOS devices. Learn where you need to go and what you need to do to start programming on iOS. Learn about the SDKs important for graphics intensive software development including WebGL and OpenGL ES and how to get started working with them. This class includes a detailed \"start to finish\" look at development of a simple iOS mobile App with a basic user interface.\n\n<li><strong>Introduction to Mobile app development – Google's Android:</strong>\nLearn about programming on Android devices. Learn where you need to go and what you need to do to start programming on Android. Learn about the SDKs that would be important to a CAD developer like WebGL and OpenGL ES and how to get started on them. This class will also demonstrate creating a simple Android mobile App with simple user interface from start to finish.\n</li></li></li></li></ul>\n<p>Gopi's presentations and samples are currently publicly available from Buzzsaw together with all the rest of the AEC and Manufacturing\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/aec-devcamp-2012-material.html\">\nDevCamp 2012 material</a>.\n\n\n\n<a name=\"3\"></a>\n<h4>The Apollonian Gasket Cloud Service</h4>\n<p>Probably the greatest and deepest exploration of using cloud services over a wide variety of technologies and devices was created by Kean Walmsley. \nHe explores making use of just about all imaginable combinations of cloud service providers and clients.\nThe \n\n<a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/06/cloud-mobile-series-summary.html\">\nApollonian gasket cloud &amp; mobile series summary</a> boasts\n\nthe following impressive table of contents:\n\n<h5>Creating the core desktop functionality</h5>\n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/circle-packing-in-autocad-creating-an-apollonian-gasket-using-f-part-1.html\">\nCircle packing in AutoCAD: creating an Apollonian gasket using F# – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/circle-packing-in-autocad-creating-an-apollonian-gasket-using-f-part-2.html\">\nCircle packing in AutoCAD: creating an Apollonian gasket using F# – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/sphere-packing-in-autocad-creating-an-apollonian-packing-using-f-part-1.html\">\nSphere packing in AutoCAD: creating an Apollonian packing using F# – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/sphere-packing-in-autocad-creating-an-apollonian-packing-using-f-part-2.html\">\nSphere packing in AutoCAD: creating an Apollonian packing using F# – Part 2</a> </li>\n</ul>\n<h5>Moving it to the cloud</h5>\n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/03/moving-to-the-cloud.html\">Moving to the Cloud</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/exposing-a-restful-web-service-for-use-inside-autocad-using-the-aspnet-web-api-part-1.html\">\nExposing a RESTful web service for use inside AutoCAD using the ASP.NET Web API – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/exposing-a-restful-web-service-for-use-inside-autocad-using-the-aspnet-web-api-part-2.html\">\nExposing a RESTful web service for use inside AutoCAD using the ASP.NET Web API – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/architecting-for-the-cloud.html\"><span style=\"font-family: calibri;\">\nArchitecting for the Cloud</span></a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/consuming-data-from-a-restful-web-service-inside-autocad-using-net.html\">\nConsuming data from a RESTful web-service inside AutoCAD using .NET</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/hosting-our-aspnet-web-api-project-on-windows-azure-part-1.html\">\nHosting our ASP.NET Web API project on Windows Azure – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/hosting-our-aspnet-web-api-project-on-windows-azure-part-2.html\">\nHosting our ASP.NET Web API project on Windows Azure – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/using-windows-azure-caching-with-our-aspnet-web-api-project.html\">\nUsing Windows Azure Caching with our ASP.NET Web API project</a> </li>\n</ul>\n<h5>Using the web-service from various clients</h5>\n<ul>\n<li>AutoCAD       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/calling-a-cloud-based-web-service-from-autocad-using-net.html\">\nCalling a cloud-based web-service from AutoCAD using .NET</a> </li>\n</ul>\n</li>\n<li>Unity3D       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/calling-a-web-service-from-a-unity3d-scene.html\">\nCalling a web-service from a Unity3D scene</a> </li>\n</ul>\n</li>\n<li>Android       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-1.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-2.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-3.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 3</a> </li>\n</ul>\n</li>\n<li>iOS       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-1.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-2.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/06/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-3-1.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 3</a> </li>\n</ul>\n</li>\n<li>HTML5/WebGL       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5-part-2.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5-part-3.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 3</a> </li>\n</ul>\n</li>\n<li>WinRT       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-winrt-part-1.html\">\nCreating a 3D viewer for our Apollonian service using WinRT – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-winrt-part-2.html\">\nCreating a 3D viewer for our Apollonian service using WinRT – Part 2</a>\n</li></ul>\n</li></ul>\n<p>This really is a huge wealth of material and should provide ample words of wisdom for any brave seeker venturing out on these now no longer unmapped paths.</p>\n<a name=\"4\"></a>\n<h4>AEC Cloud Demo</h4>\n<p>Returning to my own much more modest efforts in this realm so far based on the Revit API, Senthil mentions the \n\n<a href=\"http://download.autodesk.com/media/adn/cloudcomputing/3_DevTV_Cloud_Computing_Revit_Demo/DevTV_Cloud_Computing_Revit_Demo.html\">\nAEC cloud demo</a> on the\n\n<a href=\"http://usa.autodesk.com/adsk/servlet/item?siteID=123112&amp;id=17136545\">\nADN cloud computing page</a>.\n\nThat is an eleven minute recording of a very simple add-in running on Revit 2012, originally created for the DevDays conferences in the end of 2010.\n\n<p>I recently migrated the sample add-in to Revit 2013.\nHere is \n\n<a href=\"zip/AecMatInfoClientRevit2013.zip\">\nAecMatInfoClientRevit2013.zip</a> containing \n\nits entire source code, Visual Studio solution and add-in manifest.\n\n<p>As explained in the recording, it simply defines two commands to read data from certain Revit element parameters and store them in a simple cloud-hosted database, and vice versa to read data from the database and populate it back into the Revit parameters again.\n\n\n<a name=\"5\"></a>\n<h4>Revit Viewer via OBJ</h4>\n<p>As said, the next thing I would like to look at is a Revit model viewer.\n\n<p>Instead of using Adam's approach via a custom geometry file format, I thought I might make use of the \n\n<a href=\"http://en.wikipedia.org/wiki/Wavefront_.obj_file\">\nWavefront OBJ</a> file\n\nformat, which seems to be pretty standard and compact.\n\n<p>My current tentative outline looks like this:\n\n<ol>\n<li>Describe Adam's Revit cloud and mobile demo (well, Adam is doing this himself): \n<ol type=\"a\">\n<li>\n<a href=\"http://adndevblog.typepad.com/aec/2012/06/revit-model-viewer-for-ios-part-1.html\">\nRVT add-in</a> exporting triangulated geometry faces via custom ASCII file format, uploading to cloud\n<li>Mobile device accessing cloud data, custom iOS viewer reading and displaying 3D view of custom format\n</li></li></ol>\n<li>Implement a RVT add-in that exports OBJ file format instead\n<ol type=\"a\">\n<li>Standard format, can be used ubiquitously\n<li>Optimise that file format to significantly reduce file size and increase speed and efficiency\n</li></li></ol>\n<li>View OBJ file format on mobile\n<ol type=\"a\">\n<li>Using standard viewer\n<li>Implement custom Android viewer\n</li></li></ol>\n</li></li></li></ol>\n<p>It will be interesting to see how I do during the next few days... especially for me  :-)\n</p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0790_getting_going_cloud",
    "header_text": "The Apollonian Gasket Cloud Service",
    "local_header_href": "#the-apollonian-gasket-cloud-service",
    "chunk_text": "<h4>The Apollonian Gasket Cloud Service</h4><p>Probably the greatest and deepest exploration of using cloud services over a wide variety of technologies and devices was created by Kean Walmsley. \nHe explores making use of just about all imaginable combinations of cloud service providers and clients.\nThe \n\n<a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/06/cloud-mobile-series-summary.html\">\nApollonian gasket cloud &amp; mobile series summary</a> boasts\n\nthe following impressive table of contents:\n\n<h5>Creating the core desktop functionality</h5>\n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/circle-packing-in-autocad-creating-an-apollonian-gasket-using-f-part-1.html\">\nCircle packing in AutoCAD: creating an Apollonian gasket using F# – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/circle-packing-in-autocad-creating-an-apollonian-gasket-using-f-part-2.html\">\nCircle packing in AutoCAD: creating an Apollonian gasket using F# – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/sphere-packing-in-autocad-creating-an-apollonian-packing-using-f-part-1.html\">\nSphere packing in AutoCAD: creating an Apollonian packing using F# – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/sphere-packing-in-autocad-creating-an-apollonian-packing-using-f-part-2.html\">\nSphere packing in AutoCAD: creating an Apollonian packing using F# – Part 2</a> </li>\n</ul>\n<h5>Moving it to the cloud</h5>\n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/03/moving-to-the-cloud.html\">Moving to the Cloud</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/exposing-a-restful-web-service-for-use-inside-autocad-using-the-aspnet-web-api-part-1.html\">\nExposing a RESTful web service for use inside AutoCAD using the ASP.NET Web API – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/exposing-a-restful-web-service-for-use-inside-autocad-using-the-aspnet-web-api-part-2.html\">\nExposing a RESTful web service for use inside AutoCAD using the ASP.NET Web API – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/architecting-for-the-cloud.html\"><span style=\"font-family: calibri;\">\nArchitecting for the Cloud</span></a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/consuming-data-from-a-restful-web-service-inside-autocad-using-net.html\">\nConsuming data from a RESTful web-service inside AutoCAD using .NET</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/hosting-our-aspnet-web-api-project-on-windows-azure-part-1.html\">\nHosting our ASP.NET Web API project on Windows Azure – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/hosting-our-aspnet-web-api-project-on-windows-azure-part-2.html\">\nHosting our ASP.NET Web API project on Windows Azure – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/using-windows-azure-caching-with-our-aspnet-web-api-project.html\">\nUsing Windows Azure Caching with our ASP.NET Web API project</a> </li>\n</ul>\n<h5>Using the web-service from various clients</h5>\n<ul>\n<li>AutoCAD       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/calling-a-cloud-based-web-service-from-autocad-using-net.html\">\nCalling a cloud-based web-service from AutoCAD using .NET</a> </li>\n</ul>\n</li>\n<li>Unity3D       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/calling-a-web-service-from-a-unity3d-scene.html\">\nCalling a web-service from a Unity3D scene</a> </li>\n</ul>\n</li>\n<li>Android       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-1.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-2.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-3.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 3</a> </li>\n</ul>\n</li>\n<li>iOS       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-1.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-2.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/06/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-3-1.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 3</a> </li>\n</ul>\n</li>\n<li>HTML5/WebGL       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5-part-2.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5-part-3.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 3</a> </li>\n</ul>\n</li>\n<li>WinRT       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-winrt-part-1.html\">\nCreating a 3D viewer for our Apollonian service using WinRT – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-winrt-part-2.html\">\nCreating a 3D viewer for our Apollonian service using WinRT – Part 2</a>\n</li></ul>\n</li></ul>\n<p>This really is a huge wealth of material and should provide ample words of wisdom for any brave seeker venturing out on these now no longer unmapped paths.</p>\n<a name=\"4\"></a>\n<h4>AEC Cloud Demo</h4>\n<p>Returning to my own much more modest efforts in this realm so far based on the Revit API, Senthil mentions the \n\n<a href=\"http://download.autodesk.com/media/adn/cloudcomputing/3_DevTV_Cloud_Computing_Revit_Demo/DevTV_Cloud_Computing_Revit_Demo.html\">\nAEC cloud demo</a> on the\n\n<a href=\"http://usa.autodesk.com/adsk/servlet/item?siteID=123112&amp;id=17136545\">\nADN cloud computing page</a>.\n\nThat is an eleven minute recording of a very simple add-in running on Revit 2012, originally created for the DevDays conferences in the end of 2010.\n\n<p>I recently migrated the sample add-in to Revit 2013.\nHere is \n\n<a href=\"zip/AecMatInfoClientRevit2013.zip\">\nAecMatInfoClientRevit2013.zip</a> containing \n\nits entire source code, Visual Studio solution and add-in manifest.\n\n<p>As explained in the recording, it simply defines two commands to read data from certain Revit element parameters and store them in a simple cloud-hosted database, and vice versa to read data from the database and populate it back into the Revit parameters again.\n\n\n<a name=\"5\"></a>\n<h4>Revit Viewer via OBJ</h4>\n<p>As said, the next thing I would like to look at is a Revit model viewer.\n\n<p>Instead of using Adam's approach via a custom geometry file format, I thought I might make use of the \n\n<a href=\"http://en.wikipedia.org/wiki/Wavefront_.obj_file\">\nWavefront OBJ</a> file\n\nformat, which seems to be pretty standard and compact.\n\n<p>My current tentative outline looks like this:\n\n<ol>\n<li>Describe Adam's Revit cloud and mobile demo (well, Adam is doing this himself): \n<ol type=\"a\">\n<li>\n<a href=\"http://adndevblog.typepad.com/aec/2012/06/revit-model-viewer-for-ios-part-1.html\">\nRVT add-in</a> exporting triangulated geometry faces via custom ASCII file format, uploading to cloud\n<li>Mobile device accessing cloud data, custom iOS viewer reading and displaying 3D view of custom format\n</li></li></ol>\n<li>Implement a RVT add-in that exports OBJ file format instead\n<ol type=\"a\">\n<li>Standard format, can be used ubiquitously\n<li>Optimise that file format to significantly reduce file size and increase speed and efficiency\n</li></li></ol>\n<li>View OBJ file format on mobile\n<ol type=\"a\">\n<li>Using standard viewer\n<li>Implement custom Android viewer\n</li></li></ol>\n</li></li></li></ol>\n<p>It will be interesting to see how I do during the next few days... especially for me  :-)\n</p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0790_getting_going_cloud",
    "header_text": "Creating the core desktop functionality",
    "local_header_href": "#creating-the-core-desktop-functionality",
    "chunk_text": "<h5>Creating the core desktop functionality</h5><ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/circle-packing-in-autocad-creating-an-apollonian-gasket-using-f-part-1.html\">\nCircle packing in AutoCAD: creating an Apollonian gasket using F# – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/circle-packing-in-autocad-creating-an-apollonian-gasket-using-f-part-2.html\">\nCircle packing in AutoCAD: creating an Apollonian gasket using F# – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/sphere-packing-in-autocad-creating-an-apollonian-packing-using-f-part-1.html\">\nSphere packing in AutoCAD: creating an Apollonian packing using F# – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/02/sphere-packing-in-autocad-creating-an-apollonian-packing-using-f-part-2.html\">\nSphere packing in AutoCAD: creating an Apollonian packing using F# – Part 2</a> </li>\n</ul>"
  },
  {
    "original_filename": "0790_getting_going_cloud",
    "header_text": "Moving it to the cloud",
    "local_header_href": "#moving-it-to-the-cloud",
    "chunk_text": "<h5>Moving it to the cloud</h5><ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/03/moving-to-the-cloud.html\">Moving to the Cloud</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/exposing-a-restful-web-service-for-use-inside-autocad-using-the-aspnet-web-api-part-1.html\">\nExposing a RESTful web service for use inside AutoCAD using the ASP.NET Web API – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/exposing-a-restful-web-service-for-use-inside-autocad-using-the-aspnet-web-api-part-2.html\">\nExposing a RESTful web service for use inside AutoCAD using the ASP.NET Web API – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/architecting-for-the-cloud.html\"><span style=\"font-family: calibri;\">\nArchitecting for the Cloud</span></a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/consuming-data-from-a-restful-web-service-inside-autocad-using-net.html\">\nConsuming data from a RESTful web-service inside AutoCAD using .NET</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/hosting-our-aspnet-web-api-project-on-windows-azure-part-1.html\">\nHosting our ASP.NET Web API project on Windows Azure – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/hosting-our-aspnet-web-api-project-on-windows-azure-part-2.html\">\nHosting our ASP.NET Web API project on Windows Azure – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/using-windows-azure-caching-with-our-aspnet-web-api-project.html\">\nUsing Windows Azure Caching with our ASP.NET Web API project</a> </li>\n</ul>"
  },
  {
    "original_filename": "0790_getting_going_cloud",
    "header_text": "Using the web-service from various clients",
    "local_header_href": "#using-the-web-service-from-various-clients",
    "chunk_text": "<h5>Using the web-service from various clients</h5><ul>\n<li>AutoCAD       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/calling-a-cloud-based-web-service-from-autocad-using-net.html\">\nCalling a cloud-based web-service from AutoCAD using .NET</a> </li>\n</ul>\n</li>\n<li>Unity3D       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/calling-a-web-service-from-a-unity3d-scene.html\">\nCalling a web-service from a Unity3D scene</a> </li>\n</ul>\n</li>\n<li>Android       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/04/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-1.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-2.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-android-part-3.html\">\nCreating a 3D viewer for our Apollonian service using Android – Part 3</a> </li>\n</ul>\n</li>\n<li>iOS       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-1.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-2.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/06/creating-a-3d-viewer-for-our-apollonian-service-using-ios-part-3-1.html\">\nCreating a 3D viewer for our Apollonian service using iOS – Part 3</a> </li>\n</ul>\n</li>\n<li>HTML5/WebGL       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5-part-2.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 2</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-html5-part-3.html\">\nCreating a 3D viewer for our Apollonian service using HTML5 – Part 3</a> </li>\n</ul>\n</li>\n<li>WinRT       \n<ul>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-winrt-part-1.html\">\nCreating a 3D viewer for our Apollonian service using WinRT – Part 1</a> </li>\n<li><a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/05/creating-a-3d-viewer-for-our-apollonian-service-using-winrt-part-2.html\">\nCreating a 3D viewer for our Apollonian service using WinRT – Part 2</a>\n</li></ul>\n</li></ul><p>This really is a huge wealth of material and should provide ample words of wisdom for any brave seeker venturing out on these now no longer unmapped paths.</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "0790_getting_going_cloud",
    "header_text": "AEC Cloud Demo",
    "local_header_href": "#aec-cloud-demo",
    "chunk_text": "<h4>AEC Cloud Demo</h4><p>Returning to my own much more modest efforts in this realm so far based on the Revit API, Senthil mentions the \n\n<a href=\"http://download.autodesk.com/media/adn/cloudcomputing/3_DevTV_Cloud_Computing_Revit_Demo/DevTV_Cloud_Computing_Revit_Demo.html\">\nAEC cloud demo</a> on the\n\n<a href=\"http://usa.autodesk.com/adsk/servlet/item?siteID=123112&amp;id=17136545\">\nADN cloud computing page</a>.\n\nThat is an eleven minute recording of a very simple add-in running on Revit 2012, originally created for the DevDays conferences in the end of 2010.\n\n<p>I recently migrated the sample add-in to Revit 2013.\nHere is \n\n<a href=\"zip/AecMatInfoClientRevit2013.zip\">\nAecMatInfoClientRevit2013.zip</a> containing \n\nits entire source code, Visual Studio solution and add-in manifest.\n\n<p>As explained in the recording, it simply defines two commands to read data from certain Revit element parameters and store them in a simple cloud-hosted database, and vice versa to read data from the database and populate it back into the Revit parameters again.\n\n\n<a name=\"5\"></a>\n<h4>Revit Viewer via OBJ</h4>\n<p>As said, the next thing I would like to look at is a Revit model viewer.\n\n<p>Instead of using Adam's approach via a custom geometry file format, I thought I might make use of the \n\n<a href=\"http://en.wikipedia.org/wiki/Wavefront_.obj_file\">\nWavefront OBJ</a> file\n\nformat, which seems to be pretty standard and compact.\n\n<p>My current tentative outline looks like this:\n\n<ol>\n<li>Describe Adam's Revit cloud and mobile demo (well, Adam is doing this himself): \n<ol type=\"a\">\n<li>\n<a href=\"http://adndevblog.typepad.com/aec/2012/06/revit-model-viewer-for-ios-part-1.html\">\nRVT add-in</a> exporting triangulated geometry faces via custom ASCII file format, uploading to cloud\n<li>Mobile device accessing cloud data, custom iOS viewer reading and displaying 3D view of custom format\n</li></li></ol>\n<li>Implement a RVT add-in that exports OBJ file format instead\n<ol type=\"a\">\n<li>Standard format, can be used ubiquitously\n<li>Optimise that file format to significantly reduce file size and increase speed and efficiency\n</li></li></ol>\n<li>View OBJ file format on mobile\n<ol type=\"a\">\n<li>Using standard viewer\n<li>Implement custom Android viewer\n</li></li></ol>\n</li></li></li></ol>\n<p>It will be interesting to see how I do during the next few days... especially for me  :-)\n</p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0790_getting_going_cloud",
    "header_text": "Revit Viewer via OBJ",
    "local_header_href": "#revit-viewer-via-obj",
    "chunk_text": "<h4>Revit Viewer via OBJ</h4><p>As said, the next thing I would like to look at is a Revit model viewer.\n\n<p>Instead of using Adam's approach via a custom geometry file format, I thought I might make use of the \n\n<a href=\"http://en.wikipedia.org/wiki/Wavefront_.obj_file\">\nWavefront OBJ</a> file\n\nformat, which seems to be pretty standard and compact.\n\n<p>My current tentative outline looks like this:\n\n<ol>\n<li>Describe Adam's Revit cloud and mobile demo (well, Adam is doing this himself): \n<ol type=\"a\">\n<li>\n<a href=\"http://adndevblog.typepad.com/aec/2012/06/revit-model-viewer-for-ios-part-1.html\">\nRVT add-in</a> exporting triangulated geometry faces via custom ASCII file format, uploading to cloud\n<li>Mobile device accessing cloud data, custom iOS viewer reading and displaying 3D view of custom format\n</li></li></ol>\n<li>Implement a RVT add-in that exports OBJ file format instead\n<ol type=\"a\">\n<li>Standard format, can be used ubiquitously\n<li>Optimise that file format to significantly reduce file size and increase speed and efficiency\n</li></li></ol>\n<li>View OBJ file format on mobile\n<ol type=\"a\">\n<li>Using standard viewer\n<li>Implement custom Android viewer\n</li></li></ol>\n</li></li></li></ol>\n<p>It will be interesting to see how I do during the next few days... especially for me  :-)\n</p></p></p></p>"
  }
]