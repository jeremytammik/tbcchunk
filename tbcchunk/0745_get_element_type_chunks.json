[
  {
    "original_filename": "0745_get_element_type",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0745_get_element_type",
    "header_text": "GetElement method and Get Element Type",
    "local_header_href": "#getelement-method-and-get-element-type",
    "chunk_text": "<h3>GetElement method and Get Element Type</h3><p>In the far distant past, the Revit API boasted a property on the Element class that gave direct access to the element type.\n\nIt was declared obsolete, and a new way to access the element type had to be implemented, and we discussed\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/08/get-element-type.html\">\ntwo years back</a>.\n\nThis can still raise an issue even today:\n\n<p><strong>Question:</strong> I have an old plug-in that I am trying to update to Revit 2013. The code uses a property (element.ObjectType) that has been made obsolete and that is no longer in the 2013 API. The obsolete call uses objElement.ObjectType.Parameters. The suggested replacement (Element.GetElementType) does not have a Parameters property. So, my question is, in Revit 2013, how do I get the Type parameters from an element in a project?\n\nHere is a section of my code containing this obsolete call:\n\n<pre class=\"code\">\n  <span class=\"green\">// Repeat the loop for the Type parameters </span>\n  <span class=\"green\">// on the element and assign values</span>\n  <span class=\"blue\">foreach</span>( <span class=\"teal\">Parameter</span> param <span class=\"blue\">in</span>\n    objElement.ObjectType.Parameters )\n  {\n    <span class=\"green\">// . . . </span>\n  }\n</pre>\n<p><strong>Answer:</strong> The Element ObjectType property was actually declared deprecated quite a few releases back, and still remained dangling until a whole host of obsolete calls were cleaned up in the Revit 2013 API.\n\n<p>The replacement is simple:\n\n<p>Use GetTypeId to obtain the element id of the type of your element, and then use the document GetElement method to access the type object itself from its id. Here is the code to achieve that:\n\n<pre class=\"code\">\n  <span class=\"teal\">ElementId</span> id = e.GetTypeId();\n \n  <span class=\"teal\">ElementType</span> type = doc.GetElement( id )\n    <span class=\"blue\">as</span> <span class=\"teal\">ElementType</span>;\n</pre>\n<p>I discussed this\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/08/get-element-type.html\">\ntwo years back</a>.\n\nSince then, another change occurred as well, which Saikat mentioned in his\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/04/migrating-vsta-macros-to-sharpdevelop.html\">\nmacro migration notes</a>:\n\n<p>The Document.Element property taking an element id argument has been converted to a method named GetElement in Revit 2013.\n\n<p>The obsolete Element property was converted to a method with a \"get_\" prefix in C#, so it had to be accessed by calling get_Element, which sometimes\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/09/document-elements.html\">\ncaused a bit of confusion</a>.\n\n<p>Anyway, translated to your example code snippet, the new access might look like this in Revit 2013:\n\n<pre class=\"code\">\n  <span class=\"green\">// Repeat the loop for the element </span>\n  <span class=\"green\">// type parameters and assign values</span>\n \n  <span class=\"teal\">Element</span> elementType = doc.GetElement(\n    e.GetTypeId() );\n \n  <span class=\"blue\">foreach</span> (<span class=\"teal\">Parameter</span> param <span class=\"blue\">in</span> elementType.Parameters)\n</pre>\n<a name=\"2\"></a>\n<h4>Element Display Overrides and Visibility Hierarchy</h4>\n<!-- graphics view -->\n<p>Revit provides a large number of ways to affect and override the display of an element, and it may not always be clear which method has the final say.\n\n<p>We had a look at one of these ways when describing how to\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/03/change-element-colour.html\">\nchange element colour using ProjColorOverrideByElement</a>.\n\n<!-- <p>The developer guide has little to say about how this can be managed programmatically. -->\n<p>The Revit Clinic provides a useful overview of the\n\n<a href=\"http://revitclinic.typepad.com/my_weblog/2012/02/revit-visibility-hierarchy.html\">\nRevit visibility hierarchy</a> which\n\nhelps understand the various possibilites and how they relate to each other.\n\n\n<a name=\"3\"></a>\n<h4>Happy Easter!</h4>\n<p>I wish a Happy Easter to everybody celebrating this holiday, and a good time to everybody else as well  :-)</p>\n<center>\n<img alt=\"Easter bunny postcard\" src=\"img/Easter_Bunny_Postcard_1907.jpg\"/>\n</center>\n<p>Good luck and much success with your Revit add-in development efforts and all other important aspects of life, such as love, peace, and happiness for all beings  :-)\n</p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0745_get_element_type",
    "header_text": "Element Display Overrides and Visibility Hierarchy",
    "local_header_href": "#element-display-overrides-and-visibility-hierarchy",
    "chunk_text": "<h4>Element Display Overrides and Visibility Hierarchy</h4><p>Revit provides a large number of ways to affect and override the display of an element, and it may not always be clear which method has the final say.\n\n<p>We had a look at one of these ways when describing how to\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2011/03/change-element-colour.html\">\nchange element colour using ProjColorOverrideByElement</a>.\n\n<!-- <p>The developer guide has little to say about how this can be managed programmatically. -->\n<p>The Revit Clinic provides a useful overview of the\n\n<a href=\"http://revitclinic.typepad.com/my_weblog/2012/02/revit-visibility-hierarchy.html\">\nRevit visibility hierarchy</a> which\n\nhelps understand the various possibilites and how they relate to each other.\n\n\n<a name=\"3\"></a>\n<h4>Happy Easter!</h4>\n<p>I wish a Happy Easter to everybody celebrating this holiday, and a good time to everybody else as well  :-)</p>\n<center>\n<img alt=\"Easter bunny postcard\" src=\"img/Easter_Bunny_Postcard_1907.jpg\"/>\n</center>\n<p>Good luck and much success with your Revit add-in development efforts and all other important aspects of life, such as love, peace, and happiness for all beings  :-)\n</p></p></p></p>"
  },
  {
    "original_filename": "0745_get_element_type",
    "header_text": "Happy Easter!",
    "local_header_href": "#happy-easter",
    "chunk_text": "<h4>Happy Easter!</h4><p>I wish a Happy Easter to everybody celebrating this holiday, and a good time to everybody else as well  :-)</p><center>\n<img alt=\"Easter bunny postcard\" src=\"img/Easter_Bunny_Postcard_1907.jpg\"/>\n</center><p>Good luck and much success with your Revit add-in development efforts and all other important aspects of life, such as love, peace, and happiness for all beings  :-)\n</p>"
  }
]