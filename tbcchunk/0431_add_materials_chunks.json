[
  {
    "original_filename": "0431_add_materials",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0431_add_materials",
    "header_text": "Add New Materials from List",
    "local_header_href": "#add-new-materials-from-list",
    "chunk_text": "<h3>Add New Materials from List</h3><p>I am happily back from\n\n<a href=\"http://en.wikipedia.org/wiki/Siem_Reap\">\nSiem Reap</a> in\n\nCambodia and the\n\n<a href=\"http://en.wikipedia.org/wiki/Angkor_Wat\">\nruins of Angkor Wat</a>\n\n(<a href=\"http://www.facebook.com/album.php?aid=68525&amp;id=1019863650\">more</a>\n<a href=\"http://www.facebook.com/album.php?aid=68592&amp;id=1019863650\">photos</a>):</p><center>\n<img alt=\"Angkor Wat\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p110.jpg\" width=\"400\"/>\n<img alt=\"Angkor Wat\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p133.jpg\" width=\"400\"/>\n<img alt=\"Angkor Wat\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p155.jpg\" width=\"400\"/>\n<img alt=\"Angkor Wat\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p157.jpg\" width=\"400\"/>\n<img alt=\"Angkor Wat\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p188.jpg\" width=\"400\"/>\n</center><p>Yesterday I visited the\n\n<a href=\"http://en.wikipedia.org/wiki/Grand_Palace\">\nGrand Palace</a> and\n\nthe\n\n<a href=\"http://en.wikipedia.org/wiki/Wat_Pho\">\nreclining Buddha in Wat Pho</a> in Bangkok\n\n(<a href=\"http://www.facebook.com/album.php?aid=68594&amp;id=1019863650\">more photos</a>):</p><center>\n<img alt=\"Grand Palace\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p258.jpg\" width=\"400\"/>\n<img alt=\"Grand Palace\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p272.jpg\" width=\"400\"/>\n<img alt=\"Reclining Buddha\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p298.jpg\" width=\"400\"/>\n<img alt=\"Reclining Buddha\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p299.jpg\" width=\"400\"/>\n</center><p>Angkor Wat and Cambodia was absolutely wonderful, and I am really glad that I went there.\nThe places I visited in Thailand were rather touristy, whereas in Cambodia I had the feeling of getting much more in touch with real people and life:</p><center>\n<img alt=\"Child\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p196.jpg\" width=\"400\"/>\n<img alt=\"Children\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p220.jpg\" width=\"400\"/>\n<img alt=\"Temple\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p230.jpg\" width=\"400\"/>\n<img alt=\"People\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p233.jpg\" width=\"400\"/>\n<img alt=\"Monkey\" src=\"/j/photo/jeremy/2010/2010-08-25_siem_reap/p241.jpg\" width=\"400\"/>\n</center><p>Before going there I was thinking that I am not really all that interested in this kind of travelling, but the connection that I experienced there really motivated me to return again, and possibly visit Laos as well.\nOne nice idea would be to go for a walk from northern Thailand along the western border of Laos all the way up to China.\n\n<p>Now I am staying with my brother Marcus in Pattaya again, picking up my computer before returning to Switzerland.\n\n<p>So, returning to Revit programming topics after this wonderful break from computers and the heart-warming dive into loving friendliness of Cambodian people...\n\n\n<h4>Importing and Creating New Materials from a List</h4>\n<p>Quite a while back, I discussed programmatically\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/05/new-material.html\">\nadding a new material</a> to the Revit project.\n\nI would like to present a useful real-world application that takes this much further, created by Jinsol Kim of\n\n<a href=\"http:www.rcmsgroup.com\">\nRCMS GROUP</a> to\n\nadd an entire list of materials read from an Excel spreadsheet to a Revit project.\n\nHere is part of the discussions we had during the development and Jinsol's detailed description of the final process:\n\n<p><strong>Question:</strong> I am trying to add some material lists programmatically and running into some problems here.\nThe materials are defined in Excel spreadsheets used as input and containing data such as\n\n<ul>\n<li>Material Name\n<ul>\n<li>Code\n<li>Title\n<li>Strength\n</li></li></li></ul>\n<li>Graphics\n<ul>\n<li>RGB colour\n<li>Rendering data\n</li></li></ul>\n<li>Identity\n<ul>\n<li>Filter criteria\n<li>Descriptive information\n<li>Custom parameters\n</li></li></li></ul>\n</li></li></li></ul>\n<p>I found a way to add materials like this:\n\n<pre>\n  <span class=\"blue\">string</span> newName = <span class=\"maroon\">\"03 15 00\"</span>;\n \n  <span class=\"teal\">MaterialOther</span> myMaterial\n    = doc.Settings.Materials.AddOther(\n      newName );\n \n  myMaterial.Color = <span class=\"blue\">new</span> <span class=\"teal\">Color</span>( 127, 127, 127 );\n  myMaterial.Transparency = 0;\n</pre>\n<p>However, I cannot find out any parameters related to 'Identity'.\nIn order to classify the material lists, I need to put values on 'Material Class'.\nHow can I access that value, i.e. Materials &gt; Identity &gt; Material Class (Filter Criteria)?\n\n<p><strong>Answer:</strong> As said, we did discuss\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/05/new-material.html\">\nadding a new material</a> quite\n\na while back.\n\n<p>For the identity fields, you could simply add your own shared parameters to the model.\n\n<p>Using shared parameters, you can add arbitrary data to all elements of any category.\n\n<p><strong>Question:</strong> One more thing:\nIf I create a shared parameter named 'Material Class' for example under the Materials and finishes group, then there seems to be no way for users to use the Material Class filter.\nUsing the API, I will add up to about 2000 materials at once to avoid typing in every material in each project.\nUsers might want to see only specific materials which belong to specific material class by filtering them out with material class.\nIf the material class doesn't support filter by material class, then do you think I need to create a custom filter separately for it?\n\n<p>Here are the expected results, although created manually in this case:</p>\n<center>\n<img alt=\"Added materials\" src=\"img/add_materials.png\"/>\n</center>\n<p><strong>Answer:</strong> That looks a bit similar to the view filter, for which there is full API access as demonstrated by the ElementFilter/ViewFilters sample.\nUnfortunately, it looks to me as if the materials filter is not accessible in the same way.\n\n<p><strong>Question:</strong> I chose another way to solve how to maintain the material class name in the identity data of Materials.\n\n<p>First, I created a set of root materials manually with the proper Material Class and then duplicated them accordingly to appropriate master format division.\n\n<p>Here is a more detailed description:\n\n<p><strong>Step 1:</strong> Set up the basic materials manually within the project file to duplicate with 'Material Class'.\n\n<p>Note: The Material Class name should follow this format: 'CSI XX'.</p>\n<center>\n<img alt=\"Basic materials\" src=\"img/add_materials_step1.png\"/>\n</center>\n<p><strong>Step 2:</strong> Check all the material information in defined in the right format.\n\n<p>The input spreadsheet is read from C:\\RevitAPI\\MaterialList.xlsx.\n\n<p>Note 1: Graphics section doesn't allow an empty space. It should be filled with '0' or N/A.\n\n<p>Note 2: Material Class values should be equivalent to basic material class that will be used for duplication.</p>\n<center>\n<img alt=\"Input spreadsheet\" src=\"img/add_materials_step2.png\"/>\n</center>\n<p><strong>Step 3:</strong> Run the add-in and check that the materials were added successfully.</p>\n<center>\n<img alt=\"Run the add-in\" src=\"img/add_materials_step3a.png\"/>\n</center>\n<center>\n<img alt=\"Add-in message\" src=\"img/add_materials_step3b.png\"/>\n</center>\n<center>\n<img alt=\"Added materials\" src=\"img/add_materials_step3c.png\"/>\n</center>\n<p>Here is Jinsol's original\n\n<a href=\"zip/AddMaterials.pptx\">\nPowerpoint version</a> of\n\nthe detailed description, and here is\n\n<a href=\"zip/AddMaterials01.zip\">\nAddMaterials01.zip</a> containing\n\nthe complete Visual Studio solution and source code of the AddMaterials Revit add-in.\n\n<p>Thank you very much, Jinsol, for creating this solution and documenting and sharing it with us!\n\n<p><strong>Addendum:</strong> This utility has been updated.\n\nPlease check out the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/03/adding-new-materials-from-list-updated.html\">\nmigration to Revit 2014</a> and the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/03/adding-new-materials-from-list-updated-again.html\">\nenhancements in release 2014.0.0.1</a>.</p>\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0431_add_materials",
    "header_text": "Importing and Creating New Materials from a List",
    "local_header_href": "#importing-and-creating-new-materials-from-a-list",
    "chunk_text": "<h4>Importing and Creating New Materials from a List</h4><p>Quite a while back, I discussed programmatically\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/05/new-material.html\">\nadding a new material</a> to the Revit project.\n\nI would like to present a useful real-world application that takes this much further, created by Jinsol Kim of\n\n<a href=\"http:www.rcmsgroup.com\">\nRCMS GROUP</a> to\n\nadd an entire list of materials read from an Excel spreadsheet to a Revit project.\n\nHere is part of the discussions we had during the development and Jinsol's detailed description of the final process:\n\n<p><strong>Question:</strong> I am trying to add some material lists programmatically and running into some problems here.\nThe materials are defined in Excel spreadsheets used as input and containing data such as\n\n<ul>\n<li>Material Name\n<ul>\n<li>Code\n<li>Title\n<li>Strength\n</li></li></li></ul>\n<li>Graphics\n<ul>\n<li>RGB colour\n<li>Rendering data\n</li></li></ul>\n<li>Identity\n<ul>\n<li>Filter criteria\n<li>Descriptive information\n<li>Custom parameters\n</li></li></li></ul>\n</li></li></li></ul>\n<p>I found a way to add materials like this:\n\n<pre>\n  <span class=\"blue\">string</span> newName = <span class=\"maroon\">\"03 15 00\"</span>;\n \n  <span class=\"teal\">MaterialOther</span> myMaterial\n    = doc.Settings.Materials.AddOther(\n      newName );\n \n  myMaterial.Color = <span class=\"blue\">new</span> <span class=\"teal\">Color</span>( 127, 127, 127 );\n  myMaterial.Transparency = 0;\n</pre>\n<p>However, I cannot find out any parameters related to 'Identity'.\nIn order to classify the material lists, I need to put values on 'Material Class'.\nHow can I access that value, i.e. Materials &gt; Identity &gt; Material Class (Filter Criteria)?\n\n<p><strong>Answer:</strong> As said, we did discuss\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/05/new-material.html\">\nadding a new material</a> quite\n\na while back.\n\n<p>For the identity fields, you could simply add your own shared parameters to the model.\n\n<p>Using shared parameters, you can add arbitrary data to all elements of any category.\n\n<p><strong>Question:</strong> One more thing:\nIf I create a shared parameter named 'Material Class' for example under the Materials and finishes group, then there seems to be no way for users to use the Material Class filter.\nUsing the API, I will add up to about 2000 materials at once to avoid typing in every material in each project.\nUsers might want to see only specific materials which belong to specific material class by filtering them out with material class.\nIf the material class doesn't support filter by material class, then do you think I need to create a custom filter separately for it?\n\n<p>Here are the expected results, although created manually in this case:</p>\n<center>\n<img alt=\"Added materials\" src=\"img/add_materials.png\"/>\n</center>\n<p><strong>Answer:</strong> That looks a bit similar to the view filter, for which there is full API access as demonstrated by the ElementFilter/ViewFilters sample.\nUnfortunately, it looks to me as if the materials filter is not accessible in the same way.\n\n<p><strong>Question:</strong> I chose another way to solve how to maintain the material class name in the identity data of Materials.\n\n<p>First, I created a set of root materials manually with the proper Material Class and then duplicated them accordingly to appropriate master format division.\n\n<p>Here is a more detailed description:\n\n<p><strong>Step 1:</strong> Set up the basic materials manually within the project file to duplicate with 'Material Class'.\n\n<p>Note: The Material Class name should follow this format: 'CSI XX'.</p>\n<center>\n<img alt=\"Basic materials\" src=\"img/add_materials_step1.png\"/>\n</center>\n<p><strong>Step 2:</strong> Check all the material information in defined in the right format.\n\n<p>The input spreadsheet is read from C:\\RevitAPI\\MaterialList.xlsx.\n\n<p>Note 1: Graphics section doesn't allow an empty space. It should be filled with '0' or N/A.\n\n<p>Note 2: Material Class values should be equivalent to basic material class that will be used for duplication.</p>\n<center>\n<img alt=\"Input spreadsheet\" src=\"img/add_materials_step2.png\"/>\n</center>\n<p><strong>Step 3:</strong> Run the add-in and check that the materials were added successfully.</p>\n<center>\n<img alt=\"Run the add-in\" src=\"img/add_materials_step3a.png\"/>\n</center>\n<center>\n<img alt=\"Add-in message\" src=\"img/add_materials_step3b.png\"/>\n</center>\n<center>\n<img alt=\"Added materials\" src=\"img/add_materials_step3c.png\"/>\n</center>\n<p>Here is Jinsol's original\n\n<a href=\"zip/AddMaterials.pptx\">\nPowerpoint version</a> of\n\nthe detailed description, and here is\n\n<a href=\"zip/AddMaterials01.zip\">\nAddMaterials01.zip</a> containing\n\nthe complete Visual Studio solution and source code of the AddMaterials Revit add-in.\n\n<p>Thank you very much, Jinsol, for creating this solution and documenting and sharing it with us!\n\n<p><strong>Addendum:</strong> This utility has been updated.\n\nPlease check out the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/03/adding-new-materials-from-list-updated.html\">\nmigration to Revit 2014</a> and the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2014/03/adding-new-materials-from-list-updated-again.html\">\nenhancements in release 2014.0.0.1</a>.</p>\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  }
]