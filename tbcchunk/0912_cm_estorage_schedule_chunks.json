[
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Cloud & Mobile, Extensible Storage Data Use in Schedules",
    "local_header_href": "#cloud-mobile-extensible-storage-data-use-in-schedules",
    "chunk_text": "<h3>Cloud &amp; Mobile, Extensible Storage Data Use in Schedules</h3><p>My topics for today are:</p><ul>\n<li><a href=\"#2\">Cloud and mobile topics I covered so far</a></li>\n<li><a href=\"#3\">Cloud-based round-trip 2D Revit model editing on any mobile device</a> using SVG</li>\n<li><a href=\"#4\">Extensible storage data use in schedules</a></li>\n</ul><p>I am still meeting with my European DevTech colleagues here in Konk Leon, 'anse du Lèon', the cove of the lion, aka Le Conquet, Brittany.</p><p>Yesterday, one of our topics was work we have done so far for cloud and mobile applications.\nIt was very interesting to hear about my peers' rich and varied experiences.</p><a name=\"2\"></a>"
  },
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Cloud and Mobile Topics Covered so Far",
    "local_header_href": "#cloud-and-mobile-topics-covered-so-far",
    "chunk_text": "<h4>Cloud and Mobile Topics Covered so Far</h4><p>I documented all my own experiences so far here on the blog, and was able to reuse that for my presentation quite spontaneously with no further preparation:</p><ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/09/apollonian-packing-of-spheres-via-web-service-and-avf.html\">\nAccessing a REST API web service from a Revit .NET add-in</a> – Apollonian sphere packing and AVF.</li>\n<li>Thoughts on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/09/mobile-device-room-location.html\">\nmobile indoor positioning</a>,\n\nrepresenting room polygons in SVG, the Azure SDK, ASP.NET MVC 4, and implementing a web service.</li>\n<li>An overview of the <a href=\"http://thebuildingcoder.typepad.com/blog/2012/12/the-bim-360-glue-viewer-and-rest-api.html\">BIM 360 Glue viewer and REST API</a>.</li>\n<li>BIM 360 Glue REST API <a href=\"http://thebuildingcoder.typepad.com/blog/2012/12/bim-360-glue-rest-api-authentication-using-python.html\">authentication using Python</a>.</li>\n<li>A room polygon and <a href=\"http://thebuildingcoder.typepad.com/blog/2012/10/room-polygon-and-furniture-picker-in-svg.html\">furniture picker in SVG</a>.</li>\n<li>2D <a href=\"http://thebuildingcoder.typepad.com/blog/2013/02/2d-svg-editing-on-mobile-device-with-rapha%C3%ABl.html\">SVG editing on mobile devices</a> using the Raphaël JavaScript SVG library.</li>\n</ul><p>As I explained at the time, all of the explorations involving SVG are part of a larger master plan.</p><p>This plan has now matured to a certain extent and is forcing me to move ahead quite fast in the immediate future.</p><p>The main outcome so far is a presentation proposal that I submitted for the internal Autodesk technical summit taking place in June, and the fact that it was accepted.</p><p>My cloud and mobile roadmap is thus now clearly focused on implementing that proposal:</p><a name=\"3\"></a>"
  },
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Cloud-based Round-trip 2D Revit Model Editing on any Mobile Device using CouchDB and SVG",
    "local_header_href": "#cloud-based-round-trip-2d-revit-model-editing-on-any-mobile-device-using-couchdb-and-svg",
    "chunk_text": "<h4>Cloud-based Round-trip 2D Revit Model Editing on any Mobile Device using CouchDB and SVG</h4><p>I described the roadmap I envision in the discussion of my simple\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2013/02/2d-svg-editing-on-mobile-device-with-rapha%C3%ABl.html\">SVG editor</a>.\n\nThe main components include:</p><ul>\n<li>A Revit add-in that determines room boundary and furniture and equipment family instance polygons for a simplified 2D plan view rendering.</li>\n<li>A cloud-based database repository managing the models, levels, rooms, furniture, equipment meta- and polygon data.</li>\n<li>The SVG editor running in a browser on any device, rendering the model and supporting some simple geometric modification.</li>\n</ul><p>Here is the actual wording of my technical summit proposal:</p><a name=\"3a\"></a>"
  },
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Proposal Abstract",
    "local_header_href": "#proposal-abstract",
    "chunk_text": "<h5>Proposal Abstract</h5><p>This presentation demonstrates round-trip editing a 2D rendering of a Revit model on any mobile device with no need for installation of any additional software whatsoever beyond a browser. How can this be achieved? A Revit add-in exports polygon renderings of room boundaries and other elements such as furniture and equipment to a cloud-based repository. On the mobile device, the repository is queried and the data is rendered in a standard browser using JavaScript and SVG. The rendering supports modification, such as translation and rotation of the furniture and equipment, which is saved back to the cloud database. The Revit add-in picks up these changes and updates the Revit model.\n\n\n<a name=\"3b\"></a>\n<h5>Intended Audience and Prerequisites</h5>\n<p>Intended audience is programmers with interest in cloud-based and mobile computing, specifically interest in round-trip editing of a Revit model using a cloud-based data repository and editing a 2D model on an arbitrary mobile device with no additional software beyond a browser installed on it.\n Knowledge of .NET, JavaScript and REST programming is helpful but not required.\nRevit add-in experience is not a prerequisite.\n\n\n<a name=\"3c\"></a>\n<h5>Presentation Outline</h5>\n<ul>\n<li>Show a Revit model.\n<li>Export the model to a cloud-based data repository.\n<li>Query and display the repository contents as 2D rendering on a mobile device.\n<li>Edit the model in the browser on the mobile device, updating the data repository.\n<li>Pick up and display the modified model in Revit.\n</li></li></li></li></li></ul>\n<p>Two of the important components whose implementation I plan to explore next are the polygon generation and data model:</p>\n<a name=\"3d\"></a>\n<h5>Plan View Polygon Determination</h5>\n<p>The generation of the room boundary polygons is obvious, since the room has a boundary property.\n\n<p>For the furniture and equipment family instance, the solution is a less immediate.\nMy current idea is to explore making use of the ExtrusionAnalyzer class.\nIt is supplied a solid geometry, a plane, and a direction.\nFrom those, it calculates the outer boundary of the shadow cast by the solid onto the input plane along the extrusion direction.\nAs far as I can tell, that should be exactly what I need.</p>\n<p>Scott Conover mentioned this class in his session on the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-one.html\">\nGeometry API</a>,\n\na continuation of his AU 2011 presentation\n\n<a href=\"http://au.autodesk.com/?nd=event_class&amp;session_id=9124&amp;jid=1725932\">CP4011</a> 'Geometric Progression: Further Analysis of Geometry Using the Autodesk Revit 2012 API',\n\nenhanced for the Revit 2013 API.</p>\n<p>As soon as I have the polygons determined, I want to implement functionality to render them easily.\nThis will involve extent calculation, canvas definition, and coordinate system transformation.\nI will probably implement a simple .NET geometry viewer before moving on to the SVG rendering.\nI've been wanting to do that for a long time...</p>\n<a name=\"3e\"></a>\n<h5>Cloud-based Data Repository</h5>\n<p>So far, my colleagues have been focusing on using the Amazon and Azure cloud hosting services, and many discussions on the\n\n<a href=\"http://adndevblog.typepad.com/cloud_and_mobile\">cloud and mobile DevBlog</a> deal\n\nwith them.</p>\n<p>I searched the Internet for other cloud-based database alternatives, and right now <a href=\"http://couchdb.apache.org\">CouchDB</a> looks pretty promising, so I might try a completely different approach using that instead.</p>\n<p>There is a lot to do here as well: define the data model, set up the web service, define a format for saving the polygon data, etc.\nAt the very least, I will need to manage:</p>\n<ul>\n<li>Model &gt; metadata, rooms.\n<li>Room &gt; metadata, model, furniture, level, polygon.\n<li>Furniture &gt; metadata, room, polygon, transformation (initially identity).\n</li></li></li></ul>\n<p>Round tripping the information will be interesting, especially if I want the Revit model to update automatically when furniture positions are modified on the mobile device, which I certainly do, if only for the wow effect  :-)</p>\n<p>Stay tuned...</p>\n<p>... Oh, and, yeah, wish me luck!</p>\n<a name=\"4\"></a>\n<h4>Extensible Storage Data Use in Schedules</h4>\n<p>Returning to the desktop again, here is a recent question from a developer on using estorage data in a schedule that leads to some general observations on that topic:\n\n<p><strong>Question:</strong> I would like to display my extensible storage information in a schedule.\nI searched high and low, though, and was unable to find any samples or documentation on the subject.\nCan you help?</p>\n<p><strong>Answer:</strong> There is a good reason why you have not found anything: there is no such support.\n\n<p>The usage of extensible storage data is utterly and completely up to the add-in itself.\nThe Revit API offers no support whatsoever for making use of estorage data in any way.\nThe only support provided is for storage and retrieval, nothing else.\n\n<p>Well, one tiny little detail more: if an element id value is stored, and the element id is later modified by some worksharing operation, its value will be automatically updated.\n\n<p>On the other hand, there is currently no direct support for putting data into a schedule either.\n\n<p>I am no user interface expert, but I think that you can set up a schedule to be populated from certain parameter values via the user interface.\nYou would have to talk with an application engineer or product support or explore this topic on the Internet to find out how that can be done.\n\n<p>Of course, there is nothing stopping you from extracting your data from extensible storage and transferring it into parameters set up to populate a schedule yourself.\n\n<p>I hope that answers your question and helps you get started successfully.</p>\n</p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Intended Audience and Prerequisites",
    "local_header_href": "#intended-audience-and-prerequisites",
    "chunk_text": "<h5>Intended Audience and Prerequisites</h5><p>Intended audience is programmers with interest in cloud-based and mobile computing, specifically interest in round-trip editing of a Revit model using a cloud-based data repository and editing a 2D model on an arbitrary mobile device with no additional software beyond a browser installed on it.\n Knowledge of .NET, JavaScript and REST programming is helpful but not required.\nRevit add-in experience is not a prerequisite.\n\n\n<a name=\"3c\"></a>\n<h5>Presentation Outline</h5>\n<ul>\n<li>Show a Revit model.\n<li>Export the model to a cloud-based data repository.\n<li>Query and display the repository contents as 2D rendering on a mobile device.\n<li>Edit the model in the browser on the mobile device, updating the data repository.\n<li>Pick up and display the modified model in Revit.\n</li></li></li></li></li></ul>\n<p>Two of the important components whose implementation I plan to explore next are the polygon generation and data model:</p>\n<a name=\"3d\"></a>\n<h5>Plan View Polygon Determination</h5>\n<p>The generation of the room boundary polygons is obvious, since the room has a boundary property.\n\n<p>For the furniture and equipment family instance, the solution is a less immediate.\nMy current idea is to explore making use of the ExtrusionAnalyzer class.\nIt is supplied a solid geometry, a plane, and a direction.\nFrom those, it calculates the outer boundary of the shadow cast by the solid onto the input plane along the extrusion direction.\nAs far as I can tell, that should be exactly what I need.</p>\n<p>Scott Conover mentioned this class in his session on the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-one.html\">\nGeometry API</a>,\n\na continuation of his AU 2011 presentation\n\n<a href=\"http://au.autodesk.com/?nd=event_class&amp;session_id=9124&amp;jid=1725932\">CP4011</a> 'Geometric Progression: Further Analysis of Geometry Using the Autodesk Revit 2012 API',\n\nenhanced for the Revit 2013 API.</p>\n<p>As soon as I have the polygons determined, I want to implement functionality to render them easily.\nThis will involve extent calculation, canvas definition, and coordinate system transformation.\nI will probably implement a simple .NET geometry viewer before moving on to the SVG rendering.\nI've been wanting to do that for a long time...</p>\n<a name=\"3e\"></a>\n<h5>Cloud-based Data Repository</h5>\n<p>So far, my colleagues have been focusing on using the Amazon and Azure cloud hosting services, and many discussions on the\n\n<a href=\"http://adndevblog.typepad.com/cloud_and_mobile\">cloud and mobile DevBlog</a> deal\n\nwith them.</p>\n<p>I searched the Internet for other cloud-based database alternatives, and right now <a href=\"http://couchdb.apache.org\">CouchDB</a> looks pretty promising, so I might try a completely different approach using that instead.</p>\n<p>There is a lot to do here as well: define the data model, set up the web service, define a format for saving the polygon data, etc.\nAt the very least, I will need to manage:</p>\n<ul>\n<li>Model &gt; metadata, rooms.\n<li>Room &gt; metadata, model, furniture, level, polygon.\n<li>Furniture &gt; metadata, room, polygon, transformation (initially identity).\n</li></li></li></ul>\n<p>Round tripping the information will be interesting, especially if I want the Revit model to update automatically when furniture positions are modified on the mobile device, which I certainly do, if only for the wow effect  :-)</p>\n<p>Stay tuned...</p>\n<p>... Oh, and, yeah, wish me luck!</p>\n<a name=\"4\"></a>\n<h4>Extensible Storage Data Use in Schedules</h4>\n<p>Returning to the desktop again, here is a recent question from a developer on using estorage data in a schedule that leads to some general observations on that topic:\n\n<p><strong>Question:</strong> I would like to display my extensible storage information in a schedule.\nI searched high and low, though, and was unable to find any samples or documentation on the subject.\nCan you help?</p>\n<p><strong>Answer:</strong> There is a good reason why you have not found anything: there is no such support.\n\n<p>The usage of extensible storage data is utterly and completely up to the add-in itself.\nThe Revit API offers no support whatsoever for making use of estorage data in any way.\nThe only support provided is for storage and retrieval, nothing else.\n\n<p>Well, one tiny little detail more: if an element id value is stored, and the element id is later modified by some worksharing operation, its value will be automatically updated.\n\n<p>On the other hand, there is currently no direct support for putting data into a schedule either.\n\n<p>I am no user interface expert, but I think that you can set up a schedule to be populated from certain parameter values via the user interface.\nYou would have to talk with an application engineer or product support or explore this topic on the Internet to find out how that can be done.\n\n<p>Of course, there is nothing stopping you from extracting your data from extensible storage and transferring it into parameters set up to populate a schedule yourself.\n\n<p>I hope that answers your question and helps you get started successfully.</p>\n</p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Presentation Outline",
    "local_header_href": "#presentation-outline",
    "chunk_text": "<h5>Presentation Outline</h5><ul>\n<li>Show a Revit model.\n<li>Export the model to a cloud-based data repository.\n<li>Query and display the repository contents as 2D rendering on a mobile device.\n<li>Edit the model in the browser on the mobile device, updating the data repository.\n<li>Pick up and display the modified model in Revit.\n</li></li></li></li></li></ul><p>Two of the important components whose implementation I plan to explore next are the polygon generation and data model:</p><a name=\"3d\"></a>"
  },
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Plan View Polygon Determination",
    "local_header_href": "#plan-view-polygon-determination",
    "chunk_text": "<h5>Plan View Polygon Determination</h5><p>The generation of the room boundary polygons is obvious, since the room has a boundary property.\n\n<p>For the furniture and equipment family instance, the solution is a less immediate.\nMy current idea is to explore making use of the ExtrusionAnalyzer class.\nIt is supplied a solid geometry, a plane, and a direction.\nFrom those, it calculates the outer boundary of the shadow cast by the solid onto the input plane along the extrusion direction.\nAs far as I can tell, that should be exactly what I need.</p>\n<p>Scott Conover mentioned this class in his session on the\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-one.html\">\nGeometry API</a>,\n\na continuation of his AU 2011 presentation\n\n<a href=\"http://au.autodesk.com/?nd=event_class&amp;session_id=9124&amp;jid=1725932\">CP4011</a> 'Geometric Progression: Further Analysis of Geometry Using the Autodesk Revit 2012 API',\n\nenhanced for the Revit 2013 API.</p>\n<p>As soon as I have the polygons determined, I want to implement functionality to render them easily.\nThis will involve extent calculation, canvas definition, and coordinate system transformation.\nI will probably implement a simple .NET geometry viewer before moving on to the SVG rendering.\nI've been wanting to do that for a long time...</p>\n<a name=\"3e\"></a>\n<h5>Cloud-based Data Repository</h5>\n<p>So far, my colleagues have been focusing on using the Amazon and Azure cloud hosting services, and many discussions on the\n\n<a href=\"http://adndevblog.typepad.com/cloud_and_mobile\">cloud and mobile DevBlog</a> deal\n\nwith them.</p>\n<p>I searched the Internet for other cloud-based database alternatives, and right now <a href=\"http://couchdb.apache.org\">CouchDB</a> looks pretty promising, so I might try a completely different approach using that instead.</p>\n<p>There is a lot to do here as well: define the data model, set up the web service, define a format for saving the polygon data, etc.\nAt the very least, I will need to manage:</p>\n<ul>\n<li>Model &gt; metadata, rooms.\n<li>Room &gt; metadata, model, furniture, level, polygon.\n<li>Furniture &gt; metadata, room, polygon, transformation (initially identity).\n</li></li></li></ul>\n<p>Round tripping the information will be interesting, especially if I want the Revit model to update automatically when furniture positions are modified on the mobile device, which I certainly do, if only for the wow effect  :-)</p>\n<p>Stay tuned...</p>\n<p>... Oh, and, yeah, wish me luck!</p>\n<a name=\"4\"></a>\n<h4>Extensible Storage Data Use in Schedules</h4>\n<p>Returning to the desktop again, here is a recent question from a developer on using estorage data in a schedule that leads to some general observations on that topic:\n\n<p><strong>Question:</strong> I would like to display my extensible storage information in a schedule.\nI searched high and low, though, and was unable to find any samples or documentation on the subject.\nCan you help?</p>\n<p><strong>Answer:</strong> There is a good reason why you have not found anything: there is no such support.\n\n<p>The usage of extensible storage data is utterly and completely up to the add-in itself.\nThe Revit API offers no support whatsoever for making use of estorage data in any way.\nThe only support provided is for storage and retrieval, nothing else.\n\n<p>Well, one tiny little detail more: if an element id value is stored, and the element id is later modified by some worksharing operation, its value will be automatically updated.\n\n<p>On the other hand, there is currently no direct support for putting data into a schedule either.\n\n<p>I am no user interface expert, but I think that you can set up a schedule to be populated from certain parameter values via the user interface.\nYou would have to talk with an application engineer or product support or explore this topic on the Internet to find out how that can be done.\n\n<p>Of course, there is nothing stopping you from extracting your data from extensible storage and transferring it into parameters set up to populate a schedule yourself.\n\n<p>I hope that answers your question and helps you get started successfully.</p>\n</p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Cloud-based Data Repository",
    "local_header_href": "#cloud-based-data-repository",
    "chunk_text": "<h5>Cloud-based Data Repository</h5><p>So far, my colleagues have been focusing on using the Amazon and Azure cloud hosting services, and many discussions on the\n\n<a href=\"http://adndevblog.typepad.com/cloud_and_mobile\">cloud and mobile DevBlog</a> deal\n\nwith them.</p><p>I searched the Internet for other cloud-based database alternatives, and right now <a href=\"http://couchdb.apache.org\">CouchDB</a> looks pretty promising, so I might try a completely different approach using that instead.</p><p>There is a lot to do here as well: define the data model, set up the web service, define a format for saving the polygon data, etc.\nAt the very least, I will need to manage:</p><ul>\n<li>Model &gt; metadata, rooms.\n<li>Room &gt; metadata, model, furniture, level, polygon.\n<li>Furniture &gt; metadata, room, polygon, transformation (initially identity).\n</li></li></li></ul><p>Round tripping the information will be interesting, especially if I want the Revit model to update automatically when furniture positions are modified on the mobile device, which I certainly do, if only for the wow effect  :-)</p><p>Stay tuned...</p><p>... Oh, and, yeah, wish me luck!</p><a name=\"4\"></a>"
  },
  {
    "original_filename": "0912_cm_estorage_schedule",
    "header_text": "Extensible Storage Data Use in Schedules",
    "local_header_href": "#extensible-storage-data-use-in-schedules",
    "chunk_text": "<h4>Extensible Storage Data Use in Schedules</h4><p>Returning to the desktop again, here is a recent question from a developer on using estorage data in a schedule that leads to some general observations on that topic:\n\n<p><strong>Question:</strong> I would like to display my extensible storage information in a schedule.\nI searched high and low, though, and was unable to find any samples or documentation on the subject.\nCan you help?</p>\n<p><strong>Answer:</strong> There is a good reason why you have not found anything: there is no such support.\n\n<p>The usage of extensible storage data is utterly and completely up to the add-in itself.\nThe Revit API offers no support whatsoever for making use of estorage data in any way.\nThe only support provided is for storage and retrieval, nothing else.\n\n<p>Well, one tiny little detail more: if an element id value is stored, and the element id is later modified by some worksharing operation, its value will be automatically updated.\n\n<p>On the other hand, there is currently no direct support for putting data into a schedule either.\n\n<p>I am no user interface expert, but I think that you can set up a schedule to be populated from certain parameter values via the user interface.\nYou would have to talk with an application engineer or product support or explore this topic on the Internet to find out how that can be done.\n\n<p>Of course, there is nothing stopping you from extracting your data from extensible storage and transferring it into parameters set up to populate a schedule yourself.\n\n<p>I hope that answers your question and helps you get started successfully.</p>\n</p></p></p></p></p></p></p>"
  }
]