[
  {
    "original_filename": "0089_create_group",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<style>\n.blue { color: blue; }\n.teal { color: teal; }\n.maroon { color: maroon; }\n.green { color: green; }\n</style>"
  },
  {
    "original_filename": "0089_create_group",
    "header_text": "Creating a Group and How to Fish",
    "local_header_href": "#creating-a-group-and-how-to-fish",
    "chunk_text": "<h3>Creating a Group and How to Fish</h3><p>Here is a question from Henry Medina on creating groups that might be of interest to a wider audience:</p><p><strong>Question:</strong>\nI have listened to your TV recording several times and was also able to run the Labs project. \nYour Labs code shows how to draw beams, columns and braces, but not a group.\nHow could I create a new instance of an existing group, set its insertion base point, location, rotation angle, and mirror it?\nPlease show the commands in C#.</p><p><strong>Answer:</strong>\nWhen addressing a question like this, there are a certain number of steps that I recommend always going through:</p><ul>\n<li>RevitAPI.chm</li>\n<li>Getting Started Revit API 2009.doc</li>\n<li>Revit SDK Samples</li>\n<li>Revit 2009 API Developer Guide.pdf</li>\n</ul><p>Before looking at these, here are some basics about element creation.\nEverything that can be created through the Revit API is handled by the Application and Document classes in the Autodesk.Revit.Creation namespace. \nSince a group is a database resident object, it is generated by the creation document.\nThe creation application is used for objects that a memory resident only, such as geometry objects.</p><p>Now, looking at the creation document and its methods in RevitAPI.chm or in the Visual Studio object browser, it is easy to find the NewGroup method.\nIt takes an ElementSet as an argument and returns a newly created Group instance.\nIt creates a new type of group and returns a new instance of it containing the specified elements. Initially the group will have a generic name, such as Group 1. \nThis can be modified by changing the name of the group type using something like newGroup.GroupType.Name = newName.\nSo it actually creates both a GroupType object and an instance of that type. \nThe GroupType class is derived from Autodesk.Revit.Symbol, and Group from Autodesk.Revit.Element.</p><p>The Getting Started document turns up one snippet of information on groups in its question and answer section that may be useful to us later, but does not address our immediate need:</p><p><strong>Q:</strong> When exporting a model containing groups to an external program, the user receives an error at the end of the export: \n\"Changes to group \"Group 1\" are allowed only in group edit mode.  Use the Edit Group command to make the change to all instances of the group.  You may use the \"Ungroup\" option to proceed with this change by ungrouping the changed group instances.\"</p><p><strong>A:</strong> Currently the API does not permit changes to members of groups. You can programmatically ungroup, make the change, regroup and then swap the other instances of the old group to the new group to get the same effect.</p><p>While this does not help us with our immediate question, it does at least further confirm the\ndegree of programmatic access that is and is not provided to the grouping functionality.</p><p>Searching the Revit SDK Samples for NewGroup turns up no hits. Almost all aspects of the Revit API are demonstrated in the samples, so this is actually quite unusual. I have not addressed this in any of my labs yet either.</p><p>The next place to look is the developer guide. This is the most in-depth source of information on Revit programming, because it explains relationships and underlying concepts that are not immediately apparent from the classes, properties and methods presented in the help file nor immediately visible in the sample code. Again, we start by searching for 'NewGroup'. If no hits were found, I would then search for just 'group'. This time, 'NewGroup' is found, in section 9.4 Group. This section does indeed explain groups very well from the programming point of view. It also includes two code snippets 9-8: Creating a Group and 9-9: Naming a Group.</p><p>This answers the first part of your question, on how to create a group.</p><p>Regarding the placement of instances, I continued searching in the creation document members and found the PlaceGroup method, which places an instance of a model group into the Revit project, using a location and a group type.</p><p>I have not implemented any code testing any of this yet. If you do, please feel free to pass it on.</p><p>I hope this helps you learn to fish, and does not just feed you.</p><p>Many thanks, Henry, for this illuminating question, and good luck with your further steps!</p>"
  }
]