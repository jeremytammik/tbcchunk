[
  {
    "original_filename": "1890_multiple_filter",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- top_solutioon_authors_two_jeremys_2.png\n  top_solutioon_authors_two_jeremys.png\n\n- Multiple Collectors -- multiple filters\n  https://forums.autodesk.com/t5/revit-api-forum/multiple-collectors/m-p/10046666\n\n- https://github.com/jeremytammik/RevitLookup/releases/tag/2021.0.0.12\n\n- autotag without overlap\n  https://forums.autodesk.com/t5/revit-api-forum/auto-tagging-without-overlap/m-p/10036344/highlight/false#M52915\n\n- https://archi-lab.net/element-tagging-with-dynamo/\n  https://forums.autodesk.com/t5/revit-api-forum/tags-without-overlapping/m-p/10040873\n  https://forums.autodesk.com/t5/revit-api-forum/auto-tagging-without-overlap/m-p/10036344\n\n- Custom Errors â€“ Preventing Specific Changes to the Revit model\n  https://boostyourbim.wordpress.com/2021/01/28/custom-errors-preventing-specific-changes-to-the-revit-model/\n  by harrymattison\n  Let's say there is a specific list of View Scales that you want allowed in your Revit projects. Or certain naming conventions that should be used. Or something else like that where you'd like to automate the process of checking a user's change and determining if it should be allowed, prevented, or trigger a warning.\n  This can be done with two pieces of Revit API functionality - Updater & Custom Failures. You can find all the code here and an explanation in the video below.\n\n- The Unreasonable Ecological Cost of #CryptoArt (and crypto-currencies as well)\n  https://memoakten.medium.com/the-unreasonable-ecological-cost-of-cryptoart-2221d3eb2053\n\ntwitter:\n\nSplit personality, auto-tagging without overlap, RevitLookup enhancement for split region offsets and multiple collectors in the #RevitAPI @AutodeskForge @AutodeskRevit #bim #DynamoBim #ForgeDevCon http://autode.sk/multiplecollectors\n\nI need to come to terms with a split personality.\nMeanwhile, lots more going on in the Revit API discussion forum\n&ndash; Two Jeremys\n&ndash; Multiple collectors versus multiple filters\n&ndash; RevitLookup handles split region offsets\n&ndash; Python and Dynamo autotag without overlap\n&ndash; Custom errors and preventing changes\n&ndash; Ecological cost of crypto currency and art...\n\nlinkedin:\n\nSplit personality, auto-tagging without overlap, RevitLookup enhancement for split region offsets and multiple collectors in the #RevitAPI\n\nhttp://autode.sk/multiplecollectors\n\nI need to come to terms with a split personality.\nMeanwhile, lots more going on in the Revit API discussion forum:\n\n- Two Jeremys\n- Multiple collectors versus multiple filters\n- RevitLookup handles split region offsets\n- Python and Dynamo autotag without overlap\n- Custom errors and preventing changes\n- Ecological cost of crypto currency and art...\n\n#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n<p style=\"font-size: 80%; font-style:italic\">\n<a href=\"\"></a>\n</p>\n</center>\n\n-->"
  },
  {
    "original_filename": "1890_multiple_filter",
    "header_text": "Splits: Persona, Collector, Region, Tag, Modification",
    "local_header_href": "#splits-persona-collector-region-tag-modification",
    "chunk_text": "### Splits: Persona, Collector, Region, Tag, Modification\n\nI need to come to terms with the split personality recently foisted upon me.\nThank God, RevitLookup now handles split regions.\n\nMeanwhile, lots more going on in\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) and\nelsewhere in the world:\n\n- [Two Jeremys](#2)\n- [Multiple collectors versus multiple filters](#3)\n- [RevitLookup handles split region offsets](#4)\n- [Python and Dynamo autotag without overlap](#5)\n- [Custom errors and preventing changes](#6)\n- [Ecological cost of crypto currency and art](#7)"
  },
  {
    "original_filename": "1890_multiple_filter",
    "header_text": "Two Jeremys",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Two Jeremys\n\nApparently, the user account handling for\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\nrecently changed.\n\nI can no longer log in with the non-standard Autodesk `jeremytammik` account that I have been using all these years; the login automatically switches that over to my standard Autodesk `jeremy.tammik` account with a dot `.` instead.\n\nAs a result, we now have two active Jeremys in the forum:\n\n<center>\n<img src=\"img/top_solution_authors_two_jeremys_3.png\" alt=\"Two Jeremys\" title=\"Two Jeremys\" width=\"482\"/> <!-- 964 -->\n</center>\n\nI guess the previous one will fade away as time goes on.\n\nI wish I could meet him in person before he disappears."
  },
  {
    "original_filename": "1890_multiple_filter",
    "header_text": "Multiple Collectors versus Multiple Filters",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Multiple Collectors versus Multiple Filters\n\nThis question arose repeatedly in the past few weeks, so let's reiterate it in detail, prompted by \nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\non [multiple collectors](https://forums.autodesk.com/t5/revit-api-forum/multiple-collectors/m-p/10046666)\n\n**Question:** I noticed that if I create multiple collectors in the same script, they don't work properly and most likely end up empty.\nI've tried to use `Dispose` before creating the second collector to see if it can sort of \"reset\" the collector, but I always get this error:\n\n- Exception : Autodesk.Revit.Exceptions.InvalidObjectException: The managed object is not valid.\n\nWhat am I missing?\n\nHere is a simple example where I collect all shared parameters in a project first, so I can use their GUIDs to collect data from them in families.\n\n<pre class=\"prettyprint\">\n  collector = FilteredElementCollector(doc)\n\n  # Find GUID of desired shared parameters\n  \n  sharedPars = collector.OfClass(SharedParameterElement)\n\n  # Collect data from families based on parameter GUID.\n  \n  families = collector.OfClass(FamilyInstance)\n    .WhereElementIsViewIndependent()\n</pre>\n\n**Answer:** You are not in fact creating multiple collectors.\n\nYou are creating one single collector and applying multiple filters to that.\n\nApplying several different filters to one single collector does exactly what it should:\n\nEvery single filter is applied to the collector results.\n\nIf the filters are mutually exclusive, you end up with an empty result.\n\nFor a previous explanation, please read the discussion\non [reinitialising the filtered element collector](https://thebuildingcoder.typepad.com/blog/2019/11/design-automation-api-stacks-collectors-and-links.html#4).\n\nThe same question also came up in a few other recent threads, e.g.,\non [how to extract the geometry and the texts of the title block in a sheet view](https://forums.autodesk.com/t5/revit-api-forum/how-to-extract-the-geometry-and-the-texts-of-the-title-block-in/m-p/9943738),\nsummarised in the blog post \non [extracting title block geometry and text](https://thebuildingcoder.typepad.com/blog/2021/01/sheet-view-xform-coords-img-export-and-title-block.html#2).\n\nIn your sample code snippet, simply create two separate collectors for shared parameters and family instances.\n\n**Response:** I appreciate the reply and support.\n\nI definitely understand what I did wrong now; I can't reuse the same collector variable as the filters just pile up, which obviously causes the collector to be empty, so simple.\n\nIt does worry me that after so much research I couldn't find the answer anywhere.\n\n**Answer:** Thank you for your appreciation. Happy to hear that the problem is solved and the solution clear and simple.\n\nI'll spell it out in the blog again and hope that will be easier to find in case anyone runs into this again in the future.\n\n<center>\n<img src=\"img/rain_water_collector_sheet.jpg\" alt=\"Rain water collector\" title=\"Rain water collector\" width=\"330\"/> <!-- 330 -->\n</center>"
  },
  {
    "original_filename": "1890_multiple_filter",
    "header_text": "RevitLookup Handles Split Region Offsets",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> RevitLookup Handles Split Region Offsets\n\nThanks to Michael [@RevitArkitek](https://github.com/RevitArkitek) Coffey, RevitLookup can now handle split region offsets.\n\nHe submitted the [issue #68 &ndash; split region offsets (2021)](https://github.com/jeremytammik/RevitLookup/issues/68) and a\nsubsequent [pull request &ndash; adds handler for `GetSplitRegionOffsets`](https://github.com/jeremytammik/RevitLookup/pull/69),\nexplaining:\n\n> The `ViewCropRegionShapeManager` method `GetSplitRegionOffset` was added in 2021.\nThis returns an `XYZ` but requires an integer index parameter.\nA list of XYZs can be returned, named by the index that was used.\n\nThis enhancement is captured\nin [RevitLookup release 2021.0.0.12](https://github.com/jeremytammik/RevitLookup/releases/tag/2021.0.0.12).\n\nMany thanks to Michael for implementing and sharing this!"
  },
  {
    "original_filename": "1890_multiple_filter",
    "header_text": "Python and Dynamo Autotag Without Overlap",
    "local_header_href": "#5",
    "chunk_text": "####<a name=\"5\"></a> Python and Dynamo Autotag Without Overlap\n\nChristopher Kepner shared a nice brute force Python solution\nimplementing [Auto Tagging without overlap](https://forums.autodesk.com/t5/revit-api-forum/auto-tagging-without-overlap/m-p/10036344),\nexplaining the algorithm like this:\n\nA python script to auto-tag all doors and place them without clashing with other tags or doors, using a custom smart tag that is much bigger than typical door tag.\n\nIt starts with a list of doors in the variable `doorFiltered`. \n\nThe location point of the first door in the list is fed into the function below to provide a test point to see if it overlaps any location points in the list of doors:\n\n<pre class=\"prettyprint\">\n  def move_right(x,y,z):\n    n = scaleFactor\n    return x+n, y, z\n  \n  def move_down(x,y,z):\n    n = scaleFactor\n    return x,y-n,z\n  \n  def move_left(x,y,z):\n    n = scaleFactor\n    return x-n,y,z\n  \n  def move_up(x,y,z):\n    n = scaleFactor\n    return x,y+n,z\n  \n  moves = [move_right, move_down, move_left, move_up]\n  \n  def shift(end, point):\n    from itertools import cycle\n    _moves = cycle(moves)\n    n = 1\n    pos = point\n    times_to_move = 1\n  \n    yield pos\n  \n    while True:\n      for _ in range(2):\n        move = next(_moves)\n        for _ in range(times_to_move):\n          if n >= end:\n            return\n          pos = move(*pos)\n          n+=1\n          yield pos\n  \n      times_to_move+=1\n</pre>\n\nIf the point lands too close to any door locations in the list, the code adds a integer to the function and runs again to provide the next test point. Each time the function is re-run, the next point follows a spiral pattern from the origin (location point of the first door):\n\n<center>\n<img src=\"img/autotagging_spiral.png\" alt=\"Autotagging spiral\" title=\"Autotagging spiral\" width=\"200\"/> <!-- 394 -->\n</center>\n\nOnce a point is found that is far enough from the list of door locations, a tag is placed and the tag location is added to the list of door locations.\n\nThe process loops to the next door, checking against the list of door location plus the new tag location.\n\nIt's a working concept, but the output is inconsistent.\n\nIssues include:\n\n- Tags occasionally overlap with each other.\n- The process takes a while. there's tons of points it tests that fail.\n- Tag location it finds does not work well with leaders. the tags land in every direction from the door creating overlap of leaders. It might work better with smaller tags.\n\n**Answer:** LOL. If you make the tags small enough, the problem will disappear entirely, along with the tags.\n\nThank you very much for the explanation. Brute force and effective, given time. I love that straightforward approach!\n\nAnother recent tagging conversation\non [tags without overlapping](https://forums.autodesk.com/t5/revit-api-forum/tags-without-overlapping/m-p/7750631)\nmentions a couple of other useful possibilities.\n\nMore complex approaches are discussed on the Internet under the\nterm '[map labelling algorithms](https://duckduckgo.com/?q=map+labelling+algorithm)'.\n\nFinally, Konrad Sobon of [archi+lab](https://archi-lab.net)\ndiscussed [element tagging with dynamo](https://archi-lab.net/element-tagging-with-dynamo)\nto create roof plans for a glass canopy system and tag each panel with its unique `Mark` value:\n\n> basically, it's a Revitâ€™s Tag All tool, but with extra control over where the tag actually gets placed."
  },
  {
    "original_filename": "1890_multiple_filter",
    "header_text": "Custom Errors and Preventing Changes",
    "local_header_href": "#6",
    "chunk_text": "####<a name=\"6\"></a> Custom Errors and Preventing Changes\n\nHarry Mattison presents a nice solution\nimplementing [custom errors &ndash; preventing specific changes to the Revit model](https://boostyourbim.wordpress.com/2021/01/28/custom-errors-preventing-specific-changes-to-the-revit-model),\nexplaining:\n\n> Let's say there is a specific list of View Scales that you want allowed in your Revit projects.\nOr certain naming conventions that should be used.\nOr something else like that where you'd like to automate the process of checking a user's change and determining if it should be allowed, prevented, or trigger a warning.\n\n<center>\n<img src=\"img/hm_custom_error.png\" alt=\"Custom error\" title=\"Custom error\" width=\"600\"/> <!-- 705 -->\n</center>\n\n> This can be achieved with two pieces of Revit API functionality &ndash; Updater and Custom Failures...\n\nMany thanks to Harry for sharing this nice explanation and implementation!"
  },
  {
    "original_filename": "1890_multiple_filter",
    "header_text": "Ecological Cost of Crypto Currency and Art",
    "local_header_href": "#7",
    "chunk_text": "####<a name=\"7\"></a> Ecological Cost of Crypto Currency and Art\n\nI was intrigued and astounded at some of the information shared by Memo Akten in the analysis\nof [the unreasonable ecological cost of #CryptoArt](https://memoakten.medium.com/the-unreasonable-ecological-cost-of-cryptoart-2221d3eb2053),\nand crypto-currencies as well."
  }
]