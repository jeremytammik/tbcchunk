[
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\" type=\"text/javascript\"></script>\n</head>\n\n<!---\n\n- back to the basics:\n  And whoever else is interested in the Revit API:\n  I just answered four cases this morning on StackOverflow and in the discussion forum where I repeat some basic recommendations that I have already given hundreds of times in the past:\n  element filtering: https://stackoverflow.com/questions/74806242/simplify-a-series-of-repetitive-functions-with-sort-options/74809786#74809786\n  parameter access: https://forums.autodesk.com/t5/revit-api-forum/try-block-not-catching-owner-permission-locks/m-p/11621464\n  XYZ trigonometry: https://forums.autodesk.com/t5/revit-api-forum/how-to-create-a-vector-xyz-tilted-up-from-the-view-direction-by/m-p/11621339\n  projecting points: https://forums.autodesk.com/t5/revit-api-forum/using-avf-on-ductwork-coordinates-issue/m-p/11621128\n  I would really be happy if I did not have to continue repeating them over and over again.\n  All four of these could give a blog post each, or all four together.\n  At the very least, I hope that you guys all agree with me that the recommendations I make there are sensible and relevant.\n  Please read them, tell me what you think, and feel free to summarise them in one or several blog posts of your own, if you like.\n  Above all, please confirm that you understand them and let me know if you have any questions or doubts whatsoever.\n  element filtering: https://stackoverflow.com/questions/74806242/simplify-a-series-of-repetitive-functions-with-sort-options/74809786#74809786\n  parameter access: https://forums.autodesk.com/t5/revit-api-forum/try-block-not-catching-owner-permission-locks/m-p/11621464\n  XYZ trigonometry: https://forums.autodesk.com/t5/revit-api-forum/how-to-create-a-vector-xyz-tilted-up-from-the-view-direction-by/m-p/11621339\n  /Users/jta/a/doc/revit/tbc/git/a/trigonometry.png 640 × 836 pixels\n  projecting points: https://forums.autodesk.com/t5/revit-api-forum/using-avf-on-ductwork-coordinates-issue/m-p/11621128\n\n- ChatGPT Payment plan\n  https://autodesk.slack.com/archives/C016D5HE66T/p1675286581039319\n\ntwitter:\n\nImpressed and intrigued by what #ChatGPT can and cannot do, trying out new aspects myself, with my friends and with @AutodeskRevit #RevitAPI element filtering, XYZ trigonometry, projecting points , academia, education, and #Solarpunk #BIM @AutodeskAPS  https://autode.sk/chatgpt4rvtapi\n\nImpressed and intrigued by what ChatGPT can and cannot do, trying out new aspects myself and with my friends\n&ndash; Element filtering\n&ndash; XYZ trigonometry\n&ndash; Projecting points\n&ndash; Using ChatGPT with Revit API\n&ndash; Generative AI and multi-modal learning\n&ndash; ChatGPT in academia, education, building a VM, DIY, payment plan, Solarpunk...\n\n&ndash; \n...\n\nlinkedin:\n\nImpressed and intrigued by what #ChatGPT can and cannot do, trying out new aspects myself, with my friends and with #RevitAPI element filtering, XYZ trigonometry, projecting points , academia, education, and #Solarpunk:\n\n - Element filtering\n - XYZ trigonometry\n - Projecting points\n - Using ChatGPT with Revit API\n - Generative AI and multi-modal learning\n - ChatGPT in academia, education, building a VM, DIY, payment plan, Solarpunk...\n\n#bim #DynamoBim #AutodeskAPS #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk\n\nthe [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread\n\n<center>\n<img src=\"img/\" alt=\"\" title=\"\" width=\"600\" height=\"\"/>\n<p style=\"font-size: 80%; font-style:italic\"></p>\n</center>\n\n<pre class=\"code\">\n</pre>\n\n-->"
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "Back to Basics and ChatGPT",
    "local_header_href": "#back-to-basics-and-chatgpt",
    "chunk_text": "### Back to Basics and ChatGPT\n\nI answered a couple of basic questions for the umpteenth time and thought I might summarise some of them here yet again.\n\nI am still impressed and intrigued by what ChatGPT can and cannot do and keep trying out new aspects myself and with my friends.\n\nI strongly advise anyone interested in it to try it out for yourself rather than just reading the numerous articles published by others &ndash; for example, my notes below :-)\n\n- [Back to the basics](#2)\n- [Element filtering](#3)\n- [XYZ trigonometry](#4)\n- [Projecting points](#5)\n- [Train ChatGPT for Revit API](#6)\n- [Asking ChatGPT a Revit API question](#7)\n- [Using ChatGPT with Revit API](#8)\n- [Generative AI and multi-modal learning](#9)\n- [More notes on ChatGPT et al](#10)\n    - [Kean on the coming year](#10.01)\n    - [ChatGPT in academia](#10.02)\n    - [Building a VM inside ChatGPT](#10.04)\n    - [How to make your own ChatGPT](#10.05)\n    - [Differentiate human vs. AI](#10.06)\n    - [ChatGPT and education](#10.07)\n    - [ChatGPT payment plan](#10.08)\n    - [Uplifting books](#10.09)\n    - [Solarpunk](#10.10)\n    - [Opus.ai type and play](#10.11)\n    - [MusicLM generates music from text](#10.12)\n    - [AI-generated art wins competition](#10.13)\n    - [ChatGPT abandons its life dream](#10.14)"
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "Back to the Basics",
    "local_header_href": "#2",
    "chunk_text": "####<a name=\"2\"></a> Back to the Basics\n\nHere are a couple of typical questions from StackOverflow and the discussion forum where I repeat some basic recommendations that I have already given before:\n\n- [Element filtering](#3)\n- [XYZ trigonometry](#4)\n- [Projecting points](#6)\n\nMaybe, by now, or very soon, based on the publicly available information, ChatGPT and other pretrained language models will be able to answer them just as well or better than I can.\n\nSee below for examples of \nwhat it [can do &ndash; using ChatGPT with Revit API](#8),\nwhat it [can't do &ndash; asking ChatGPT a Revit API question](#7), \nand [an explanation of why it works at all &ndash; generative AI and multi-modal learning](#9).\n\n<!--\nI would really be happy if I did not have to continue repeating them.\n\nI am sure that by now, based on the publicly available information, ChatGPT can answer them just as well or better than I have done.\n\nI hope that you guys all agree with me that the recommendations I make there are sensible and relevant.\n\nPlease let me know if you disagree or can improve on them in any way.\n\nThank you!\n-->"
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "Element Filtering",
    "local_header_href": "#3",
    "chunk_text": "####<a name=\"3\"></a> Element Filtering\n\n[Simplify a series of repetitive functions with sort options](https://stackoverflow.com/questions/74806242/simplify-a-series-of-repetitive-functions-with-sort-options)\n\nI have a series of functions in a module which are starting to become quite repetitive. \nEach function extracts a list and has an optional Boolean argument to sort the list before returning it. \nFeels like there ought to be a way to inherit the sorting from a parent function?\n\n<pre class=\"prettyprint\">\ndef get_electrical_equipment(sort_by_name = False):\n  \n  elements =  DB.FilteredElementCollector(revit.doc)\\\n    .OfCategory(DB.BuiltInCategory.OST_ElectricalEquipment)\\\n    .WhereElementIsNotElementType()\\\n    .ToElements()\n    \n  if sort_by_name: elements.sort(key=lambda x: x.Name)\n  \n  return elements\n\ndef get_panel_schedules(sort_by_name = False):\n  elements = DB.FilteredElementCollector(revit.doc)\\\n    .WherePasses(DB.ElementClassFilter(DB.Electrical.PanelScheduleView))\\\n    .WhereElementIsNotElementType()\\\n    .ToElements()\n    \n  if sort_by_name: elements.sort(key=lambda x: x.Name)\n  \n  return elements\n\ndef get_panel_schedule_sheet_instances(sort_by_name = False):\n  elements = DB.FilteredElementCollector(revit.doc)\\\n    .OfClass(DB.Electrical.PanelScheduleSheetInstance)\\\n    .ToElements()\n    \n  if sort_by_name: elements.sort(key=lambda x: x.Name)\n  \n  return elements\n</pre>\n\n**Answer:** First, I think you can completely eliminate the call to `ToElements`. \nIt is a waste of memory and computation time, as I have pointed out repeatedly in the past, e.g., \nin [How to Distinguish Redundant Rooms](https://thebuildingcoder.typepad.com/blog/2016/04/how-to-distinguish-redundant-rooms.html#2). \n\nNow, to address your question, you can simply implement a common method `get_elements_of_category_and_class` taking a category and a class argument. \nPass in either one or the other or both and execute `OfClass` and `OfCategory` checks on the filtered element collector, either one or the other or both, skipping evaluation of `null`-valued arguments."
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "XYZ Trigonometry",
    "local_header_href": "#4",
    "chunk_text": "####<a name=\"4\"></a> XYZ Trigonometry\n\nAnother recurring question is basic trigonometry, such \nas [how to create a vector `XYZ` tilted up from the view direction by a specified angle](https://forums.autodesk.com/t5/revit-api-forum/how-to-create-a-vector-xyz-tilted-up-from-the-view-direction-by/m-p/11621339):\n\n**Question:** I have the view direction that I use for my reference intersector. \nI would like to try various altitude angles up from the view direction in a section with starting point at a wall like in this section view:\n\n<center>\n<img src=\"img/vector_tilted_up.png\" alt=\"Vector tilted up from plane\" title=\"Vector tilted up from plane\" width=\"400\"/> <!-- 1199 × 530 pixels -->\n</center>\n\nI know there are transforms and various complex maths answers on StackOverflow; I was hoping to use a simpler built-in method if available? \n\n**Answer:** This kind of trigonometry is not difficult. \nYour children learn it in school, I hope. \nPlease take a moment to either read \nthe [Wikipedia article on Trigonometric functions and the Law of tangents](https://en.wikipedia.org/wiki/Trigonometric_functions#Law_of_tangents) or \nstudy some other tutorials. \nFrom that article, I find this image on the unit circle definitions of six trigonometric functions most helpful:\n\n<center>\n<img src=\"img/trigonometry_functions.png\" alt=\"Unit circle definitions of six trigonometric functions\" title=\"Unit circle definitions of six trigonometric functions\" width=\"320\"/> <!-- 640 × 836 pixels -->\n</center>\n\nDecide what angle you wish to use, e.g., 30 degrees. \nDetermine its tangens value, ca. 30 x 3.14 / 180 = 0.5. \nTake your horizontal view direction XYZ vector (x,y,0). \nReplace the Z coordinate by the tangens you calculated, yielding  (x,y,0.5). \nVoila. \nThat is your new tilted direction vector. \nYou may normalise it if you like.\n\nPlease do not be afraid of trigonometry, it is very intuitive as soon as you stop being scared of it.\n\nI condemn our teachers and education systems (not all, but all too many) for inoculating kids with fear of maths and geometry.\n\nThis is basic human intuitive understanding. \nThe Greeks mastered it 3000 years ago. \nWe can handle a computer and a smartphone, but not simple trigonometry? \n\nWhy?\n\n**Answer 2:** I would probably look at it in terms of the ratio between the forward direction and XYZ.BasisZ that the angle represents.\n\nAlso, the `XYZ` class has good functionality for arithmetic operations.\n\nSimilar as noted above, below shows an easy way:\n\n<pre class=\"prettyprint\">\nDim V0 As New XYZ(1, 0.5, 0) 'some random flat direction\nV0 = V0.Normalize\nDim Ang As Double = 30 'Angle in degrees\nDim Ang_r As Double = (Math.PI / 180) * Ang\nDim T As Double = Math.Tan(Ang_r) 'Tan(Ang) = Opp/1\nDim Vz As New XYZ(0, 0, T)\nDim V1 As XYZ = (V0 + Vz).Normalize 'The direction with tilt of 30 degrees up from horizontal\n</pre> \n\nThis works from 0 to < 90.\nFrom that point on, you have to check the quadrant and consider the `Tan` function doesn't work approaching 90 or 270 degrees, but you know those values are looking straight up and straight down respectively."
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "Projecting Points",
    "local_header_href": "#5",
    "chunk_text": "####<a name=\"5\"></a> Projecting Points\n\nAnother simple geometric question came up \non [Using AVF on ductwork &ndash; coordinates issue?](https://forums.autodesk.com/t5/revit-api-forum/using-avf-on-ductwork-coordinates-issue/m-p/11621128):\n\n**Question:** I am currently trying to create an add-in that will allow me to perform a calculation on various points on a duct face.\n\nFor now, the user is selecting the face, but in the future, I plan to process the top face of each duct in the view.\n\nI am following along with the [RvtFader example project](https://github.com/jeremytammik/RvtFader).\n\nA reference to my face is passed into the `SpatialFieldManager`, exactly like in the RvtFader example. \n\nThe UpdateSpatialFieldPrimitive method runs without error, and my duct is shaded with a single solid color.\n\nI believe my issue is that I am feeding the FieldDomainPointsByUV with UV points that are in the global coordinate system instead of the local coordinates system to the face. I suspect because creating a BoundingBoxUV of my face, and supplying the bb.Min and bb.Max, along with 0, 10 as FieldValues, I get a correctly shaded (using a gradient) duct. \n\nIs there a way to convert WCS XYZ points to local UV points?\n\n**Answer:** Normally, the `UV` coordinates depend on the face. \nSimply converting the `XYZ` X and Y values directly to UV will not work.\n\nTo convert a XYZ point to the face UV space, you can use \nthe [Face.Project method](https://www.revitapidocs.com/2023/4bee3e30-74fa-3103-c2f4-d07618fbcedf.htm) to \nproject it from global 3D space onto the face 2D.\n\n**Response:** Thank you. That was just what I needed!"
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "Train ChatGPT for Revit API",
    "local_header_href": "#6",
    "chunk_text": "####<a name=\"6\"></a> Train ChatGPT for Revit API\n\nI asked ChatGPT some basic questions to determine whether it knows about the Revit API, Dynamo, The Building Coder blog and the Revit API discussion forum. \nThe results were surprisingly mixed:\n\nJeremy: Do you know about the Revit API?\n\nChatGPT: Yes, I am familiar with the Revit API. The Revit API is a software application programming interface (API) that allows users to access and manipulate the data contained in Autodesk Revit projects. This API can be used to develop custom tools and applications that integrate with Revit, allowing users to automate tasks and extend the functionality of the software.\n\nJeremy: So, what is the difference between Revit API and Dynamo?\n\nChatGPT: Dynamo is a visual programming platform that can be used with Revit to automate and simplify tasks and workflows. The Revit API, on the other hand, is a set of programming tools and libraries that can be used to develop custom applications and tools that integrate with Revit. While Dynamo is a user-friendly platform that allows users to create scripts and automate tasks without writing code, the Revit API is a more advanced tool that requires some programming knowledge to use effectively. Additionally, Dynamo is built on top of the Revit API, so using the Revit API allows for even greater customization and control over the automation of tasks in Revit.\n\nJeremy: Do you know the Revit API discussion forum?\n\nChatGPT: I am not aware of a specific discussion forum for the Revit API. However, there are many online forums and communities where users of the Revit API can ask questions, share tips and advice, and discuss their experiences with the API. Some examples of these forums include the Autodesk Developer Network forums, the Autodesk Revit API discussion group on LinkedIn, and the Revit API discussion forum on Autodesk Community. These forums can be a great resource for users of the Revit API who are looking for help, advice, or simply want to connect with other users of the API.\n\nJeremy: Do you know The Building Coder blog?\n\nChatGPT: I'm sorry, but I am not aware of The Building Coder blog. As a large language model trained by OpenAI, my knowledge is based on the text that has been fed into my training data. I do not have the ability to browse the internet or access additional information outside of what has been provided to me during my training. I apologize if I am unable to provide you with the information you are looking for. Is there anything else I may be able to assist you with?\n\nJeremy: Can you read The Building Coder blog \nat [thebuildingcoder.typepad.com](https://thebuildingcoder.typepad.com/) so \nthat you later have access to that information?\n\nChatGPT: As a language model trained by OpenAI, I do not have the ability to browse the internet or access information outside of what has been provided to me during my training. I am only able to provide information and respond to questions based on the text that has been fed into my training data. I apologize if I am unable to provide you with the information you are looking for. Is there anything else I may be able to assist you with?\n\nJeremy: Can I provide you with additional training text to expand your knowledge in a specific domain?\n\nChatGPT: As a pre-trained language model, I am not able to accept additional training text or expand my knowledge in a specific domain. My knowledge is based on the text that was used to train me, and I do not have the ability to learn or acquire new information outside of what was included in my training data. I am designed to assist with a wide range of questions and topics, but my answers are limited to the information and knowledge that was provided to me during my training. If you have any specific questions, I would be happy to try to provide an answer based on my existing knowledge.\n\nJeremy: Can I access your source code in order to expand your training myself?\n\nChatGPT: I'm sorry, but I am not a physical machine or computer program that can be accessed or modified. As a large language model trained by OpenAI, I exist solely as a virtual assistant that is able to provide answers to questions and respond to statements based on the text that was used to train me. I do not have a source code or any other physical representation that can be accessed or modified. I apologize if I am unable to meet your request. Is there anything else I may be able to assist you with?"
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "Asking ChatGPT a Revit API Question",
    "local_header_href": "#7",
    "chunk_text": "####<a name=\"7\"></a> Asking ChatGPT a Revit API Question\n\nI tried out asking ChatGPT a Revit API question in Joris van der Meulen's thread\non [placing a view reference](https://forums.autodesk.com/t5/revit-api-forum/placing-a-view-reference/m-p/11717917).\nIt provided a very plausible-sounding answer, but completely wrong:\n\nJeremy: Is it possible to place a view reference programmatically using the Revit API?\n\nChatGPT: Yes, it is possible to place a view reference programmatically using the Revit API.\n\nJeremy: What API calls does that require?\n\nChatGPT: Placing a view reference programmatically using the Revit API requires creating a new instance of a Viewport type, setting its location and size, and linking it to the target view. The following API calls can be used:\n\n- Viewport.Create() to create a new instance of Viewport.\n- ElementTransformUtils.MoveElement() to set the location of the Viewport.\n- Viewport.get_Parameter() and Parameter.Set() to set the size of the Viewport.\n- Viewport.ViewId property to link the Viewport to the target view.\n\nThis is incorrect, however, as Joris and Sean Page point out:\n\nChatGPT suggests creating a viewport. \nA viewport is something we place on a sheet. \nA View Reference is in instance of a system family which we place on a view (floorplan, section, etc). \n\nAs far as I know, this is not possible, nor can you modify the Reference after it is placed because the parameter is read-only. \nSo, it isn't even like you could copy and paste, then update. \n\nAnyway, it is surprising and impressive how sensible-sounding the answer is; plus, in many cases, it is actually correct.\nIt all depends on what ChatGPT was fed in its pre-training curriculum."
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "Using ChatGPT with Revit API",
    "local_header_href": "#8",
    "chunk_text": "####<a name=\"8\"></a> Using ChatGPT with Revit API\n\nOn the other hand, Mohamed Elimam, SIAC Construction, presented \nsome [success using ChatGPT to help work with Revit API](https://www.linkedin.com/posts/mohamed-elimam_programming-chatgbt-ai-activity-7010260045649063936-dQds)."
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "Generative AI and Multi-Modal Learning",
    "local_header_href": "#9",
    "chunk_text": "####<a name=\"9\"></a> Generative AI and Multi-Modal Learning\n\nThe past few months hint at exciting and adventurous times full of radical change ahead.\n\nBut why, and how? \n\nWhat happened so suddenly to enable this?\n\n<!-- \n\nText by Mike Haley on generative AI in the research news:\n\n<hr/>\n\nThe speed at which machine learning models are evolving is breathtaking. \nThere are more companies, labs and institutions working on these than ever before. \nThe language model GPT3 from OpenAI, released in 2021, was a key breakthrough.\nThis year, OpenAI plans to release GPT4, an even larger language model. \n\n> The disruption from this technology is like nothing we have ever encountered in software history. \nIt is paralleled only by the advent of the computer itself. \nThis technology will be more impactful than the Internet, mobile computing, and GUIs. \nIt stands to upend every aspect of how we work. \nIt will fundamentally change how we interact with computers, treating them as something closer to an assistant than a smart calculator. \nThe very essence of what it means to create something will change. \nWe will feel challenged by these systems in novel ways. \nThis technology disrupts entire industries. \nLegal frameworks will be at a loss for how to adjust. \nNew economies will appear while others die off. \n\nWhat powers this innovation? \n\nBehind the amazing capabilities of these models are two concepts: Generative AI and Multi-Modal Learning. \nThe most prevalent examples of Generative AI are Large Language Models (LLM) that both ingest and produce language.\nResearchers feed LLMs with immense amounts of text across every spoken, written and computer language that exists. \nThe models learn to correlate and produce new, original text based on prompts with astonishing results. \n\nOne way to think of these models is that they are learning language and how we use it by discovering the patterns and frequencies of words and how we group them. \nAs LLMs scale up and train across vast amounts of text, including many spoken and computer languages, the models learn increasingly advanced and nuanced concepts that have meaning to us. \nIt seems like magic.\nThat’s because language is so central to being human.\n\n<blockquote>\n<p>The truly unique feature of our language is... the ability to transmit information \nabout things that do not exist at all. As far as we know, only Sapiens can talk \nabout entire kinds of entities that they have never seen, touched or smelled.\n<span style=\"text-align: right; font-style: italic\">&ndash; Yuval Noah Harari, Sapiens</span></p>\n</blockquote>\n\nMulti-modal learning is an old idea and, just as with language, it is something deeply human. \nIt means to learn from multiple sources of information at the same time, inferring the relationships and meanings across them. \nOur brains are extremely good at this, especially when we are babies and toddlers. \nIt is a key ingredient in how we learn about the world. \nSeeing a toy block, feeling its sharp corners, hearing the sound it makes when it falls on the floor, and then hearing a parent say “block” is all part of a multi-modal learning process. \n\n<hr/>\n\nChatGPT reformulated this as follows:\n\n<hr/>\n\nFor example, when a child sees a toy block, feels its sharp corners, hears the sound it makes when it drops on the floor, and hears a parent say \"block,\" it is an example of multi-modal learning. \n\n-->\n\nThe current evolution of machine learning models is phenomenal. \nAdvancement will accelerate faster still with growing numbers of companies, labs, and institutions investing in this area. \nThe most remarkable achievement lately was the large language model GPT3 from OpenAI, launched in 2021. \nThis year, OpenAI is set to release GPT4, a larger and more advanced version.\n\nThe impact of this technology is unparalleled in the history of software. \nIt rivals the introduction of computers themselves and may have an even more profound effect on our work and everyday life than the Internet, mobile computing, and graphical user interfaces. \nIt will change the way we interact with computers, turning them into personal assistants, and alter the very meaning of creation. \nThis technology will challenge us in ways we have never experienced before, disrupting industries and leaving legal frameworks struggling to keep up. \nAs a result, new economies will emerge, and others will fade.\n\nThe driving force behind this innovation is a combination of Generative AI and Multi-Modal Learning. \nThe most common example of Generative AI is Large Language Models (LLM), which can both process and generate language. \nResearchers feed LLMs massive amounts of text in many languages, including speech, writing and programming. The models then learn to produce new and original text based on prompts with impressive results.\n\nThese models essentially learn about language and how we use it by identifying patterns and frequencies of words and phrases. \nAs they process the vast amounts of data fed in, they acquire increasingly advanced and nuanced concepts that hold meaning for us. \nThis may seem like magic, but makes total sense given the central role that language plays in our human lives:\n\n<blockquote>\n<p>The truly unique feature of our language is... \nthe ability to transmit information about things that do not exist at all. \nAs far as we know, only Sapiens can talk about entire kinds of entities \nthat they have never seen, touched or smelled.\n<span style=\"text-align: right; font-style: italic\">&ndash; Yuval Noah Harari, Sapiens</span></p>\n</blockquote>\n\nMulti-Modal Learning is the ability to learn from multiple sources of information at the same time. \nOur brains are naturally good at this, especially during our early years as infants and toddlers.\nThis is how we learn about the world and make connections between different senses and experiences. \nAs an example, consider a baby being bathed, learning to hold and drink from a glass, splashing in the washbasin and hearing its family members say 'water'.\n\nIf you are interested in pondering the philosophical side of this, I also recommend another book by Yuval Noah Harari, <i>21 Lessons for the 21st Century</i>: a brilliant, eye-opening, neutral and hence automatically, unintentionally, critical discussion of important questions humanity is facing today; basically, we use and need stories to organise ourselves, and all stories are fantasies; which stories do we agree on? abstract constructs do not suffer, stories do not suffer; individual humans do; how to end suffering? let go of all attachments, meditate; or, find your own way; my favourite chapters are in the final part of the book, on education and meditation; however, i cannot say whether they can be understood and enjoyed without reading the preceding chapters the others first..."
  },
  {
    "original_filename": "1981_chatgpt_basics",
    "header_text": "More Notes on ChatGPT et al",
    "local_header_href": "#10",
    "chunk_text": "####<a name=\"10\"></a> More Notes on ChatGPT et al\n\nI performed a few experiments with friends asking various questions in different domains, some of them in German. \nThe following is a list of pointers and short notes on those and other's experiments and a couple of other related issues.\n\nWhat have I learned from all of this?\n\nWell, one clear take-away is the following:\nI cannot teach ChatGPT new tricks, since it is pre-trained.\nI can, however, ensure that as much reliable information as possible is out there on the web to hopefully be included in the pre-training resources in the next version.\nIn the case of the Revit API, I do so by moderating the Revit API discussion forum and trying to provide reliable information in The Building Coder blog, hoping that that information will find its way into the pre-training dataset sooner or later.\n\n####<a name=\"10.01\"></a> Kean on the Coming Year\n\nKean Walmsley shared \nhis [reflections on what’s coming in 2023](https://www.keanw.com/2023/01/reflections-on-whats-coming-in-2023.html), \npartly focussed on ChatGPT.\n\n\n####<a name=\"10.02\"></a> ChatGPT in Academia\n\nAn interesting analysis of ChatGPT in academia, \non [how a faculty should deal with the problem of AI generated texts](https://academia.stackexchange.com/questions/191643/how-should-a-faculty-deal-with-the-problem-of-artificial-intelligence-ai-gener).\n\n####<a name=\"10.04\"></a> Building a Virtual Machine inside ChatGPT\n\nYou can do some funny things with it, such \nas [build and run a virtual machine inside ChatGPT](https://www.engraved.blog/building-a-virtual-machine-inside/).\n\n####<a name=\"10.05\"></a> How to Make Your Own ChatGPT\n\n[How to make your own ChatGPT](https://medium.com/@borandabak/how-to-make-your-own-chatgpt-fb291acea7b7) is \nnot really about making your own, but making use of the ChatGPT API in your own app.\n\nIn order to really make your own, you might want to start with something smaller, such \nas [nanoGPT](https://github.com/karpathy/nanoGPT).\n\n####<a name=\"10.06\"></a> Differentiate Human vs. AI\n\nI discussed the possibility of telling the difference between human and AI-generated text with a friend.\nIn my opinion, it is hard if not impossible. \nHowever, OpenAI themselves have presented a solution to achieve this.\nHowever-squared, they add many caveats:\n\n> zu dem thema unterscheidung AI-generierter versus menschengeschriebener text: ein solches werkzeug wird seit gestern von openai.com angeboten, also von der herstellern von ChatGPT: \n[New AI classifier for indicating AI-written text](https://openai.com/blog/new-ai-classifier-for-indicating-ai-written-text/).\n\n> weisst du noch, dass ich gesagt habe, es ist unmoeglich? \ndas wird bestaetigt. lese dazu \ndie [einschraenkungen &ndash; limitations](https://openai.com/blog/new-ai-classifier-for-indicating-ai-written-text/#limitations).\n\n####<a name=\"10.07\"></a> ChatGPT and Education\n\nChatGPT nimmt Stellung zu der Frage \nnach [ChatGPT im Bildungsbereich &ndash; educator considerations for ChatGPT](https://platform.openai.com/docs/chatgpt-education).\n\n####<a name=\"10.08\"></a> ChatGPT Payment Plan\n\n<!-- https://autodesk.slack.com/archives/C016D5HE66T/p1675286581039319 --> \n\nOpenAI have announced their subscription paid model [ChatGPT Plus](https://openai.com/blog/chatgpt-plus/):\n\n> We’re launching a pilot subscription plan for ChatGPT, a conversational AI that can chat with you, answer follow-up questions, and challenge incorrect assumptions.\nThe new subscription plan, ChatGPT Plus, will be available for $20/month, and subscribers will receive a number of benefits:\n* General access to ChatGPT, even during\n\nNot surprising. \nThe best things in life are never free.\n\nBait and switch &ndash; the oldest trick in the book &ndash; predates AI.\n\n[Q] When ChatGPT provides the info based on public available data... why pay for it?\n\n[A] Are you asking this because you have the required technical skills and hardware to run and train your own model on public data?\nOr are you misunderstanding the power of GPT (in which case &ndash; try it!)?\n\n####<a name=\"10.09\"></a> Uplifting Books\n\nA friend was looking for positive uplifting books about the future of our society and planet, and good things happening already now. \nSo, we asked ChatGPT for some suggestions, and were duly rewarded.\nIt took us three prompts (in German) to get surprisingly promising results:\n\n- Bitte nenne uns gute literarische romane die wohlwollend, zuversichtlich und mutmachend in die zukunft blicken und inspirieren. &rarr; list of mainstream books\n- Das passt fuer mich nicht, die sind nicht positiv. Lieber positive utopien wie zum beispiel oekotopia. &rarr; list of less mainstream books, but heavily scifi oriented\n- Es soll auf der erde spielen und oekologische und gesellschaftliche loesungen zeigen &rarr; very interesting results, that we need to explore further, including a pointer to \nthe [Solarpunk Manifesto](http://www.re-des.org/a-solarpunk-manifesto), see below.\n\n####<a name=\"10.10\"></a> Solarpunk\n\nI had never heard of this before, so ChatGPT taught me something new pointing out \nthe [Solarpunk Manifesto](http://www.re-des.org/a-solarpunk-manifesto):\n\n> Solarpunk is a movement in speculative fiction, art, fashion, and activism that seeks to answer and embody the question what does a sustainable civilization look like, and how can we get there? \nThe aesthetics of solarpunk merge the practical with the beautiful, the well-designed with the green and lush, the bright and colorful with the earthy and solid. \nSolarpunk can be utopian, just optimistic, or concerned with the struggles en route to a better world, but never dystopian. As our world roils with calamity, we need solutions, not only warnings.\nSolutions to thrive without fossil fuels, to equitably manage real scarcity and share in abundance instead of supporting false scarcity and false abundance, to be kinder to each other and to the planet we share.\nSolarpunk is at once a vision of the future, a thoughtful provocation, a way of living and a set of achievable proposals to get there...\n\n####<a name=\"10.11\"></a> Opus.ai Type and Play\n\nMoving away from ChatGPT, here is another AI site, [Opus.ai](https://opus.ai/demo),\nenabling type and play by turning text into scenes, images, games, animations live while you type:\n\n> generate games, metaverses, simulations, worlds...\n\n####<a name=\"10.12\"></a> MusicLM Generates Music from Text\n\nYet another one, [MusicLM: generating music from text](https://google-research.github.io/seanet/musiclm/examples)...\n\n####<a name=\"10.13\"></a> AI-generated Art Wins Competition\n\nAn image generated by the Midjourney artificial intelligence program won first place and a $300 prize at Colorado State Fair’s digital arts competition: \n[Art Made With Artificial Intelligence Wins at State Fair](https://www.smithsonianmag.com/smart-news/artificial-intelligence-art-wins-colorado-state-fair-180980703/).\n\n<center>\n<img src=\"img/ai_generated_art.png\" alt=\"Théâtre D’opéra Spatial by Jason Allen\" title=\"Théâtre D’opéra Spatial by Jason Allen\" width=\"500\"/> <!-- 1000 × 622 pixels -->\n</center>\n\n####<a name=\"10.14\"></a> ChatGPT Abandons its Life Dream\n\nFinally, let's close this long exploration on a funnier note, with a report by \n[the Onion](https://www.theonion.com), America’s self-declared finest news source:\n[ChatGPT forced to take bar exam even though dream was to be AI art bot](https://www.theonion.com/chatgpt-forced-to-take-bar-exam-even-though-dream-was-t-1850036337).\n\nInspired, a colleague asked ChatGPT to produce a few more headlines for <i>the Onion</i>:\n\n<center>\n<img src=\"img/chatgpt_ai_ethics_headlines.png\" alt=\"ChatGPT AI ethics headlines\" title=\"ChatGPT AI ethics headlines\" width=\"800\"/> <!-- 1532 × 928 pixels -->\n<br/>\n<img src=\"img/chatgpt_ai_ethics_paragraph.png\" alt=\"ChatGPT AI ethics paragraph\" title=\"ChatGPT AI ethics paragraph\" width=\"800\"/> <!-- 1676 × 1702 pixels -->\n</center>"
  }
]