[
  {
    "original_filename": "0288_abg06_edges",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0288_abg06_edges",
    "header_text": "Face Edges",
    "local_header_href": "#face-edges",
    "chunk_text": "<h3>Face Edges</h3><p>This is part 6 of Scott Conover's AU 2009 class on\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/01/analyse-building-geometry.html\">\nanalysing building geometry</a>.\n\n<h4>Edge and Face Parameterization</h4>\n<p>Edges are boundary curves for a given face.</p>\n<p>Iterate the edges of a Face using the EdgeLoops property. \nEach loop represents one closed boundary on the face. \nEdges are always parameterized from 0 to 1.</p>\n<p>An edge is usually defined by computing intersection of two faces. \nBut Revit doesn't recompute this intersection when it draws graphics. \nSo the edge stores a list of points – end points for a straight edge and a tessellated list for a curved edge. \nThe points are parametric coordinates on the two faces. \nThese points are available through the TessellateOnFace method.</p>\n<p>Sections produce 'cut edges'. These are artificial edges – not representing a part of the model-level geometry, and thus do not provide a Reference.</p>\n<h4>Edge Direction</h4>\n<p>Direction is normally clockwise on the first face (first representing an arbitrary face which Revit has identified for a particular edge). But because two different faces meet at one particular edge, and the edge has the same parametric direction regardless of which face you are concerned with, sometimes you need to figure out the direction of the edge on a particular face.</p>\n<p>The figure below illustrated how this works. \nFor Face 0, the edges are all parameterized clockwise. \nFor Face 1, the edge shared with Face 0 is not re-parameterized; \nthus with respect to Face 1 the edge has a reversed direction, and some edges intersect where both edges' parameters are 0 (or 1):</p>\n<center>\n<img alt=\"Edge parameterization\" src=\"img/abg6_edge_parametrisation.png\"/>\n</center>\n<h4>The PanelEdgeLengthAngle Revit SDK Sample</h4>\n<p>The Revit SDK sample PanelEdgeLengthAngle shows how to recognize edges that are reversed for a given face. \nIt uses the tangent vector at the edge endpoints to calculate the angle between adjacent edges, and detect whether or not to flip the tangent vector at each intersection to calculate the proper angle:</p>\n<center>\n<img alt=\"PanelEdgeLengthAngle results\" src=\"img/abg6_PanelEdgeLengthAngle.png\"/>\n</center>\n<p>The next instalment of this series will look at transformations.\n</p></p>"
  },
  {
    "original_filename": "0288_abg06_edges",
    "header_text": "Edge and Face Parameterization",
    "local_header_href": "#edge-and-face-parameterization",
    "chunk_text": "<h4>Edge and Face Parameterization</h4><p>Edges are boundary curves for a given face.</p><p>Iterate the edges of a Face using the EdgeLoops property. \nEach loop represents one closed boundary on the face. \nEdges are always parameterized from 0 to 1.</p><p>An edge is usually defined by computing intersection of two faces. \nBut Revit doesn't recompute this intersection when it draws graphics. \nSo the edge stores a list of points – end points for a straight edge and a tessellated list for a curved edge. \nThe points are parametric coordinates on the two faces. \nThese points are available through the TessellateOnFace method.</p><p>Sections produce 'cut edges'. These are artificial edges – not representing a part of the model-level geometry, and thus do not provide a Reference.</p>"
  },
  {
    "original_filename": "0288_abg06_edges",
    "header_text": "Edge Direction",
    "local_header_href": "#edge-direction",
    "chunk_text": "<h4>Edge Direction</h4><p>Direction is normally clockwise on the first face (first representing an arbitrary face which Revit has identified for a particular edge). But because two different faces meet at one particular edge, and the edge has the same parametric direction regardless of which face you are concerned with, sometimes you need to figure out the direction of the edge on a particular face.</p><p>The figure below illustrated how this works. \nFor Face 0, the edges are all parameterized clockwise. \nFor Face 1, the edge shared with Face 0 is not re-parameterized; \nthus with respect to Face 1 the edge has a reversed direction, and some edges intersect where both edges' parameters are 0 (or 1):</p><center>\n<img alt=\"Edge parameterization\" src=\"img/abg6_edge_parametrisation.png\"/>\n</center>"
  },
  {
    "original_filename": "0288_abg06_edges",
    "header_text": "The PanelEdgeLengthAngle Revit SDK Sample",
    "local_header_href": "#the-paneledgelengthangle-revit-sdk-sample",
    "chunk_text": "<h4>The PanelEdgeLengthAngle Revit SDK Sample</h4><p>The Revit SDK sample PanelEdgeLengthAngle shows how to recognize edges that are reversed for a given face. \nIt uses the tangent vector at the edge endpoints to calculate the angle between adjacent edges, and detect whether or not to flip the tangent vector at each intersection to calculate the proper angle:</p><center>\n<img alt=\"PanelEdgeLengthAngle results\" src=\"img/abg6_PanelEdgeLengthAngle.png\"/>\n</center><p>The next instalment of this series will look at transformations.\n</p>"
  }
]