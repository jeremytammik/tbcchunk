[
  {
    "original_filename": "0889_read_material_asset",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0889_read_material_asset",
    "header_text": "Read Material Asset Parameter",
    "local_header_href": "#read-material-asset-parameter",
    "chunk_text": "<h3>Read Material Asset Parameter</h3><p>Even though it is still January, the days are already getting a little bit lighter, the sun has broken through now and then, sets half an hour later, some birds are starting to tweet around, and one can imagine spring coming...\n\n<p>Meanwhile, in the Revit API, accessing materials tends to be tricky, so here is one little sample  that hopefully helps clarify by demonstrating how to read a parameter value from a PropertySetElement attached to a physical material asset.\n\n\n<p><strong>Question:</strong> I'd like to know if there's an API to access the parameter called \"Tension parallel to grain\" in a wood material structural asset.\nThe specific material I'm looking at is Softwood, Lumber and is present in a default new structural project.\n\n<p>There is a built-in parameter called PHY_MATERIAL_PARAM_TENSION_PARALLEL but that doesn't work.\nThe RevitLookup tool does not list the parameter, even though it is shown in the Revit GUI.\n\n<p>The \"Tension Parallel to Grain\" parameter contains a Strength value, which is a double.</p>\n<p>To access this through the GUI:</p>\n<ul>\n<li>Start a new model in Revit\n<li>Go to Manage &gt; Materials\n<li>Scroll to a material that belongs to the wood category and contains a Structural Asset. In a new model, you can scroll to Softwood, Lumber.\n<li>Select the Structural Asset (Physical Aspect).\n<li>Expand the Strength section and you'll see the parameter.\n</li></li></li></li></li></ul>\n<p>The parameter is attached to the StructuralAsset element.</p>\n<p>Here is the Softwood, Lumber material listed and selected in the material browser:</p>\n<center>\n<img alt=\"Material browser\" src=\"img/material_browser.png\" width=\"400\"/>\n</center>\n<p>Selecting it and navigating to the physical aspect shows the tension parallel to grain value:</p>\n<center>\n<img alt=\"Material editor\" src=\"img/material_editor.png\" width=\"400\"/>\n</center>\n<p>How can I access that data programmatically, please?</p>\n<p><strong>Answer:</strong> You can access this parameter using the PropertySetElement.\n\n<p>Assuming softwood is assigned to a selected element, the following code achieves this, including extracting the single selected element from the current document selection set:</p>\n<pre class=\"code\">\n<span class=\"blue\">public</span> <span class=\"teal\">Result</span> ReadMaterialParam( <span class=\"teal\">UIDocument</span> uidoc )\n{\n  <span class=\"teal\">Document</span> doc = uidoc.Document;\n \n  <span class=\"teal\">Element</span> e = <span class=\"blue\">null</span>;\n \n  <span class=\"teal\">Selection</span> sel = uidoc.Selection;\n \n  <span class=\"blue\">if</span>( 1 == sel.Elements.Size )\n  {\n    <span class=\"blue\">foreach</span>( <span class=\"teal\">Element</span> e2 <span class=\"blue\">in</span> sel.Elements )\n    {\n      e = e2;\n    }\n  }\n \n  <span class=\"blue\">if</span>( <span class=\"blue\">null</span> == e )\n  {\n    <span class=\"teal\">TaskDialog</span>.Show( <span class=\"maroon\">\"Error\"</span>,\n      <span class=\"maroon\">\"Please select one single element.\"</span> );\n \n    <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Failed;\n  }\n \n  <span class=\"teal\">Parameter</span> paramMaterial = e.get_Parameter(\n    <span class=\"teal\">BuiltInParameter</span>.STRUCTURAL_MATERIAL_PARAM );\n \n  <span class=\"teal\">Material</span> material = doc.GetElement(\n    paramMaterial.AsElementId() ) <span class=\"blue\">as</span> <span class=\"teal\">Material</span>;\n \n  <span class=\"teal\">PropertySetElement</span> property = doc.GetElement(\n    material.StructuralAssetId ) <span class=\"blue\">as</span> <span class=\"teal\">PropertySetElement</span>;\n \n  <span class=\"teal\">Parameter</span> paramTensionParallel\n    = property.get_Parameter( <span class=\"teal\">BuiltInParameter</span>\n      .PHY_MATERIAL_PARAM_TENSION_PARALLEL );\n \n  <span class=\"teal\">TaskDialog</span>.Show(\n    <span class=\"maroon\">\"PHY_MATERIAL_PARAM_TENSION_PARALLEL\"</span>,\n    paramTensionParallel.AsValueString() );\n \n  <span class=\"blue\">return</span> <span class=\"teal\">Result</span>.Succeeded;\n}\n</pre>\n<p>This value cannot be read directly from the StructuralAsset properties.</p>\n<p>To test run it, you can</p>\n<ul>\n<li>Create a new structural model.</li>\n<li>Insert a structural element, e.g. a beam, by loading the structural framing family and selecting the symbol \"Dimension Lumber\" 38x64.</li>\n<li>Assign \"Softwood Lumber\" to it via Properties &gt; Structural Material &gt; ...</li>\n</ul>\n<p>Selecting the beam and launching the command calling the ReadMaterialParam method displays the following message on my system:</p>\n<center>\n<img alt=\"Material asset parameter value\" src=\"img/read_material_asset.png\"/>\n</center>\n<p><strong>Addendum:</strong>\n<p>In his commment below,\n\n<a href=\"http://www.idat.de\">Alexander Buschmann</a> makes\n\nthe observation that properties can be used instead of parameters to read some of the asset data, which I promoted that to a follow-up blog post of its own on\n\n<a href=\"\">\nparameters versus properties</a>.\n</p></p></p></p></p></p></p>"
  }
]