[
  {
    "original_filename": "0161_volumecomputationenable",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<style>\n.blue { color: blue; }\n.teal { color: teal; }\n.maroon { color: maroon; }\n.green { color: green; }\n.gray { color: gray; }\n</style>"
  },
  {
    "original_filename": "0161_volumecomputationenable",
    "header_text": "Volume Computation Enable",
    "local_header_href": "#volume-computation-enable",
    "chunk_text": "<h3>Volume Computation Enable</h3><p>We discussed abstract \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2009/06/convex-hull-and-volume-computation.html\">\nvolume computation</a>\n\nof a convex hull or cloud of points last week.\nRevit can also compute certain volumes, of course, for instance the volume of rooms. \nHowever, this functionality is not automatically enabled.\nTo switch it on you need to set a certain toggle called VolumeComputationEnable on the document settings volume calculation options.\nUnfortunately, there is a slight issue with the API documentation on this property ...\n\n<p><strong>Question:</strong>\nWhen I try turn on the value of the VolumeComputationEnable property so I can export the volumes of rooms, the value doesn't change. \n\n<p>This is the code that I use for modify this property:\n\n<pre>\nDim revitapp As Autodesk.Revit.Application _\n  = revitCommandData.Application\n\nDim activedoc As Autodesk.Revit.Document _ \n  = revitapp.ActiveDocument\n\nactivedoc.Settings.VolumeCalculationSetting _\n  .VolumeCalculationOptions.VolumeComputationEnable _\n  = True\n</pre>\n<p><strong>Answer:</strong>\nThe code sample on the VolumeCalculationOptions.VolumeComputationEnable property in the Revit API help file does not work. It says that one can set the property using \n\n<pre class=\"code\">\n  doc.Settings.VolumeCalculationSetting\n    .VolumeCalculationOptions\n    .VolumeComputationEnable = true;\n</pre>\n<p>This code snippet will not work, because VolumeCalculationOptions is a value class and just returns information about the current status. Therefore you need to write it back to the VolumeCalculationSetting property to turn on the computation.\nOne has to use something like this instead:\n\n<pre class=\"code\">\n  <span class=\"teal\">VolumeCalculationOptions</span> options \n    = doc.Settings.VolumeCalculationSetting\n      .VolumeCalculationOptions;\n \n  options.VolumeComputationEnable = <span class=\"blue\">true</span>;\n \n  doc.Settings.VolumeCalculationSetting\n    .VolumeCalculationOptions = options;\n</pre>\n<p>I copied the sample code from the API document and removed one line to create this little reporting method which does not modify anything:\n\n<pre class=\"code\">\n<span class=\"blue\">public</span> <span class=\"blue\">void</span> GetRoomDimensions( \n  <span class=\"teal\">Document</span> doc, \n  <span class=\"teal\">Room</span> room )\n{\n  <span class=\"blue\">string</span> roominfo = <span class=\"maroon\">\"\\nRoom dimensions:\"</span>;\n  roominfo += <span class=\"maroon\">\"\\nVolume: \"</span> + room.Volume;\n  roominfo += <span class=\"maroon\">\"\\nArea: \"</span> + room.Area;\n  roominfo += <span class=\"maroon\">\"\\nPerimeter: \"</span> + room.Perimeter;\n  roominfo += <span class=\"maroon\">\"\\nUnbounded height: \"</span> \n    + room.UnboundedHeight;\n \n  <span class=\"teal\">Debug</span>.Print( roominfo );\n}\n</pre>\n<p>Then I implemented the following external command to test it and verify that it works fine now:\n\n<pre class=\"code\">\n<span class=\"blue\">public</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span> Execute( \n  <span class=\"teal\">ExternalCommandData</span> commandData, \n  <span class=\"blue\">ref</span> <span class=\"blue\">string</span> message, \n  <span class=\"teal\">ElementSet</span> elements )\n{\n  <span class=\"teal\">Application</span> app = commandData.Application;\n  <span class=\"teal\">Document</span> doc = app.ActiveDocument;\n  <span class=\"teal\">ElementSet</span> a = doc.Selection.Elements;\n  <span class=\"teal\">Room</span> room = <span class=\"blue\">null</span>;\n  <span class=\"blue\">foreach</span> ( <span class=\"teal\">Element</span> e <span class=\"blue\">in</span> a )\n  {\n    <span class=\"blue\">if</span> ( e <span class=\"blue\">is</span> <span class=\"teal\">Room</span> )\n    {\n      room = e <span class=\"blue\">as</span> <span class=\"teal\">Room</span>;\n      <span class=\"blue\">break</span>;\n    }\n  }\n  <span class=\"blue\">if</span>( <span class=\"blue\">null</span> == room )\n  {\n    message = <span class=\"maroon\">\"Please select a room.\"</span>;\n  }\n  <span class=\"blue\">else</span>\n  {\n    <span class=\"teal\">Debug</span>.Print( <span class=\"maroon\">\"VolumeComputationEnable = {0}\"</span>,\n      (doc.Settings.VolumeCalculationSetting\n        .VolumeCalculationOptions\n        .VolumeComputationEnable\n      ? <span class=\"maroon\">\"true\"</span> : <span class=\"maroon\">\"false\"</span>) );\n \n    GetRoomDimensions( doc, room );\n\n    <span class=\"green\">// turn on volume calculations:</span>\n\n    <span class=\"teal\">VolumeCalculationOptions</span> options \n      = doc.Settings.VolumeCalculationSetting\n        .VolumeCalculationOptions;\n \n    options.VolumeComputationEnable = <span class=\"blue\">true</span>;\n \n    doc.Settings.VolumeCalculationSetting\n      .VolumeCalculationOptions = options;\n \n    GetRoomDimensions( doc, room );\n  }\n  <span class=\"blue\">return</span> <span class=\"teal\">IExternalCommand</span>.<span class=\"teal\">Result</span>.Failed;\n}\n</pre>\n<p>Here is the log displayed in the debug output window after selecting a sample room and running this command:\n\n<pre>\nVolumeComputationEnable = false\n\nRoom dimensions:\nVolume: 0\nArea: 73.6251472502946\nPerimeter: 36.745406824147\nUnbounded height: 13.1233595800525\n\nRoom dimensions:\nVolume: 966.209281499929\nArea: 73.6251472502946\nPerimeter: 36.745406824147\nUnbounded height: 13.1233595800525\n</pre>\n</p></p></p></p></p></p></p></p>"
  }
]