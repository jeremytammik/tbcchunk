[
  {
    "original_filename": "1562_mod_grid_point",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"bc.css\">\n<script src=\"run_prettify.js\" type=\"text/javascript\"></script>\n<!--\n<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\" type=\"text/javascript\"></script>\n-->\n</head>\n\n<!---\n\n- 13012962 [通り芯の始終点（３D)を編集する方法]\n\nSDK Update and RvtSamples 2018 @AutodeskForge #ForgeDevCon #RevitAPI @AutodeskRevit #bim #dynamobim http://bit.ly/mod_grid_point\nSetCurveInView to modify grid endpoint @AutodeskForge #ForgeDevCon #RevitAPI @AutodeskRevit #bim #dynamobim http://bit.ly/mod_grid_point\n\nAn updated version of the Revit SDK was published, I set up <code>RvtSamples</code> for Revit 2018, which I use to load The Building Coder samples, and we present a useful employment of the <code>DatumPlane</code> class methods <code>GetCurvesInView</code> and <code>SetCurveInView</code>\n&ndash; Revit 2018 SDK Update\n&ndash; RvtSamples for Revit 2018\n&ndash; How to Modify Grid Curve End Points...\n\n-->"
  },
  {
    "original_filename": "1562_mod_grid_point",
    "header_text": "SDK Update, RvtSamples and Setting Grid Endpoint",
    "local_header_href": "#sdk-update-rvtsamples-and-setting-grid-endpoint",
    "chunk_text": "### SDK Update, RvtSamples and Setting Grid Endpoint\n\nAn updated version of the Revit SDK was published, I set up `RvtSamples` for Revit 2018, which I use to\nload [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples),\nand we present a useful employment of the  `DatumPlane` class methods `GetCurvesInView` and `SetCurveInView`:\n\n- [Revit 2018 SDK Update](#2)\n- [RvtSamples for Revit 2018](#3)\n- [How to Modify Grid Curve End Points](#4)"
  },
  {
    "original_filename": "1562_mod_grid_point",
    "header_text": "<a name=\"2\"></a>Revit 2018 SDK Update",
    "local_header_href": "#a-name2arevit-2018-sdk-update",
    "chunk_text": "#### <a name=\"2\"></a>Revit 2018 SDK Update\n\nAn update of the Revit SDK has been posted to\nthe [Revit Developer Centre](http://www.autodesk.com/developrevit):\n\n- [Revit 2018 SDK (Update May 19, 2017)](http://download.autodesk.com/us/revit-sdk/REVIT_2018_SDK_1.msi) (msi - 355088Kb)\n\nIt includes the\nnew [DuplicateGraphics](http://thebuildingcoder.typepad.com/blog/2017/05/revit-2017-and-2018-sdk-samples.html#4.2) sample\nthat was omitted in the first customer shipment of the Revit 2018 SDK."
  },
  {
    "original_filename": "1562_mod_grid_point",
    "header_text": "<a name=\"3\"></a>RvtSamples for Revit 2018",
    "local_header_href": "#a-name3arvtsamples-for-revit-2018",
    "chunk_text": "#### <a name=\"3\"></a>RvtSamples for Revit 2018\n\nI use the Revit SDK external application `RvtSamples` to load all the SDK samples for testing and debugging purposes.\n\nI first described it in The Building Coder's fifth blog post\non [Managing SDK Samples](http://thebuildingcoder.typepad.com/blog/2008/08/managing-sdk-sa.html).\n\nI soon implemented\nthe [include file functionality](http://thebuildingcoder.typepad.com/blog/2008/11/loading-the-building-coder-samples.html) to\nalso use it to load all other sample commands that I regularly use,\nincluding [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples).\n\nLast year, Dan Tartaglia raised and I addressed several issues setting\nup [RvtSamples for Revit 2017](http://thebuildingcoder.typepad.com/blog/2016/04/rvtsamples-for-revit-2017.html).\n\nThis year, I went through a similar process.\n\nFor the sake of efficiency, I am here simply posting\nthe [entire contents of my RvtSamples folder](zip/RvtSamples_2018.zip) as\nit stands now, up and running on my system.\n\nThe only files that I modified are:\n\n- Application.cs\n- RvtSamples.addin\n- RvtSamples.txt\n\n<center>\n<img src=\"img/rvtsamples_2018.png\" alt=\"RvtSamples in Revit 2018\" width=\"794\">\n</center>\n\nNow to return to the topic for today:"
  },
  {
    "original_filename": "1562_mod_grid_point",
    "header_text": "<a name=\"4\"></a>How to Modify Grid Curve End Points",
    "local_header_href": "#a-name4ahow-to-modify-grid-curve-end-points",
    "chunk_text": "#### <a name=\"4\"></a>How to Modify Grid Curve End Points\n\n**Question:** I would like to modify end points of a grid curve for 3D extent, but the `Grid.Curve` property is read-only, so I cannot set a new curve.\n\nIs there any way to edit a grid curve?\n\n**Answer:** Ever since Revit 2016, the `Grid` class provides the methods `GetCurvesInView` and `SetCurveInView.\n\nMore precisely, these methods were added to the `DatumPlane` class, which is a base class of `Grid`.\n\n[GetCurvesInView](http://www.revitapidocs.com/2017/2f93dd88-baac-8e61-377e-b937f3faaff6.htm) retrieves a collection of curves representing a `DatumPlane` element in a given view:\n\n<pre class=\"code\">\n  <span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:#2b91af;\">IList</span>&lt;<span style=\"color:#2b91af;\">Curve</span>&gt;&nbsp;GetCurvesInView(\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">DatumExtentType</span>&nbsp;extentMode,\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">View</span>&nbsp;view\n  )\n</pre>\n\nThey can be set using [SetCurveInView](http://www.revitapidocs.com/2017/eaff0038-34f2-03cf-185b-2872cffb84af.htm):\n\n<pre class=\"code\">\n  <span style=\"color:blue;\">public</span>&nbsp;<span style=\"color:blue;\">void</span>&nbsp;SetCurveInView(\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">DatumExtentType</span>&nbsp;extentMode,\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">View</span>&nbsp;view,\n  &nbsp;&nbsp;<span style=\"color:#2b91af;\">Curve</span>&nbsp;curve\n  )\n</pre>\n\nThe `DatumExtentType` specifies what type of datum extent that is displayed in a particular view.\n\nIf you want the actual 3D extents, you need to pass in `DatumExtentType.Model`.\n\nAfter retrieving the current grid curves, you can determine their end points, create a new line using those points, and set it back to the grid via `Grid.SetCurveInView`.\n\nHere is code snippet demonstrating this:\n\n<pre class=\"code\">\n<span style=\"color:#2b91af;\">UIApplication</span>&nbsp;uiapp&nbsp;=&nbsp;commandData.Application;\n<span style=\"color:#2b91af;\">UIDocument</span>&nbsp;uidoc&nbsp;=&nbsp;uiapp.ActiveUIDocument;\n<span style=\"color:#2b91af;\">Document</span>&nbsp;doc&nbsp;=&nbsp;uidoc.Document;\n<span style=\"color:#2b91af;\">Selection</span>&nbsp;sel&nbsp;=&nbsp;uidoc.Selection;\n<span style=\"color:#2b91af;\">View</span>&nbsp;view&nbsp;=&nbsp;doc.ActiveView;\n\n<span style=\"color:#2b91af;\">ISelectionFilter</span>&nbsp;f\n&nbsp;&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">JtElementsOfClassSelectionFilter</span>&lt;<span style=\"color:#2b91af;\">Grid</span>&gt;();\n\n<span style=\"color:#2b91af;\">Reference</span>&nbsp;elemRef&nbsp;=&nbsp;sel.PickObject(\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">ObjectType</span>.Element,&nbsp;f,&nbsp;<span style=\"color:#a31515;\">&quot;Pick&nbsp;a&nbsp;grid&quot;</span>&nbsp;);\n\n<span style=\"color:#2b91af;\">Grid</span>&nbsp;grid&nbsp;=&nbsp;doc.GetElement(&nbsp;elemRef&nbsp;)&nbsp;<span style=\"color:blue;\">as</span>&nbsp;<span style=\"color:#2b91af;\">Grid</span>;\n\n<span style=\"color:#2b91af;\">IList</span>&lt;<span style=\"color:#2b91af;\">Curve</span>&gt;&nbsp;gridCurves&nbsp;=&nbsp;grid.GetCurvesInView(&nbsp;\n&nbsp;&nbsp;<span style=\"color:#2b91af;\">DatumExtentType</span>.Model,&nbsp;view&nbsp;);\n\n<span style=\"color:blue;\">using</span>(&nbsp;<span style=\"color:#2b91af;\">Transaction</span>&nbsp;tx&nbsp;=&nbsp;<span style=\"color:blue;\">new</span>&nbsp;<span style=\"color:#2b91af;\">Transaction</span>(&nbsp;doc&nbsp;)&nbsp;)\n{\n&nbsp;&nbsp;tx.Start(&nbsp;<span style=\"color:#a31515;\">&quot;Modify&nbsp;Grid&nbsp;Endpoints&quot;</span>&nbsp;);\n\n&nbsp;&nbsp;<span style=\"color:blue;\">foreach</span>(&nbsp;<span style=\"color:#2b91af;\">Curve</span>&nbsp;c&nbsp;<span style=\"color:blue;\">in</span>&nbsp;gridCurves&nbsp;)\n&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">XYZ</span>&nbsp;start&nbsp;=&nbsp;c.GetEndPoint(&nbsp;0&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">XYZ</span>&nbsp;end&nbsp;=&nbsp;c.GetEndPoint(&nbsp;1&nbsp;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">XYZ</span>&nbsp;newStart&nbsp;=&nbsp;start&nbsp;+&nbsp;10&nbsp;*&nbsp;<span style=\"color:#2b91af;\">XYZ</span>.BasisY;\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">XYZ</span>&nbsp;newEnd&nbsp;=&nbsp;end&nbsp;-&nbsp;10&nbsp;*&nbsp;<span style=\"color:#2b91af;\">XYZ</span>.BasisY;\n\n&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">Line</span>&nbsp;newLine&nbsp;=&nbsp;<span style=\"color:#2b91af;\">Line</span>.CreateBound(&nbsp;newStart,&nbsp;newEnd&nbsp;);\n\n&nbsp;&nbsp;&nbsp;&nbsp;grid.SetCurveInView(&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af;\">DatumExtentType</span>.Model,&nbsp;view,&nbsp;newLine&nbsp;);\n&nbsp;&nbsp;}\n&nbsp;&nbsp;tx.Commit();\n}\n</pre>\n\nMany thanks to Ryuji Ogasawara for sharing this!\n\nThere is hardly any error checking here, so you need to know exactly what to pick.\n\nIt moves the grid endpoints vertically, so you need to select a vertically oriented grid for it to work.\n\nI added Ryuji's sample as a new external command\nto [The Building Coder samples](https://github.com/jeremytammik/the_building_coder_samples)\n[release 2018.0.133.0](https://github.com/jeremytammik/the_building_coder_samples/releases/tag/2018.0.133.0) in the\nmodule [CmdSetGridEndpoint.cs](https://github.com/jeremytammik/the_building_coder_samples/blob/master/BuildingCoder/BuildingCoder/CmdSetGridEndpoint.cs).\n\nHere are the isolated grids in *rac_basic_sample.rvt*:\n\n<center>\n<img src=\"img/rac_basic_sample_project_grids.png\" alt=\"Grids in rac_basic_sample.rvt\" width=\"329\">\n</center>\n\nLaunching `CmdSetGridEndpoint` and picking 3, 4, 5 and 6 generates this:\n\n<center>\n<img src=\"img/rac_basic_sample_project_grids_mod.png\" alt=\"Modified grid endpoints\" width=\"332\">\n</center>"
  }
]