[
  {
    "original_filename": "0851_gross_slab_boundary",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0851_gross_slab_boundary",
    "header_text": "Gross Slab Boundary and the Temporary Transaction Trick",
    "local_header_href": "#gross-slab-boundary-and-the-temporary-transaction-trick",
    "chunk_text": "<h3>Gross Slab Boundary and the Temporary Transaction Trick</h3><p>Last week I provided an\n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/10/slab-boundary-revisited.html\">\nupdated version</a>\n\nof the  \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2008/10/slab-boundary.html\">\nCmdSlabBoundary</a>\n\nexternal command to determine a floor slab boundary.\n\n<p>Here is a follow-up to that issue:\n\n<p><strong>Question:</strong> The solution provided to \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/10/slab-boundary-revisited.html\">\nretrieve the slab boundary</a> works \n\nfine for me if no openings are cut out.\n\n<p>I have a situation where my slabs are cut by openings, however, and I need to retrieve the original uncut gross slab boundary.\n\n<p>Here is an example with two slabs A and B and an opening cutting out part of both of them:</p>\n<center>\n<img alt=\"Two slabs cut by an opening\" src=\"img/gross_slab_boundary_1.png\"/>\n</center>\n<p>The solution provided retrieves the cut out net slab boundary:</p>\n<center>\n<img alt=\"Net cut slab boundary\" src=\"img/gross_slab_boundary_2.png\"/>\n</center>\n<p>How can I obtain the following original gross uncut slab boundary?</p>\n<center>\n<img alt=\"Gross original uncut slab boundary\" src=\"img/gross_slab_boundary_3.png\"/>\n</center>\n<p><strong>Answer:</strong> One way to obtain the unmodified geometry of the slab is to use the temporary transaction trick to temporarily eliminate all openings and other elements affecting its shape.\n\n<p>This technique was used to \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/02/material-quantity-extraction.html\">\ndetermine gross material quantities</a> of \n\nfloors, walls and roofs in the material quantities sample from Scott Conover's Autodesk University 2009 class on \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/01/analyse-building-geometry.html\">\nanalysing building geometry</a>,\n\nwhich was later add to the Revit SDK as the \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/02/material-quantity-extraction.html\">\nMaterialQuantities</a> sample. \n\n<p>It shows how the transaction handling for the temporary operation can be simply and cleanly encapsulated. \n\n<p>It analyses the material quantities of walls, floors, and roofs, and outputs the result to Excel by implementing the following steps:\n\n<ol>\n<li>Collect all roof elements\n<li>Iterate through each material found in each roof element\n<li>Find the net volume and area of the material\n<li>Store the material quantities\n<li>Write the results to the output file\n<li>Find the gross material quantities\n<ol type=\"a\">\n<li>Start a new transaction\n<li>Delete the elements that cut the host (doors, windows, openings)\n<li>Find the volume and area for each material\n<li>Store the material quantities\n<li>Write the results to the output file\n<li>Rollback the transaction\n</li></li></li></li></li></li></ol>\n<li>Repeat the above steps for walls and floors\n<li>Open the output file in Microsoft Excel\n</li></li></li></li></li></li></li></li></ol>\n<p>To determine the boundary lines of the floor slab with all opening removed, you could proceed in the same fashion as described in step 6 for obtaining the gross material quantities.\n\n<p>Temporarily delete then openings in a separate transaction, retrieve the original slab geometry, and abort the transaction to restore the original state. \n\n<p>This technique is easy to implement.\nWe reused this method for many different purposes a number of times, e.g.\n\n<ul>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2009/06/host-reference.html\">\nDetermine host reference</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/02/material-quantity-extraction.html\">\nMaterial quantity extraction</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/02/unmodified-element-geometry.html\">\nUnmodified element geometry</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/03/object-relationships.html\">\nObject relationships</a>\n\n(<a href=\"http://thebuildingcoder.typepad.com/blog/2010/03/object-relationships-in-vb.html\">VB</a>)\n\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/10/model-elements-revisited.html\">\nRetrieve all model elements via a temporary 3D view</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2010/11/access-to-sketch-and-sketch-plane.html\">\nAccess to sketch and sketch plane</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2011/08/wall-joins-and-geometry.html\">\nRetrieve unjoined wall geometry</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2011/10/retrieving-detailed-wall-layer-geometry.html\">\nRetrieving detailed wall layer geometry</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2011/12/unit-conversion-and-display-string-formatting.html\">\nUnit conversion and display string formatting</a>\n<li><a href=\"http://thebuildingcoder.typepad.com/blog/2012/03/determine-revit-demo-mode.html\">\nDetermine Revit demo mode</a>\n</li></li></li></li></li></li></li></li></li></li></ul>\n<p><strong>Addendum:</strong> Arnošt Löbel pointed out that \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/11/temporary-transaction-trick-touchup.html\">\nthis will not always work</a>.\n\nSome modifications require the transaction to be committed before they take full effect.\nThe \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2012/11/temporary-transaction-trick-touchup.html\">\nworkaround</a> for \n\nthat is to enclose it within a transaction group and roll back the group at the end.\n\n\n<a name=\"2\"></a>\n<h4>Apphack @ AU</h4>\n<p>Do you have an interesting AutoCAD app you would like to publish?\n\n<p>Will you attend Autodesk University 2012 and would you like to win an attractive prize?\n\n<p>If so, take a look at the \n\n<a href=\"http://promoshq.wildfireapp.com/website/6/contests/296215\">\nAPPHACK @ AU Hackathon</a>:</p>\n<center>\n<img alt=\"Apphack @ AU\" src=\"img/au_2012_apphack.png\"/>\n</center>\n<p>The \n\n<a href=\"http://promoshq.wildfireapp.com/website/6/contests/296215/rules\">\nofficial rules</a>\n\nlist some great prizes.\n\nUnfortunately, they also restrict the participation to AutoCAD apps, so Revit add-ins are not permissible.\n\n<p>Kean Walmsley provides a \n\n<a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/10/apphack-au-2012.html\">\na few more details</a>.\n\n<!--\n\n<a name=\"2\"></a>\n\n<a href=\"\">\n</a>\n\n<h4></h4>\n\n\n<pre>\n</pre>\n\n<pre class=\"code\">\n</pre>\n\n-->\n</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p>"
  },
  {
    "original_filename": "0851_gross_slab_boundary",
    "header_text": "Apphack @ AU",
    "local_header_href": "#apphack-au",
    "chunk_text": "<h4>Apphack @ AU</h4><p>Do you have an interesting AutoCAD app you would like to publish?\n\n<p>Will you attend Autodesk University 2012 and would you like to win an attractive prize?\n\n<p>If so, take a look at the \n\n<a href=\"http://promoshq.wildfireapp.com/website/6/contests/296215\">\nAPPHACK @ AU Hackathon</a>:</p>\n<center>\n<img alt=\"Apphack @ AU\" src=\"img/au_2012_apphack.png\"/>\n</center>\n<p>The \n\n<a href=\"http://promoshq.wildfireapp.com/website/6/contests/296215/rules\">\nofficial rules</a>\n\nlist some great prizes.\n\nUnfortunately, they also restrict the participation to AutoCAD apps, so Revit add-ins are not permissible.\n\n<p>Kean Walmsley provides a \n\n<a href=\"http://through-the-interface.typepad.com/through_the_interface/2012/10/apphack-au-2012.html\">\na few more details</a>.\n\n<!--\n\n<a name=\"2\"></a>\n\n<a href=\"\">\n</a>\n\n<h4></h4>\n\n\n<pre>\n</pre>\n\n<pre class=\"code\">\n</pre>\n\n-->\n</p></p></p></p>"
  }
]