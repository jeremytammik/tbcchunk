[
  {
    "original_filename": "0558_curve_intersect",
    "header_text": "Introduction",
    "local_header_href": "#introduction",
    "chunk_text": "<head>\n<link href=\"bc.css\" rel=\"stylesheet\" type=\"text/css\"/>\n</head>"
  },
  {
    "original_filename": "0558_curve_intersect",
    "header_text": "Curve.Intersect Return Values",
    "local_header_href": "#curveintersect-return-values",
    "chunk_text": "<h3>Curve.Intersect Return Values</h3><p>The first day of the Saudi Arabian Revit API training completed yesterday.\nThis training will go on for three days instead of the usual two, so that we have more time to deal with the installation and basics as well as various advanced topics.\nYesterday we dealt with installation and setup issues, of Revit, Visual Studio, and the Revit SDK with its tools and utilities.\nWe started looking at Hello World style samples, i.e. the basic skeletal structure and installation of Revit add-ins, and more basic material remains to be covered.\n\n<p>In lack of a \n\n<a href=\"http://www.lonelyplanet.com/saudi-arabia/hejaz/jeddah/sights/beach/beaches\">\nbeach</a>,\n\nI spent an hour after the training on the sea-side.\nThe hotel is on the \n\n<a en.wikipedia.org=\"\" href\"http:=\"\" jeddah_corniche\"=\"\" wiki=\"\">\ncorniche</a> right \n\nin front of \n\n<a href=\"http://en.wikipedia.org/wiki/King_Fahd%27s_Fountain\">\nKing Fahd's fountain</a>,\n\nso I got to see the sun set through that.\n\nI went out again later on to enjoy the moon, which was full yesterday and is starting to wane now.\n\n<p>Way back in 2009, Scott Conover discussed the Curve.Intersect method when looking at \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/01/curves.html\">\ncurves</a> in\n\nhis AU 2009 class on \n\n<a href=\"http://thebuildingcoder.typepad.com/blog/2010/01/analyse-building-geometry.html\">\nanalysing building geometry</a>. \n\n<p>Here is a slightly more detailed question by Katsuaki Takamizawa and clarification by Scott on the results returned in the case of overlapping curves:\n\n<p><strong>Question:</strong> Does anyone know the exact meanings of SetComparisonResult.Subset and SetComparisonResult.Superset returned by the Curve.Intersect method?\n\n<p>The API reference explains SetComparisonResult.Subset like this:\n\n<p>1. <cite>The inputs are parallel lines with only one common intersection point...</cite></p>\n<center>\n<img alt=\"Subset one endpoint\" src=\"img/curve_intersect_result_1.png\"/>\n</center>\n<p>Does this mean that the curves are parallel and connected at one of their end points as shown above?\n\n<p>2. <cite>... the curve used to invoke the intersection check is a line entirely within the unbound line passed as argument curve.</cite></p>\n<center>\n<img alt=\"Subset fully contained\" src=\"img/curve_intersect_result_2.png\"/>\n</center>\n<p>Would this be returned by curve.Intersect(curve1, resultArray), if 'curve' is the highlighted curve above? \nAlso, could the two lines be completely overlapped?\n\n<p>SetComparisonResult.Superset is explained like this:\n\n<p>3. <cite>The input curve is entirely within the unbound line used to invoke the intersection check.</cite></p>\n<center>\n<img alt=\"Superset fully contained\" src=\"img/curve_intersect_result_3.png\"/>\n</center>\n<p>Would this be returned by curve.Intersect(curve1, resultArray), if 'curve1' is the highlighted curve above? \nAnd again, could the two lines also be completely overlapped?\n\n<p>I would appreciate if anyone knows about the exact meanings and could confirm them.\n\n<p><strong>Answer:</strong> I think you've got it right:\n\n<ul>\n<li>Subset – the two curves meet at one endpoint, or the input curve is a bound line which lies within the extents of the invoking curve, the 'this' curve, which is the unbound line.\n<li>Superset – the reverse of the second condition above, the 'this' curve is a bound line, the input curve is unbound and overlapping.\n</li></li></ul>\n<p>In either case, according to the documentation, one of the curves must be unbound.  \nSo two curves which are bound and which overlap would return Overlap instead, unless they were identical, in which case they return Equal.\n</p></p></p></p></p></p></p></p></p></p></p></p></p>"
  }
]